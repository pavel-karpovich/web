{"version":3,"file":"static/js/782.c75bb9a0.chunk.js","mappings":"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","sources":["webpack://@bpinc/web-calendar-ui/../../packages/cal-hooks/src/useCalendarOwner.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-hooks/src/useDaysOfWeek.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-hooks/src/useDayOfWeek.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-hooks/src/useLocalTimezone.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-hooks/src/useMonthsList.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-hooks/src/useMonthName.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-hooks/src/useSelectEvent.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-hooks/src/useSetNewSelectedCalendarEvent.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-hooks/src/useSetSelectedCalendarEvent.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/CalendarEventNotificationModal/OpenEventButton/CommonOpenEventButton.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-request-urls/src/api-service/core/ApiError.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-request-urls/src/api-service/core/CancelablePromise.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-request-urls/src/api-service/core/OpenAPI.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-request-urls/src/api-service/core/request.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-request-urls/src/api-service/services/CalendarServices.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-request-urls/src/types.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-request-urls/index.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useEventsLoader.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/CalendarBodyLoader.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useEventsList.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useSelectionRange.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/utils/time.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/utils/intlFormatters.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/utils/events.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/hooks/useScrollCalendarToDate.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/hooks/useSubscribeToSelectedEvent.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/hooks/useEventDiscardModal.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/AssigneesComboBox.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/hooks/useShowSearchContactModal.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/EventContacts/AddContactButton.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/EventContacts/ContactPhoneLabel.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/EventContacts/ExistingContact.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/EventContacts/NewContact.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/EventContacts/EventContacts.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/EventDetails.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/TimezoneSelect.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/EventEdit.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/EventErrors.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/EventPreview/EventContactDetails.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/components/EventPreview/EventPreview.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/DayEvent/DayEventBlock.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/DayEvent/DayMeeting.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useWeekEventTitle.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/DayEvent/DayRequest.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useShiftTitle.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/DayEvent/DayShift.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/DayEvent/DayEvent.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/Header/HeaderEvents.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-timezone-dropdown/src/components/TimezoneDropdown.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-timezone-dropdown/src/utils/helpers.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-timezone-dropdown/src/components/TimezoneDropdownToggle.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useOpenDayView.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/Header/HeaderDropContainer.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/Header/HeaderTable.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/DayEvents.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/DaysColumns/ColumnsDropContainer.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/DaysColumns/DayTimeColumn.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useTimezoneDifference.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/DaysColumns/Timeline.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/DaysColumns/DaysColumns.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewColumns/ViewColumns.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useIsStartFromMonday.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useShowWeekends.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthEvents/ViewMonthEvent/ViewMonthEmptyBlock.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useMonthEventTitle.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthEvents/ViewMonthEvent/ViewMonthEventBlock.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthEvents/ViewMonthEvent/ViewMonthMeeting.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthEvents/ViewMonthEvent/ViewMonthRequest.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthEvents/ViewMonthEvent/ViewMonthShift.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthEvents/ViewMonthEvent/ViewMonthEvent.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthEvents/MoreEventsPopupOpener/ViewMonthMorePopup.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthEvents/MoreEventsPopupOpener/MoreEventsPopupOpener.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthEvents/MoreEventsPopupOpener/MoreEventsPopupToggle.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthEvents/ViewMonthEvents.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthContent.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonthHeader.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewMonth/ViewMonth.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewSchedule/ScheduleGrid/ScheduleTableRow/ScheduleTableRowEvent/ScheduleEvent.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewSchedule/ScheduleGrid/ScheduleTableRow/ScheduleTableRowEvent/ScheduleTableRowEvent.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewSchedule/ScheduleGrid/ScheduleTableRow/ScheduleTableRowWeekTitle.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewSchedule/ScheduleGrid/ScheduleTableRow/ScheduleTableRow.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewSchedule/ScheduleGrid/ScheduleTimeline.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewSchedule/ScheduleGrid/ScheduleGrid.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/ViewSchedule/ViewSchedule.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarBody/CalendarBody.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useShiftsLoader.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useRequestsLoader.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarEventForm/CalendarEventFormControls.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarEventForm/CalendarEventForm.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/hooks/useCalendarFormInit.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-event-ui/src/hooks/useEventHandlers.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useMoveDate.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarNavigation.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useIsTodayFitsView.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useHandlerMoveKeysCalendar.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarSidebar/CalendarSidebarButton.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/images/event-alert.svg","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/CalendarEventNotificationModal/OpenEventButton/OpenEventButton.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/CalendarEventNotificationModal/Actions.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/CalendarEventNotificationModal/useHandlers.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/CalendarEventNotificationModal/CalendarEventNotificationModal.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/CalendarEventNotificationModal/useDateFormatter.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/CalendarEventNotificationModal/useEventDetails.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/CalendarEventNotificationModal/useTitle.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/CalendarModalsAutoOpener/CalendarModalsAutoOpener.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/CreateRequestModal/CreateRequestModal.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/components/ReassignCalendarEventModal.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/BatchAssignEvents.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/hooks/useOpenReassignCalendarEventModal.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarUserSelect.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarUser.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useHandleViewChange.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarViewSelect.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarViewTitle.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarHeader.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarSidebar/CalendarSidebarFilters.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarSidebar/CalendarSidebarMonth.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarSidebar/CalendarSidebarMonths.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarSidebar/CalendarSidebarPagination.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarSidebar/CalendarSidebar.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Calendar.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useCalendarsLoader.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useCalendarFilters.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarPageHeader.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/EventFormSidebar.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Balances/Balance.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Balances/Balances.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/icons/accepted.svg","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/icons/comment.svg","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/icons/denied.svg","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/icons/pending.svg","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/icons/waitlisted.svg","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Table/Cell.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Table/types.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Table/Filters/StatusFilter.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Table/Filters/Filters.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-modals-ui/src/hooks/useOpenCreateRequestModal.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Table/HeaderCell.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Table/mock-data.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Table/StatusIcon.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Table/RequestSidebar.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Table/Table.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/Requests/Requests.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useTimeoffTypesLoader.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useBalancesLoader.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/components/CalendarPage.tsx","webpack://@bpinc/web-calendar-ui/../../packages/cal-ui/src/hooks/useCalendarPage.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-utils/src/dates.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-utils/src/mappers/event.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-utils/src/events-common.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-utils/src/event-map.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-utils/src/month-events.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-utils/src/view-title.ts","webpack://@bpinc/web-calendar-ui/../../packages/cal-utils/src/week-events.ts","webpack://@bpinc/web-calendar-ui/../../packages/lib-tailwind-classnames/src/tcn.ts"],"sourcesContent":["import {useEffect, useMemo} from 'react'\r\n\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useUserDetailsById, useUserDetailsOnceGetter} from '@bpinc/ad-user-details-state-context'\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\n\r\n//TODO: Move this logic to the (non-app-connector) calendar context once it created\r\nexport function useCalendarOwner() {\r\n    const {userId: myUserId, firstName: myFirstName, lastName: myLastName} = useSessionState()\r\n    const calendarOwnerUserId = useCalendarState('calendarOwnerUserId')\r\n    const getUserDetailsOnce = useUserDetailsOnceGetter()\r\n    const userDetails = useUserDetailsById(calendarOwnerUserId)\r\n\r\n    const user = useMemo(() => {\r\n        if (calendarOwnerUserId === myUserId) {\r\n            return {\r\n                userId: calendarOwnerUserId,\r\n                firstName: myFirstName || '',\r\n                lastName: myLastName || '',\r\n            }\r\n        }\r\n\r\n        const details = userDetails?.data\r\n\r\n        return {\r\n            userId: calendarOwnerUserId,\r\n            firstName: details?.firstName || '',\r\n            lastName: details?.lastName || '',\r\n        }\r\n    }, [calendarOwnerUserId, myUserId, userDetails, myFirstName, myLastName])\r\n\r\n    useEffect(() => {\r\n        let timeout: number | undefined\r\n\r\n        if (!user) {\r\n            timeout = setTimeout(() => {\r\n                getUserDetailsOnce({userIds: [calendarOwnerUserId]})\r\n            }, 500)\r\n        }\r\n\r\n        return () => clearTimeout(timeout)\r\n        // do not track methods\r\n        // eslint-disable-next-line\r\n    }, [calendarOwnerUserId])\r\n\r\n    return user\r\n}\r\n","\r\nimport {useMemo} from 'react'\r\n\r\nimport type {GetDaysOfWeekOptions} from '@bpinc/cal-utils'\r\nimport {getDaysOfWeek} from '@bpinc/cal-utils'\r\nimport type {WeekDay} from '@bpinc/lib-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport function useDaysOfWeek(options: GetDaysOfWeekOptions) {\r\n    const {t: {DAYS: messages}} = useLocalizationState()\r\n\r\n    const dictFull: Record<WeekDay, string> = useMemo(() => ({\r\n        'sunday': messages.sunday(),\r\n        'monday': messages.monday(),\r\n        'tuesday': messages.tuesday(),\r\n        'wednesday': messages.wednesday(),\r\n        'thursday': messages.thursday(),\r\n        'friday': messages.friday(),\r\n        'saturday': messages.saturday(),\r\n    }), [messages])\r\n\r\n    const dictShort: Record<WeekDay, string> = useMemo(() => ({\r\n        'sunday': messages.sundayShort(),\r\n        'monday': messages.mondayShort(),\r\n        'tuesday': messages.tuesdayShort(),\r\n        'wednesday': messages.wednesdayShort(),\r\n        'thursday': messages.thursdayShort(),\r\n        'friday': messages.fridayShort(),\r\n        'saturday': messages.saturdayShort(),\r\n    }), [messages])\r\n\r\n    const dictLetter: Record<WeekDay, string> = useMemo(() => ({\r\n        'sunday': messages.sundayLetter(),\r\n        'monday': messages.mondayLetter(),\r\n        'tuesday': messages.tuesdayLetter(),\r\n        'wednesday': messages.wednesdayLetter(),\r\n        'thursday': messages.thursdayLetter(),\r\n        'friday': messages.fridayLetter(),\r\n        'saturday': messages.saturdayLetter(),\r\n    }), [messages])\r\n\r\n    return useMemo(() =>\r\n        getDaysOfWeek(dictFull, dictShort, dictLetter, options)\r\n    , [dictFull, dictShort, dictLetter, options])\r\n}\r\n","\r\nimport type {GetDaysOfWeekOptions} from '@bpinc/cal-utils'\r\n\r\nimport {useDaysOfWeek} from './useDaysOfWeek'\r\n\r\n\r\ntype GetDayOfWeekOptions = Omit<GetDaysOfWeekOptions, 'startsFromMonday'>\r\n\r\nexport function useDayOfWeek(date: Date, options?: GetDayOfWeekOptions) {\r\n    const daysOfWeek = useDaysOfWeek({...options, startsFromMonday: false})\r\n\r\n    return daysOfWeek[date.getDay()]\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {useTimezonesState} from '@bpinc/ad-timezones-state-context'\r\nimport {getUserTimezone} from '@bpinc/lib-helpers'\r\n\r\n\r\nexport function useLocalTimezone() {\r\n    const {localTimezone} = useTimezonesState()\r\n\r\n    return useMemo(() =>\r\n        localTimezone.length ? localTimezone : getUserTimezone()\r\n    , [localTimezone])\r\n}\r\n","\r\nimport {useMemo} from 'react'\r\n\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport type GetMonthsListOptions = {\r\n    short?: boolean\r\n}\r\n\r\nexport function useMonthsList({short}: GetMonthsListOptions = {}) {\r\n    const {t: {MONTHS: messages}} = useLocalizationState()\r\n\r\n    const fullArr = useMemo(() => [\r\n        messages.january(),\r\n        messages.february(),\r\n        messages.march(),\r\n        messages.april(),\r\n        messages.may(),\r\n        messages.june(),\r\n        messages.july(),\r\n        messages.august(),\r\n        messages.september(),\r\n        messages.october(),\r\n        messages.november(),\r\n        messages.december(),\r\n    ], [messages])\r\n\r\n    const shortArr = useMemo(() => [\r\n        messages.januaryShort(),\r\n        messages.februaryShort(),\r\n        messages.marchShort(),\r\n        messages.aprilShort(),\r\n        messages.mayShort(),\r\n        messages.juneShort(),\r\n        messages.julyShort(),\r\n        messages.augustShort(),\r\n        messages.septemberShort(),\r\n        messages.octoberShort(),\r\n        messages.novemberShort(),\r\n        messages.decemberShort(),\r\n    ], [messages])\r\n\r\n    return short ? shortArr : fullArr\r\n}\r\n","\r\nimport type {GetMonthsListOptions} from './useMonthsList'\r\nimport {useMonthsList} from './useMonthsList'\r\n\r\n\r\nexport function useMonthName(date: Date, options?: GetMonthsListOptions) {\r\n    const monthsList = useMonthsList(options)\r\n    const index = date.getMonth()\r\n\r\n    return monthsList[index]\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\n\r\nimport {useSetNewSelectedCalendarEvent} from './useSetNewSelectedCalendarEvent'\r\nimport {useSetSelectedCalendarEvent} from './useSetSelectedCalendarEvent'\r\n\r\n\r\nexport type SelectEventProps =\r\n | {id: string}\r\n | {startTime: number; endTime: number}\r\n\r\n /**\r\n  * Selects a calendar event by id or creates new one. Sends event to calendarEventMachine\r\n  */\r\nexport const useSelectEvent = () => {\r\n    const {\r\n        calendarEvents,\r\n        calendarEventDetails,\r\n    } = useCalendarState([\r\n        'calendarEvents',\r\n        'calendarEventDetails',\r\n    ])\r\n    const {\r\n        getCalendarEventDetails,\r\n        selectEvent,\r\n    } = useCalendarStateMethods()\r\n    const setNewSelectedEvent = useSetNewSelectedCalendarEvent()\r\n    const setSelectedEvent = useSetSelectedCalendarEvent()\r\n\r\n    return useCallback((args: SelectEventProps) => {\r\n        if ('id' in args) {\r\n            findOrFetchEvent(args.id)\r\n        } else {\r\n            setNewSelectedEvent(args.startTime, args.endTime)\r\n        }\r\n\r\n        function findOrFetchEvent(eventId: string) {\r\n            const foundEventDetails = calendarEventDetails[eventId]\r\n            if (foundEventDetails) {\r\n                selectEvent(foundEventDetails)\r\n                return\r\n            }\r\n\r\n            const event = calendarEvents.find(({id}) => id === eventId)\r\n            if (event) {\r\n                setSelectedEvent(event)\r\n            }\r\n\r\n            getCalendarEventDetails(eventId)\r\n                .then(fetchedEventDetails => {\r\n                    if (fetchedEventDetails) {\r\n                        selectEvent(fetchedEventDetails)\r\n                    }\r\n                })\r\n        }\r\n    }, [\r\n        calendarEvents,\r\n        selectEvent,\r\n        setNewSelectedEvent,\r\n        setSelectedEvent,\r\n        calendarEventDetails,\r\n        getCalendarEventDetails,\r\n    ])\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {isWithinOneDay} from '@bpinc/cal-utils'\r\nimport {uuid} from '@bpinc/lib-uuid'\r\n\r\nimport {useCalendarOwner} from './useCalendarOwner'\r\nimport {useLocalTimezone} from './useLocalTimezone'\r\n\r\n\r\nexport const useSetNewSelectedCalendarEvent = () => {\r\n    const {selectEvent} = useCalendarStateMethods()\r\n\r\n    const timezone = useLocalTimezone()\r\n    const calendarOwner = useCalendarOwner()\r\n\r\n    const {formatFullName} = useFormatting()\r\n\r\n    return useCallback((startTime: number, endTime: number) => {\r\n        const userId = calendarOwner.userId\r\n        const userName = formatFullName(calendarOwner.firstName, calendarOwner.lastName)\r\n        const isAllDay = !isWithinOneDay(startTime, endTime)\r\n\r\n        const eventDetails: CalendarEventDetails = {\r\n            _temporaryId: uuid(),\r\n            allDay: isAllDay,\r\n            assignees: [\r\n                {\r\n                    userId,\r\n                    displayText: userName,\r\n                    type: 'user',\r\n                },\r\n            ],\r\n            completed: false,\r\n            contacts: [],\r\n            remindIn: 0,\r\n            remindInUnit: 'MINUTES',\r\n            screenpopSize: 0,\r\n            startTime,\r\n            endTime,\r\n            timezone,\r\n            title: '',\r\n            userId,\r\n            userName,\r\n        }\r\n\r\n        selectEvent(eventDetails)\r\n    }, [\r\n        selectEvent,\r\n        calendarOwner,\r\n        timezone,\r\n        formatFullName,\r\n    ])\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport type {CalendarEvent, CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\n\r\nimport {useCalendarOwner} from './useCalendarOwner'\r\nimport {useLocalTimezone} from './useLocalTimezone'\r\n\r\n\r\nexport const useSetSelectedCalendarEvent = () => {\r\n    const {selectEvent} = useCalendarStateMethods()\r\n\r\n    const timezone = useLocalTimezone()\r\n    const calendarOwner = useCalendarOwner()\r\n\r\n    const {formatFullName} = useFormatting()\r\n\r\n    return useCallback((event: CalendarEvent) => {\r\n        const userId = calendarOwner.userId\r\n        const userName = formatFullName(calendarOwner.firstName, calendarOwner.lastName)\r\n\r\n        const eventDetails: CalendarEventDetails = {\r\n            id: event.id,\r\n            allDay: event.allDay,\r\n            assignees: [\r\n                {\r\n                    userId,\r\n                    displayText: userName,\r\n                    type: 'user',\r\n                },\r\n            ],\r\n            completed: false,\r\n            endTime: event.end,\r\n            notes: event.notes,\r\n            remindIn: 0,\r\n            remindInUnit: 'MINUTES',\r\n            screenpopSize: 0,\r\n            startTime: event.start,\r\n            timezone,\r\n            title: event.title,\r\n            userId,\r\n            userName,\r\n            contacts: [],\r\n        }\r\n\r\n        selectEvent(eventDetails)\r\n    }, [\r\n        selectEvent,\r\n        calendarOwner,\r\n        timezone,\r\n        formatFullName,\r\n    ])\r\n}\r\n","import type {FC} from 'react'\r\nimport React from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype CommonOpenEventButtonProps = {\r\n    onClick?: () => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const CommonOpenEventButton: FC<CommonOpenEventButtonProps> = ({disabled, onClick}) => {\r\n    const {t} = useLocalizationState()\r\n\r\n    return (\r\n        <SemanticButton\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n            inverted\r\n            className={tcn(\r\n                'mx-2 flex h-7 items-center justify-center text-base font-normal',\r\n                'bg-primary-legacy hover:bg-primary-contrast focus:bg-primary-contrast',\r\n            )}\r\n        >\r\n            {t.INCOMING_CALL_DIALOG_BOX.incomingInteraction_open()}\r\n        </SemanticButton>\r\n    )\r\n}\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    readonly [Symbol.toStringTag]!: string;\n\n    private _isResolved: boolean;\n    private _isRejected: boolean;\n    private _isCancelled: boolean;\n    private readonly _cancelHandlers: (() => void)[];\n    private readonly _promise: Promise<T>;\n    private _resolve?: (value: T | PromiseLike<T>) => void;\n    private _reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this._isResolved = false;\n        this._isRejected = false;\n        this._isCancelled = false;\n        this._cancelHandlers = [];\n        this._promise = new Promise<T>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._isResolved = true;\n                this._resolve?.(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._isRejected = true;\n                this._reject?.(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this._isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this._isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this._isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this._promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this._promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this._promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n            return;\n        }\n        this._isCancelled = true;\n        if (this._cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this._cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this._cancelHandlers.length = 0;\n        this._reject?.(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this._isCancelled;\n    }\n}\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\nexport type OpenAPIConfig = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    CREDENTIALS: 'include' | 'omit' | 'same-origin';\n    TOKEN?: string | Resolver<string>;\n    USERNAME?: string | Resolver<string>;\n    PASSWORD?: string | Resolver<string>;\n    HEADERS?: Headers | Resolver<Headers>;\n    ENCODE_PATH?: (path: string) => string;\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n    BASE: '/swagger-calendar',\n    VERSION: '1.0',\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: 'include',\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nconst isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nconst isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nconst isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nconst isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nconst isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nconst base64 = (str: string): string => {\n    try {\n        return btoa(str);\n    } catch (err) {\n        // @ts-ignore\n        return Buffer.from(str).toString('base64');\n    }\n};\n\nconst getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nconst getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nconst resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nconst getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\n    const token = await resolve(options, config.TOKEN);\n    const username = await resolve(options, config.USERNAME);\n    const password = await resolve(options, config.PASSWORD);\n    const additionalHeaders = await resolve(options, config.HEADERS);\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n    })\n        .filter(([_, value]) => isDefined(value))\n        .reduce((headers, [key, value]) => ({\n            ...headers,\n            [key]: String(value),\n        }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return new Headers(headers);\n};\n\nconst getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body) {\n        if (options.mediaType?.includes('/json')) {\n            return JSON.stringify(options.body)\n        } else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n            return options.body;\n        } else {\n            return JSON.stringify(options.body);\n        }\n    }\n    return undefined;\n};\n\nexport const sendRequest = async (\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Headers,\n    onCancel: OnCancel\n): Promise<Response> => {\n    const controller = new AbortController();\n\n    const request: RequestInit = {\n        headers,\n        body: body ?? formData,\n        method: options.method,\n        signal: controller.signal,\n    };\n\n    if (config.WITH_CREDENTIALS) {\n        request.credentials = config.CREDENTIALS;\n    }\n\n    onCancel(() => controller.abort());\n\n    return await fetch(url, request);\n};\n\nconst getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers.get(responseHeader);\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nconst getResponseBody = async (response: Response): Promise<any> => {\n    if (response.status !== 204) {\n        try {\n            const contentType = response.headers.get('Content-Type');\n            if (contentType) {\n                const isJSON = contentType.toLowerCase().startsWith('application/json');\n                if (isJSON) {\n                    return await response.json();\n                } else {\n                    return await response.text();\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    return undefined;\n};\n\nconst catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        throw new ApiError(options, result, 'Generic Error');\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n                const responseBody = await getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: response.ok,\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                resolve(result.body);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { calendar_AssignEventRequest } from '../models/calendar_AssignEventRequest';\nimport type { calendar_ChangeCalendarColorRequest } from '../models/calendar_ChangeCalendarColorRequest';\nimport type { calendar_ChangeCalendarPublishRequest } from '../models/calendar_ChangeCalendarPublishRequest';\nimport type { calendar_EventItemResponse } from '../models/calendar_EventItemResponse';\nimport type { calendar_GetAvailabilitySettingsResponse } from '../models/calendar_GetAvailabilitySettingsResponse';\nimport type { calendar_GetEventsByTimeFrameResponse } from '../models/calendar_GetEventsByTimeFrameResponse';\nimport type { calendar_GetLocaleSettingsResponse } from '../models/calendar_GetLocaleSettingsResponse';\nimport type { calendar_Response } from '../models/calendar_Response';\nimport type { calendar_SaveCalendarItemRequest } from '../models/calendar_SaveCalendarItemRequest';\nimport type { calendar_SaveCalendarItemResponse } from '../models/calendar_SaveCalendarItemResponse';\nimport type { calendar_UpsertAvailabilitySettingsRequest } from '../models/calendar_UpsertAvailabilitySettingsRequest';\nimport type { calendar_UpsertAvailabilitySettingsResponse } from '../models/calendar_UpsertAvailabilitySettingsResponse';\nimport type { calendar_UpsertCalendarRequest } from '../models/calendar_UpsertCalendarRequest';\nimport type { calendar_UpsertLocaleSettingsRequest } from '../models/calendar_UpsertLocaleSettingsRequest';\nimport type { calendar_UpsertLocaleSettingsResponse } from '../models/calendar_UpsertLocaleSettingsResponse';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport class CalendarServices {\n\n    /**\n     * Get events agenda\n     * Get all user's events in current tenant (userId and tenantId we'll take from session).\n     * @returns calendar_SaveCalendarItemResponse Success response\n     * @throws ApiError\n     */\n    public static getCalendarAgenda({\ncalendarId,\ndefaultCalendarEventsIncluded,\n}: {\n/**\n * filter by calendarId\n */\ncalendarId?: Array<string>,\n/**\n * show events from default calendar\n */\ndefaultCalendarEventsIncluded?: boolean,\n}): CancelablePromise<Array<calendar_SaveCalendarItemResponse>> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/calendar/agenda',\n            query: {\n                'calendarId': calendarId,\n                'defaultCalendarEventsIncluded': defaultCalendarEventsIncluded,\n            },\n            errors: {\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Assign calendar event\n     * Use this end-point when you want to assign a calendar event.\n     * @returns any \n     * @throws ApiError\n     */\n    public static assignCalendarEvent({\nbody,\n}: {\n/**\n * request body\n */\nbody: calendar_AssignEventRequest,\n}): CancelablePromise<any> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/v1/calendar/assignEvent',\n            body: body,\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Get events by time frame\n     * Get events by time frame\n     * @returns calendar_GetEventsByTimeFrameResponse Success response\n     * @throws ApiError\n     */\n    public static getEventsByTimeFrame({\nstart,\nend,\ntimezone,\nuser,\ncalendarId,\ndefaultCalendarEventsIncluded,\n}: {\n/**\n * start time in milliseconds\n */\nstart: number,\n/**\n * end time in milliseconds\n */\nend: number,\n/**\n * timezone\n */\ntimezone: string,\n/**\n * filter by user\n */\nuser?: string,\n/**\n * filter by calendarId\n */\ncalendarId?: Array<string>,\n/**\n * show events from default calendar\n */\ndefaultCalendarEventsIncluded?: boolean,\n}): CancelablePromise<calendar_GetEventsByTimeFrameResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/calendar/eventsByTimeFrame',\n            query: {\n                'start': start,\n                'end': end,\n                'user': user,\n                'calendarId': calendarId,\n                'defaultCalendarEventsIncluded': defaultCalendarEventsIncluded,\n                'timezone': timezone,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Move event's end date-time\n     * Move event's end date-time\n     * @returns calendar_EventItemResponse OK\n     * @throws ApiError\n     */\n    public static stretchCalendarEvent({\ncalendarEventId,\ndelta,\n}: {\n/**\n * Calendar Event ID\n */\ncalendarEventId: string,\n/**\n * Delta for moving in Milliseconds\n */\ndelta: string,\n}): CancelablePromise<calendar_EventItemResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/v1/calendar/itemEnd/{calendarEventId}',\n            path: {\n                'calendarEventId': calendarEventId,\n            },\n            query: {\n                'delta': delta,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Move event's start date-time\n     * Move event's start date-time\n     * @returns calendar_EventItemResponse OK\n     * @throws ApiError\n     */\n    public static moveCalendarEvent({\ncalendarEventId,\ndelta,\n}: {\n/**\n * Calendar Event ID\n */\ncalendarEventId: string,\n/**\n * Delta for moving in Milliseconds\n */\ndelta: string,\n}): CancelablePromise<calendar_EventItemResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/v1/calendar/itemStart/{calendarEventId}',\n            path: {\n                'calendarEventId': calendarEventId,\n            },\n            query: {\n                'delta': delta,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Save calendar event\n     * Use this end-point when you want insert new calendar event.\n     * @returns calendar_SaveCalendarItemResponse Response\n     * @throws ApiError\n     */\n    public static createCalendarEvent({\nbody,\n}: {\n/**\n * request body\n */\nbody: calendar_SaveCalendarItemRequest,\n}): CancelablePromise<calendar_SaveCalendarItemResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/v1/calendar/items',\n            body: body,\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Get event by ID\n     * Get event by ID\n     * @returns calendar_EventItemResponse Success response\n     * @throws ApiError\n     */\n    public static getCalendarEventDetails({\ncalendarEventId,\n}: {\n/**\n * Calendar Event ID\n */\ncalendarEventId: string,\n}): CancelablePromise<calendar_EventItemResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/calendar/items/{calendarEventId}',\n            path: {\n                'calendarEventId': calendarEventId,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Delete calendar by calendar id\n     * Delete calendar by calendar id\n     * @returns any \n     * @throws ApiError\n     */\n    public static deleteCalendarEvent({\ncalendarEventId,\n}: {\n/**\n * Calendar Event ID\n */\ncalendarEventId: string,\n}): CancelablePromise<any> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/v1/calendar/items/{calendarEventId}',\n            path: {\n                'calendarEventId': calendarEventId,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                403: `Access denied`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Complete calendar event by calendar id\n     * Complete calendar event by calendar id\n     * @returns any \n     * @throws ApiError\n     */\n    public static completeCalendarEvent({\ncalendarEventId,\n}: {\n/**\n * Calendar Event ID\n */\ncalendarEventId: string,\n}): CancelablePromise<any> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/v1/calendar/items/{calendarEventId}/complete',\n            path: {\n                'calendarEventId': calendarEventId,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Shifts event's reminder\n     * Shifts event's reminder by 10 minutes forward.\n     * @returns boolean true\n     * @throws ApiError\n     */\n    public static snoozeCalendarEvent({\ncalendarEventId,\n}: {\n/**\n * Calendar Event ID\n */\ncalendarEventId: string,\n}): CancelablePromise<boolean> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/v1/calendar/items/{calendarEventId}/snooze',\n            path: {\n                'calendarEventId': calendarEventId,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Get calendar list\n     * Use this end-point when you want to get a list of calendars.\n     * @returns calendar_Response OK\n     * @throws ApiError\n     */\n    public static getListCalendar(): CancelablePromise<Array<calendar_Response>> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/calendar/list',\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Create calendar\n     * Use this end-point when you want insert new calendar.\n     * @returns calendar_Response Response\n     * @throws ApiError\n     */\n    public static createNewCalendar({\nbody,\n}: {\n/**\n * request body\n */\nbody: calendar_UpsertCalendarRequest,\n}): CancelablePromise<calendar_Response> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/v1/calendar/new',\n            body: body,\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Get availability settings\n     * Get availability settings by user\n     * @returns calendar_GetAvailabilitySettingsResponse Success response\n     * @throws ApiError\n     */\n    public static getAvailabilitySettings(): CancelablePromise<calendar_GetAvailabilitySettingsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/calendar/settings/availability',\n            errors: {\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Create/update availability settings\n     * Use this end-point when you want to create/update availability settings.\n     * @returns calendar_UpsertAvailabilitySettingsResponse Response\n     * @throws ApiError\n     */\n    public static upsertAvailabilitySettings({\nbody,\n}: {\n/**\n * request body\n */\nbody: calendar_UpsertAvailabilitySettingsRequest,\n}): CancelablePromise<calendar_UpsertAvailabilitySettingsResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/v1/calendar/settings/availability',\n            body: body,\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                403: `Forbidden`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Get settings\n     * Get settings by user\n     * @returns calendar_GetLocaleSettingsResponse Success response\n     * @throws ApiError\n     */\n    public static getLocaleSettings(): CancelablePromise<calendar_GetLocaleSettingsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/calendar/settings/locale',\n            errors: {\n                401: `Unauthorized`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Create/update locale settings\n     * Use this end-point when you want to create/update locale settings.\n     * @returns calendar_UpsertLocaleSettingsResponse Response\n     * @throws ApiError\n     */\n    public static upsertLocaleSettings({\nbody,\n}: {\n/**\n * request body\n */\nbody: calendar_UpsertLocaleSettingsRequest,\n}): CancelablePromise<calendar_UpsertLocaleSettingsResponse> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/v1/calendar/settings/locale',\n            body: body,\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                403: `Forbidden`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Get calendar by ID\n     * Use this end-point when you want to get calendar by id.\n     * @returns calendar_Response OK\n     * @throws ApiError\n     */\n    public static getCalendar({\ncalendarId,\n}: {\n/**\n * Calendar ID\n */\ncalendarId: string,\n}): CancelablePromise<calendar_Response> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/calendar/{calendarId}',\n            path: {\n                'calendarId': calendarId,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Calendar not found`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Update calendar by ID\n     * Use this end-point when you want update calendar by ID.\n     * @returns calendar_Response Response\n     * @throws ApiError\n     */\n    public static updateCalendar({\ncalendarId,\nbody,\n}: {\n/**\n * Calendar ID\n */\ncalendarId: string,\n/**\n * request body\n */\nbody: calendar_UpsertCalendarRequest,\n}): CancelablePromise<calendar_Response> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/v1/calendar/{calendarId}',\n            path: {\n                'calendarId': calendarId,\n            },\n            body: body,\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Calendar not found`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Delete calendar.\n     * Use this end-point when you want to delete calendar.\n     * @returns any \n     * @throws ApiError\n     */\n    public static deleteCalendar({\ncalendarId,\n}: {\n/**\n * Calendar ID\n */\ncalendarId: string,\n}): CancelablePromise<any> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/v1/calendar/{calendarId}',\n            path: {\n                'calendarId': calendarId,\n            },\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Not Found`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Change color for calendar\n     * Use this end-point when you want to change color for calendar.\n     * @returns calendar_Response Response\n     * @throws ApiError\n     */\n    public static changeColorCalendar({\ncalendarId,\nbody,\n}: {\n/**\n * Calendar ID\n */\ncalendarId: string,\n/**\n * request body\n */\nbody: calendar_ChangeCalendarColorRequest,\n}): CancelablePromise<calendar_Response> {\n        return __request(OpenAPI, {\n            method: 'PATCH',\n            url: '/v1/calendar/{calendarId}/color',\n            path: {\n                'calendarId': calendarId,\n            },\n            body: body,\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Not Found`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n    /**\n     * Publish calendar set\n     * Use this end-point when you wants to publish/unpublish your calendar.\n     * @returns calendar_Response Response\n     * @throws ApiError\n     */\n    public static changeCalendarPublish({\ncalendarId,\nbody,\n}: {\n/**\n * Calendar ID\n */\ncalendarId: string,\n/**\n * request body\n */\nbody: calendar_ChangeCalendarPublishRequest,\n}): CancelablePromise<calendar_Response> {\n        return __request(OpenAPI, {\n            method: 'PATCH',\n            url: '/v1/calendar/{calendarId}/published',\n            path: {\n                'calendarId': calendarId,\n            },\n            body: body,\n            errors: {\n                400: `Bad Request`,\n                401: `Unauthorized`,\n                404: `Not Found`,\n                500: `Internal Error`,\n            },\n        });\n    }\n\n}\r\n","import type {\r\n    calendar_Assignee,\r\n    calendar_AssignEventRequest,\r\n    calendar_ChangeCalendarColorRequest,\r\n    calendar_ChangeCalendarPublishRequest,\r\n    calendar_ContactItem,\r\n    calendar_EventItemResponse,\r\n    calendar_GetAvailabilitySettingsResponse,\r\n    calendar_GetEventsByTimeFrameItemResponse,\r\n    calendar_GetLocaleSettingsResponse,\r\n    calendar_Response,\r\n    calendar_SaveCalendarItemRequest,\r\n    calendar_SaveCalendarItemResponse,\r\n    calendar_UpsertAvailabilitySettingsRequest,\r\n    calendar_UpsertCalendarRequest,\r\n    calendar_UpsertLocaleSettingsRequest,\r\n} from './api-service/'\r\n\r\n\r\nexport type GetCalendarEventsByTimeFrameOptions = {\r\n    start: number\r\n    end: number\r\n    timezone: string\r\n    user?: string\r\n    calendarId?: string[]\r\n    defaultCalendarEventsIncluded?: boolean\r\n}\r\n\r\nexport enum EventType {\r\n    EVENT = 'event',\r\n    REQUEST = 'request',\r\n    SHIFT = 'shift',\r\n}\r\n\r\nexport type Calendar = calendar_Response\r\n\r\nexport type CalendarEvent = calendar_GetEventsByTimeFrameItemResponse\r\n\r\ntype CalendarEventCommon = Pick<CalendarEvent, 'id' | 'allDay' | 'start' | 'end' | 'title'>\r\n\r\ntype RegularCalendarItem = CalendarEventCommon & {\r\n    type?: EventType.EVENT\r\n}\r\n\r\ntype RequestCalendarItem = CalendarEventCommon & {\r\n    type: EventType.REQUEST\r\n}\r\n\r\ntype ShiftCalendarItem = CalendarEventCommon & {\r\n    type: EventType.SHIFT\r\n}\r\n\r\nexport type CalendarEventItem =\r\n    | RegularCalendarItem\r\n    | RequestCalendarItem\r\n    | ShiftCalendarItem\r\n\r\nexport type CalendarEventDetails = calendar_EventItemResponse & {\r\n    /** Temporary identifier of a newly created event */\r\n    _temporaryId?: string\r\n}\r\n\r\nexport type CalendarContact = calendar_ContactItem\r\n\r\nexport type CalendarAgendaRequest = {\r\n    calendarId?: string[]\r\n    defaultCalendarEventsIncluded?: boolean\r\n}\r\n\r\nexport type UpsertCalendarRequest = calendar_UpsertCalendarRequest\r\n\r\nexport type SaveCalendarEventRequest = calendar_SaveCalendarItemRequest\r\nexport type SaveCalendarEventResponse = calendar_SaveCalendarItemResponse\r\n\r\nexport type CalendarAssignee = calendar_Assignee\r\nexport type AssignCalendarEventRequest = calendar_AssignEventRequest\r\n\r\n\r\nexport type CalendarLocaleSettings = calendar_GetLocaleSettingsResponse\r\nexport type UpsertLocaleSettingsRequest = calendar_UpsertLocaleSettingsRequest\r\n\r\nexport type CalendarAvailabilitySettings = calendar_GetAvailabilitySettingsResponse\r\nexport type UpsertAvailabilitySettingsRequest = calendar_UpsertAvailabilitySettingsRequest\r\n\r\nexport type ChangeCalendarColorRequest = calendar_ChangeCalendarColorRequest\r\nexport type ChangeCalendarPublishRequest = calendar_ChangeCalendarPublishRequest\r\n","import {OpenAPI} from './src/api-service'\r\n\r\n\r\nOpenAPI.BASE = '/newadws/api'\r\n\r\nexport {CalendarServices} from './src/api-service'\r\nexport * from './src/types'\r\n","import {useEffect, useMemo} from 'react'\r\n\r\nimport {useTimezonesState} from '@bpinc/ad-timezones-state-context'\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {View} from '@bpinc/cal-state-types'\r\nimport {getRangeFromView, getWeeksInMonth} from '@bpinc/cal-utils'\r\nimport {usePreviousValue, useValueUpdated} from '@bpinc/lib-helpers'\r\n\r\n\r\nconst VIEWS_ORDER: View[] = [View.MONTH, View.WEEK, View.DAY, View.SCHEDULE]\r\n\r\nexport function useEventsLoader() {\r\n    const {getCalendarEvents} = useCalendarStateMethods()\r\n    const {calendarOwnerUserId, viewDate, view} = useCalendarState(\r\n        ['calendarOwnerUserId', 'viewDate', 'view'],\r\n    )\r\n    const {localTimezone} = useTimezonesState()\r\n    const prevViewDate = usePreviousValue(viewDate)\r\n    const prevView = usePreviousValue(view)\r\n    const isViewChanged = useValueUpdated(view)\r\n\r\n    const weeksInMonth = useMemo(() => getWeeksInMonth(viewDate), [viewDate])\r\n\r\n    const shouldLoad = useMemo(() => {\r\n        if (!prevViewDate) {\r\n            return true\r\n        }\r\n        if (isViewChanged && prevView) {\r\n            return VIEWS_ORDER.indexOf(prevView) > VIEWS_ORDER.indexOf(view)\r\n        }\r\n        if (prevViewDate === viewDate) {\r\n            return false\r\n        }\r\n        const [startPrev] = getRangeFromView(prevViewDate, view)\r\n        const [startNew] = getRangeFromView(viewDate, view)\r\n        return startNew !== startPrev\r\n    }, [prevViewDate, isViewChanged, prevView, viewDate, view])\r\n\r\n    useEffect(() => {\r\n        if (!shouldLoad) {\r\n            return\r\n        }\r\n\r\n        const [start, end] = getRangeFromView(viewDate, view, {expand: weeksInMonth * 7})\r\n\r\n        if (start && end && calendarOwnerUserId) {\r\n            getCalendarEvents({\r\n                user: calendarOwnerUserId,\r\n                start,\r\n                end,\r\n                timezone: localTimezone,\r\n                defaultCalendarEventsIncluded: true,\r\n            })\r\n        }\r\n    }, [\r\n        calendarOwnerUserId,\r\n        localTimezone,\r\n        viewDate,\r\n        weeksInMonth,\r\n        getCalendarEvents,\r\n        shouldLoad,\r\n        view,\r\n    ])\r\n\r\n}\r\n","import React from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {Loader} from '@bpinc/lib-ui-elements'\r\n\r\n\r\nexport const CalendarBodyLoader = React.memo(() => {\r\n    return (\r\n        <div\r\n            className={tcn(\r\n                'flex items-center justify-center before:absolute before:inset-0',\r\n                'before:z-[5] before:bg-primary-contrast before:opacity-70',\r\n            )}\r\n        >\r\n            <Loader active size=\"big\" color=\"primary\" />\r\n        </div>\r\n    )\r\n})\r\n","import {useMemo} from 'react'\r\nimport {flatten, inRange} from 'lodash-es'\r\n\r\nimport {\r\n    type EventMap,\r\n    type EventMapItem,\r\n    type NewEvent,\r\n    type NotEmptyEventMapItem,\r\n    type RegularEvent,\r\n    EventType,\r\n} from '@bpinc/cal-state-types'\r\nimport {getEventMapKey, isWithinOneDay} from '@bpinc/cal-utils'\r\nimport {MS_IN_DAY} from '@bpinc/lib-helpers'\r\n\r\n\r\ninterface UseEventsListParams {\r\n    daysAmount: number\r\n    start: number\r\n    events: EventMap\r\n}\r\n\r\ninterface UseEventsListOptions {\r\n    withinOneDay?: boolean\r\n}\r\n\r\ntype EventsByLines = NotEmptyEventMapItem[][]\r\n\r\nexport function useAllDayEventsByLine({\r\n    daysAmount,\r\n    start: viewStart,\r\n    events,\r\n}: UseEventsListParams): [EventsByLines, number] {\r\n    return useMemo(() => {\r\n        const eventsByLines: EventsByLines = []\r\n        const viewEnd = viewStart + daysAmount * MS_IN_DAY\r\n\r\n        const eventsList = Object.values(events).flatMap(flatEvents =>\r\n            flatEvents.filter((event: EventMapItem) =>\r\n                isAllDayEvent(event) && isEventWithinView(event, viewStart, viewEnd),\r\n            ),\r\n        ) as NotEmptyEventMapItem[]\r\n\r\n        const oldEvents = eventsList.filter(event => event.type !== EventType.NEW_EVENT)\r\n        oldEvents.forEach(event => {\r\n            let lineIndex = getLineIndex(eventsByLines, event)\r\n\r\n            if (lineIndex === -1) {\r\n            // create new line\r\n                eventsByLines.push([])\r\n                lineIndex = eventsByLines.length - 1\r\n            }\r\n\r\n            eventsByLines[lineIndex].push(event)\r\n        })\r\n\r\n        const newEvents = eventsList.filter(event => event.type === EventType.NEW_EVENT)\r\n        if (newEvents.length > 0) {\r\n            eventsByLines.unshift([])\r\n            newEvents.forEach(event => eventsByLines[0].push(event))\r\n        }\r\n\r\n        return [eventsByLines, eventsByLines.length]\r\n    }, [events, viewStart, daysAmount])\r\n}\r\n\r\nfunction isAllDayEvent(event: EventMapItem): event is NotEmptyEventMapItem {\r\n    return (event.type === EventType.EVENT || event.type === EventType.NEW_EVENT)\r\n        && (event.data.allDay || !isWithinOneDay(event.data.start, event.data.end))\r\n}\r\n\r\nfunction isEventWithinView(event: NotEmptyEventMapItem, viewStart: number, viewEnd: number) {\r\n    return inRange(event.data.start, viewStart, viewEnd) ||\r\n        inRange(event.data.end - 1, viewStart, viewEnd)\r\n}\r\n\r\nfunction getLineIndex(\r\n    eventsByLines: EventsByLines,\r\n    event: NotEmptyEventMapItem,\r\n): number {\r\n    if (!eventsByLines.length) {\r\n        return -1\r\n    }\r\n\r\n    const {data: {start: eventStart, end: eventEnd}} = event\r\n\r\n    let index = 0\r\n\r\n    while (index < eventsByLines.length) {\r\n        const lineHasEmptyRoom = eventsByLines[index].every(lineEvent => {\r\n            const {\r\n                data: {start: lineEventStart, end: lineEventEnd},\r\n            } = lineEvent\r\n\r\n            return (\r\n                (lineEventStart < eventStart && lineEventEnd < eventStart) ||\r\n                (lineEventStart > eventEnd && lineEventEnd > eventEnd)\r\n            )\r\n        })\r\n\r\n        if (lineHasEmptyRoom) {\r\n            return index\r\n        }\r\n\r\n        index++\r\n    }\r\n\r\n    return -1\r\n}\r\n\r\nexport function useBodyEventsList(\r\n    {daysAmount, start, events}: UseEventsListParams,\r\n    {withinOneDay}: UseEventsListOptions = {},\r\n) {\r\n    return useMemo(() => {\r\n        const eventsByDay = getEventsByDay({daysAmount, start, events})\r\n\r\n        // First level: array of days [[<buckets for Monday>], [<buckets for Tuesday>], ...]\r\n        // Seconds level: array of day events' buckets [[<bucket>], [<bucket>], ...]\r\n        // One bucket is a bunch of intersecting events that are combined in columns\r\n        // Column is an array of non-intersecting events inside the bucket\r\n        // Example. We have only 3 intersecting events on Monday:\r\n        // | -----  ----- |\r\n        // | |   |  | 2 | |\r\n        // | |   |  ----- |\r\n        // | | 1 |        |\r\n        // | |   |  ----- |\r\n        // | |   |  | 3 | |\r\n        // | -----  ----- |\r\n        // Result: [\r\n        //    [\r\n        //       [\r\n        //           [{id: 1}], // column 0\r\n        //           [{id: 2}, {id: 3}], // column 1\r\n        //       ], // bucket\r\n        //    ], // monday\r\n        //    [], // tuesday\r\n        //    [], // wednesday\r\n        //    [], // thursday\r\n        //    [], // friday\r\n        //    [], // saturday\r\n        //    [], // sunday\r\n        // ]\r\n        return Array.from({length: daysAmount}).map((_, i) => {\r\n            const buckets: NotEmptyEventMapItem[][][] = []\r\n\r\n            eventsByDay[i].forEach(item => {\r\n                const isWithinOneDayEvent = !item.data.allDay && isWithinOneDay(item.data.start, item.data.end)\r\n\r\n                if ((!withinOneDay && isWithinOneDayEvent) || (withinOneDay && !isWithinOneDayEvent)) {\r\n                    return\r\n                }\r\n\r\n                if (item.type === EventType.OCCUPIED) {\r\n                    const lastBucket = buckets.length - 1\r\n                    const lastColumn = buckets[lastBucket].length - 1\r\n                    buckets[lastBucket][lastColumn].push(item)\r\n                    return\r\n                }\r\n\r\n                let bucketIndex = buckets.findIndex(bucket =>\r\n                    flatten(bucket).some(event => isEventInColumn(item, event)),\r\n                )\r\n\r\n                if (bucketIndex === -1) {\r\n                    bucketIndex = buckets.length\r\n                    buckets.push([])\r\n                    buckets[bucketIndex].push([item])\r\n                    return\r\n                }\r\n\r\n                let columnIndex = buckets[bucketIndex].findIndex(columns =>\r\n                    columns.every(event => !isEventInColumn(item, event)),\r\n                )\r\n                if (columnIndex === -1) {\r\n                    columnIndex = buckets[bucketIndex].length\r\n                    buckets[bucketIndex].push([])\r\n                }\r\n                buckets[bucketIndex][columnIndex].push(item)\r\n            })\r\n\r\n            return buckets\r\n        })\r\n    }, [daysAmount, events, start, withinOneDay])\r\n}\r\n\r\nfunction getEventsByDay({daysAmount, start, events}: UseEventsListParams) {\r\n    return Array.from({length: daysAmount}).map((_, i) => {\r\n        const startOfday = start + MS_IN_DAY * i\r\n        const key = getEventMapKey(new Date(startOfday))\r\n        const list: NotEmptyEventMapItem[] = []\r\n\r\n        if (key in events) {\r\n            events[key].forEach(item => {\r\n                if (item.type !== EventType.EMPTY) list.push(item)\r\n            })\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.type !== b.type) {\r\n                const order: EventMapItem['type'][] = [\r\n                    EventType.OCCUPIED,\r\n                    EventType.EVENT,\r\n                    EventType.NEW_EVENT,\r\n                ]\r\n                return order.indexOf(a.type) - order.indexOf(b.type)\r\n            }\r\n            return a.data.start - b.data.start\r\n        })\r\n        return list\r\n    })\r\n}\r\n\r\nfunction isEventInColumn(\r\n    event: RegularEvent | NewEvent,\r\n    column: NotEmptyEventMapItem,\r\n): boolean {\r\n    const columnStart = new Date(column.data.start).setSeconds(0, 0)\r\n    const columnEnd = new Date(column.data.end).setSeconds(0, 0)\r\n    const eventStart = new Date(event.data.start).setSeconds(0, 0)\r\n    const eventEnd = new Date(event.data.end).setSeconds(0, 0)\r\n\r\n    // start or end of event is within column time range\r\n    // (need to process edges of column to prevent inconsistent UI)\r\n    return !(\r\n        (eventStart < columnStart && eventEnd <= columnStart) ||\r\n        (eventStart >= columnEnd && eventEnd > columnEnd)\r\n    )\r\n}\r\n","\r\nimport type {Dispatch, SetStateAction} from 'react'\r\nimport {useEffect, useState} from 'react'\r\n\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\nimport type {SelectionRange} from '@bpinc/cal-state-types'\r\nimport {usePrevious} from '@bpinc/lib-helpers'\r\n\r\n\r\ntype ReturnValue = [\r\n    SelectionRange | undefined,\r\n    Dispatch<SetStateAction<SelectionRange | undefined>>\r\n]\r\n\r\nexport const useSelectionRange = (): ReturnValue => {\r\n    const selectedEvent = useCalendarState('selectedEvent')\r\n    const [selectionRange, setSelectionRange] = useState<SelectionRange | undefined>()\r\n\r\n    const prevSelectedEvent = usePrevious(selectedEvent)\r\n\r\n    useEffect(() => {\r\n        if (selectedEvent && !prevSelectedEvent) {\r\n            setSelectionRange(undefined)\r\n        }\r\n    }, [selectedEvent, prevSelectedEvent])\r\n\r\n    return [selectionRange, setSelectionRange]\r\n}\r\n","import dayjs from 'dayjs'\r\n\r\nimport {getRangeInDays} from '@bpinc/cal-utils'\r\nimport {areSameDays} from '@bpinc/lib-helpers'\r\nimport type {Language} from '@bpinc/state-localization'\r\n\r\nimport {createIntlFormatters} from './intlFormatters'\r\n\r\n\r\nexport const intlFormatters = createIntlFormatters()\r\n\r\n\r\ntype FormatEventTimesProps = {\r\n    startTime: string | number\r\n    endTime?: string | number\r\n    allDay?: boolean\r\n    allDayMessage?: string\r\n    locale: Language\r\n    timeZone?: string\r\n}\r\n\r\ntype TimeDescriptor = {\r\n    date: string\r\n    time: string\r\n}\r\n\r\ntype FormatEventTimesReturn = {\r\n    from: TimeDescriptor\r\n    to?: TimeDescriptor\r\n}\r\n\r\n/** Formats Event's from/to dates */\r\nexport const formatEventTimes = ({\r\n    startTime,\r\n    endTime,\r\n    locale,\r\n    timeZone,\r\n    allDay = false,\r\n    allDayMessage = '',\r\n}: FormatEventTimesProps): FormatEventTimesReturn => {\r\n    const {fullDate, h, hmm, hhmm, normalize} = intlFormatters({locale, timeZone})\r\n\r\n    const startDate = typeof startTime === 'number'\r\n        ? new Date(startTime)\r\n        : dayjs(startTime).toDate()\r\n\r\n    const from = {\r\n        date: fullDate.format(startDate),\r\n        time: '',\r\n    }\r\n    let to: TimeDescriptor | undefined\r\n\r\n    if (!endTime) {\r\n        from.time = normalize(hhmm.format(startDate))\r\n        return {from, to}\r\n    }\r\n\r\n    const endDate = typeof endTime === 'number'\r\n        ? new Date(endTime)\r\n        : dayjs(endTime).toDate()\r\n\r\n    if (allDay) {\r\n        const daysRange = getRangeInDays(startDate, endDate)\r\n        if (daysRange > 1) {\r\n            to = {\r\n                date: fullDate.format(endDate),\r\n                time: allDayMessage,\r\n            }\r\n        } else {\r\n            from.time = allDayMessage\r\n        }\r\n    } else if (areSameDays(startDate, endDate)) {\r\n        from.time = normalize(\r\n            hmm.formatRange(startDate, endDate),\r\n        )\r\n    } else {\r\n        from.time = dayjs(startDate).minute() === 0\r\n            ? h.format(startDate)\r\n            : hmm.format(startDate)\r\n\r\n        to = {\r\n            date: fullDate.format(endDate),\r\n            time: dayjs(endDate).minute() === 0\r\n                ? h.format(endDate)\r\n                : hmm.format(endDate),\r\n        }\r\n        from.time = normalize(from.time)\r\n        to.time = normalize(to.time)\r\n    }\r\n\r\n    return {from, to}\r\n}\r\n\r\n/**\r\n * Merges date and time\r\n * @param dateString ISODate, from which the date is taken (the time is ignored)\r\n * @param timeString ISODate, from which the time is taken (the date is ignored)\r\n * @returns timestamp of merged date and time\r\n */\r\nexport const mergeDateTime = (dateString: string, timeString: string): number => {\r\n    const date = new Date(dateString)\r\n    const time = new Date(timeString)\r\n    date.setHours(time.getHours())\r\n    date.setMinutes(time.getMinutes())\r\n    date.setSeconds(time.getSeconds())\r\n\r\n    return Number(date)\r\n}\r\n","import {createSelector} from 'reselect'\r\n\r\nimport type {Language} from '@bpinc/state-localization'\r\n\r\n\r\ntype SelectorParams = {locale: Language; timeZone?: string}\r\n\r\ntype Formatters = {\r\n    fullDate: Intl.DateTimeFormat\r\n    h: Intl.DateTimeFormat\r\n    hmm: Intl.DateTimeFormat\r\n    hhmm: Intl.DateTimeFormat\r\n    normalize(date: string): string\r\n}\r\n\r\n/** */\r\nexport const createIntlFormatters = () =>\r\n    createSelector(\r\n        ({locale}: SelectorParams) => locale,\r\n        ({timeZone}: SelectorParams) => timeZone,\r\n        (locale, timeZone): Formatters => ({\r\n            fullDate: new Intl.DateTimeFormat(\r\n                locale,\r\n                {\r\n                    day: 'numeric',\r\n                    month: 'long',\r\n                    timeZone,\r\n                    weekday: 'long',\r\n                },\r\n            ),\r\n            h: new Intl.DateTimeFormat(\r\n                locale,\r\n                {\r\n                    hour: 'numeric',\r\n                    timeZone,\r\n                },\r\n            ),\r\n            hmm: new Intl.DateTimeFormat(\r\n                locale,\r\n                {\r\n                    hour: 'numeric',\r\n                    minute: '2-digit',\r\n                    timeZone,\r\n                },\r\n            ),\r\n            hhmm: new Intl.DateTimeFormat(\r\n                locale,\r\n                {\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                    timeZone,\r\n                },\r\n            ),\r\n            normalize: date => new RegExp('AM|PM', 'g').test(date) ?\r\n                date\r\n                    .replace(/^0/, '')\r\n                    .replace(/:00/g, '')\r\n                    .replace(/AM|PM/g, a => a.toLowerCase()) :\r\n                date,\r\n        }),\r\n    )\r\n\r\n","import {omit} from 'lodash-es'\r\n\r\nimport type {ContactType} from '@bpinc/ad-contacts-state-types'\r\nimport {PhoneTypes} from '@bpinc/ad-contacts-state-types'\r\nimport type {CalendarContact, CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport type {CalendarEventContact, CalendarEventFields, CalendarEventNewContact} from '@bpinc/cal-state-types'\r\nimport {getUserTimezone} from '@bpinc/lib-helpers'\r\n\r\nimport {mergeDateTime} from './time'\r\n\r\n/**\r\n * Converts contact type to contact form fields\r\n */\r\nexport const formatContactToContactsFields = (contact: ContactType): CalendarEventContact => {\r\n    return {\r\n        type: 'existing',\r\n        id: contact.Id.oid,\r\n        lastName: contact.lastName,\r\n        firstName: contact.firstName,\r\n        primaryPhone: contact.primaryPhone,\r\n    }\r\n}\r\n\r\n/**\r\n * Default values for created manually calendar contact\r\n */\r\nexport const getDefaultNewContact = (): CalendarEventNewContact => {\r\n    return {\r\n        type: 'new',\r\n        name: '',\r\n        phone: {\r\n            type: PhoneTypes.BUSINESS,\r\n            phone: '',\r\n        },\r\n        create: false,\r\n    }\r\n}\r\n\r\n/**\r\n * Makes event details to save them\r\n */\r\nexport const getEventDetailsFromFields = (\r\n    selectedEvent: CalendarEventDetails,\r\n    fields: Partial<CalendarEventFields>,\r\n): CalendarEventDetails => {\r\n    const startTime = fields.startDate && fields.startTime\r\n        ? mergeDateTime(fields.startDate, fields.startTime)\r\n        : selectedEvent.startTime\r\n    const endTime = fields.endDate && fields.endTime\r\n        ? mergeDateTime(fields.endDate, fields.endTime)\r\n        : selectedEvent.endTime\r\n\r\n    return {\r\n        ...selectedEvent,\r\n        ...omit(fields, ['timezone', 'startTime', 'startDate', 'endTime', 'endDate', 'contacts']),\r\n        contacts: fields.contacts?.map(contact => getContactDetailsFromFields(contact)) || [],\r\n        timezone: fields.allDay ? getUserTimezone() : fields.timezone,\r\n        startTime,\r\n        endTime,\r\n    }\r\n}\r\n\r\n/**\r\n * Get first and last name from contact name\r\n */\r\nexport const parseContactName = (name: string): [string, string] => {\r\n    if (name.length === 0) {\r\n        return ['Anonymous', '']\r\n    }\r\n    const parts = name.replace(/\\s+/g, ' ').trim().split(' ')\r\n    return [parts[0], parts.slice(1).join(' ')]\r\n}\r\n\r\n/**\r\n * Prepare contact data to save\r\n */\r\nconst getContactDetailsFromFields = (contact: CalendarEventContact): CalendarContact => {\r\n    if (contact.type === 'new') {\r\n        const [firstName, lastName] = parseContactName(contact.name)\r\n        return {\r\n            create: contact.create,\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            calendar_phone: {\r\n                type: contact.phone.type,\r\n                phone: contact.phone.phone,\r\n            },\r\n        }\r\n    }\r\n\r\n    return {id: contact.id}\r\n}\r\n","import {useCallback, useMemo} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {getRangeFromView} from '@bpinc/cal-utils'\r\nimport {getStartOfDay} from '@bpinc/lib-helpers'\r\n\r\n\r\nexport const useScrollCalendarToDate = () => {\r\n    const {view, viewDate} = useCalendarState(['view', 'viewDate'])\r\n    const {changeViewDate} = useCalendarStateMethods()\r\n\r\n    const [viewStart, viewEnd] = useMemo(() =>\r\n        getRangeFromView(viewDate, view, {expand: true})\r\n    , [view, viewDate])\r\n\r\n    return useCallback((date: number) => {\r\n        if (viewStart > date || viewEnd < date) {\r\n            changeViewDate(getStartOfDay(date))\r\n        }\r\n    }, [viewStart, viewEnd, changeViewDate])\r\n}\r\n","import {useEffect} from 'react'\r\nimport type {UseFormReturn} from 'react-hook-form'\r\nimport {isEqual} from 'lodash-es'\r\n\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport type {CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {getDefaultValues, isFormDirty, isNewEvent, mergeEvents} from '@bpinc/cal-utils'\r\n\r\nimport {useEventDiscardModal} from './useEventDiscardModal'\r\n\r\n\r\nexport const useSubscribeToSelectedEvent = (\r\n    form: UseFormReturn<CalendarEventFields>,\r\n    selectedEvent: CalendarEventDetails,\r\n) => {\r\n    const {\r\n        eventEditing: editing,\r\n        nextSelectedEvent,\r\n    } = useCalendarState([\r\n        'eventEditing',\r\n        'nextSelectedEvent',\r\n    ])\r\n    const {\r\n        resetEventForm,\r\n        discardEventForm,\r\n    } = useCalendarStateMethods()\r\n\r\n    const openDiscardModal = useEventDiscardModal()\r\n\r\n    useEffect(() => {\r\n        if (!editing) {\r\n            if (!nextSelectedEvent) {\r\n                discardEventForm()\r\n                return\r\n            }\r\n        } else {\r\n            const defaultValues = getDefaultValues(selectedEvent)\r\n            const isNew = isNewEvent(selectedEvent)\r\n\r\n            // close form with changes\r\n            if (!nextSelectedEvent) {\r\n                // check unsaved changes\r\n                const hasChanges = isFormDirty(\r\n                    isNew,\r\n                    defaultValues,\r\n                    form.getValues(),\r\n                )\r\n\r\n                if (!hasChanges) {\r\n                    resetEventForm()\r\n                    return\r\n                }\r\n\r\n                openDiscardModal()\r\n                return\r\n            }\r\n\r\n            const eventsNotChanged = isEqual(selectedEvent, nextSelectedEvent)\r\n            if (eventsNotChanged) {\r\n                return\r\n            }\r\n\r\n            const newFormValues = mergeEvents(\r\n                form.getValues(),\r\n                defaultValues,\r\n                nextSelectedEvent,\r\n            )\r\n            form.reset(newFormValues)\r\n            discardEventForm()\r\n        }\r\n    }, [\r\n        form,\r\n        selectedEvent,\r\n        nextSelectedEvent,\r\n        editing,\r\n        openDiscardModal,\r\n        discardEventForm,\r\n        resetEventForm,\r\n    ])\r\n}\r\n","import {useCallback, useRef} from 'react'\r\n\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\n\r\n/**\r\n * Opens the Discard event dialog, restores selectedEvent\r\n */\r\nexport const useEventDiscardModal = () => {\r\n    const {\r\n        resetEventForm,\r\n        continueEventForm,\r\n    } = useCalendarStateMethods()\r\n\r\n    const isDialogOpenRef = useRef(false)\r\n\r\n    const handleDiscard = useCallback(() => {\r\n        isDialogOpenRef.current = false\r\n        resetEventForm()\r\n    }, [resetEventForm])\r\n\r\n    const handleCancel = useCallback(() => {\r\n        isDialogOpenRef.current = false\r\n        continueEventForm()\r\n    }, [continueEventForm])\r\n\r\n    const {openModal} = useModalsStateMethods()\r\n\r\n    const {t: {CALENDAR_EVENT_FORM: message}} = useLocalizationState()\r\n\r\n    return useCallback(() => {\r\n        if (!isDialogOpenRef.current) {\r\n            isDialogOpenRef.current = true\r\n\r\n            openModal({\r\n                actions: {\r\n                    ok: {\r\n                        action: handleDiscard,\r\n                        title: message.discard_modal_discard(),\r\n                    },\r\n                    cancel: {\r\n                        action: handleCancel,\r\n                        title: message.discard_modal_cancel(),\r\n                    },\r\n                },\r\n                afterClose() {\r\n                    if (isDialogOpenRef.current) {\r\n                        isDialogOpenRef.current = false\r\n                        handleCancel()\r\n                    }\r\n                },\r\n                body: message.discard_modal_text(),\r\n            })\r\n        }\r\n    }, [\r\n        message,\r\n        openModal,\r\n        handleDiscard,\r\n        handleCancel,\r\n    ])\r\n}\r\n","import React, {useCallback, useMemo, useState} from 'react'\r\nimport type {FieldValues, UseControllerProps} from 'react-hook-form'\r\nimport {useController} from 'react-hook-form'\r\n\r\nimport type {SearchResultItem} from '@bpinc/lib-user-search-components'\r\nimport {MultipleUserSearch} from '@bpinc/lib-user-search-components'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ninterface AssigneesComboBoxProps<FormValues extends FieldValues> extends UseControllerProps<FormValues> {\r\n    label?: string\r\n}\r\n\r\nconst COMBO_BOX_ID = 'calendar-event-asignee'\r\n\r\nexport function AssigneesComboBox<FormValues extends FieldValues>({\r\n    name,\r\n    control,\r\n    label,\r\n    rules,\r\n    defaultValue,\r\n    disabled,\r\n}: AssigneesComboBoxProps<FormValues>) {\r\n    const {t} = useLocalizationState()\r\n    const [searchValue, setSearchValue] = useState('')\r\n\r\n    const {\r\n        field: {onBlur, onChange, value},\r\n    } = useController({\r\n        name,\r\n        control,\r\n        rules,\r\n        defaultValue,\r\n        disabled,\r\n    })\r\n\r\n    const handleSelected = useCallback((\r\n        selected: SearchResultItem[] | ((prevSelected: SearchResultItem[]) => SearchResultItem[]),\r\n    ) => {\r\n        if (typeof selected === 'function') {\r\n            const newValue = selected(value)\r\n            onChange(newValue)\r\n            return newValue\r\n        }\r\n\r\n        onChange(selected)\r\n        return selected\r\n    }, [onChange, value])\r\n\r\n    const selectedItems = useMemo(() => value || [], [value])\r\n\r\n    return (\r\n        <>\r\n            {label && <label htmlFor={COMBO_BOX_ID}>{label}</label>}\r\n            <MultipleUserSearch\r\n                searchForUsers\r\n                withSessionUser\r\n                searchForTeams\r\n                uniqueSearchId={COMBO_BOX_ID}\r\n                searchValue={searchValue}\r\n                setSearchValue={setSearchValue}\r\n                selectedItems={selectedItems}\r\n                setSelectedItems={handleSelected}\r\n                noSearchValueLabel={t.CALENDAR.assignees_search_tooltip()}\r\n                inputPlaceholder={t.CHAT_CENTER.chat_add_members_search_input_placeholder()} //TODO: Waiting for proper placeholder from the designer\r\n                loadingLabel={t.GLOBAL.loading()}\r\n                onInputBlur={onBlur}\r\n                disabled={disabled}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useContactsStateMethods} from '@bpinc/ad-contacts-state-context'\r\nimport type {ContactShortType, ContactType} from '@bpinc/ad-contacts-state-types'\r\nimport {useOpenSearchContactModal} from '@bpinc/lib-modals-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport const useShowSearchContactModal = (onSelectContact: (contact: ContactType) => void) => {\r\n    const openSearchContactModal = useOpenSearchContactModal()\r\n    const {getContact} = useContactsStateMethods()\r\n    const {t: {CALENDAR_EVENT_FORM: message}} = useLocalizationState()\r\n    const handleSelectContact = useCallback(async ({id}: ContactShortType) => {\r\n        const contact = await getContact({id, force: false})\r\n        if (contact) {\r\n            onSelectContact(contact)\r\n        }\r\n    }, [getContact, onSelectContact])\r\n\r\n    return useCallback(() => {\r\n        openSearchContactModal({\r\n            dataKey: 'calendar-event-form-add-contact-modal',\r\n            title: message.add_contact_dialog_title(),\r\n            onSelect: handleSelectContact,\r\n            selectButtonTitle: message.add_contact_dialog_select_button_text(),\r\n        })\r\n    }, [handleSelectContact, message, openSearchContactModal])\r\n}\r\n","import React, {useCallback, useMemo} from 'react'\r\n\r\nimport type {ContactType} from '@bpinc/ad-contacts-state-types'\r\nimport type {CalendarEventContact} from '@bpinc/cal-state-types'\r\nimport {useBoolean, useOnKeyPressHandler} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {PopupButton} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useShowSearchContactModal} from '../../hooks/useShowSearchContactModal'\r\nimport {formatContactToContactsFields, getDefaultNewContact} from '../../utils'\r\n\r\n\r\ntype AddContactButtonProps = {\r\n    onAdd: (contacts: CalendarEventContact) => void\r\n}\r\n\r\nexport function AddContactButton({\r\n    onAdd,\r\n}: AddContactButtonProps) {\r\n    const {value: show, toggle} = useBoolean()\r\n    const {t: {CALENDAR_EVENT_FORM: message}} = useLocalizationState()\r\n\r\n    const handleSelectedContact = useCallback((contact: ContactType) => {\r\n        onAdd(formatContactToContactsFields(contact))\r\n    }, [onAdd])\r\n\r\n    const openSearchContactModal = useShowSearchContactModal(handleSelectedContact)\r\n\r\n    const handleSearchContact = useCallback(() => {\r\n        openSearchContactModal()\r\n        toggle()\r\n    }, [toggle, openSearchContactModal])\r\n\r\n    const handleAddContactManually = useCallback(() => {\r\n        onAdd(getDefaultNewContact())\r\n        toggle()\r\n    }, [toggle, onAdd])\r\n\r\n    const onKeyPressHandler = useOnKeyPressHandler(toggle)\r\n\r\n    const options = useMemo(() => {\r\n        return [\r\n            {\r\n                children: message.field_contact_dropdown_search_label(),\r\n                onClick: handleSearchContact,\r\n                id: 'calendar-event-form-add-contact-popup',\r\n            },\r\n            {\r\n                children: message.field_contact_dropdown_manually_label(),\r\n                onClick: handleAddContactManually,\r\n                id: 'calendar-event-form-add-contact-manually-button',\r\n            },\r\n        ]\r\n    }, [message, handleAddContactManually, handleSearchContact])\r\n\r\n    return (\r\n        <PopupButton\r\n            show={show}\r\n            toggleShow={toggle}\r\n            onKeyDown={onKeyPressHandler}\r\n            options={options}\r\n            size=\"small\"\r\n            optionClassName={tcn(\r\n                'relative flex w-full cursor-pointer border-none bg-transparent px-3 py-1.5 text-sm/[16px] text-black',\r\n                'focus-within:bg-menu-bg-hover hover:bg-menu-bg-hover focus:bg-menu-bg-hover',\r\n            )}\r\n            content={message.field_contact_label()}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport type {PhoneTypes} from '@bpinc/ad-contacts-state-types'\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {formatPhone} from '@bpinc/ad-formatting-helpers'\r\n\r\n\r\ntype ContactPhoneLabelProps = {\r\n    type: PhoneTypes\r\n    phone: string\r\n}\r\n\r\nexport function ContactPhoneLabel({phone, type}: ContactPhoneLabelProps) {\r\n    const {formatPhoneType} = useFormatting()\r\n\r\n    return (\r\n        <div>\r\n            <span className=\"text-primary-legacy\">{formatPhone(phone)}</span>\r\n            {' '}\r\n            <span>\r\n                {`(${formatPhoneType(type)})`}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useMemo, useState} from 'react'\r\nimport type {Control} from 'react-hook-form'\r\nimport {useController} from 'react-hook-form'\r\n\r\nimport {useContactsStateMethods} from '@bpinc/ad-contacts-state-context'\r\nimport {useGetContactPictureUrl} from '@bpinc/ad-contacts-state-hooks'\r\nimport type {ContactPhoneType} from '@bpinc/ad-contacts-state-types'\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport type {CalendarEventExistingContact, CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {AvatarLegacy} from '@bpinc/lib-avatar-ui'\r\nimport type {PropsAvatar} from '@bpinc/lib-contact-list-item-ui'\r\nimport {HiddenField, SelectFieldRaw} from '@bpinc/lib-forms-ui'\r\n\r\nimport {ContactPhoneLabel} from './ContactPhoneLabel'\r\n\r\n\r\ntype ExistingContactProps = {\r\n    index: number\r\n    contact: CalendarEventExistingContact\r\n    control: Control<CalendarEventFields>\r\n}\r\n\r\nexport function ExistingContact({\r\n    contact,\r\n    index,\r\n    control,\r\n}: ExistingContactProps) {\r\n    const {getContact} = useContactsStateMethods()\r\n    const getContactPictureUrl = useGetContactPictureUrl()\r\n    const {formatFullName} = useFormatting()\r\n    const [primaryPhoneId, setPrimaryPhoneId] = useState(buildPhoneId(contact.primaryPhone))\r\n    const [contactPhones, setContactPhones] = useState(() => contact.primaryPhone ? [contact.primaryPhone] : [])\r\n    const [isContactLoading, setContactLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getContact({id: contact.id, force: false}).then(loadedContact => {\r\n            if (loadedContact) {\r\n                setContactPhones(loadedContact.phones || [])\r\n                const primaryPhone = (loadedContact.phones || []).find(phone => {\r\n                    return contact.primaryPhone?.phone === phone.phone && contact.primaryPhone.type == phone.type\r\n                }, [])\r\n                setPrimaryPhoneId(buildPhoneId(primaryPhone))\r\n\r\n                setContactLoading(false)\r\n            }\r\n        })\r\n    }, [contact.id, contact.primaryPhone, getContact])\r\n\r\n    const options = useMemo(() => buildPhoneSelectOptions(contactPhones), [contactPhones])\r\n\r\n    const avatar = useMemo<PropsAvatar>(() => (\r\n        {firstName: contact.firstName || '', lastName: contact.lastName || '', url: getContactPictureUrl(contact.id), type: 'contact'}\r\n    ), [contact.firstName, contact.id, contact.lastName, getContactPictureUrl])\r\n\r\n    const {field: phoneIdField} = useController({\r\n        control,\r\n        name: `contacts.${index}.primaryPhone.id`,\r\n        defaultValue: buildPhoneId(contact.primaryPhone),\r\n    })\r\n    const {field: {onChange: onChangePhone}} = useController({\r\n        control,\r\n        name: `contacts.${index}.primaryPhone`,\r\n    })\r\n\r\n    const {value: phoneId, onChange: onChangePrimaryPhoneId} = phoneIdField\r\n\r\n    useEffect(() => {\r\n        const contactPhone = contactPhones.find(phone => buildPhoneId(phone) === phoneId)\r\n        onChangePhone(contactPhone)\r\n    }, [contactPhones, onChangePhone, phoneId])\r\n\r\n    useEffect(() => {\r\n        onChangePrimaryPhoneId(primaryPhoneId)\r\n    }, [onChangePrimaryPhoneId, primaryPhoneId])\r\n\r\n    return (\r\n        <>\r\n            <HiddenField\r\n                control={control}\r\n                name={`contacts.${index}.id`}\r\n                defaultValue={contact.id}\r\n            />\r\n            <HiddenField\r\n                control={control}\r\n                name={`contacts.${index}.firstName`}\r\n                defaultValue={contact.firstName}\r\n            />\r\n            <HiddenField\r\n                control={control}\r\n                name={`contacts.${index}.lastName`}\r\n                defaultValue={contact.lastName}\r\n            />\r\n            <div className=\"flex flex-row items-center\">\r\n                <AvatarLegacy size={32} {...avatar} />\r\n                <div className=\"ml-2 min-w-0 flex-initial\">\r\n                    <div className=\"truncate text-lg/[23px] font-bold\">\r\n                        {formatFullName(contact.firstName, contact.lastName)}\r\n                    </div>\r\n                    {contact.primaryPhone && (\r\n                        <SelectFieldRaw\r\n                            field={phoneIdField}\r\n                            inline={false}\r\n                            options={options}\r\n                            selection={false}\r\n                            loading={isContactLoading}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nfunction buildPhoneSelectOptions(phones: Pick<ContactPhoneType, 'type' | 'phone'>[]) {\r\n    return phones.map(phone => {\r\n        const id = buildPhoneId(phone)\r\n        return {\r\n            key: id,\r\n            text: <ContactPhoneLabel phone={phone.phone} type={phone.type} />,\r\n            value: id,\r\n        }\r\n    })\r\n}\r\n\r\nfunction buildPhoneId(phone?: Pick<ContactPhoneType, 'type' | 'phone'>) {\r\n    if (!phone) {\r\n        return undefined\r\n    }\r\n    return phone.type + phone.phone\r\n}\r\n\r\n","import React, {useMemo} from 'react'\r\nimport type {Control} from 'react-hook-form'\r\n\r\nimport {PhoneTypes} from '@bpinc/ad-contacts-state-types'\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport type {CalendarEventFields, CalendarEventNewContact} from '@bpinc/cal-state-types'\r\nimport {SmForm} from '@bpinc/lib-external-ui-elements'\r\nimport {usePhoneValidationRules} from '@bpinc/lib-forms-base'\r\nimport {CheckboxField, HiddenField, SelectField, TextField} from '@bpinc/lib-forms-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype NewContactProps = {\r\n    index: number\r\n    control: Control<CalendarEventFields>\r\n    contact: CalendarEventNewContact\r\n}\r\n\r\nexport function NewContact({\r\n    index,\r\n    control,\r\n    contact,\r\n}: NewContactProps) {\r\n    const {t: {CALENDAR_EVENT_FORM: message}} = useLocalizationState()\r\n    const {formatPhoneType} = useFormatting()\r\n\r\n    const optionsPhoneTypes = useMemo(() => {\r\n        return Object.keys(PhoneTypes).map(type => ({\r\n            value: type,\r\n            text: formatPhoneType(type),\r\n            'data-testid': 'option',\r\n        }))\r\n    }, [formatPhoneType])\r\n    const phoneValidationRules = usePhoneValidationRules()\r\n\r\n    return (\r\n        <>\r\n            <HiddenField\r\n                control={control}\r\n                name={`contacts.${index}`}\r\n                defaultValue={contact}\r\n            />\r\n            <SmForm.Field className=\"mb-2\">\r\n                <TextField\r\n                    control={control}\r\n                    name={`contacts.${index}.name`}\r\n                    defaultValue={contact.name}\r\n                    placeholder={message.add_new_contact_name_placeholder()}\r\n                    type=\"text\"\r\n                />\r\n            </SmForm.Field>\r\n            <SmForm.Group className=\"mb-2 items-center\">\r\n                <TextField\r\n                    width={9}\r\n                    control={control}\r\n                    name={`contacts.${index}.phone.phone`}\r\n                    defaultValue={contact.phone.phone}\r\n                    placeholder={message.add_new_contact_phone_placeholder()}\r\n                    type=\"tel\"\r\n                    rules={phoneValidationRules}\r\n                />\r\n                <SelectField\r\n                    width={7}\r\n                    control={control}\r\n                    name={`contacts.${index}.phone.type`}\r\n                    defaultValue={contact.phone.type}\r\n                    options={optionsPhoneTypes}\r\n                    selection={false}\r\n                />\r\n            </SmForm.Group>\r\n            <SmForm.Field>\r\n                <CheckboxField\r\n                    control={control}\r\n                    name={`contacts.${index}.create`}\r\n                    defaultValue={contact.create}\r\n                    label={message.add_new_contact_create_label()}\r\n                />\r\n            </SmForm.Field>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, {useCallback} from 'react'\r\nimport type {Control} from 'react-hook-form'\r\nimport {useFieldArray} from 'react-hook-form'\r\n\r\nimport type {CalendarEventContact, CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {isExistingContact} from '@bpinc/cal-utils'\r\nimport {Button, Panel} from '@bpinc/lib-ui-elements'\r\n\r\nimport {AddContactButton} from './AddContactButton'\r\nimport {ExistingContact} from './ExistingContact'\r\nimport {NewContact} from './NewContact'\r\n\r\n\r\ntype EventContactsProps = {\r\n    control: Control<CalendarEventFields>\r\n}\r\n\r\nexport function EventContacts({\r\n    control,\r\n}: EventContactsProps) {\r\n    const {fields: contacts, remove, append} = useFieldArray({\r\n        control,\r\n        name: 'contacts',\r\n        keyName: 'dataId',\r\n    })\r\n    const onContactAdd = useCallback((contact: CalendarEventContact) => {\r\n        const addedContacts = contacts.map(c => isExistingContact(c) ? c : null).filter(Boolean)\r\n        if (isExistingContact(contact) && addedContacts.some(c => contact.id === c?.id)) {\r\n            return\r\n        }\r\n        append(contact)\r\n    }, [append, contacts])\r\n\r\n    return (\r\n        <>\r\n            {!!contacts.length && (\r\n                <div className=\"my-4\">\r\n                    {contacts.map((contact, index) => (\r\n                        <Contact key={contact.dataId} index={index} contact={contact} remove={remove} control={control} />\r\n                    ))}\r\n                </div>\r\n            )}\r\n            <AddContactButton onAdd={onContactAdd} />\r\n        </>\r\n    )\r\n}\r\n\r\ntype SavedContactProps = {\r\n    contact: CalendarEventContact\r\n    remove: (index: number) => void\r\n    index: number\r\n    control: Control<CalendarEventFields>\r\n}\r\n\r\nfunction Contact({\r\n    contact,\r\n    remove,\r\n    index,\r\n    control,\r\n}: SavedContactProps) {\r\n    const handleRemove = useCallback(() => remove(index), [index, remove])\r\n\r\n    return (\r\n        <Panel\r\n            className=\"mb-2 last:mb-0\"\r\n            actions={\r\n                <Button\r\n                    type=\"button\"\r\n                    className=\"text-main opacity-50 hover:opacity-100 focus:opacity-100 active:opacity-100\"\r\n                    transparent\r\n                    semanticIcon=\"delete\"\r\n                    onClick={handleRemove}\r\n                />}\r\n        >\r\n            {contact.type == 'existing'\r\n                ? <ExistingContact index={index} contact={contact} control={control} />\r\n                : <NewContact index={index} contact={contact} control={control} />\r\n            }\r\n        </Panel>\r\n    )\r\n}\r\n","/* eslint-disable react-perf/jsx-no-new-function-as-prop */\r\nimport type {FC} from 'react'\r\nimport React from 'react'\r\nimport type {UseFormReturn} from 'react-hook-form'\r\n\r\nimport type {CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {SmIcon} from '@bpinc/lib-external-ui-elements'\r\nimport {TextField} from '@bpinc/lib-forms-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ninterface Props {\r\n    form: UseFormReturn<CalendarEventFields>\r\n    staticValue?: number\r\n}\r\n\r\n/**\r\n * Displays screenpopSize property of an Event\r\n * see info about screenpopSize https://help.brightpattern.com/5.8:Scenario-builder-reference-guide/ScenarioBlocks/WebScreenPop\r\n */\r\nexport const EventDetails: FC<Props> = ({form, staticValue}) => {\r\n    const {control, getValues, setValue} = form\r\n\r\n    const isEditableFormField = staticValue === undefined\r\n    const screenpopSize = isEditableFormField\r\n        ? getValues('screenpopSize') || 0\r\n        : staticValue\r\n\r\n    /** */\r\n    const handleDetailsRemove = () => {\r\n        setValue('screenpopSize', 0, {shouldDirty: true})\r\n    }\r\n\r\n    const {t: {CALENDAR_EVENT_FORM: message}} = useLocalizationState()\r\n\r\n    return (\r\n        <>\r\n            <label>{message.field_details_label()}</label>\r\n            <p>\r\n                {screenpopSize > 0\r\n                    ? (\r\n                        <>\r\n                            <span>\r\n                                {message.field_details_text(screenpopSize) }\r\n                            </span>\r\n                            {isEditableFormField && (\r\n                                <SmIcon\r\n                                    className=\"inline-block pl-2 align-text-top\"\r\n                                    color=\"grey\"\r\n                                    fitted\r\n                                    link\r\n                                    name=\"times\"\r\n                                    onClick={handleDetailsRemove}\r\n                                />\r\n                            )}\r\n                        </>\r\n                    )\r\n                    : message.field_details_none()}\r\n            </p>\r\n            {isEditableFormField && (\r\n                <TextField\r\n                    className=\"hidden\"\r\n                    control={control}\r\n                    name=\"screenpopSize\"\r\n                    defaultValue={screenpopSize}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\nimport type {Control} from 'react-hook-form'\r\n\r\nimport {useTimezonesState} from '@bpinc/ad-timezones-state-context'\r\nimport type {CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {SelectField} from '@bpinc/lib-forms-ui'\r\n\r\n\r\ntype TimezoneSelectProps = {\r\n    control: Control<CalendarEventFields>\r\n}\r\n\r\nexport const TimezoneSelect: React.FC<TimezoneSelectProps> = ({control}) => {\r\n    const {allTimezones} = useTimezonesState()\r\n\r\n    const timezoneOptions = useMemo(\r\n        () => allTimezones.map(({id, fullName}) => ({\r\n            key: id,\r\n            text: fullName,\r\n            value: id,\r\n            className: 'max-w-[270px]',\r\n            title: fullName,\r\n        })),\r\n        [allTimezones],\r\n    )\r\n\r\n    return (\r\n        <SelectField\r\n            tabIndex={0}\r\n            control={control}\r\n            name=\"timezone\"\r\n            options={timezoneOptions}\r\n            search\r\n            selection={false}\r\n        />\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useEffect, useRef} from 'react'\r\nimport type {UseFormReturn} from 'react-hook-form'\r\n\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {type CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {getDefaultValues} from '@bpinc/cal-utils'\r\nimport {SmForm} from '@bpinc/lib-external-ui-elements'\r\nimport {useOnlyDigitsValidationRule} from '@bpinc/lib-forms-base'\r\nimport {\r\n    CheckboxField,\r\n    DatePickerField,\r\n    SelectField,\r\n    TextAreaField,\r\n    TextField,\r\n} from '@bpinc/lib-forms-ui'\r\nimport {MS_IN_HOUR, useAsRef} from '@bpinc/lib-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useScrollCalendarToDate} from '../hooks'\r\nimport {mergeDateTime} from '../utils'\r\nimport {AssigneesComboBox} from './AssigneesComboBox'\r\nimport {EventContacts} from './EventContacts'\r\nimport {EventDetails} from './EventDetails'\r\nimport {TimezoneSelect} from './TimezoneSelect'\r\n\r\n\r\nconst units: CalendarEventFields['remindInUnit'][] = ['MINUTES', 'HOURS', 'DAYS']\r\n\r\nconst remindUnitsOptions = units.map(unit => ({\r\n    key: unit,\r\n    text: unit,\r\n    value: unit,\r\n}))\r\n\r\ninterface EventEditProps {\r\n    form: UseFormReturn<CalendarEventFields>\r\n    event: CalendarEventDetails\r\n}\r\n\r\nexport const EventEdit: FC<EventEditProps> = ({\r\n    form,\r\n    event,\r\n}) => {\r\n    const {t: {CALENDAR_EVENT_FORM: message}} = useLocalizationState()\r\n    const scrollCalendarToDate = useScrollCalendarToDate()\r\n\r\n    const {updateSelectedEvent} = useCalendarStateMethods()\r\n\r\n    const {control, watch, setValue} = form\r\n    const [\r\n        allDay,\r\n        startDate,\r\n        startTime,\r\n        endDate,\r\n        endTime,\r\n    ] = watch([\r\n        'allDay',\r\n        'startDate',\r\n        'startTime',\r\n        'endDate',\r\n        'endTime',\r\n    ])\r\n\r\n    // Remember start and end time to compare them with changed ones.\r\n    // This is needed to handle situation when user selects a start time\r\n    // after end time, and vise versa\r\n    // const momentRef = usePrevious(favoritesQueue)\r\n    const momentRef = useRef({endMoment: 0, startMoment: 0})\r\n\r\n    const defaultValues = getDefaultValues(event)\r\n    const calendarEventRef = useAsRef(event)\r\n\r\n    const onlyDigitsValidationRule = useOnlyDigitsValidationRule()\r\n\r\n    /**\r\n     * Updates selectedEvent after a user changed date or time.\r\n     * Also corrects mistakes when start moment is after end moment\r\n    */\r\n    useEffect(() => {\r\n        if (!startDate || !endDate || !startTime || !endTime || !calendarEventRef.current) {\r\n            return\r\n        }\r\n\r\n        let nextStartMoment = mergeDateTime(startDate, startTime)\r\n        let nextEndMoment = mergeDateTime(endDate, endTime)\r\n\r\n        if (nextEndMoment <= nextStartMoment) {\r\n            // Detect which moment was changed by user\r\n            if (nextEndMoment !== momentRef.current.endMoment) {\r\n                nextStartMoment = Math.floor(nextEndMoment / MS_IN_HOUR) * MS_IN_HOUR\r\n                if (nextEndMoment === nextStartMoment) {\r\n                    nextStartMoment -= MS_IN_HOUR\r\n                }\r\n                const isoString = new Date(nextStartMoment).toISOString()\r\n                setValue('startTime', isoString)\r\n                setValue('startDate', isoString)\r\n            } else {\r\n                nextEndMoment = Math.ceil(nextStartMoment / MS_IN_HOUR) * MS_IN_HOUR\r\n                if (nextEndMoment === nextStartMoment) {\r\n                    nextEndMoment += MS_IN_HOUR\r\n                }\r\n                const isoString = new Date(nextEndMoment).toISOString()\r\n                setValue('endTime', isoString)\r\n                setValue('endDate', isoString)\r\n            }\r\n        }\r\n\r\n        if (\r\n            momentRef.current.endMoment !== nextEndMoment ||\r\n                momentRef.current.startMoment !== nextStartMoment\r\n        ) {\r\n            updateSelectedEvent({startTime: nextStartMoment, endTime: nextEndMoment})\r\n\r\n            momentRef.current.endMoment = nextEndMoment\r\n            momentRef.current.startMoment = nextStartMoment\r\n\r\n            /**  If new event start time is not in current view, scroll calendar to it */\r\n            scrollCalendarToDate(nextStartMoment)\r\n        }\r\n    }, [\r\n        setValue,\r\n        updateSelectedEvent,\r\n        startDate,\r\n        startTime,\r\n        endDate,\r\n        endTime,\r\n        calendarEventRef,\r\n        scrollCalendarToDate,\r\n    ])\r\n\r\n    /**\r\n     * Updates selectedEvent after a user changed \"all day\" checkbox\r\n     */\r\n    useEffect(() => {\r\n        if (!calendarEventRef.current) {\r\n            return\r\n        }\r\n        if (allDay !== calendarEventRef.current.allDay) {\r\n            updateSelectedEvent({allDay})\r\n        }\r\n    }, [allDay, calendarEventRef, updateSelectedEvent])\r\n\r\n    return (\r\n        <div className=\"overflow-y-auto overflow-x-hidden\">\r\n            <TextField\r\n                autoFocus\r\n                required\r\n                tabIndex={0}\r\n                name=\"title\"\r\n                control={control}\r\n                placeholder={message.field_title_placeholder()}\r\n            />\r\n            <CheckboxField\r\n                control={control}\r\n                name=\"completed\"\r\n                label={message.field_completed_label()}\r\n            />\r\n            <SmForm.Group widths=\"equal\">\r\n                <SmForm.Field width=\"8\">\r\n                    <DatePickerField\r\n                        readOnly\r\n                        control={control}\r\n                        clearable={false}\r\n                        icon=\"caret down\"\r\n                        name=\"startDate\"\r\n                        label={message.field_date_label()}\r\n                    />\r\n                    <div className=\"mt-2\">\r\n                        <CheckboxField\r\n                            control={control}\r\n                            name=\"allDay\"\r\n                            label={message.field_allday_label()}\r\n                        />\r\n                    </div>\r\n                </SmForm.Field>\r\n                <DatePickerField\r\n                    readOnly\r\n                    clearable={false}\r\n                    width=\"8\"\r\n                    control={control}\r\n                    icon=\"caret down\"\r\n                    name=\"endDate\"\r\n                    label=\"&nbsp;\"\r\n                />\r\n            </SmForm.Group>\r\n            <SmForm.Group widths=\"equal\">\r\n                <DatePickerField\r\n                    readOnly\r\n                    clearable={false}\r\n                    disabled={allDay}\r\n                    width=\"8\"\r\n                    control={control}\r\n                    displayFormat=\"HH:mm\"\r\n                    icon=\"caret down\"\r\n                    name=\"startTime\"\r\n                    label={message.field_time_label()}\r\n                />\r\n                <DatePickerField\r\n                    readOnly\r\n                    clearable={false}\r\n                    disabled={allDay}\r\n                    width=\"8\"\r\n                    control={control}\r\n                    displayFormat=\"HH:mm\"\r\n                    icon=\"caret down\"\r\n                    name=\"endTime\"\r\n                    label=\"&nbsp;\"\r\n                />\r\n            </SmForm.Group>\r\n            {!allDay && <TimezoneSelect control={control} />}\r\n            <SmForm.Group>\r\n                <TextField\r\n                    width=\"4\"\r\n                    tabIndex={0}\r\n                    control={control}\r\n                    defaultValue={0}\r\n                    label={message.field_reminder_label()}\r\n                    rules={onlyDigitsValidationRule}\r\n                    name=\"remindIn\"\r\n                    placeholder=\"0\"\r\n                />\r\n                <SelectField\r\n                    width=\"12\"\r\n                    tabIndex={0}\r\n                    control={control}\r\n                    defaultValue=\"MINUTES\"\r\n                    label=\"&nbsp;\"\r\n                    name=\"remindInUnit\"\r\n                    options={remindUnitsOptions}\r\n                />\r\n            </SmForm.Group>\r\n            <SmForm.Field>\r\n                <AssigneesComboBox\r\n                    control={control}\r\n                    defaultValue={defaultValues.assignees}\r\n                    label={message.field_assignee_label()}\r\n                    name=\"assignees\"\r\n                />\r\n            </SmForm.Field>\r\n            <TextAreaField\r\n                tabIndex={0}\r\n                control={control}\r\n                label={message.field_summary_label()}\r\n                maxRows={3}\r\n                minRows={3}\r\n                name=\"notes\"\r\n            />\r\n            <SmForm.Field>\r\n                <EventDetails form={form} />\r\n            </SmForm.Field>\r\n            <SmForm.Field>\r\n                <EventContacts control={control} />\r\n            </SmForm.Field>\r\n        </div>\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {RequestResult} from '@bpinc/cal-state-types'\r\nimport {SmMessage} from '@bpinc/lib-external-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype EventErrorsProps = {\r\n    saveResult?: RequestResult\r\n    deleteResult?: RequestResult\r\n    clearSaveResult: () => void\r\n    clearDeleteResult: () => void\r\n}\r\n\r\nexport const EventErrors: FC<EventErrorsProps> = ({saveResult, deleteResult, clearSaveResult, clearDeleteResult}) => {\r\n    const {t: {CALENDAR_EVENT_FORM: message}} = useLocalizationState()\r\n\r\n    return (\r\n        <>\r\n            {saveResult === 'error' && (\r\n                <div className=\"mb-4\">\r\n                    <SmMessage\r\n                        error\r\n                        onDismiss={clearSaveResult}\r\n                        header={message.error_save_event_header()}\r\n                        content={message.error_save_event_text()}\r\n                    />\r\n                </div>\r\n            )}\r\n            {deleteResult === 'error' && (\r\n                <div className=\"mb-4\">\r\n                    <SmMessage\r\n                        error\r\n                        onDismiss={clearDeleteResult}\r\n                        header={message.error_delete_event_header()}\r\n                        content={message.error_delete_event_text()}\r\n                    />\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {useGetContactPictureUrl} from '@bpinc/ad-contacts-state-hooks'\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport type {CalendarEventContact} from '@bpinc/cal-state-types'\r\nimport type {PropsAvatar} from '@bpinc/lib-contact-list-item-ui'\r\nimport {ContactListItem} from '@bpinc/lib-contact-list-item-ui'\r\nimport {Panel} from '@bpinc/lib-ui-elements'\r\n\r\nimport {ContactPhoneLabel} from '../EventContacts/ContactPhoneLabel'\r\n\r\n\r\ntype EventContactsDetailsProps = {\r\n    contact: CalendarEventContact\r\n}\r\n\r\nexport function EventContactDetails({\r\n    contact,\r\n}: EventContactsDetailsProps) {\r\n    const getContactPictureUrl = useGetContactPictureUrl()\r\n    const {formatFullName} = useFormatting()\r\n\r\n    const {id, firstName, lastName, phoneType, phone} = useMemo(() => {\r\n        if (contact.type == 'existing') {\r\n            return ({\r\n                id: contact.id,\r\n                firstName: contact.firstName,\r\n                lastName: contact.lastName,\r\n                phone: contact.primaryPhone?.phone || '',\r\n                phoneType: contact.primaryPhone?.type,\r\n            })\r\n        }\r\n        return {\r\n            id: undefined,\r\n            firstName: contact.name,\r\n            lastName: '',\r\n            phone: contact.phone.phone,\r\n            phoneType: contact.phone.type,\r\n        }\r\n    }, [contact])\r\n\r\n\r\n    const avatar = useMemo<PropsAvatar>(() => (\r\n        {firstName, lastName, url: getContactPictureUrl(id), type: 'contact'}\r\n    ), [firstName, id, lastName, getContactPictureUrl])\r\n\r\n    const body = useMemo(() => phoneType ? <ContactPhoneLabel phone={phone} type={phoneType} /> : null, [phone, phoneType])\r\n\r\n    return (\r\n        <Panel className=\"mb-2 last:mb-0\">\r\n            <ContactListItem\r\n                className=\"[&>*]:min-h-[auto]\"\r\n                contentClassName=\"p-0\"\r\n                contactId={id}\r\n                title={formatFullName(firstName, lastName)}\r\n                body={body}\r\n                avatarProps={avatar}\r\n            />\r\n        </Panel>\r\n    )\r\n}\r\n\r\n","import type {FC} from 'react'\r\nimport React from 'react'\r\nimport type {UseFormReturn} from 'react-hook-form'\r\n\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport type {CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {getDefaultValues} from '@bpinc/cal-utils'\r\nimport {SmForm, SmHeader} from '@bpinc/lib-external-ui-elements'\r\nimport {CheckboxField} from '@bpinc/lib-forms-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {formatEventTimes} from '../../utils'\r\nimport {AssigneesComboBox} from '../AssigneesComboBox'\r\nimport {EventDetails} from '../EventDetails'\r\nimport {EventContactDetails} from './EventContactDetails'\r\n\r\n\r\ntype EventPreviewProps = {\r\n    form: UseFormReturn<CalendarEventFields>\r\n    event: CalendarEventDetails\r\n    showTitle: boolean\r\n}\r\n\r\nexport const EventPreview: FC<EventPreviewProps> = ({\r\n    form,\r\n    event,\r\n    showTitle,\r\n}) => {\r\n    const {t: {CALENDAR_EVENT_FORM: message}, language} = useLocalizationState()\r\n\r\n    const {control} = form\r\n\r\n    const defaultValues = getDefaultValues(event)\r\n\r\n    const {\r\n        allDay,\r\n        endTime,\r\n        notes,\r\n        remindIn,\r\n        remindInUnit,\r\n        screenpopSize,\r\n        startTime,\r\n        title,\r\n        contacts,\r\n    } = defaultValues\r\n\r\n    const {from, to} = formatEventTimes({\r\n        allDay,\r\n        allDayMessage: message.text_all_day_event(),\r\n        startTime,\r\n        endTime,\r\n        locale: language,\r\n    })\r\n\r\n    return (\r\n        <div className=\"overflow-y-auto overflow-x-hidden\">\r\n            {showTitle && <SmHeader as=\"h3\">{title}</SmHeader>}\r\n\r\n            <CheckboxField\r\n                className=\"mb-4\"\r\n                control={control}\r\n                name=\"completed\"\r\n                label={message.field_completed_label()}\r\n            />\r\n\r\n            <p className=\"mb-3.5\">\r\n                <span className=\"mr-3 inline-block\">{from.date}</span>\r\n                <span className=\"mr-3 inline-block\">{from.time}</span>\r\n                {to && (\r\n                    <>\r\n                        <span className=\"mr-3 inline-block\">{' — ' + to.date}</span>\r\n                        <span className=\"mr-3 inline-block\">{to.time}</span>\r\n                    </>\r\n                )}\r\n            </p>\r\n\r\n            {remindIn\r\n                ? (\r\n                    <p>\r\n                        {message.text_reminde_before(\r\n                            remindInUnit === 'MINUTES'\r\n                                ? message.format_minutes(remindIn)\r\n                                : remindInUnit === 'HOURS'\r\n                                    ? message.format_hours(remindIn)\r\n                                    : message.format_days(remindIn),\r\n                        )}\r\n                    </p>\r\n                )\r\n                : null\r\n            }\r\n\r\n            {/* TBD: Replace the placeholder with a real component */}\r\n            <SmForm.Field>\r\n                <AssigneesComboBox\r\n                    control={control}\r\n                    label={message.field_assignee_label()}\r\n                    name=\"assignees\"\r\n                    disabled\r\n                />\r\n            </SmForm.Field>\r\n            <SmForm.Field>\r\n                <label>{message.field_summary_label()}</label>\r\n                <p>{notes || message.field_details_none()}</p>\r\n            </SmForm.Field>\r\n\r\n            <SmForm.Field>\r\n                <EventDetails form={form} staticValue={screenpopSize} />\r\n            </SmForm.Field>\r\n            {contacts.map((contact, index) => (\r\n                <EventContactDetails\r\n                    key={index}\r\n                    contact={contact}\r\n                />\r\n            ))}\r\n\r\n            <div className=\"h-14\">\r\n                <div />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback, useEffect, useMemo, useRef} from 'react'\r\nimport {useDrag} from 'react-dnd'\r\n\r\nimport {useSelectEvent} from '@bpinc/cal-hooks'\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport type {NotEmptyEventMapItem} from '@bpinc/cal-state-types'\r\nimport {DragItemTypes, EventCustomId, EventType} from '@bpinc/cal-state-types'\r\nimport {getEventStyles, getHeaderEventStyles} from '@bpinc/cal-utils'\r\nimport {stopPropagation, useOnKeyPressHandler, useValueUpdated} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport type {WeekDropResult} from '../ViewColumns'\r\n\r\n\r\nexport interface DayEventBlockProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'title'> {\r\n    item: NotEmptyEventMapItem\r\n    title: React.ReactNode | string\r\n    className?: string\r\n    viewStart: number\r\n    viewEnd: number\r\n    isSelectionInProgress: boolean\r\n    cellSize: [number, number]\r\n    selectedEvent?: CalendarEventDetails\r\n    line?: number\r\n    lines?: number\r\n    header?: boolean\r\n}\r\n\r\nexport const DayEventBlock: React.FC<DayEventBlockProps> = ({\r\n    item,\r\n    title,\r\n    className,\r\n    viewStart,\r\n    viewEnd,\r\n    isSelectionInProgress,\r\n    selectedEvent,\r\n    cellSize,\r\n    line = 0,\r\n    lines = 1,\r\n    header,\r\n}) => {\r\n    // Ref to new event title to scroll to if it's not in view\r\n    // Not for container because it can be too high, and we need to see title\r\n    const titleRef = useRef<HTMLDivElement>(null)\r\n    const selectEvent = useSelectEvent()\r\n\r\n    const startTimeChanged = useValueUpdated(item.data.start)\r\n    useEffect(() => {\r\n        if (item.type === EventType.NEW_EVENT && startTimeChanged) {\r\n            titleRef.current?.scrollIntoView({block: 'center', behavior: 'smooth'})\r\n        }\r\n    }, [item, startTimeChanged])\r\n\r\n    const [{isDragging}, dragEventRef, previewDragRef] =\r\n        useDrag<NotEmptyEventMapItem, WeekDropResult, { isDragging: boolean }>(() => ({\r\n            type: header ? DragItemTypes.HEADER_EVENT : DragItemTypes.EVENT,\r\n            item,\r\n            collect: monitor => ({\r\n                isDragging: monitor.isDragging(),\r\n            }),\r\n            end: (_, monitor) => {\r\n                const dropResult = monitor.getDropResult()\r\n                if (dropResult) {\r\n                    dropResult.onEnd()\r\n                }\r\n            },\r\n        }), [item, header])\r\n\r\n    const [{isResizeDragging}, resizeEventRef, previewResizeRef] =\r\n        useDrag<NotEmptyEventMapItem, WeekDropResult, { isResizeDragging: boolean }>(() => ({\r\n            type: DragItemTypes.EVENT_RESIZE,\r\n            item,\r\n            collect: monitor => ({\r\n                isResizeDragging: monitor.isDragging(),\r\n            }),\r\n            end: (_, monitor) => {\r\n                const dropResult = monitor.getDropResult()\r\n                if (dropResult) {\r\n                    dropResult.onEnd()\r\n                }\r\n            },\r\n        }), [item])\r\n\r\n    const handleEventClick = useCallback(\r\n        (e: React.MouseEvent) => {\r\n            const id = e.currentTarget.getAttribute('data-event-id')\r\n            id && selectEvent({id})\r\n        },\r\n        [selectEvent],\r\n    )\r\n\r\n    const handleEventPressKey = useCallback(\r\n        (e: React.KeyboardEvent) => {\r\n            if (!(e.target instanceof HTMLElement)) {\r\n                return\r\n            }\r\n\r\n            const id = e.target.getAttribute('data-event-id')\r\n            id && selectEvent({id})\r\n        },\r\n        [selectEvent],\r\n    )\r\n\r\n    const onKeyPressHandler = useOnKeyPressHandler(handleEventPressKey)\r\n\r\n    const style = useMemo(() => {\r\n        const properties = {\r\n            viewStart,\r\n            viewEnd,\r\n            cellSize,\r\n            start: item.data.start,\r\n            end: item.data.end,\r\n            line,\r\n            lines,\r\n        }\r\n        return header ? getHeaderEventStyles(properties) : getEventStyles(properties)\r\n    }, [item, cellSize, line, lines, header, viewEnd, viewStart])\r\n\r\n    const noEnd = item.data.end > viewEnd\r\n    const isSelected = item.data.id === selectedEvent?.id\r\n    const isSelectionEvent = item.data.id === EventCustomId.SELECTION\r\n    const isNewEvent = item.data.id === EventCustomId.NEW_EVENT\r\n\r\n    return (\r\n        <div\r\n            tabIndex={0}\r\n            data-event-id={item.data.id}\r\n            className={tcn(\r\n                className,\r\n                'absolute z-0 box-border h-4.5 shrink-0 cursor-pointer overflow-hidden',\r\n                'whitespace-nowrap border-l-4 border-solid text-cal-event-text',\r\n                {\r\n                    'pointer-events-none': isSelectionInProgress || isDragging || isResizeDragging || (selectedEvent && !isSelected && !isNewEvent),\r\n                    'opacity-75': (isSelectionEvent && isSelectionInProgress) || isDragging || isResizeDragging,\r\n                    'shadow': isSelected || isNewEvent,\r\n                },\r\n            )}\r\n            style={style}\r\n            onKeyDown={isNewEvent ? undefined : onKeyPressHandler}\r\n            onClick={isNewEvent ? undefined : handleEventClick}\r\n            // click within event item should not pop to the cell\r\n            onMouseDown={stopPropagation}\r\n        >\r\n            <div\r\n                className=\"relative z-[2] h-full w-full truncate py-0 pl-1 pr-0.5 text-sm/[1.7]\"\r\n                ref={dragEventRef}\r\n            >\r\n                <span ref={titleRef}>{title}</span>\r\n            </div>\r\n            {!header && (\r\n                <>\r\n                    <div\r\n                        ref={resizeEventRef}\r\n                        data-after=\"&nbsp;\"\r\n                        className={tcn('absolute inset-x-0 bottom-0 z-[2] cursor-s-resize text-center after:content-[attr(data-after)]', {\r\n                            'hidden': noEnd,\r\n                        })}\r\n                    />\r\n                    <div ref={previewResizeRef} className=\"invisible absolute p-2.5 opacity-0\" />\r\n                </>\r\n            )}\r\n            <div ref={previewDragRef} className=\"invisible absolute p-2.5 opacity-0\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useWeekEventTitle} from '../../../../hooks/useWeekEventTitle'\r\nimport type {DayEventProps} from './DayEvent'\r\nimport {DayEventBlock} from './DayEventBlock'\r\n\r\n\r\nexport const DayMeeting: React.FC<DayEventProps> = props => {\r\n    const title = useWeekEventTitle(props.item, props.header)\r\n\r\n    return (\r\n        <DayEventBlock\r\n            title={title}\r\n            className=\"border-cal-event-border bg-cal-event-bg\"\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {formatEventTimes} from '@bpinc/cal-event-ui'\r\nimport {type NotEmptyEventMapItem} from '@bpinc/cal-state-types'\r\nimport {removeSpaces} from '@bpinc/lib-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport const useWeekEventTitle = (\r\n    item: NotEmptyEventMapItem,\r\n    isHeader?: boolean,\r\n) => {\r\n    const language = useLocalizationState('language')\r\n\r\n    return useMemo(() => {\r\n        const titleStr = item.data.title\r\n        const {from} = formatEventTimes({\r\n            allDay: item.data.allDay,\r\n            startTime: item.data.start,\r\n            endTime: item.data.end,\r\n            locale: language,\r\n        })\r\n\r\n        return (\r\n            <>\r\n                {titleStr || ''}\r\n                {!isHeader && (titleStr && ', ') + removeSpaces(from.time)}\r\n            </>\r\n        )\r\n    }, [item, isHeader, language])\r\n}\r\n","import React from 'react'\r\n\r\nimport type {DayEventProps} from './DayEvent'\r\nimport {DayEventBlock} from './DayEventBlock'\r\n\r\n\r\nexport const DayRequest: React.FC<DayEventProps> = props => {\r\n    return (\r\n        <DayEventBlock\r\n            title={props.item.data.title}\r\n            className=\"border-l-cal-request-border bg-cal-request-bg\"\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {formatEventTimes} from '@bpinc/cal-event-ui'\r\nimport {type NotEmptyEventMapItem} from '@bpinc/cal-state-types'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport const useShiftTitle = (item: NotEmptyEventMapItem) => {\r\n    const language = useLocalizationState('language')\r\n\r\n    return useMemo(() => {\r\n        const shiftRange = formatEventTimes({\r\n            startTime: item.data.start,\r\n            endTime: item.data.end,\r\n            locale: language,\r\n        }).from.time.replace(/\\s/g, '')\r\n\r\n        return `${shiftRange} ${item.data.title}`\r\n    }, [item, language])\r\n}\r\n","import React from 'react'\r\n\r\nimport {useShiftTitle} from '../../../../hooks/useShiftTitle'\r\nimport type {DayEventProps} from './DayEvent'\r\nimport {DayEventBlock} from './DayEventBlock'\r\n\r\n\r\nexport const DayShift: React.FC<DayEventProps> = props => {\r\n    const title = useShiftTitle(props.item)\r\n\r\n    return (\r\n        <DayEventBlock\r\n            title={title}\r\n            className=\"border-l-cal-shift-border bg-cal-shift-bg\"\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {EventType} from '@bpinc/cal-request-urls'\r\n\r\nimport type {DayEventBlockProps} from './DayEventBlock'\r\nimport {DayMeeting} from './DayMeeting'\r\nimport {DayRequest} from './DayRequest'\r\nimport {DayShift} from './DayShift'\r\n\r\n\r\nexport type DayEventProps = Omit<\r\n    DayEventBlockProps,\r\n    'title' | 'className'\r\n>\r\n\r\nexport const DayEvent: React.FC<DayEventProps> = props => {\r\n    switch (props.item.data.type) {\r\n        case EventType.REQUEST:\r\n            return <DayRequest {...props} />\r\n        case EventType.SHIFT:\r\n            return <DayShift {...props} />\r\n        default:\r\n            return <DayMeeting {...props} />\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport type {NotEmptyEventMapItem} from '@bpinc/cal-state-types'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport {DayEvent} from '../DayEvent'\r\n\r\n\r\ntype HeaderEventsProps = {\r\n    cellSize: [number, number]\r\n    eventsByLine: NotEmptyEventMapItem[][]\r\n    isSelectionInProgress: boolean\r\n    selectedEvent?: CalendarEventDetails\r\n    viewStart: number\r\n    viewEnd: number\r\n    isCommunicator?: boolean\r\n}\r\n\r\nexport const HeaderEvents: React.FC<HeaderEventsProps> = props => {\r\n    const {\r\n        cellSize,\r\n        eventsByLine,\r\n        isSelectionInProgress,\r\n        selectedEvent,\r\n        viewStart,\r\n        viewEnd,\r\n        isCommunicator,\r\n    } = props\r\n\r\n    return (\r\n        <div\r\n            className={tcn(\r\n                'absolute inset-x-0 bottom-0 top-auto flex h-0 w-auto select-none flex-row flex-nowrap pl-[53px]',\r\n                {'pl-[58px]': isCommunicator},\r\n            )}\r\n        >\r\n            {eventsByLine.map((line, lineIndex) => (\r\n                <div key={lineIndex} className=\"absolute\">\r\n                    {line.map(item => (\r\n                        <DayEvent\r\n                            key={item.data.id}\r\n                            header\r\n                            item={item}\r\n                            viewStart={viewStart}\r\n                            viewEnd={viewEnd}\r\n                            line={lineIndex}\r\n                            lines={eventsByLine.length}\r\n                            isSelectionInProgress={isSelectionInProgress}\r\n                            selectedEvent={selectedEvent}\r\n                            cellSize={cellSize}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import type {ChangeEvent, FC, MouseEvent} from 'react'\r\nimport React, {\r\n    memo,\r\n    useCallback,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState,\r\n} from 'react'\r\n\r\nimport type {Timezone} from '@bpinc/ad-transport-types'\r\nimport {SmDropdown} from '@bpinc/lib-external-ui-elements'\r\nimport {stopPropagation, useBoolean, useEscapeManager, useOutsideClick} from '@bpinc/lib-helpers'\r\nimport {isHTMLElement} from '@bpinc/lib-html-utils'\r\nimport {IconSearch} from '@bpinc/lib-icons'\r\nimport type {DropdownItemProps} from '@bpinc/lib-ui-elements'\r\nimport {highlighted, SearchInput} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {getTimezoneId} from '../utils/helpers'\r\n\r\n\r\ntype TimezoneDropdownProps = {\r\n    as?: string\r\n    localTimezoneId: string\r\n    ariaLabel?: string\r\n    className?: string\r\n    text: string\r\n    onSelectTimezone(timezoneId: string): void\r\n    recentTimezoneIds: string[]\r\n    allTimezones: Timezone[]\r\n}\r\n\r\nexport const TimezoneDropdown: FC<TimezoneDropdownProps> = memo(({\r\n    localTimezoneId,\r\n    onSelectTimezone,\r\n    recentTimezoneIds,\r\n    allTimezones,\r\n    className,\r\n    text,\r\n    ariaLabel,\r\n}) => {\r\n    const {value: show, setTrue, setFalse, toggle} = useBoolean()\r\n    const [search, setSearch] = useState('')\r\n    const {t: {CALENDAR}} = useLocalizationState()\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n    const dropdownRef = useRef(null)\r\n\r\n    const handleClick = useCallback((e: MouseEvent<HTMLElement>, data: DropdownItemProps) => {\r\n        stopPropagation(e)\r\n        if (typeof data.value === 'string') {\r\n            onSelectTimezone(data.value)\r\n        }\r\n        setFalse()\r\n    }, [onSelectTimezone, setFalse])\r\n\r\n    const handleSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.currentTarget.value)\r\n    }, [])\r\n\r\n    const localTimezone = useMemo(() => {\r\n        return allTimezones.find(timezone => timezone.id === localTimezoneId)\r\n    }, [localTimezoneId, allTimezones])\r\n\r\n    const recentTimezones: Timezone[] = useMemo(() => {\r\n        return recentTimezoneIds.reduce<Timezone[]>((acc, timezoneId) => {\r\n            const timezone = allTimezones.find(timezoneItem => timezoneItem.id === timezoneId)\r\n            return timezone\r\n                ? acc.concat(timezone)\r\n                : acc\r\n        }, [])\r\n    }, [recentTimezoneIds, allTimezones])\r\n\r\n    const filteredTimezones = useMemo(() => {\r\n        if (search) {\r\n            const s = search.toLowerCase()\r\n            return allTimezones.filter(\r\n                ({fullName}) => fullName.toLowerCase().includes(s),\r\n            )\r\n        }\r\n        return allTimezones\r\n    }, [allTimezones, search])\r\n\r\n    const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\r\n        const timezoneId = getTimezoneId(e.target)\r\n        if (timezoneId) {\r\n            onSelectTimezone(timezoneId)\r\n        }\r\n    }, [onSelectTimezone])\r\n\r\n    useOutsideClick({\r\n        ref: dropdownRef,\r\n        handler: () => setFalse(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            inputRef.current?.focus()\r\n        }\r\n    }, [show])\r\n\r\n    const handlePressKey = useCallback((e: React.KeyboardEvent) => {\r\n        if (!isHTMLElement(e.target)) {\r\n            return\r\n        }\r\n        if (e.key === ' ' || e.key === 'Enter') {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            handleKeyDown(e)\r\n            toggle()\r\n            return\r\n        }\r\n        if (e.shiftKey && e.key === 'Tab' && e.target === inputRef.current) {\r\n            setFalse()\r\n            return\r\n        }\r\n    }, [toggle, setFalse, handleKeyDown])\r\n\r\n    useEscapeManager(setFalse, {enabled: show})\r\n\r\n    return (\r\n        <div ref={dropdownRef}>\r\n            <SmDropdown\r\n                as=\"a\"\r\n                href=\"#\"\r\n                tabIndex={0}\r\n                open={show}\r\n                icon={false}\r\n                closeOnBlur={false}\r\n                openOnFocus={false}\r\n                className={className}\r\n                onKeyDown={handlePressKey}\r\n                onOpen={setTrue}\r\n                onClose={setFalse}\r\n                text={text}\r\n                aria-label={ariaLabel}\r\n                data-testid=\"timezone-dropdown\"\r\n            >\r\n                <SmDropdown.Menu\r\n                    id=\"timezone-content\"\r\n                    data-testid=\"timezone-content\"\r\n                    className=\"w-[340px]\"\r\n                    open={show}\r\n                    onClick={stopPropagation}\r\n                >\r\n                    <SearchInput\r\n                        fluid\r\n                        clearable\r\n                        value={search}\r\n                        inputRef={inputRef}\r\n                        className=\"min-h-9.5 max-w-[324px] text-base\"\r\n                        aria-label={CALENDAR.aria_search_label()}\r\n                        icon={\r\n                            <div className=\"absolute right-0 top-0 m-0 h-full w-9.5\">\r\n                                <IconSearch className=\"h-full w-6\" />\r\n                            </div>\r\n                        }\r\n                        onChange={handleSearch}\r\n                        placeholder={CALENDAR.timezone_search_placeholder()}\r\n                        onClick={stopPropagation}\r\n                    />\r\n                    <SmDropdown.Menu\r\n                        scrolling\r\n                        data-root-navigation-by-keys\r\n                        className=\"max-h-90\"\r\n                    >\r\n                        {localTimezone && !search && (\r\n                            <>\r\n                                <Header label={CALENDAR.timezone_local_header()} />\r\n                                {localTimezone && (\r\n                                    <TimezoneItem\r\n                                        id={localTimezone.id}\r\n                                        fullName={localTimezone.fullName}\r\n                                        highlight={search}\r\n                                        onClick={handleClick}\r\n                                        onKeyDown={handlePressKey}\r\n                                    />\r\n                                )}\r\n                            </>\r\n                        )}\r\n                        {recentTimezones.length > 0 && !search && (\r\n                            <>\r\n                                <Header label={CALENDAR.timezone_recently_header()} />\r\n                                {recentTimezones.map(({id, fullName}) => (\r\n                                    <TimezoneItem\r\n                                        key={id}\r\n                                        id={id}\r\n                                        fullName={fullName}\r\n                                        highlight={search}\r\n                                        onClick={handleClick}\r\n                                        onKeyDown={handlePressKey}\r\n                                    />\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                        {filteredTimezones.length > 0 && (\r\n                            <>\r\n                                {!search && <Header label={CALENDAR.timezone_all_header()} />}\r\n                                {filteredTimezones.map(({id, fullName}) => (\r\n                                    <TimezoneItem\r\n                                        key={id}\r\n                                        id={id}\r\n                                        fullName={fullName}\r\n                                        highlight={search}\r\n                                        onClick={handleClick}\r\n                                        onKeyDown={handlePressKey}\r\n                                    />\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                        {search && !filteredTimezones.length && <Header label={CALENDAR.no_results_label()} />}\r\n                    </SmDropdown.Menu>\r\n                </SmDropdown.Menu>\r\n            </SmDropdown>\r\n        </div>\r\n    )\r\n})\r\n\r\ntype TimezoneItemProps = Pick<Timezone, 'id' | 'fullName'> & {\r\n    highlight: string\r\n    onClick: (e: MouseEvent<HTMLElement>, data: DropdownItemProps) => void\r\n    onKeyDown: (e: React.KeyboardEvent) => void\r\n}\r\n\r\nconst TimezoneItem: FC<TimezoneItemProps> = ({\r\n    id,\r\n    fullName,\r\n    onClick,\r\n    onKeyDown,\r\n    highlight,\r\n}) => {\r\n    return (\r\n        <SmDropdown.Item\r\n            key={id}\r\n            value={id}\r\n            data-id={id}\r\n            data-testid={id}\r\n            aria-label={id}\r\n            tabIndex={0}\r\n            data-element=\"timezone-item\"\r\n            className=\"cursor-pointer text-base leading-[28px]\"\r\n            onClick={onClick}\r\n            onKeyDown={onKeyDown}\r\n        >\r\n            {highlighted({highlight, text: fullName})}\r\n        </SmDropdown.Item>\r\n    )\r\n}\r\n\r\ntype HeaderProps = {\r\n    label: string\r\n}\r\n\r\nconst Header: FC<HeaderProps> = ({label}) => {\r\n    return (\r\n        <SmDropdown.Header\r\n            className=\"align-middle text-base normal-case leading-[28px]\"\r\n        >\r\n            {label}\r\n        </SmDropdown.Header>\r\n    )\r\n}\r\n","import {isHTMLElement} from '@bpinc/lib-html-utils'\r\n\r\n\r\nexport function getTimezoneId(element: EventTarget) {\r\n    if (isHTMLElement(element) && element.dataset.id && element.dataset.element === 'timezone-item') {\r\n        return element.dataset.id\r\n    }\r\n    return\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {memo, useCallback, useMemo} from 'react'\r\n\r\nimport {useTimezonesState, useTimezonesStateMethods} from '@bpinc/ad-timezones-state-context'\r\nimport {getGMT} from '@bpinc/cal-utils'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {TimezoneDropdown} from './TimezoneDropdown'\r\n\r\n\r\n/** Timezone Dropdown Toggle is used on Calendar page to select a secondary timezone */\r\nexport const TimezoneDropdownToggle: FC = memo(() => {\r\n    const {\r\n        allTimezones,\r\n        localTimezone,\r\n        secondaryTimezone,\r\n        recentSecondaryTimezones,\r\n    } = useTimezonesState()\r\n\r\n    const {setSecondaryTimezone} = useTimezonesStateMethods()\r\n\r\n    const {\r\n        t: {CALENDAR},\r\n    } = useLocalizationState()\r\n\r\n    /** Stores secondary timezone and last used timezones */\r\n    const handleTimezoneSelect = useCallback(\r\n        (timezone: string) => {\r\n            let recentTimezones = [...recentSecondaryTimezones]\r\n\r\n            if (timezone !== localTimezone) {\r\n                const idx = recentTimezones.indexOf(timezone)\r\n\r\n                recentTimezones =\r\n                    idx === -1\r\n                        ? [timezone].concat(recentTimezones).slice(0, 3)\r\n                        : recentTimezones.splice(idx, 1).concat(recentTimezones)\r\n            }\r\n            setSecondaryTimezone({timezone, recentTimezones})\r\n        },\r\n        [recentSecondaryTimezones, localTimezone, setSecondaryTimezone],\r\n    )\r\n\r\n    const isSecondaryTimezone = secondaryTimezone && secondaryTimezone !== localTimezone\r\n\r\n    const secondaryTimezoneGMT = useMemo(() => {\r\n        return getGMT(allTimezones.find(timezone => timezone.id === secondaryTimezone)?.fullName)\r\n    }, [allTimezones, secondaryTimezone])\r\n\r\n    const title = isSecondaryTimezone\r\n        ? CALENDAR.timezone_local_secondary_title(localTimezone, secondaryTimezone)\r\n        : CALENDAR.timezone_local_title(localTimezone)\r\n\r\n    const ariaLabel = `${CALENDAR.aria_timezone_dropdown()} ${title}`\r\n\r\n    const labelText = isSecondaryTimezone && secondaryTimezoneGMT ? secondaryTimezoneGMT : CALENDAR.timezone_local_name()\r\n\r\n    return (\r\n        <TimezoneDropdown\r\n            text={labelText}\r\n            ariaLabel={ariaLabel}\r\n            className={tcn(\r\n                'focus:outline first:[&>div]:truncate first:[&>div]:text-center first:[&>div]:align-middle',\r\n                'first:[&>div]:text-sm first:[&>div]:text-primary-legacy first:[&>div]:underline',\r\n            )}\r\n            allTimezones={allTimezones}\r\n            localTimezoneId={localTimezone}\r\n            onSelectTimezone={handleTimezoneSelect}\r\n            recentTimezoneIds={recentSecondaryTimezones}\r\n        />\r\n    )\r\n})\r\n","import {useCallback} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {View} from '@bpinc/cal-state-types'\r\nimport {getRangeFromView} from '@bpinc/cal-utils'\r\nimport {MS_IN_DAY} from '@bpinc/lib-helpers'\r\n\r\n\r\nexport const useOpenDayView = () => {\r\n    const {viewDate} = useCalendarState(['viewDate'])\r\n    const {changeViewDate, changeView} = useCalendarStateMethods()\r\n    const [start] = getRangeFromView(viewDate, View.WEEK)\r\n\r\n    return useCallback((day: number | Date) => {\r\n        const dateTime = typeof day === 'object' ? Number(day) : start + MS_IN_DAY * day\r\n        changeViewDate(dateTime)\r\n        changeView(View.DAY)\r\n    }, [start, changeViewDate, changeView])\r\n}\r\n","import type {HTMLAttributes} from 'react'\r\nimport React from 'react'\r\nimport {useDrop} from 'react-dnd'\r\n\r\nimport type {DragInfo, NotEmptyEventMapItem} from '@bpinc/cal-state-types'\r\nimport {DragItemTypes} from '@bpinc/cal-state-types'\r\nimport {getWeekHeaderCellIndex} from '@bpinc/cal-utils'\r\n\r\nimport type {WeekDropResult} from '../ViewColumns'\r\n\r\n\r\ninterface HeaderDropContainerProps extends HTMLAttributes<HTMLDivElement> {\r\n    start: number\r\n    dragInfo?: DragInfo\r\n    onDrop: () => void\r\n    onHover: (dragInfo: DragInfo) => void\r\n    cellSize: [number, number]\r\n}\r\n\r\nexport const HeaderDropContainer: React.FC<HeaderDropContainerProps> = ({\r\n    children,\r\n    start,\r\n    dragInfo,\r\n    onDrop,\r\n    onHover,\r\n    cellSize,\r\n    ...rest\r\n}) => {\r\n    const [, drop] = useDrop<NotEmptyEventMapItem, WeekDropResult, null>(\r\n        () => ({\r\n            accept: [DragItemTypes.HEADER_EVENT],\r\n            hover: (item, monitor) => {\r\n                const diffCoords = monitor.getDifferenceFromInitialOffset()\r\n\r\n                if (!diffCoords) {\r\n                    return\r\n                }\r\n\r\n                const dayIndex = getWeekHeaderCellIndex(item.data.start, start)\r\n\r\n                if (dragInfo) {\r\n                    const {x: diffX} = diffCoords\r\n                    const [cellWidth] = cellSize\r\n                    const newDayIndex = dayIndex + Math.round(diffX / cellWidth)\r\n                    if (newDayIndex !== dragInfo.cell[0]) {\r\n                        onHover({\r\n                            item: dragInfo.item,\r\n                            cell: [newDayIndex, 0],\r\n                        })\r\n                    }\r\n                } else {\r\n                    onHover({\r\n                        item,\r\n                        cell: [dayIndex, 0],\r\n                    })\r\n                }\r\n            },\r\n            drop: () => ({onEnd: onDrop}),\r\n        }),\r\n        [start, dragInfo, cellSize],\r\n    )\r\n\r\n    return (\r\n        <tbody\r\n            ref={drop}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </tbody>\r\n    )\r\n}\r\n","import React, {useCallback, useMemo} from 'react'\r\n\r\nimport {useDayOfWeek, useDaysOfWeek, useSelectEvent} from '@bpinc/cal-hooks'\r\nimport type {DragInfo} from '@bpinc/cal-state-types'\r\nimport {type SelectionRange} from '@bpinc/cal-state-types'\r\nimport {TimezoneDropdownToggle} from '@bpinc/cal-timezone-dropdown'\r\nimport {getNextDayTime} from '@bpinc/cal-utils'\r\nimport {MS_IN_DAY, useOnKeyPressHandler} from '@bpinc/lib-helpers'\r\nimport {isHTMLElement} from '@bpinc/lib-html-utils'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport type {StateSetter} from '@bpinc/lib-types-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useOpenDayView} from '../../../../hooks/useOpenDayView'\r\nimport {HeaderDropContainer} from './HeaderDropContainer'\r\n\r\n\r\ntype HeaderTableProps = {\r\n    start: number\r\n    dragInfo?: DragInfo\r\n    daysAmount: number\r\n    linesAmount: number\r\n    cellSize: [number, number]\r\n    selectionRange: SelectionRange | undefined\r\n    setSelectionRange: StateSetter<SelectionRange | undefined>\r\n    isCommunicator: boolean\r\n    isStartFromMonday: boolean\r\n    showWeekends: boolean\r\n    onDrop: () => void\r\n    onDropCellHover: StateSetter<DragInfo | undefined>\r\n}\r\n\r\nexport const HeaderTable: React.FC<HeaderTableProps> = ({\r\n    start,\r\n    dragInfo,\r\n    daysAmount,\r\n    selectionRange,\r\n    cellSize,\r\n    linesAmount,\r\n    setSelectionRange,\r\n    isCommunicator,\r\n    isStartFromMonday,\r\n    showWeekends,\r\n    onDrop,\r\n    onDropCellHover,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const selectEvent = useSelectEvent()\r\n\r\n    const openDayView = useOpenDayView()\r\n    const daysOfWeek = useDaysOfWeek({\r\n        short: true,\r\n        startsFromMonday: isStartFromMonday,\r\n        withoutWeekend: !showWeekends,\r\n    })\r\n    const dayOfWeek = useDayOfWeek(new Date(start))\r\n    const days = useMemo(() =>\r\n        daysAmount === 1 ? [dayOfWeek] : daysOfWeek\r\n    , [daysAmount, dayOfWeek, daysOfWeek])\r\n\r\n    const getStartOfDay = useCallback((dayIndex: number) => {\r\n        return start + MS_IN_DAY * dayIndex\r\n    }, [start])\r\n\r\n    const isToday = useCallback(\r\n        (i: number) => {\r\n            const startOfDay = getStartOfDay(i)\r\n            const now = Date.now()\r\n            return startOfDay < now && now - startOfDay < MS_IN_DAY\r\n        },\r\n        [getStartOfDay],\r\n    )\r\n\r\n    const getWeekDayDate = useCallback(\r\n        (i: number) => new Date(start + MS_IN_DAY * i),\r\n        [start],\r\n    )\r\n\r\n    const getDateFromMouseEvent = useCallback(\r\n        (e: React.MouseEvent) => {\r\n            const i = e.currentTarget.getAttribute('data-i')\r\n            if (i) return new Date(getStartOfDay(Number(i)))\r\n        },\r\n        [getStartOfDay],\r\n    )\r\n\r\n    const handleCellMouseDown = useCallback(\r\n        (e: React.MouseEvent) => {\r\n            const day = getDateFromMouseEvent(e)\r\n            if (day) {\r\n                setSelectionRange([day, new Date(getNextDayTime(day))])\r\n            }\r\n        },\r\n        [getDateFromMouseEvent, setSelectionRange],\r\n    )\r\n\r\n    const handleCellMouseOver = useCallback(\r\n        (e: React.MouseEvent) => {\r\n            const day = getDateFromMouseEvent(e)\r\n            setSelectionRange(currentSelectionRange => {\r\n                if (!day || !currentSelectionRange) {\r\n                    return currentSelectionRange\r\n                }\r\n\r\n                const [selectionStart, selectionEnd] = currentSelectionRange\r\n\r\n                const dayInMs = day.getTime()\r\n                const nextDayInMs = getNextDayTime(day)\r\n                const startInMs = selectionStart.getTime()\r\n                const endInMs = selectionEnd.getTime()\r\n\r\n                if (dayInMs < startInMs && dayInMs < endInMs) {\r\n                    return [new Date(Math.max(startInMs, endInMs)), day]\r\n                }\r\n\r\n                if (nextDayInMs > startInMs && nextDayInMs > endInMs) {\r\n                    return [new Date(Math.min(startInMs, endInMs)), new Date(nextDayInMs)]\r\n                }\r\n\r\n                if (startInMs < nextDayInMs) {\r\n                    return [new Date(selectionStart), new Date(nextDayInMs)]\r\n                }\r\n\r\n                return [new Date(selectionStart), day]\r\n            })\r\n        },\r\n        [getDateFromMouseEvent, setSelectionRange],\r\n    )\r\n\r\n    const handlerOpenDayView = useCallback(\r\n        (columnIndex: string) => {\r\n            openDayView(Number(columnIndex))\r\n        },\r\n        [openDayView],\r\n    )\r\n\r\n    const handlerPressAllDayEvent = useCallback(\r\n        (startDayTime: string) => {\r\n            const nextDayTime = getNextDayTime(Number(startDayTime))\r\n            selectEvent({startTime: Number(startDayTime), endTime: Number(nextDayTime)})\r\n        },\r\n        [selectEvent],\r\n    )\r\n\r\n    const handleDayHeaderClick = useCallback(\r\n        (e: React.MouseEvent) => {\r\n            if (!isHTMLElement(e.currentTarget) || !e.currentTarget.dataset.column) {\r\n                return\r\n            }\r\n            handlerOpenDayView(e.currentTarget.dataset.column)\r\n        },\r\n        [handlerOpenDayView],\r\n    )\r\n\r\n    const handlePressKeyForElement = useCallback(\r\n        (e: React.KeyboardEvent) => {\r\n            if (!isHTMLElement(e.target)) {\r\n                return\r\n            }\r\n            if (e.target.dataset.day) {\r\n                handlerPressAllDayEvent(e.target.dataset.day)\r\n                return\r\n            }\r\n            if (e.target.dataset.column) {\r\n                handlerOpenDayView(e.target.dataset.column)\r\n                return\r\n            }\r\n        },\r\n        [handlerPressAllDayEvent, handlerOpenDayView],\r\n    )\r\n\r\n    const onKeyPressHandler = useOnKeyPressHandler(handlePressKeyForElement)\r\n\r\n    const cellStyle = useMemo(\r\n        () => ({\r\n            width: cellSize[0],\r\n            height: cellSize[1],\r\n        }),\r\n        [cellSize],\r\n    )\r\n\r\n    const tdStyles = tcn(\r\n        'relative border border-solid border-cal-border p-0',\r\n        'text-center text-sm uppercase text-cal-header-text no-underline',\r\n        'cursor-pointer select-none first:border-none first:normal-case',\r\n    )\r\n\r\n    return (\r\n        <table className=\"-mt-px h-full w-full table-fixed border-collapse border-spacing-0\">\r\n            <thead>\r\n                <tr>\r\n                    <th\r\n                        className={tcn('w-[52px]', {\r\n                            'w-[57px]': isCommunicator,\r\n                        })}\r\n                    />\r\n                    {days.map(name => {\r\n                        return (\r\n                            <th\r\n                                key={name}\r\n                                className=\"text-sm uppercase text-cal-header-text\"\r\n                            >\r\n                                {name}\r\n                            </th>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr id=\"row-header-days\">\r\n                    <td className=\"h-6 border-none\" />\r\n                    {days.map((name, i) => (\r\n                        <td\r\n                            key={name}\r\n                            className=\"h-6 border-none\"\r\n                            tabIndex={0}\r\n                            data-column={i}\r\n                            data-element=\"day-header-cell\"\r\n                            onClick={handleDayHeaderClick}\r\n                            onKeyDown={onKeyPressHandler}\r\n                        >\r\n                            <div className=\"flex cursor-pointer justify-center\">\r\n                                <div\r\n                                    className={tcn(\r\n                                        'flex h-5 w-5 select-none items-center justify-center text-sm text-primary-legacy',\r\n                                        {\r\n                                            'rounded-full bg-primary-legacy text-primary-contrast no-underline':\r\n                                                isToday(i),\r\n                                        },\r\n                                    )}\r\n                                >\r\n                                    {getWeekDayDate(i).getDate()}\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            <HeaderDropContainer\r\n                className=\"overflow-auto\"\r\n                start={start}\r\n                dragInfo={dragInfo}\r\n                cellSize={cellSize}\r\n                onHover={onDropCellHover}\r\n                onDrop={onDrop}\r\n            >\r\n                <tr id=\"row-all-day-cells\">\r\n                    <td className={tdStyles}>\r\n                        {linesAmount <= 1 && <TimezoneDropdownToggle />}\r\n                    </td>\r\n                    {days.map((name, i) => (\r\n                        <td\r\n                            key={name}\r\n                            tabIndex={0}\r\n                            data-element=\"all-day-cell\"\r\n                            data-day={getStartOfDay(i)}\r\n                            className={tdStyles}\r\n                            style={cellStyle}\r\n                            data-i={i}\r\n                            onMouseDown={handleCellMouseDown}\r\n                            onKeyDown={onKeyPressHandler}\r\n                            onMouseOver={\r\n                                selectionRange ? handleCellMouseOver : undefined\r\n                            }\r\n                        >\r\n                            {t.CALENDAR.all_day()}\r\n                        </td>\r\n                    ))}\r\n                </tr>\r\n                {linesAmount > 1 && (\r\n                    <EmptyLinesForEvents lines={linesAmount - 1} />\r\n                )}\r\n            </HeaderDropContainer>\r\n        </table>\r\n    )\r\n}\r\n\r\nconst EmptyLinesForEvents: React.FC<{lines: number}> = ({lines}) => {\r\n    return (\r\n        <>\r\n            {Array.from({length: lines}).map((_, index, arr) => {\r\n                return (\r\n                    <tr key={index} className=\"h-6\">\r\n                        {index === arr.length - 1 && (\r\n                            <td className=\"border-none text-center\">\r\n                                <TimezoneDropdownToggle />\r\n                            </td>\r\n                        )}\r\n                    </tr>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n","import React, {Fragment} from 'react'\r\n\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport type {NotEmptyEventMapItem} from '@bpinc/cal-state-types'\r\nimport {MS_IN_DAY} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport {DayEvent} from './DayEvent'\r\n\r\n\r\ntype DayEventsProps = {\r\n    cellSize: [number, number]\r\n    events: NotEmptyEventMapItem[][][][]\r\n    selectedEvent?: CalendarEventDetails\r\n    isSelectionInProgress: boolean\r\n    start: number\r\n    isCommunicator: boolean\r\n}\r\n\r\nexport const DayEvents: React.FC<DayEventsProps> = ({\r\n    start,\r\n    events,\r\n    isSelectionInProgress,\r\n    selectedEvent,\r\n    cellSize,\r\n    isCommunicator,\r\n}) => {\r\n    return (\r\n        <div\r\n            id=\"day-events\"\r\n            className={tcn('absolute inset-x-0 top-0 flex h-0 w-auto select-none',\r\n                'flex-row flex-nowrap pl-[53px]', {'pl-[58px]': isCommunicator})}\r\n        >\r\n            {events.map((dayBuckets, dayIndex) => {\r\n                const dayStart = start + MS_IN_DAY * dayIndex\r\n                const dayEnd = dayStart + MS_IN_DAY\r\n\r\n                return (\r\n                    <div key={dayIndex} className=\"relative flex-1\">\r\n                        {dayBuckets.map((bucket, bucketIndex) => (\r\n                            <Fragment key={bucketIndex}>\r\n                                {bucket.map((column, columnIndex) => (\r\n                                    column.map(event => (\r\n                                        <DayEvent\r\n                                            key={event.data.id}\r\n                                            item={event}\r\n                                            selectedEvent={selectedEvent}\r\n                                            isSelectionInProgress={isSelectionInProgress}\r\n                                            viewStart={dayStart}\r\n                                            viewEnd={dayEnd}\r\n                                            cellSize={cellSize}\r\n                                            line={columnIndex}\r\n                                            lines={bucket.length}\r\n                                        />\r\n                                    ))\r\n                                ))}\r\n                            </Fragment>\r\n                        ))}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import type {HTMLAttributes, RefObject} from 'react'\r\nimport React from 'react'\r\nimport {useDrop} from 'react-dnd'\r\n\r\nimport type {DragInfo, NotEmptyEventMapItem, ResizeInfo} from '@bpinc/cal-state-types'\r\nimport {DragItemTypes} from '@bpinc/cal-state-types'\r\nimport {CELLS_IN_DAY, getWeekCellIndices, MS_IN_CELL} from '@bpinc/cal-utils'\r\nimport {MS_IN_DAY} from '@bpinc/lib-helpers'\r\n\r\nimport type {WeekDropResult} from '../ViewColumns'\r\n\r\n\r\ninterface ColumnsDropContainerProps extends HTMLAttributes<HTMLDivElement> {\r\n    start: number\r\n    dragInfo?: DragInfo\r\n    resizeInfo?: ResizeInfo\r\n    onDrop: () => void\r\n    onResize: () => void\r\n    onHover: (dragInfo: DragInfo) => void\r\n    onEventResizeMove: (resizeInfo: ResizeInfo) => void\r\n    cellSize: [number, number]\r\n}\r\n\r\nexport const ColumnsDropContainer = React.forwardRef<HTMLDivElement, ColumnsDropContainerProps>(({\r\n    children,\r\n    start,\r\n    dragInfo,\r\n    resizeInfo,\r\n    onDrop,\r\n    onResize,\r\n    onHover,\r\n    onEventResizeMove,\r\n    cellSize,\r\n    ...rest\r\n}, ref) => {\r\n    const [, drop] = useDrop<NotEmptyEventMapItem, WeekDropResult, null>(\r\n        () => ({\r\n            accept: [DragItemTypes.EVENT, DragItemTypes.EVENT_RESIZE],\r\n            hover: (item, monitor) => {\r\n                const dragType = monitor.getItemType()\r\n                const diffCoords = monitor.getDifferenceFromInitialOffset()\r\n\r\n                if (!diffCoords) {\r\n                    return\r\n                }\r\n\r\n                const {x: diffX, y: diffY} = diffCoords\r\n                const [cellWidth, cellHeight] = cellSize\r\n\r\n                if (dragType === DragItemTypes.EVENT) {\r\n                    const [dayIndex, cellIndex] = getWeekCellIndices(item.data.start, start)\r\n\r\n                    if (dragInfo) {\r\n                        let newDayIndex = dayIndex + Math.round(diffX / cellWidth)\r\n                        let newCellIndex = cellIndex + Math.round(diffY / cellHeight)\r\n\r\n                        if (newCellIndex < 0) {\r\n                            newDayIndex -= Math.floor(-newCellIndex / CELLS_IN_DAY) + 1\r\n                            newCellIndex += CELLS_IN_DAY\r\n                        }\r\n\r\n                        if (newDayIndex !== dragInfo.cell[0] || newCellIndex !== dragInfo.cell[1]) {\r\n                            onHover({\r\n                                item: dragInfo.item,\r\n                                cell: [newDayIndex, newCellIndex],\r\n                            })\r\n                        }\r\n                    } else {\r\n                        onHover({\r\n                            item,\r\n                            cell: [dayIndex, cellIndex],\r\n                        })\r\n                    }\r\n                }\r\n\r\n                if (dragType === DragItemTypes.EVENT_RESIZE) {\r\n                    const shiftX = Math.round(diffX / cellWidth) * MS_IN_DAY\r\n                    const shiftY = Math.round(diffY / cellHeight) * MS_IN_CELL\r\n                    const shift = shiftX + shiftY\r\n                    if (!resizeInfo || resizeInfo.shift !== shift) {\r\n                        onEventResizeMove({\r\n                            item: resizeInfo?.item || item,\r\n                            shift,\r\n                        })\r\n                    }\r\n                }\r\n            },\r\n            drop: (_, monitor) => {\r\n                const dragType = monitor.getItemType()\r\n                return dragType === DragItemTypes.EVENT ? {onEnd: onDrop} : {onEnd: onResize}\r\n            },\r\n        }),\r\n        [start, dragInfo, resizeInfo, cellSize],\r\n    )\r\n\r\n    drop(ref as RefObject<HTMLDivElement>)\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n})\r\n","import type {FC} from 'react'\r\nimport React, {useCallback} from 'react'\r\n\r\nimport {intlFormatters} from '@bpinc/cal-event-ui/src/utils'\r\nimport {MS_IN_DAY, MS_IN_HOUR} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useTimezoneDifference} from '../../../../hooks/useTimezoneDifference'\r\n\r\n\r\ntype DayTimeColumnProps = {\r\n    isCommunicator: boolean\r\n}\r\n\r\nexport const DayTimeColumn: FC<DayTimeColumnProps> = React.memo(({\r\n    isCommunicator,\r\n}) => {\r\n    const timezoneDifferenceInMS = useTimezoneDifference()\r\n    const {language: locale} = useLocalizationState()\r\n    const {h, hhmm, normalize} = intlFormatters({locale, timeZone: 'UTC'})\r\n\r\n    const getTimeByIndex = useCallback((index: number, offsetInMS = 0) => {\r\n        if (index === 0 || index % 2) {\r\n            return ''\r\n        }\r\n\r\n        const ms = (MS_IN_HOUR * index) / 2\r\n        const date = new Date(MS_IN_DAY + ms - offsetInMS)\r\n        const hFormat = h.format(date)\r\n        return new RegExp('AM|PM', 'i').test(hFormat) ? hFormat.toUpperCase() : normalize(hhmm.format(date))\r\n    }, [h, hhmm, normalize])\r\n\r\n    return (\r\n        <div className={tcn('w-[52px]', {'w-[57px]': isCommunicator})}>\r\n            {Array.from({length: 24 * 2}, (_, index) => {\r\n                const first = index === 0\r\n                const localTime = getTimeByIndex(index)\r\n                const secondaryTime =\r\n                    timezoneDifferenceInMS &&\r\n                    getTimeByIndex(index, timezoneDifferenceInMS)\r\n\r\n                return (\r\n                    <div\r\n                        key={index}\r\n                        className={tcn(\r\n                            'relative h-6 select-none border border-l-0 border-solid border-cal-border',\r\n                            {'border-b-0 border-t': first},\r\n                            {'odd:border-y-0 even:border-t-0': !first},\r\n                        )}\r\n                    >\r\n                        <div\r\n                            className={tcn(\r\n                                'box-border whitespace-nowrap pr-1 text-right text-sm/[16px]',\r\n                                '-translate-x-2 -translate-y-1/2 bg-white uppercase',\r\n                            )}\r\n                        >\r\n                            {localTime}\r\n                            {!!secondaryTime && (\r\n                                <div className=\"uppercase text-main-secondary\">\r\n                                    {secondaryTime}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n})\r\n","import {useMemo} from 'react'\r\n\r\nimport {useTimezonesState} from '@bpinc/ad-timezones-state-context'\r\nimport {MS_IN_MINUTE} from '@bpinc/lib-helpers'\r\n\r\n\r\nexport const useTimezoneDifference = () => {\r\n    const {secondaryTimezone, localTimezone, allTimezones} = useTimezonesState()\r\n\r\n    return useMemo(() => {\r\n        const getOffset = (timeZoneId: string) => allTimezones.find(tz => tz.id === timeZoneId)?.offset\r\n        if (!secondaryTimezone) {\r\n            return 0\r\n        }\r\n\r\n        const secondaryOffset = getOffset(secondaryTimezone) ?? 0\r\n        const localOffset = getOffset(localTimezone) ?? 0\r\n\r\n        return (localOffset - secondaryOffset) * MS_IN_MINUTE\r\n    }, [allTimezones, localTimezone, secondaryTimezone])\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {MINUTES_IN_CELL} from '@bpinc/cal-utils'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\n\r\nfunction timeToCssPosition(date: Date) {\r\n    const minutes = date.getMinutes() % MINUTES_IN_CELL\r\n\r\n    const percentsFromTop = (minutes / MINUTES_IN_CELL) * 100\r\n\r\n    return {top: `${percentsFromTop}%`}\r\n}\r\n\r\nexport const Timeline: FC = React.memo(() => {\r\n    const [position, setPosition] = useState(timeToCssPosition(new Date()))\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setPosition(timeToCssPosition(new Date()))\r\n        }, 30_000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"relative h-[calc(100%_+_2px)] w-[calc(100%_+_4px)]\">\r\n            <div\r\n                style={position}\r\n                className={tcn(\r\n                    'absolute top-0 z-[1] h-px w-full bg-cal-timeline',\r\n                    'before:absolute before:block before:h-2 before:w-2',\r\n                    'before:-translate-x-2 before:-translate-y-1/2 before:rounded-full before:bg-cal-timeline',\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n})\r\n","import React, {useCallback, useLayoutEffect, useRef} from 'react'\r\n\r\nimport type {DragInfo, ResizeInfo, SelectionRange} from '@bpinc/cal-state-types'\r\nimport {\r\n    CELLS_IN_DAY,\r\n    getDateByCellIndex,\r\n    getDateFromCell,\r\n    isCurrentHalfHour,\r\n    MINUTES_IN_CELL,\r\n} from '@bpinc/cal-utils'\r\nimport {isHTMLDivElement} from '@bpinc/lib-html-utils'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport type {StateSetter} from '@bpinc/lib-types-helpers'\r\n\r\nimport {ColumnsDropContainer} from './ColumnsDropContainer'\r\nimport {DayTimeColumn} from './DayTimeColumn'\r\nimport {Timeline} from './Timeline'\r\n\r\n\r\ntype DaysColumnsProps = {\r\n    start: number\r\n    daysAmount: number\r\n    headerLinesAmount: number\r\n    cellSize: [number, number]\r\n    dragInfo?: DragInfo\r\n    resizeInfo?: ResizeInfo\r\n    isCommunicator: boolean\r\n    selectionRange: SelectionRange | undefined\r\n    onEventDrop: () => void\r\n    onEventResize: () => void\r\n    onCellSizeChange: (size: [number, number]) => void\r\n    onDropCellHover: StateSetter<DragInfo | undefined>\r\n    onEventResizeMove: StateSetter<ResizeInfo | undefined>\r\n    onCellMouseDown?: (e: React.MouseEvent, date: Date) => void\r\n    onCellMouseOver?: (e: React.MouseEvent, date: Date) => void\r\n}\r\n\r\nexport const DaysColumns: React.FC<DaysColumnsProps> = ({\r\n    start,\r\n    daysAmount,\r\n    headerLinesAmount,\r\n    cellSize,\r\n    dragInfo,\r\n    resizeInfo,\r\n    isCommunicator,\r\n    selectionRange,\r\n    onEventDrop,\r\n    onEventResize,\r\n    onCellSizeChange,\r\n    onCellMouseDown,\r\n    onCellMouseOver,\r\n    onDropCellHover,\r\n    onEventResizeMove,\r\n}) => {\r\n    const containerRef = useRef<HTMLDivElement>(null)\r\n\r\n    const handleMouseDown = useCallback(\r\n        (e: React.MouseEvent) => {\r\n            if (!onCellMouseDown || !isHTMLDivElement(e.target)) {\r\n                return\r\n            }\r\n\r\n            const cell = e.target.closest('[data-cell]')\r\n            if (!cell) {\r\n                return\r\n            }\r\n            // find nearest time multiple of 30 minutes\r\n            const date = getDateFromCell(cell, start)\r\n\r\n            if (!date) {\r\n                return\r\n            }\r\n\r\n            onCellMouseDown(e, date)\r\n        },\r\n        [onCellMouseDown, start],\r\n    )\r\n    const handleMouseOver = useCallback(\r\n        (e: React.MouseEvent) => {\r\n            if (!onCellMouseOver || !isHTMLDivElement(e.target)) {\r\n                return\r\n            }\r\n            const cell = e.target.closest('[data-cell]')\r\n            if (!cell) {\r\n                return\r\n            }\r\n            const date = getDateFromCell(cell, start)\r\n            if (!date) {\r\n                return\r\n            }\r\n\r\n            let shift = MINUTES_IN_CELL\r\n            if (selectionRange) {\r\n                const [rangeStart] = selectionRange\r\n                if (date < rangeStart) {\r\n                    shift = 0\r\n                }\r\n            }\r\n            date.setMinutes(date.getMinutes() + shift)\r\n            onCellMouseOver(e, date)\r\n        },\r\n        [onCellMouseOver, start, selectionRange],\r\n    )\r\n\r\n    useLayoutEffect(() => {\r\n        const container = containerRef.current\r\n        const eventCell = container?.querySelector('[data-cell]:last-child')\r\n\r\n        // change size of all cells depending on the size of very last cell\r\n        let observer: ResizeObserver\r\n        if (eventCell) {\r\n            observer = new ResizeObserver(([resizeObserverEntry]) => {\r\n                const {width, height} = resizeObserverEntry.target.getBoundingClientRect()\r\n                onCellSizeChange([width, height])\r\n            })\r\n            observer.observe(eventCell)\r\n        }\r\n\r\n        return () => observer.disconnect()\r\n    }, [onCellSizeChange])\r\n\r\n    return (\r\n        <ColumnsDropContainer\r\n            ref={containerRef}\r\n            className={tcn('m-0 h-full w-full', {\r\n                '-mt-px': headerLinesAmount <= 1,\r\n            })}\r\n            start={start}\r\n            cellSize={cellSize}\r\n            dragInfo={dragInfo}\r\n            resizeInfo={resizeInfo}\r\n            onDrop={onEventDrop}\r\n            onHover={onDropCellHover}\r\n            onResize={onEventResize}\r\n            onEventResizeMove={onEventResizeMove}\r\n            onMouseDown={handleMouseDown}\r\n            onMouseOver={onCellMouseOver && handleMouseOver}\r\n        >\r\n            <div id=\"day-columns\" className=\"flex\">\r\n                <DayTimeColumn isCommunicator={isCommunicator} />\r\n                {Array.from({length: daysAmount}).map((_, columnIndex) => {\r\n                    return (\r\n                        <div\r\n                            data-element=\"day-column\"\r\n                            tabIndex={-1}\r\n                            key={columnIndex}\r\n                            className=\"grow\"\r\n                        >\r\n                            {Array.from(\r\n                                {length: CELLS_IN_DAY},\r\n                                (__, lineIndex) => {\r\n                                    const first = lineIndex === 0\r\n                                    const className = tcn(\r\n                                        'relative h-6 select-none',\r\n                                        'border border-l-0 border-solid border-cal-border',\r\n                                        {'border-b-0 border-t': first},\r\n                                        {'odd:border-y-0 even:border-t-0': !first},\r\n                                    )\r\n\r\n                                    return (\r\n                                        <div\r\n                                            key={lineIndex}\r\n                                            className={className}\r\n                                            data-cell\r\n                                            data-x={columnIndex}\r\n                                            data-y={lineIndex}\r\n                                        >\r\n                                            {isCurrentHalfHour(\r\n                                                getDateByCellIndex(\r\n                                                    start,\r\n                                                    columnIndex,\r\n                                                    lineIndex,\r\n                                                ),\r\n                                            ) && <Timeline />}\r\n                                        </div>\r\n                                    )\r\n                                },\r\n                            )}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </ColumnsDropContainer>\r\n    )\r\n}\r\n","import React, {\r\n    useCallback,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState,\r\n} from 'react'\r\nimport {isEqual} from 'lodash-es'\r\n\r\nimport {useIsCommunicator} from '@bpinc/ad-current-tab-data-context'\r\nimport {useSelectEvent} from '@bpinc/cal-hooks'\r\nimport type {CalendarEventItem} from '@bpinc/cal-request-urls'\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport type {DragInfo, ResizeInfo} from '@bpinc/cal-state-types'\r\nimport {DefaultCalendars, EventType} from '@bpinc/cal-state-types'\r\nimport {\r\n    dragCalendarEvent,\r\n    eventDetailsToCalendarEvent,\r\n    eventsToEventMap,\r\n    getDragItemShift,\r\n    getEventEndByStart,\r\n    getRangeFromView,\r\n    getSortedSelectionRange,\r\n    requestsToEventMap,\r\n    resizeCalendarEvent,\r\n    shiftsToEventMap,\r\n} from '@bpinc/cal-utils'\r\nimport {DAYS_IN_WEEKEND, useAsRef, useEventListener, usePrevious} from '@bpinc/lib-helpers'\r\n\r\nimport {useAllDayEventsByLine, useBodyEventsList} from '../../../hooks/useEventsList'\r\nimport {useIsStartFromMonday} from '../../../hooks/useIsStartFromMonday'\r\nimport {useSelectionRange} from '../../../hooks/useSelectionRange'\r\nimport {useShowWeekends} from '../../../hooks/useShowWeekends'\r\nimport {HeaderEvents} from './Header/HeaderEvents'\r\nimport {HeaderTable} from './Header/HeaderTable'\r\nimport {DayEvents} from './DayEvents'\r\nimport {DaysColumns} from './DaysColumns'\r\n\r\n\r\nexport type WeekDropResult = {\r\n    onEnd: () => void\r\n}\r\n\r\nconst INITIAL_CELL_SIZE: [number, number] = [0, 0]\r\nconst HEADER_CELL_HEIGHT = 24\r\n\r\nexport const ViewColumns: React.FC = () => {\r\n    const [dragInfo, setDragInfo] = useState<DragInfo>()\r\n    const [resizeInfo, setResizeInfo] = useState<ResizeInfo>()\r\n    const dragInfoRef = useAsRef(dragInfo)\r\n    const resizeInfoRef = useAsRef(resizeInfo)\r\n\r\n    const {\r\n        calendarFilters,\r\n        selectedEvent,\r\n        calendarEvents,\r\n        timeoffRequests,\r\n        shifts,\r\n        view,\r\n        viewDate,\r\n        viewDaysAmount,\r\n    } = useCalendarState([\r\n        'calendarFilters',\r\n        'selectedEvent',\r\n        'calendarEvents',\r\n        'timeoffRequests',\r\n        'shifts',\r\n        'view',\r\n        'viewDate',\r\n        'viewDaysAmount',\r\n    ])\r\n    const {closeEventForm} = useCalendarStateMethods()\r\n\r\n    const isCommunicator = useIsCommunicator()\r\n    const isStartFromMonday = useIsStartFromMonday()\r\n    const showWeekends = useShowWeekends()\r\n\r\n    const [cellSize, setCellSize] = useState<[number, number]>(INITIAL_CELL_SIZE)\r\n    const cellSizeInitialized = cellSize[0] !== INITIAL_CELL_SIZE[0]\r\n        || cellSize[1] !== INITIAL_CELL_SIZE[1]\r\n    // start, end of week / day view\r\n    const [start, end] = useMemo(() =>\r\n        getRangeFromView(viewDate, view,\r\n            {\r\n                weekStartsFromMonday: isStartFromMonday,\r\n                withoutWeekend: !showWeekends,\r\n            })\r\n    , [view, viewDate, isStartFromMonday, showWeekends])\r\n    const selectEvent = useSelectEvent()\r\n    const {\r\n        moveCalendarEvent,\r\n        stretchCalendarEvent,\r\n        updateSelectedEvent,\r\n    } = useCalendarStateMethods()\r\n    const [selectionRange, setSelectionRange] = useSelectionRange()\r\n    const tableWrapperRef = useRef<HTMLDivElement>(null)\r\n\r\n    const prevSelectedEvent = usePrevious(selectedEvent)\r\n    const isSelectedEventsEqual = useMemo(() =>\r\n        isEqual(selectedEvent, prevSelectedEvent)\r\n    , [selectedEvent, prevSelectedEvent])\r\n\r\n    // We need to reset dnd info only when selected event updating is finished\r\n    useEffect(() => {\r\n        if ((dragInfo || resizeInfo) && !isSelectedEventsEqual) {\r\n            setDragInfo(undefined)\r\n            setResizeInfo(undefined)\r\n        }\r\n    }, [dragInfo, resizeInfo, isSelectedEventsEqual])\r\n\r\n    const eventsByDate = useMemo(() => {\r\n        let eventMap = undefined\r\n        let selectedCalendarEvent =\r\n            selectedEvent && eventDetailsToCalendarEvent(selectedEvent)\r\n\r\n        if (dragInfo) {\r\n            const {\r\n                type: dragType,\r\n                data: dragItem,\r\n            } = dragInfo.item\r\n\r\n            let events: CalendarEventItem[] = calendarEvents\r\n            if (dragType === EventType.NEW_EVENT && selectedCalendarEvent) {\r\n                const shift = getDragItemShift(dragItem.start, dragInfo, start)\r\n                selectedCalendarEvent = dragCalendarEvent(dragItem, shift)\r\n            } else {\r\n                events = calendarEvents.map(item => {\r\n                    if (item.id === dragItem.id) {\r\n                        const shift = getDragItemShift(item.start, dragInfo, start)\r\n                        return dragCalendarEvent(item, shift)\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n            eventMap = eventsToEventMap(events, selectedCalendarEvent, selectionRange)\r\n        }\r\n\r\n        if (resizeInfo) {\r\n            const {\r\n                item: {\r\n                    type: resizeType,\r\n                    data: resizeItem,\r\n                },\r\n                shift,\r\n            } = resizeInfo\r\n\r\n            let events: CalendarEventItem[] = calendarEvents\r\n            if (resizeType === EventType.NEW_EVENT && selectedCalendarEvent) {\r\n                selectedCalendarEvent = resizeCalendarEvent(resizeItem, shift)\r\n            } else {\r\n                events = calendarEvents.map(item => {\r\n                    if (item.id === resizeItem.id) {\r\n                        return resizeCalendarEvent(item, shift)\r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n            eventMap = eventsToEventMap(events, selectedCalendarEvent, selectionRange)\r\n        }\r\n\r\n        eventMap = eventMap || eventsToEventMap(calendarEvents, selectedCalendarEvent, selectionRange)\r\n        if (calendarFilters[DefaultCalendars.REQUESTS]) {\r\n            eventMap = requestsToEventMap(eventMap, timeoffRequests)\r\n        }\r\n        if (calendarFilters[DefaultCalendars.SHIFTS]) {\r\n            eventMap = shiftsToEventMap(eventMap, shifts)\r\n        }\r\n        return eventMap\r\n    }, [\r\n        calendarFilters,\r\n        calendarEvents,\r\n        timeoffRequests,\r\n        shifts,\r\n        dragInfo,\r\n        resizeInfo,\r\n        start,\r\n        selectedEvent,\r\n        selectionRange,\r\n    ])\r\n\r\n    const handleEventDrop = useCallback(() => {\r\n        if (!dragInfoRef.current || !dragInfoRef.current.item) {\r\n            return\r\n        }\r\n        const dragItem = dragInfoRef.current.item\r\n        if (dragItem.type === EventType.EVENT) {\r\n            const {id} = dragItem.data\r\n            const calendarEvent = calendarEvents.find(item => item.id === id)\r\n\r\n            if (calendarEvent) {\r\n                const delta = getDragItemShift(calendarEvent.start, dragInfoRef.current, start)\r\n                moveCalendarEvent(id, delta)\r\n            }\r\n            setDragInfo(undefined)\r\n        }\r\n        if (dragItem.type === EventType.NEW_EVENT) {\r\n            const delta = getDragItemShift(dragItem.data.start, dragInfoRef.current, start)\r\n            updateSelectedEvent({\r\n                startTime: dragItem.data.start + delta,\r\n                endTime: dragItem.data.end + delta,\r\n            })\r\n        }\r\n    }, [calendarEvents, dragInfoRef, moveCalendarEvent, start, updateSelectedEvent])\r\n\r\n    const handleEventResize = useCallback(() => {\r\n        if (!resizeInfoRef.current || !resizeInfoRef.current.item) {\r\n            return\r\n        }\r\n        const resizeItem = resizeInfoRef.current.item\r\n        const shift = resizeInfoRef.current.shift\r\n        if (resizeItem.type === EventType.EVENT) {\r\n            stretchCalendarEvent(resizeItem.data.id, shift)\r\n            setResizeInfo(undefined)\r\n        }\r\n        if (resizeItem.type === EventType.NEW_EVENT) {\r\n            const [initialStart, initialEnd] = [resizeItem.data.start, resizeItem.data.end]\r\n            const duration = initialEnd - initialStart\r\n            const isReverse = shift < 0 && Math.abs(shift) > duration\r\n            const [nextStart, nextEnd] = isReverse\r\n                ? [initialEnd + shift, initialStart]\r\n                : [initialStart, initialEnd + shift]\r\n            updateSelectedEvent({startTime: nextStart, endTime: nextEnd})\r\n        }\r\n    }, [resizeInfoRef, stretchCalendarEvent, updateSelectedEvent])\r\n\r\n    const handleCellMouseDown = useCallback((_: React.MouseEvent, handlingDate: Date) => {\r\n        if (selectedEvent) {\r\n            closeEventForm()\r\n            return\r\n        }\r\n\r\n        // handlingDate is the nearest to user click time multiple of 30 minutes\r\n        setSelectionRange([handlingDate, handlingDate])\r\n    }, [setSelectionRange, selectedEvent, closeEventForm])\r\n\r\n    const handleCellMouseOver = useCallback((_: React.MouseEvent, handlingDate: Date) => {\r\n        setSelectionRange(prev => {\r\n            if (!prev) {\r\n                return prev\r\n            }\r\n\r\n            return [prev[0], handlingDate]\r\n        })\r\n    }, [setSelectionRange])\r\n\r\n    const handleCellMouseUp = useCallback(() => {\r\n        if (!selectionRange) {\r\n            return\r\n        }\r\n\r\n        const [selectionStart, selectionEnd] =\r\n            getSortedSelectionRange(selectionRange)\r\n\r\n        const endDate = selectionStart !== selectionEnd ?\r\n            selectionEnd : getEventEndByStart(selectionStart)\r\n        selectEvent({startTime: Number(selectionStart), endTime: Number(endDate)})\r\n    }, [selectEvent, selectionRange])\r\n\r\n    useEventListener('mouseup', handleCellMouseUp)\r\n\r\n    useEffect(() => {\r\n        // scroll to 6am\r\n        if (cellSizeInitialized) {\r\n            const el = tableWrapperRef.current\r\n            const height = cellSize[1] * 12\r\n            if (el) el.scrollTop = height\r\n        }\r\n        // on init\r\n        // eslint-disable-next-line\r\n    }, [cellSizeInitialized])\r\n\r\n    const headerCellSize: [number, number] = useMemo(() => {\r\n        return [cellSize[0], HEADER_CELL_HEIGHT]\r\n    }, [cellSize])\r\n\r\n    const daysAmount = useMemo(() => {\r\n        if (viewDaysAmount === 7 && !showWeekends) {\r\n            return viewDaysAmount - DAYS_IN_WEEKEND\r\n        }\r\n        return viewDaysAmount\r\n    }, [viewDaysAmount, showWeekends])\r\n\r\n    const [allDayEventsByLine, headerLinesAmount] = useAllDayEventsByLine({\r\n        start,\r\n        events: eventsByDate,\r\n        daysAmount,\r\n    })\r\n\r\n    const dayEvents = useBodyEventsList({\r\n        start,\r\n        events: eventsByDate,\r\n        daysAmount,\r\n    }, {withinOneDay: true})\r\n\r\n    return (\r\n        <div className=\"flex flex-1 flex-col\">\r\n            <div className=\"relative flex-none pr-2.5\">\r\n                <HeaderTable\r\n                    start={start}\r\n                    dragInfo={dragInfo}\r\n                    daysAmount={daysAmount}\r\n                    selectionRange={selectionRange}\r\n                    setSelectionRange={setSelectionRange}\r\n                    cellSize={headerCellSize}\r\n                    linesAmount={headerLinesAmount}\r\n                    isCommunicator={isCommunicator}\r\n                    isStartFromMonday={isStartFromMonday}\r\n                    showWeekends={showWeekends}\r\n                    onDrop={handleEventDrop}\r\n                    onDropCellHover={setDragInfo}\r\n                />\r\n                <HeaderEvents\r\n                    viewStart={start}\r\n                    viewEnd={end}\r\n                    cellSize={headerCellSize}\r\n                    selectedEvent={selectedEvent}\r\n                    isSelectionInProgress={Boolean(selectionRange)}\r\n                    eventsByLine={allDayEventsByLine}\r\n                    isCommunicator={isCommunicator}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"relative flex-1\">\r\n                <div\r\n                    className=\"absolute left-0 top-0 h-full w-full overflow-y-auto overflow-x-hidden\"\r\n                    ref={tableWrapperRef}\r\n                >\r\n                    <DaysColumns\r\n                        start={start}\r\n                        daysAmount={daysAmount}\r\n                        headerLinesAmount={headerLinesAmount}\r\n                        cellSize={cellSize}\r\n                        isCommunicator={isCommunicator}\r\n                        selectionRange={selectionRange}\r\n                        onCellSizeChange={setCellSize}\r\n                        onCellMouseDown={handleCellMouseDown}\r\n                        onCellMouseOver={\r\n                            selectionRange ? handleCellMouseOver : undefined\r\n                        }\r\n                        dragInfo={dragInfo}\r\n                        resizeInfo={resizeInfo}\r\n                        onEventDrop={handleEventDrop}\r\n                        onEventResize={handleEventResize}\r\n                        onDropCellHover={setDragInfo}\r\n                        onEventResizeMove={setResizeInfo}\r\n                    />\r\n                    <DayEvents\r\n                        start={start}\r\n                        cellSize={cellSize}\r\n                        events={dayEvents}\r\n                        selectedEvent={selectedEvent}\r\n                        isSelectionInProgress={Boolean(selectionRange)}\r\n                        isCommunicator={isCommunicator}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const useIsStartFromMonday = () => {\r\n    // Get from calendar settings when it's ready\r\n    return false\r\n}\r\n","export const useShowWeekends = () => {\r\n    // Get from calendar settings when it's ready\r\n    return true\r\n}\r\n","import React from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\n\r\nexport const ViewMonthEmptyBlock: React.FC = React.memo(() => {\r\n    return (\r\n        <div\r\n            className={tcn(\r\n                'relative mx-0 my-0.5 box-border self-start',\r\n                'z-[1] h-4.5 cursor-auto border-none bg-transparent text-transparent',\r\n                'mt-0.5 after:inline-block after:content-[\"_\"]',\r\n                'after:h-4.5 after:leading-[18px]',\r\n            )}\r\n        />\r\n    )\r\n})\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {formatEventTimes} from '@bpinc/cal-event-ui'\r\nimport {type NotEmptyEventMapItem, EventCustomId, EventType} from '@bpinc/cal-state-types'\r\nimport {removeSpaces} from '@bpinc/lib-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport const useMonthEventTitle = (item: NotEmptyEventMapItem) => {\r\n    const language = useLocalizationState('language')\r\n\r\n    return useMemo(() => {\r\n        const isAllDay = item.data.allDay || item.lastsDays > 1\r\n        const showEventTime = isShowEventTime(item, isAllDay)\r\n        const eventTime = formatEventTimes({\r\n            startTime: item.data.start,\r\n            locale: language,\r\n        }).from.time.replace(/\\s/g, '')\r\n\r\n        return (\r\n            <>\r\n                {showEventTime && (\r\n                    <span>{removeSpaces(eventTime) + ' '}</span>\r\n                )}\r\n                <span>{item.data.title}</span>\r\n            </>\r\n        )\r\n    }, [item, language])\r\n}\r\n\r\nfunction isShowEventTime(item: NotEmptyEventMapItem, isAllDay: boolean): boolean {\r\n    return (item.type === EventType.EVENT || item.type === EventType.NEW_EVENT) &&\r\n        item.data.id !== EventCustomId.SELECTION &&\r\n        !isAllDay\r\n}\r\n","import type {CSSProperties} from 'react'\r\nimport React, {useCallback} from 'react'\r\nimport {useDrag} from 'react-dnd'\r\n\r\nimport {useSelectEvent} from '@bpinc/cal-hooks'\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport type {DayOfWeek, DragInfo, NotEmptyEventMapItem} from '@bpinc/cal-state-types'\r\nimport {DragItemTypes, EventCustomId, EventType} from '@bpinc/cal-state-types'\r\nimport {getDragStartDate, getLasts} from '@bpinc/cal-utils'\r\nimport {useOnKeyPressHandler} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\n\r\nexport type ViewMonthEventBlockProps = {\r\n    item: NotEmptyEventMapItem\r\n    title: React.ReactNode | string\r\n    dayOfWeek: DayOfWeek\r\n    className?: string\r\n    classNameAllDay?: string\r\n    dragInfo?: DragInfo\r\n    onDragStart: (date: Date) => void\r\n    showOccupied?: boolean\r\n    selectedEvent?: CalendarEventDetails\r\n    isSelectionInProgress?: boolean\r\n    showInModal?: boolean\r\n}\r\n\r\nexport const ViewMonthEventBlock: React.FC<ViewMonthEventBlockProps> = ({\r\n    item,\r\n    title,\r\n    dayOfWeek,\r\n    className,\r\n    classNameAllDay,\r\n    dragInfo,\r\n    onDragStart,\r\n    showOccupied = false,\r\n    selectedEvent,\r\n    isSelectionInProgress = false,\r\n    showInModal = false,\r\n}) => {\r\n    const selectEvent = useSelectEvent()\r\n\r\n    const [{isDragging}, drag] = useDrag(\r\n        () => ({\r\n            type: DragItemTypes.EVENT,\r\n            item,\r\n            collect: monitor => ({\r\n                isDragging: monitor.isDragging(),\r\n            }),\r\n        }),\r\n        [item],\r\n    )\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (\r\n            (item.type === EventType.EVENT || item.type === EventType.OCCUPIED)\r\n            && item.data.id !== EventCustomId.SELECTION\r\n        ) {\r\n            selectEvent({id: item.data.id})\r\n        }\r\n    }, [item, selectEvent])\r\n\r\n    const handleMouseDown = useCallback((e: React.MouseEvent) => {\r\n        // click within event item should not pop to the cell\r\n        e.stopPropagation()\r\n\r\n        const startDragDate = showInModal ?\r\n            new Date((item as NotEmptyEventMapItem).data.start) :\r\n            getDragStartDate(e.pageX, e.pageY)\r\n\r\n        if (!startDragDate) {\r\n            return\r\n        }\r\n        onDragStart(startDragDate)\r\n    }, [item, onDragStart, showInModal])\r\n\r\n    const onKeyPressHandler = useOnKeyPressHandler(handleClick)\r\n\r\n    const {data, lastsDays} = item\r\n    const lasts = showOccupied ? 1 : getLasts(lastsDays, dayOfWeek)\r\n    const isNoEnd = showOccupied ? lastsDays > 1 : lasts < lastsDays\r\n    const style: CSSProperties = {width: showInModal || isNoEnd ? `calc(100% * ${lasts})` : `calc(100% * ${lasts} - 16px + ${lasts - 1}px)`}\r\n    const dragItem = dragInfo && 'data' in dragInfo.item ? dragInfo?.item.data : null\r\n    const isAllDay = data.allDay || lastsDays > 1\r\n    const isSelected = selectedEvent?.id === data.id || data.id === EventType.NEW_EVENT\r\n    const isOccupied = item.type === EventType.OCCUPIED && !showInModal\r\n    const eventClassName = tcn(\r\n        'relative z-[2] box-border cursor-pointer self-start overflow-hidden whitespace-nowrap text-sm',\r\n        'mx-0 my-0.5 border-l-4 border-solid text-cal-event-text',\r\n        'ease transition-all duration-300',\r\n        className,\r\n        {\r\n            [classNameAllDay || '']: isAllDay || isOccupied,\r\n            '!border-l-0': isOccupied,\r\n            'shadow': isSelected || data.id === EventCustomId.SELECTION,\r\n            'invisible': isDragging || data.id === dragItem?.id,\r\n            'pointer-events-none':\r\n                dragInfo || data.id === EventCustomId.SELECTION && isSelectionInProgress || selectedEvent && !isSelected,\r\n        },\r\n    )\r\n\r\n    return (\r\n        <div\r\n            // user can hover existed event while selection\r\n            ref={isSelectionInProgress ? undefined : drag}\r\n            tabIndex={0}\r\n            data-event-id={item.data.id}\r\n            className={eventClassName}\r\n            style={style}\r\n            onClick={handleClick}\r\n            onMouseDown={handleMouseDown}\r\n            onKeyDown={onKeyPressHandler}\r\n        >\r\n            <div className=\"h-4.5 select-none truncate px-[3px] py-0 leading-[18px]\">\r\n                {title}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport type {NotEmptyEventMapItem} from '@bpinc/cal-state-types'\r\n\r\nimport {useMonthEventTitle} from '../../../../../hooks/useMonthEventTitle'\r\nimport type {ViewMonthEventProps} from './ViewMonthEvent'\r\nimport {ViewMonthEventBlock} from './ViewMonthEventBlock'\r\n\r\n\r\ntype ViewMonthMeetingProps = Omit<ViewMonthEventProps, 'item'> & {\r\n    item: NotEmptyEventMapItem\r\n}\r\n\r\nexport const ViewMonthMeeting: React.FC<ViewMonthMeetingProps> = props => {\r\n    const title = useMonthEventTitle(props.item)\r\n\r\n    return (\r\n        <ViewMonthEventBlock\r\n            title={title}\r\n            className=\"border-l-cal-event-border bg-cal-event-bg\"\r\n            classNameAllDay=\"!border-l-cal-day-event-border !bg-cal-day-event-bg\"\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport type {NotEmptyEventMapItem} from '@bpinc/cal-state-types'\r\n\r\nimport type {ViewMonthEventProps} from './ViewMonthEvent'\r\nimport {ViewMonthEventBlock} from './ViewMonthEventBlock'\r\n\r\n\r\ntype ViewMonthRequestProps = Omit<ViewMonthEventProps, 'item'> & {\r\n    item: NotEmptyEventMapItem\r\n}\r\n\r\nexport const ViewMonthRequest: React.FC<ViewMonthRequestProps> = props => {\r\n    return (\r\n        <ViewMonthEventBlock\r\n            title={props.item.data.title}\r\n            className=\"border-l-cal-request-border bg-cal-request-bg\"\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport type {NotEmptyEventMapItem} from '@bpinc/cal-state-types'\r\n\r\nimport {useShiftTitle} from '../../../../../hooks/useShiftTitle'\r\nimport type {ViewMonthEventProps} from './ViewMonthEvent'\r\nimport {ViewMonthEventBlock} from './ViewMonthEventBlock'\r\n\r\n\r\ntype ViewMonthShiftProps = Omit<ViewMonthEventProps, 'item'> & {\r\n    item: NotEmptyEventMapItem\r\n}\r\n\r\nexport const ViewMonthShift: React.FC<ViewMonthShiftProps> = props => {\r\n    const title = useShiftTitle(props.item)\r\n\r\n    return (\r\n        <ViewMonthEventBlock\r\n            title={title}\r\n            className=\"border-l-cal-shift-border bg-cal-shift-bg\"\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {EventType as EventBlockType} from '@bpinc/cal-request-urls'\r\nimport type {EventMapItem} from '@bpinc/cal-state-types'\r\nimport {EventType} from '@bpinc/cal-state-types'\r\n\r\nimport {ViewMonthEmptyBlock} from './ViewMonthEmptyBlock'\r\nimport {type ViewMonthEventBlockProps} from './ViewMonthEventBlock'\r\nimport {ViewMonthMeeting} from './ViewMonthMeeting'\r\nimport {ViewMonthRequest} from './ViewMonthRequest'\r\nimport {ViewMonthShift} from './ViewMonthShift'\r\n\r\n\r\nexport type ViewMonthEventProps =\r\n    Omit<ViewMonthEventBlockProps, 'item' | 'title' | 'className' | 'classNameAllDay'>\r\n    & {\r\n        item: EventMapItem\r\n    }\r\n\r\nexport const ViewMonthEvent: React.FC<ViewMonthEventProps> = ({\r\n    item,\r\n    ...rest\r\n}) => {\r\n    if (item.type === EventType.EVENT || item.type === EventType.NEW_EVENT ||\r\n        (item.type === EventType.OCCUPIED && (rest.dayOfWeek === 0 || rest.showOccupied))\r\n    ) {\r\n        switch (item.data.type) {\r\n            case EventBlockType.REQUEST:\r\n                return <ViewMonthRequest item={item} {...rest} />\r\n            case EventBlockType.SHIFT:\r\n                return <ViewMonthShift item={item} {...rest} />\r\n            default:\r\n                return <ViewMonthMeeting item={item} {...rest} />\r\n        }\r\n    }\r\n\r\n    return <ViewMonthEmptyBlock />\r\n}\r\n","import React, {useCallback, useMemo} from 'react'\r\n\r\nimport {useDayOfWeek, useMonthName} from '@bpinc/cal-hooks'\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport {type DayOfWeek, type DragInfo, type EventMapItem, EventType} from '@bpinc/cal-state-types'\r\nimport {stopPropagation} from '@bpinc/lib-helpers'\r\nimport {SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {ViewMonthEvent} from '../ViewMonthEvent'\r\n\r\n\r\ntype ViewMonthMorePopupProps = {\r\n    day: Date\r\n    events: EventMapItem[]\r\n    selectedEvent?: CalendarEventDetails\r\n    dragInfo?: DragInfo\r\n    dayOfWeek: DayOfWeek\r\n    onDragStart: (date: Date) => void\r\n    onEventFormClose: () => void\r\n    onClose: () => void\r\n}\r\n\r\nexport const ViewMonthMorePopup: React.FC<ViewMonthMorePopupProps> = props => {\r\n    const {\r\n        day,\r\n        events,\r\n        selectedEvent,\r\n        dragInfo,\r\n        dayOfWeek,\r\n        onDragStart,\r\n        onEventFormClose,\r\n        onClose,\r\n    } = props\r\n    const {t} = useLocalizationState()\r\n    const monthName = useMonthName(day)\r\n    const dayName = useDayOfWeek(day)\r\n    const title = useMemo(() =>\r\n        buildTitle(day, monthName, dayName)\r\n    , [day, monthName, dayName])\r\n\r\n    const onMouseDown = useCallback((evt: React.MouseEvent) => {\r\n        evt.stopPropagation()\r\n\r\n        if (selectedEvent) {\r\n            onEventFormClose()\r\n        }\r\n    }, [selectedEvent, onEventFormClose])\r\n\r\n    const list = useMemo(() => (\r\n        events.filter(({type}) => type !== EventType.EMPTY)\r\n    ), [events])\r\n\r\n    return (\r\n        <div\r\n            onMouseDown={onMouseDown}\r\n            onMouseOver={stopPropagation}\r\n            onMouseUp={stopPropagation}\r\n        >\r\n            <div className=\"flex flex-row justify-between\">\r\n                <div className=\"my-0 ml-0 mr-4 whitespace-nowrap text-lg/[23px]\">\r\n                    {title}\r\n                </div>\r\n                <SemanticButton\r\n                    className=\"m-0 h-6 w-6 border-none p-0 shadow-none\"\r\n                    basic\r\n                    icon=\"close\"\r\n                    tooltip={t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonClose()}\r\n                    size=\"large\"\r\n                    onClick={onClose}\r\n                />\r\n            </div>\r\n            <div className=\"mt-4\">\r\n                {list.map((item, i) => (\r\n                    <ViewMonthEvent\r\n                        key={i}\r\n                        item={item}\r\n                        selectedEvent={selectedEvent}\r\n                        dayOfWeek={dayOfWeek}\r\n                        dragInfo={dragInfo}\r\n                        onDragStart={onDragStart}\r\n                        showOccupied\r\n                        showInModal\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction buildTitle(day: Date, monthName: string, dayName: string): string {\r\n    return `${dayName}, ${monthName} ${day.getDate()}`\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useRef} from 'react'\r\n\r\nimport type {EventMapItem} from '@bpinc/cal-state-types'\r\nimport {useBoolean} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {Popup} from '@bpinc/lib-ui-elements'\r\n\r\nimport type {ViewMonthEventsProps} from '..'\r\nimport {ViewMonthMorePopup} from './ViewMonthMorePopup'\r\n\r\n\r\ninterface MoreEventsPopupOpenerProps extends\r\n    Pick<ViewMonthEventsProps, 'day' | 'dragInfo' | 'dayOfWeek' | 'onDragStart' | 'onEventFormClose' | 'selectedEvent'> {\r\n    children: ({toggle}: {toggle: () => void}) => JSX.Element\r\n    events: EventMapItem[]\r\n}\r\n\r\nexport const MoreEventsPopupOpener: FC<MoreEventsPopupOpenerProps> = ({\r\n    children,\r\n    day,\r\n    events,\r\n    selectedEvent,\r\n    dragInfo,\r\n    onDragStart,\r\n    onEventFormClose,\r\n    dayOfWeek,\r\n}) => {\r\n    const mountRef = useRef<HTMLDivElement>(null)\r\n    const {value: show, toggle, setFalse: handleClose} = useBoolean()\r\n\r\n    return (\r\n        <div\r\n            ref={mountRef}\r\n            className=\"w-full [&>div>div]:!transform-none\"\r\n        >\r\n            <Popup\r\n                show={show}\r\n                mountNode={mountRef.current}\r\n                placement=\"top\"\r\n                contentClassName={tcn('z-[3] mt-px min-w-full rounded border-[#ddd]', {\r\n                    'pointer-events-none opacity-30': dragInfo,\r\n                })}\r\n                onClickOutside={handleClose}\r\n                content={\r\n                    <ViewMonthMorePopup\r\n                        day={day}\r\n                        events={events}\r\n                        selectedEvent={selectedEvent}\r\n                        onEventFormClose={onEventFormClose}\r\n                        onClose={handleClose}\r\n                        dragInfo={dragInfo}\r\n                        dayOfWeek={dayOfWeek}\r\n                        onDragStart={onDragStart}\r\n                    />\r\n                }\r\n            >\r\n                {children({toggle})}\r\n            </Popup>\r\n        </div>\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React from 'react'\r\n\r\nimport {stopPropagation} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype MoreEventsPopupToggleProps = {\r\n    eventsCount: number\r\n    onClick: () => void\r\n}\r\n\r\nexport const MoreEventsPopupToggle: FC<MoreEventsPopupToggleProps> = ({\r\n    eventsCount,\r\n    onClick,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n\r\n    return (\r\n        <button\r\n            className={tcn(\r\n                'relative z-[2] self-start overflow-hidden whitespace-nowrap text-sm/[14px]',\r\n                'ease mt-0.5 box-border px-2 py-0.5 no-underline transition-all duration-300',\r\n                'h-4.5 w-[calc(100%-16px)] bg-cal-light-bg',\r\n                'cursor-pointer select-none text-cal-dark-text hover:underline',\r\n            )}\r\n            onClick={onClick}\r\n            onMouseDown={stopPropagation}\r\n        >\r\n            {t.CALENDAR.more(eventsCount.toString())}\r\n        </button>\r\n    )\r\n}\r\n","import React, {useCallback, useMemo} from 'react'\r\nimport {useDrop} from 'react-dnd'\r\n\r\nimport {useIsCommunicator} from '@bpinc/ad-current-tab-data-context'\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport type {\r\n    DayOfWeek,\r\n    DragInfo,\r\n    EventMap,\r\n    EventMapItem,\r\n    NotEmptyEventMapItem,\r\n    SelectionRange,\r\n    WeekOfMonth,\r\n} from '@bpinc/cal-state-types'\r\nimport {DragItemTypes, EventType} from '@bpinc/cal-state-types'\r\nimport {\r\n    checkIfCellIsDropTarget,\r\n    checkIfCellIsSelected,\r\n    getEventMapKey,\r\n    getInfoForMore,\r\n    getSelectionRange,\r\n} from '@bpinc/cal-utils'\r\nimport {isToday, stopPropagation, useOnKeyPressHandler} from '@bpinc/lib-helpers'\r\nimport {isHTMLDivElement} from '@bpinc/lib-html-utils'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport type {StateSetter} from '@bpinc/lib-types-helpers'\r\n\r\nimport {useOpenDayView} from '../../../../hooks/useOpenDayView'\r\nimport {MoreEventsPopupOpener, MoreEventsPopupToggle} from './MoreEventsPopupOpener'\r\nimport {ViewMonthEvent} from './ViewMonthEvent'\r\n\r\n\r\nexport interface ViewMonthEventsProps {\r\n    day: Date\r\n    dayOfWeek: DayOfWeek\r\n    dragInfo?: DragInfo\r\n    dragStartDate?: Date\r\n    onDragStart: StateSetter<Date | undefined>\r\n    eventsByDate: EventMap\r\n    itemsInCell: number\r\n    onCellMouseDown: (e: React.MouseEvent, day: Date) => void\r\n    onCellMouseOver: (e: React.MouseEvent, day: Date) => void\r\n    onCellKeyPress: (day: Date) => void\r\n    onDrop: () => void\r\n    onDropCellHover: StateSetter<DragInfo | undefined>\r\n    onEventFormClose: () => void\r\n    weekOfMonth: WeekOfMonth\r\n    selectedEvent?: CalendarEventDetails\r\n    selectionRange?: SelectionRange\r\n    isOtherMonth: boolean\r\n}\r\n\r\nconst noEvents: EventMapItem[] = []\r\n\r\nexport const ViewMonthEvents: React.FC<ViewMonthEventsProps> = ({\r\n    day,\r\n    dayOfWeek,\r\n    dragInfo,\r\n    dragStartDate,\r\n    onDragStart,\r\n    eventsByDate,\r\n    itemsInCell,\r\n    onCellMouseDown,\r\n    onCellMouseOver,\r\n    onCellKeyPress,\r\n    onDrop,\r\n    onDropCellHover,\r\n    onEventFormClose,\r\n    weekOfMonth,\r\n    selectedEvent,\r\n    selectionRange,\r\n    isOtherMonth,\r\n}) => {\r\n    const events = eventsByDate[getEventMapKey(day)] || noEvents\r\n\r\n    const isCommunicator = useIsCommunicator()\r\n\r\n    const openDayView = useOpenDayView()\r\n\r\n    const [{isDragging}, drop] = useDrop(\r\n        () => ({\r\n            accept: DragItemTypes.EVENT,\r\n            hover: (item: NotEmptyEventMapItem) => {\r\n                const cell: [number, number] = [weekOfMonth, dayOfWeek]\r\n\r\n                if (\r\n                    !dragInfo ||\r\n                    dragInfo.item.data.id !== item.data.id ||\r\n                    dragInfo.cell[0] !== cell[0] ||\r\n                    dragInfo.cell[1] !== cell[1]\r\n                ) {\r\n                    onDropCellHover({\r\n                        cell,\r\n                        item,\r\n                    })\r\n                }\r\n            },\r\n            collect: monitor => ({\r\n                isDragging: !!monitor.getItem(),\r\n            }),\r\n            drop: onDrop,\r\n        }),\r\n        [dragInfo],\r\n    )\r\n\r\n    const [hasMore, moreAmount] = getInfoForMore(events, itemsInCell, eventsByDate)\r\n\r\n    const cellEvents = useMemo(() => {\r\n        return [...events]\r\n            // show new event on the top\r\n            .sort((a, b) => {\r\n                const isANewEvent = a.type === EventType.NEW_EVENT\r\n                const isBNewEvent = b.type === EventType.NEW_EVENT\r\n                return Number(isBNewEvent) - Number(isANewEvent)\r\n            })\r\n            // add space for has more link\r\n            .slice(0, hasMore ? itemsInCell - 1 : itemsInCell)\r\n    }, [events, hasMore, itemsInCell])\r\n\r\n    const handleCellMouseDown = useCallback(\r\n        (e: React.MouseEvent) => {\r\n            onCellMouseDown(e, day)\r\n        },\r\n        [day, onCellMouseDown],\r\n    )\r\n    const handleCellMouseOver = useCallback(\r\n        (e: React.MouseEvent) => {\r\n            onCellMouseOver(e, day)\r\n        },\r\n        [day, onCellMouseOver],\r\n    )\r\n    const handleDayClick = useCallback(() => {\r\n        openDayView(day)\r\n    }, [day, openDayView])\r\n\r\n    const handleCellKeyPressHandler = useCallback((e: React.KeyboardEvent) => {\r\n        if (!isHTMLDivElement(e.target) || e.target.dataset.element !== 'month-cell') {\r\n            return\r\n        }\r\n        onCellKeyPress(day)\r\n    }, [onCellKeyPress, day])\r\n\r\n    const onKeyPressCellHandler = useOnKeyPressHandler(handleCellKeyPressHandler)\r\n    const onKeyPressDayHandler = useOnKeyPressHandler(handleDayClick)\r\n\r\n    const isSelectionInProgress = !!selectionRange\r\n    const range = selectionRange || getSelectionRange(selectedEvent)\r\n    const isSelected = range && checkIfCellIsSelected(day, range)\r\n    const isDropTarget = dragInfo && checkIfCellIsDropTarget(weekOfMonth, dayOfWeek, dragInfo, dragStartDate)\r\n\r\n    return (\r\n        <div\r\n            tabIndex={0}\r\n            data-element=\"month-cell\"\r\n            data-day={Number(day)}\r\n            className={tcn('h-full', {\r\n                'bg-[#bce8f1]':\r\n                    (!isDragging && !dragInfo && isSelected) || isDropTarget,\r\n            })}\r\n            ref={drop}\r\n            onMouseDown={handleCellMouseDown}\r\n            onMouseOver={isSelectionInProgress ? handleCellMouseOver : undefined}\r\n            onKeyDown={onKeyPressCellHandler}\r\n        >\r\n            <div className=\"absolute left-0 top-0 flex h-full w-full flex-col items-stretch\">\r\n                <div\r\n                    className={tcn('flex justify-start px-4 py-1', {\r\n                        'justify-end p-0.5': isCommunicator,\r\n                    })}\r\n                >\r\n                    <button\r\n                        onClick={handleDayClick}\r\n                        onMouseDown={stopPropagation}\r\n                        onMouseOver={stopPropagation}\r\n                        onMouseUp={stopPropagation}\r\n                        onKeyDown={onKeyPressDayHandler}\r\n                        className={tcn(\r\n                            'flex h-6 w-6 select-none items-center justify-center text-base text-primary-legacy',\r\n                            {\r\n                                'rounded-full bg-primary-legacy text-primary-contrast': isToday(day),\r\n                                'h-5 w-5 text-sm underline': isCommunicator,\r\n                                'pointer-events-none': isSelectionInProgress || selectedEvent,\r\n                                'opacity-50': isOtherMonth,\r\n                            },\r\n                        )}\r\n                    >\r\n                        {day.getDate()}\r\n                    </button>\r\n                </div>\r\n                <div\r\n                    id=\"month-events-container\"\r\n                    className=\"flex shrink grow basis-full flex-col items-center justify-start\"\r\n                >\r\n                    {cellEvents.map((item, i) => (\r\n                        <ViewMonthEvent\r\n                            key={i}\r\n                            item={item}\r\n                            selectedEvent={selectedEvent}\r\n                            dayOfWeek={dayOfWeek}\r\n                            dragInfo={dragInfo}\r\n                            onDragStart={onDragStart}\r\n                            isSelectionInProgress={isSelectionInProgress}\r\n                        />\r\n                    ))}\r\n                    {hasMore && (\r\n                        <MoreEventsPopupOpener\r\n                            events={events}\r\n                            selectedEvent={selectedEvent}\r\n                            onEventFormClose={onEventFormClose}\r\n                            day={day}\r\n                            dayOfWeek={dayOfWeek}\r\n                            onDragStart={onDragStart}\r\n                        >\r\n                            {({toggle}) => (\r\n                                <MoreEventsPopupToggle\r\n                                    eventsCount={moreAmount}\r\n                                    onClick={toggle}\r\n                                />\r\n                            )}\r\n                        </MoreEventsPopupOpener>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\r\nimport {isEqual} from 'lodash-es'\r\n\r\nimport {useSelectEvent} from '@bpinc/cal-hooks'\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport type {DragInfo} from '@bpinc/cal-state-types'\r\nimport {DefaultCalendars, EventCustomId, View} from '@bpinc/cal-state-types'\r\nimport {\r\n    eventDetailsToCalendarEvent,\r\n    eventsToEventMap,\r\n    getDateByMonthViewIndexes,\r\n    getDaysOfWeekIndices,\r\n    getDefaultTimeForHourEvent,\r\n    getMonthEventSelectionRange,\r\n    getRangeFromView,\r\n    getRangeInDays,\r\n    getWeeksInMonth,\r\n    requestsToEventMap,\r\n    shiftsToEventMap,\r\n} from '@bpinc/cal-utils'\r\nimport {areSameMonths, MS_IN_DAY, useEventListener, usePrevious} from '@bpinc/lib-helpers'\r\n\r\nimport {useSelectionRange} from '../../../hooks/useSelectionRange'\r\nimport {ViewMonthEvents} from './ViewMonthEvents'\r\n\r\n\r\ntype ViewMonthContentProps = {\r\n    itemsInCell: number\r\n    isStartFromMonday: boolean\r\n    showWeekends: boolean\r\n}\r\n\r\nexport const ViewMonthContent: React.FC<ViewMonthContentProps> = React.memo(({\r\n    itemsInCell,\r\n    isStartFromMonday,\r\n    showWeekends,\r\n}) => {\r\n    const [dragInfo, setDragInfo] = useState<DragInfo | undefined>()\r\n    const [dragStartDate, setDragStartDate] = useState<Date | undefined>()\r\n    const {\r\n        viewDate,\r\n        calendarFilters,\r\n        calendarEvents,\r\n        selectedEvent,\r\n        timeoffRequests,\r\n        shifts,\r\n    } = useCalendarState([\r\n        'viewDate',\r\n        'calendarFilters',\r\n        'calendarEvents',\r\n        'selectedEvent',\r\n        'timeoffRequests',\r\n        'shifts',\r\n    ])\r\n    const {\r\n        moveCalendarEvent,\r\n        resetEventForm,\r\n        closeEventForm,\r\n        updateSelectedEvent,\r\n    } = useCalendarStateMethods()\r\n    const selectEvent = useSelectEvent()\r\n    const [selectionRange, setSelectionRange] = useSelectionRange()\r\n\r\n    const [start] = getRangeFromView(\r\n        viewDate,\r\n        View.MONTH,\r\n        {expand: true, weekStartsFromMonday: isStartFromMonday},\r\n    ).map(d => new Date(d))\r\n\r\n    const weeksInMonth = useMemo(() => getWeeksInMonth(viewDate), [viewDate])\r\n\r\n    const weekDaysIndices = useMemo(() =>\r\n        getDaysOfWeekIndices({startsFromMonday: isStartFromMonday, withoutWeekend: !showWeekends})\r\n    , [isStartFromMonday, showWeekends])\r\n\r\n    const eventsByDate = useMemo(\r\n        () => {\r\n            const selectedCalendarEvent = selectedEvent && eventDetailsToCalendarEvent(selectedEvent)\r\n            const monthEventRange = selectionRange && getMonthEventSelectionRange(selectionRange)\r\n            let eventMap = eventsToEventMap(calendarEvents, selectedCalendarEvent, monthEventRange)\r\n            if (calendarFilters[DefaultCalendars.REQUESTS]) {\r\n                eventMap = requestsToEventMap(eventMap, timeoffRequests)\r\n            }\r\n            if (calendarFilters[DefaultCalendars.SHIFTS]) {\r\n                eventMap = shiftsToEventMap(eventMap, shifts)\r\n            }\r\n            return eventMap\r\n        },\r\n        [calendarEvents, timeoffRequests, shifts, selectedEvent, selectionRange, calendarFilters],\r\n    )\r\n\r\n    const prevSelectedEvent = usePrevious(selectedEvent)\r\n    const isSelectedEventsEqual = useMemo(() =>\r\n        isEqual(selectedEvent, prevSelectedEvent)\r\n    , [selectedEvent, prevSelectedEvent])\r\n\r\n    // We need to reset dragInfo only when selected event updating is finished\r\n    useEffect(() => {\r\n        if (dragInfo && !isSelectedEventsEqual) {\r\n            setDragInfo(undefined)\r\n            setDragStartDate(undefined)\r\n        }\r\n    }, [dragInfo, isSelectedEventsEqual])\r\n\r\n    const handleDropCellDrop = useCallback(() => {\r\n        if (!dragInfo || !dragStartDate) {\r\n            return\r\n        }\r\n\r\n        const {id: itemId, start: itemStart, end: itemEnd} = dragInfo.item.data\r\n\r\n        const dropCellDate = getDateByMonthViewIndexes(start, dragInfo.cell[0], dragInfo.cell[1])\r\n        const diffDays = getRangeInDays(dragStartDate, dropCellDate) - 1\r\n        const delta = diffDays * MS_IN_DAY * (dragStartDate < dropCellDate ? 1 : -1)\r\n\r\n        if (itemId === EventCustomId.NEW_EVENT) {\r\n            updateSelectedEvent({\r\n                startTime: new Date(itemStart + delta).getTime(),\r\n                endTime: new Date(itemEnd + delta).getTime(),\r\n            })\r\n        } else {\r\n            moveCalendarEvent(itemId, delta)\r\n            setDragInfo(undefined)\r\n            setDragStartDate(undefined)\r\n        }\r\n    }, [\r\n        dragInfo,\r\n        dragStartDate,\r\n        start,\r\n        moveCalendarEvent,\r\n        updateSelectedEvent,\r\n    ])\r\n\r\n    const handleCellMouseDown = useCallback((_: React.MouseEvent, day: Date) => {\r\n        if (selectedEvent) {\r\n            closeEventForm()\r\n            return\r\n        }\r\n        setSelectionRange([day, day])\r\n    }, [selectedEvent, setSelectionRange, closeEventForm])\r\n\r\n    const handleCellMouseOver = useCallback((_: React.MouseEvent, day: Date) => {\r\n        setSelectionRange(prev => {\r\n            if (!prev) {\r\n                return prev\r\n            }\r\n            return [prev[0], day]\r\n        })\r\n    }, [setSelectionRange])\r\n\r\n    const handleCellMouseUp = useCallback((_: MouseEvent) => {\r\n        if (!selectionRange) {\r\n            return\r\n        }\r\n\r\n        const [startDate, endDate] = getMonthEventSelectionRange(selectionRange, eventsByDate)\r\n        selectEvent({\r\n            startTime: Number(startDate),\r\n            endTime: Number(endDate),\r\n        })\r\n    }, [selectEvent, selectionRange, eventsByDate])\r\n\r\n    useEventListener('mouseup', handleCellMouseUp)\r\n\r\n    const handleCellKeyPressEvent = useCallback((day: Date) => {\r\n        selectEvent(getDefaultTimeForHourEvent(day))\r\n    }, [selectEvent])\r\n\r\n    return (\r\n        <div className=\"relative flex-1\">\r\n            <div className=\"absolute left-0 top-0 h-full w-full overflow-y-auto overflow-x-hidden\">\r\n                <table className=\"-mt-px h-full w-full table-fixed border-collapse border-spacing-0\">\r\n                    <tbody id=\"month-content\" data-root-navigation-by-keys className=\"overflow-auto\">\r\n                        {Array.from(\r\n                            {length: weeksInMonth},\r\n                            (_, calendarWeekIndex) => (\r\n                                <tr key={calendarWeekIndex}>\r\n                                    {weekDaysIndices.map(weekDayIndex => {\r\n                                        const day = getDateByMonthViewIndexes(\r\n                                            start,\r\n                                            calendarWeekIndex,\r\n                                            weekDayIndex,\r\n                                        )\r\n\r\n                                        return (\r\n                                            <td\r\n                                                key={weekDayIndex}\r\n                                                className=\"relative border border-solid border-cal-border p-0\"\r\n                                            >\r\n                                                <ViewMonthEvents\r\n                                                    day={day}\r\n                                                    isOtherMonth={!areSameMonths(day, new Date(viewDate))}\r\n                                                    selectedEvent={selectedEvent}\r\n                                                    weekOfMonth={calendarWeekIndex}\r\n                                                    dayOfWeek={weekDayIndex}\r\n                                                    eventsByDate={eventsByDate}\r\n                                                    itemsInCell={itemsInCell}\r\n                                                    dragInfo={dragInfo}\r\n                                                    dragStartDate={dragStartDate}\r\n                                                    onDragStart={setDragStartDate}\r\n                                                    onDropCellHover={setDragInfo}\r\n                                                    onDrop={handleDropCellDrop}\r\n                                                    onEventFormClose={resetEventForm}\r\n                                                    selectionRange={selectionRange}\r\n                                                    onCellMouseDown={handleCellMouseDown}\r\n                                                    onCellMouseOver={handleCellMouseOver}\r\n                                                    onCellKeyPress={handleCellKeyPressEvent}\r\n                                                />\r\n                                            </td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            ),\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nimport {useDaysOfWeek} from '@bpinc/cal-hooks'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\n\r\ntype ViewMonthHeaderProps = {\r\n    isCommunicator: boolean\r\n    isStartFromMonday: boolean\r\n    showWeekends: boolean\r\n}\r\n\r\nexport const ViewMonthHeader: React.FC<ViewMonthHeaderProps> = React.memo(({\r\n    isCommunicator,\r\n    isStartFromMonday,\r\n    showWeekends,\r\n}) => {\r\n    const daysOfWeek = useDaysOfWeek(isCommunicator ?\r\n        {oneLetter: true, startsFromMonday: isStartFromMonday, withoutWeekend: !showWeekends} :\r\n        {short: true, startsFromMonday: isStartFromMonday, withoutWeekend: !showWeekends},\r\n    )\r\n\r\n    return (\r\n        <div className=\"relative flex-none\">\r\n            <table className=\"-mt-px h-full w-full table-fixed border-collapse border-spacing-0\">\r\n                <thead className=\"border-b border-solid border-b-cal-border\">\r\n                    <tr>\r\n                        {daysOfWeek.map((name, index) => (\r\n                            <th\r\n                                key={`${name}_${index}`}\r\n                                className={tcn(\r\n                                    'h-11 text-center text-sm font-bold uppercase text-cal-header-text',\r\n                                    {'h-5 border-none': isCommunicator},\r\n                                )}\r\n                            >\r\n                                {name}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </div>\r\n    )\r\n})\r\n","import React, {\r\n    useCallback,\r\n    useEffect,\r\n    useLayoutEffect,\r\n    useRef,\r\n    useState,\r\n} from 'react'\r\n\r\nimport {useIsCommunicator} from '@bpinc/ad-current-tab-data-context'\r\nimport {usePrevious, useResizeObserver} from '@bpinc/lib-helpers'\r\n\r\nimport {useIsStartFromMonday} from '../../../hooks/useIsStartFromMonday'\r\nimport {useShowWeekends} from '../../../hooks/useShowWeekends'\r\nimport {ViewMonthContent} from './ViewMonthContent'\r\nimport {ViewMonthHeader} from './ViewMonthHeader'\r\n\r\n\r\nexport const ViewMonth: React.FC = React.memo(() => {\r\n    const viewRef = useRef<HTMLDivElement>(null)\r\n    const [itemsInCell, setItemsInCell] = useState(1)\r\n\r\n    const isStartFromMonday = useIsStartFromMonday()\r\n    const showWeekends = useShowWeekends()\r\n    const isCommunicator = useIsCommunicator()\r\n    const viewObserverEntry = useResizeObserver(viewRef)\r\n    const viewHeight = viewObserverEntry?.contentRect.height\r\n    const prevViewHeight = usePrevious(viewHeight)\r\n\r\n    const calculateItemsInCell = useCallback(() => {\r\n        const eventContainer = document.getElementById('month-events-container')\r\n        if (eventContainer) {\r\n            const itemHeight = 18\r\n            const itemMargin = 2\r\n            const totalItemHeight = itemHeight + 2 * itemMargin\r\n            const height = eventContainer.offsetHeight\r\n            const itemsCanFit = Math.floor(height / totalItemHeight)\r\n\r\n            setItemsInCell(itemsCanFit)\r\n        }\r\n    }, [])\r\n\r\n    useLayoutEffect(() => {\r\n        calculateItemsInCell()\r\n    }, [calculateItemsInCell])\r\n\r\n    useEffect(() => {\r\n        if (viewHeight !== prevViewHeight) {\r\n            calculateItemsInCell()\r\n        }\r\n    }, [viewHeight, prevViewHeight, calculateItemsInCell])\r\n\r\n    return (\r\n        <div className=\"flex flex-1 flex-col\" ref={viewRef}>\r\n            <ViewMonthHeader\r\n                isCommunicator={isCommunicator}\r\n                isStartFromMonday={isStartFromMonday}\r\n                showWeekends={showWeekends}\r\n            />\r\n            <ViewMonthContent\r\n                itemsInCell={itemsInCell}\r\n                isStartFromMonday={isStartFromMonday}\r\n                showWeekends={showWeekends}\r\n            />\r\n        </div>\r\n    )\r\n})\r\n","import React, {useCallback} from 'react'\r\n\r\nimport {formatEventTimes} from '@bpinc/cal-event-ui/src/utils'\r\nimport {useSelectEvent} from '@bpinc/cal-hooks'\r\nimport type {CalendarEvent} from '@bpinc/cal-request-urls'\r\nimport {useOnKeyPressHandler} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype ScheduleEventProps = {\r\n    event: CalendarEvent\r\n    selected: boolean\r\n}\r\n\r\nexport const ScheduleEvent: React.FC<ScheduleEventProps> = ({\r\n    event,\r\n    selected,\r\n}) => {\r\n    const {t, language} = useLocalizationState()\r\n    const selectEvent = useSelectEvent()\r\n\r\n    const handleClick = useCallback(() => {\r\n        selectEvent({id: event.id})\r\n    }, [event.id, selectEvent])\r\n\r\n    const onKeyPressHandler = useOnKeyPressHandler(handleClick)\r\n\r\n    const {from} = formatEventTimes({\r\n        allDay: event.allDay,\r\n        allDayMessage: t.CALENDAR.all_day(),\r\n        startTime: event.start,\r\n        endTime: event.end,\r\n        locale: language,\r\n    })\r\n\r\n    return (\r\n        <div\r\n            tabIndex={0}\r\n            data-event-id={event.id}\r\n            onKeyDown={onKeyPressHandler}\r\n            className={tcn(\r\n                'mb-1 cursor-pointer px-1 py-0.5',\r\n                'text-sm/[16px] text-cal-event-text',\r\n                'border-l-4 border-solid border-l-cal-event-border bg-cal-event-bg',\r\n                {\r\n                    'border-l-cal-day-event-border bg-cal-day-event-bg': event.allDay,\r\n                    'shadow': selected,\r\n                },\r\n            )}\r\n            onClick={handleClick}\r\n        >\r\n            <div>{event.title}</div>\r\n            <div>{from.time}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {useMonthsList} from '@bpinc/cal-hooks'\r\nimport type {CalendarEvent} from '@bpinc/cal-request-urls'\r\nimport {isToday as checkIsToday} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport type {ScheduleTableRowType} from '..'\r\nimport {ScheduleEvent} from './ScheduleEvent'\r\n\r\n\r\nexport interface ScheduleTableRowEventData {\r\n    uuid: string\r\n    type: ScheduleTableRowType.EVENT\r\n    date: number\r\n    event: CalendarEvent\r\n    isFirstEventInCurrentDay: boolean\r\n}\r\n\r\ntype ScheduleTableRowEventProps = {\r\n    row: ScheduleTableRowEventData\r\n    cellStyles: string\r\n    selected: boolean\r\n    isCommunicator: boolean\r\n}\r\n\r\nexport const ScheduleTableRowEvent: React.FC<ScheduleTableRowEventProps> = ({\r\n    row,\r\n    cellStyles,\r\n    selected,\r\n    isCommunicator,\r\n}) => {\r\n    const monthsList = useMonthsList({short: true})\r\n\r\n    const dayTitle = useMemo(() => {\r\n        const date = new Date(row.date)\r\n        const monthIndex = date.getMonth()\r\n        const monthName = monthsList[monthIndex]\r\n        const weekDayName = date.toLocaleDateString('en', {weekday: 'short'})\r\n\r\n        return `${monthName}, ${weekDayName}`\r\n    }, [row.date, monthsList])\r\n\r\n    const dayNumber = new Date(row.date).getDate()\r\n\r\n    const isToday = checkIsToday(new Date(row.date))\r\n\r\n    return (\r\n        <tr>\r\n            <td className={cellStyles}>\r\n                {row.isFirstEventInCurrentDay && (\r\n                    <>\r\n                        <div\r\n                            className={tcn(\r\n                                'text-center text-xs font-bold uppercase text-cal-header-text',\r\n                                {'-translate-x-1': isCommunicator},\r\n                            )}\r\n                        >\r\n                            {dayTitle}\r\n                        </div>\r\n\r\n                        <div className=\"flex justify-center\">\r\n                            <div\r\n                                className={tcn('text-sm no-underline', {\r\n                                    'text-black': !isToday,\r\n                                })}\r\n                            >\r\n                                <div\r\n                                    className={tcn(\r\n                                        'flex h-5 w-5 select-none items-center justify-center text-sm text-primary-legacy',\r\n                                        {\r\n                                            'rounded-full bg-primary-legacy text-primary-contrast no-underline': isToday,\r\n                                            '-translate-x-1': isCommunicator,\r\n                                        },\r\n                                    )}\r\n                                >\r\n                                    {dayNumber}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </td>\r\n\r\n            <td className={cellStyles}>\r\n                <ScheduleEvent\r\n                    event={row.event}\r\n                    selected={selected}\r\n                />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {useMonthsList} from '@bpinc/cal-hooks'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport type {ScheduleTableRowType} from '.'\r\n\r\n\r\nexport interface ScheduleTableRowWeekTitleData {\r\n    uuid: string\r\n    type: ScheduleTableRowType.WEEK_TITLE\r\n    date: number\r\n}\r\n\r\ntype ScheduleTableRowWeekTitleProps = {\r\n    row: ScheduleTableRowWeekTitleData\r\n    cellStyles: string\r\n    isCommunicator: boolean\r\n}\r\n\r\nexport const ScheduleTableRowWeekTitle: React.FC<ScheduleTableRowWeekTitleProps> = ({\r\n    row,\r\n    cellStyles,\r\n    isCommunicator,\r\n}) => {\r\n    const monthsList = useMonthsList({short: true})\r\n\r\n    const weekTitle = useMemo(() => {\r\n        const startDate = new Date(row.date)\r\n        const startDay = startDate.getDate()\r\n        const startMonthIndex = startDate.getMonth()\r\n        const startMonthName = monthsList[startMonthIndex]\r\n\r\n        const endDate = new Date(\r\n            startDate.getFullYear(),\r\n            startDate.getMonth(),\r\n            startDay + 7,\r\n        )\r\n        const endDay = endDate.getDate()\r\n        const endMonthIndex = endDate.getMonth()\r\n        const endMonthName = monthsList[endMonthIndex]\r\n\r\n        const shouldShowEndMonth = startMonthName !== endMonthName\r\n\r\n        return `${startMonthName} ${startDay}-${shouldShowEndMonth ? `${endMonthName} ` : ''}${endDay}`\r\n    }, [row.date, monthsList])\r\n\r\n    return (\r\n        <tr>\r\n            <td className={cellStyles} />\r\n            <td className={cellStyles}>\r\n                <div\r\n                    className={tcn(\r\n                        'text-xs font-bold uppercase text-cal-header-text',\r\n                        {'-translate-x-1': isCommunicator},\r\n                    )}\r\n                >\r\n                    {weekTitle}\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\n\r\nimport type {ScheduleTableRowEventData} from './ScheduleTableRowEvent'\r\nimport {ScheduleTableRowEvent} from './ScheduleTableRowEvent'\r\nimport type {ScheduleTableRowWeekTitleData} from './ScheduleTableRowWeekTitle'\r\nimport {ScheduleTableRowWeekTitle} from './ScheduleTableRowWeekTitle'\r\n\r\n\r\nexport enum ScheduleTableRowType {\r\n    EVENT = 'EVENT',\r\n    WEEK_TITLE = 'WEEK_TITLE',\r\n}\r\n\r\nexport type ScheduleTableRowData = ScheduleTableRowEventData | ScheduleTableRowWeekTitleData\r\n\r\ntype ScheduleTableRowProps = {\r\n    row: ScheduleTableRowData\r\n    selectedEvent: CalendarEventDetails | undefined\r\n    isCommunicator: boolean\r\n}\r\n\r\nexport const ScheduleTableRow: React.FC<ScheduleTableRowProps> = ({\r\n    row,\r\n    selectedEvent,\r\n    isCommunicator,\r\n}) => {\r\n    const cellStyles = 'relative h-[34px] p-0 no-underline first:w-[79px]'\r\n\r\n    switch (row.type) {\r\n        case ScheduleTableRowType.EVENT:\r\n            return (\r\n                <ScheduleTableRowEvent\r\n                    row={row}\r\n                    cellStyles={cellStyles}\r\n                    selected={row.event.id === selectedEvent?.id}\r\n                    isCommunicator={isCommunicator}\r\n                />\r\n            )\r\n        case ScheduleTableRowType.WEEK_TITLE:\r\n            return (\r\n                <ScheduleTableRowWeekTitle\r\n                    row={row}\r\n                    cellStyles={cellStyles}\r\n                    isCommunicator={isCommunicator}\r\n                />\r\n            )\r\n        default:\r\n            return null\r\n    }\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useEffect, useMemo, useState} from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport type {ScheduleTableRowData} from './ScheduleTableRow'\r\nimport {ScheduleTableRowType} from './ScheduleTableRow'\r\n\r\n\r\ntype ScheduleTimelineProps = {\r\n    tableRows: ScheduleTableRowData[]\r\n}\r\n\r\nexport const ScheduleTimeline: FC<ScheduleTimelineProps> = ({tableRows}) => {\r\n    const [top, setTop] = useState(0)\r\n    const style = useMemo(() => ({top}), [top])\r\n\r\n    useEffect(() => {\r\n        function timeToTop() {\r\n            const now = new Date()\r\n\r\n            const firstTableRowMoreThanNowIndex = tableRows.findIndex(row => row.date >= now.valueOf())\r\n            const previousRows = tableRows.slice(0, firstTableRowMoreThanNowIndex)\r\n\r\n            const previousRowsHeightSum = previousRows.reduce((sum, row) => {\r\n                const heightsByRowType = {\r\n                    [ScheduleTableRowType.EVENT]: 44,\r\n                    [ScheduleTableRowType.WEEK_TITLE]: 34,\r\n                } as const\r\n\r\n                const rowHeight = heightsByRowType[row.type]\r\n\r\n                return sum + rowHeight\r\n            }, 0)\r\n\r\n            return previousRowsHeightSum\r\n        }\r\n\r\n        const recalculateTop = () => setTop(timeToTop())\r\n        const interval = setInterval(recalculateTop, 30_000)\r\n        recalculateTop()\r\n\r\n        return () => clearInterval(interval)\r\n    }, [tableRows])\r\n\r\n    return (\r\n        <div\r\n            className={tcn(\r\n                'absolute top-0 z-[1] h-px w-full bg-cal-timeline',\r\n                'before:absolute before:block before:h-2 before:w-2',\r\n                'before:-translate-x-2 before:-translate-y-1/2 before:rounded-full before:bg-cal-timeline',\r\n            )}\r\n            style={style}\r\n        />\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {useIsCommunicator} from '@bpinc/ad-current-tab-data-context'\r\nimport type {CalendarEvent} from '@bpinc/cal-request-urls'\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\nimport {View} from '@bpinc/cal-state-types'\r\nimport {getRangeFromView} from '@bpinc/cal-utils'\r\nimport {DAYS_IN_WEEK, MS_IN_DAY} from '@bpinc/lib-helpers'\r\nimport {uuid} from '@bpinc/lib-uuid'\r\n\r\nimport type {ScheduleTableRowData} from './ScheduleTableRow'\r\nimport {ScheduleTableRow, ScheduleTableRowType} from './ScheduleTableRow'\r\nimport {ScheduleTimeline} from './ScheduleTimeline'\r\n\r\n\r\nfunction checkIfRangesItersects(range1: [number, number], range2: [number, number]) {\r\n    return (\r\n        (\r\n            range1[0] >= range2[0] &&\r\n            range1[0] <= range2[1]\r\n        ) ||\r\n        (\r\n            range1[1] >= range2[0] &&\r\n            range1[1] <= range2[1]\r\n        ) ||\r\n        (\r\n            range2[0] >= range1[0] &&\r\n            range2[0] <= range1[1]\r\n        ) ||\r\n        (\r\n            range2[1] >= range1[0] &&\r\n            range2[1] <= range1[1]\r\n        )\r\n    )\r\n}\r\n\r\n\r\nexport const ScheduleGrid: React.FC = React.memo(() => {\r\n    const {\r\n        viewDate,\r\n        calendarEvents,\r\n        selectedEvent,\r\n    } = useCalendarState(['viewDate', 'calendarEvents', 'selectedEvent'])\r\n\r\n    const isCommunicator = useIsCommunicator()\r\n\r\n    const uniqueCalendarEvents = useMemo(() => {\r\n        return calendarEvents.reduce((acc: CalendarEvent[], event: CalendarEvent) => {\r\n            const hasEvent = acc.find(it => it.id === event.id)\r\n            if (hasEvent) {\r\n                return acc\r\n            }\r\n\r\n            return [\r\n                ...acc,\r\n                event,\r\n            ]\r\n        }, [])\r\n    }, [calendarEvents])\r\n\r\n    const [start, end] = getRangeFromView(viewDate, View.SCHEDULE)\r\n\r\n    const tableRows = useMemo(() => {\r\n        const items: ScheduleTableRowData[] = []\r\n\r\n        let currentDateStart = start\r\n        let daysCounter = 0\r\n        while (currentDateStart < end) {\r\n            const shouldShowWeekTitle = daysCounter % DAYS_IN_WEEK === 0\r\n\r\n            if (shouldShowWeekTitle) {\r\n                items.push({\r\n                    type: ScheduleTableRowType.WEEK_TITLE,\r\n                    uuid: uuid(),\r\n                    date: currentDateStart,\r\n                })\r\n            }\r\n\r\n            const currentDayEnd = currentDateStart + MS_IN_DAY - 1\r\n\r\n            let isFirstEventInCurrentDay = true\r\n\r\n            uniqueCalendarEvents.forEach(event => {\r\n                const isEventIntersectsCurrentDay = checkIfRangesItersects(\r\n                    [event.start, event.end],\r\n                    [currentDateStart, currentDayEnd],\r\n                )\r\n\r\n                if (!isEventIntersectsCurrentDay) {\r\n                    return\r\n                }\r\n\r\n                items.push({\r\n                    type: ScheduleTableRowType.EVENT,\r\n                    uuid: uuid(),\r\n                    event,\r\n                    isFirstEventInCurrentDay,\r\n                    date: currentDateStart,\r\n                })\r\n\r\n                isFirstEventInCurrentDay = false\r\n            })\r\n\r\n            daysCounter++\r\n            currentDateStart = currentDayEnd + 1\r\n        }\r\n\r\n        return items\r\n    }, [uniqueCalendarEvents, start, end])\r\n\r\n    return (\r\n        <>\r\n            <table\r\n                className=\"-mt-px h-full w-full table-fixed border-collapse border-spacing-0\"\r\n            >\r\n                <tbody className=\"overflow-auto\">\r\n                    {tableRows.map(row => (\r\n                        <ScheduleTableRow\r\n                            key={row.uuid}\r\n                            row={row}\r\n                            selectedEvent={selectedEvent}\r\n                            isCommunicator={isCommunicator}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <ScheduleTimeline tableRows={tableRows} />\r\n        </>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nimport {ScheduleGrid} from './ScheduleGrid'\r\n\r\n\r\nexport const ViewSchedule: React.FC = () => {\r\n    return (\r\n        <>\r\n            <div className=\"h-5 border border-solid border-[#eaf0f4] bg-[#f5f6fa]\" />\r\n            <div className=\"flex flex-1 flex-col\">\r\n                <div className=\"relative flex-1\">\r\n                    <div className=\"absolute left-0 top-0 h-full w-full overflow-y-auto overflow-x-hidden pr-[3px]\">\r\n                        <ScheduleGrid />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {DndProvider} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\n\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\nimport {View} from '@bpinc/cal-state-types'\r\n\r\nimport {useEventsLoader} from '../../hooks/useEventsLoader'\r\nimport {useRequestsLoader} from '../../hooks/useRequestsLoader'\r\nimport {useShiftsLoader} from '../../hooks/useShiftsLoader'\r\nimport {CalendarBodyLoader} from './CalendarBodyLoader'\r\nimport {ViewColumns} from './ViewColumns'\r\nimport {ViewMonth} from './ViewMonth'\r\nimport {ViewSchedule} from './ViewSchedule'\r\n\r\n\r\nexport const CalendarBody = React.memo(() => {\r\n    useEventsLoader()\r\n    useRequestsLoader()\r\n    useShiftsLoader()\r\n\r\n    const {view, calendarEventsLoading: isLoading} = useCalendarState([\r\n        'view',\r\n        'calendarEventsLoading',\r\n    ])\r\n\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n            <div className=\"relative flex flex-1 flex-col\">\r\n                {view === View.MONTH && <ViewMonth />}\r\n\r\n                {(view === View.WEEK || view === View.DAY) && <ViewColumns />}\r\n\r\n                {view === View.SCHEDULE && <ViewSchedule />}\r\n\r\n                {isLoading && <CalendarBodyLoader />}\r\n            </div>\r\n        </DndProvider>\r\n    )\r\n})\r\n","import {useEffect, useRef} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\n\r\n\r\nexport function useShiftsLoader() {\r\n    const {getShifts} = useCalendarStateMethods()\r\n    const calendarOwnerUserId = useCalendarState('calendarOwnerUserId')\r\n    const loaded = useRef(false)\r\n\r\n    useEffect(() => {\r\n        if (loaded.current) {\r\n            return\r\n        }\r\n\r\n        if (calendarOwnerUserId) {\r\n            loaded.current = true\r\n            getShifts(calendarOwnerUserId)\r\n        }\r\n    }, [\r\n        loaded,\r\n        calendarOwnerUserId,\r\n        getShifts,\r\n    ])\r\n}\r\n","import {useEffect} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {View} from '@bpinc/cal-state-types'\r\nimport {getRangeFromView} from '@bpinc/cal-utils'\r\nimport {usePreviousValue} from '@bpinc/lib-helpers'\r\n\r\n\r\nexport function useRequestsLoader() {\r\n    const {getTimeoffRequests} = useCalendarStateMethods()\r\n    const {calendarOwnerUserId, viewDate} = useCalendarState(\r\n        ['calendarOwnerUserId', 'viewDate'],\r\n    )\r\n    const prevViewDate = usePreviousValue(viewDate)\r\n\r\n    useEffect(() => {\r\n        if (prevViewDate) {\r\n            return\r\n        }\r\n\r\n        const [start, end] = getRangeFromView(viewDate, View.MONTH)\r\n        if (calendarOwnerUserId) {\r\n            getTimeoffRequests({\r\n                userId: calendarOwnerUserId,\r\n                dateFrom: new Date(start).toISOString(),\r\n                dateTo: new Date(end).toISOString(),\r\n            })\r\n        }\r\n    }, [\r\n        calendarOwnerUserId,\r\n        viewDate,\r\n        prevViewDate,\r\n        getTimeoffRequests,\r\n    ])\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {memo, useCallback, useMemo} from 'react'\r\n\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport type {CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {SmHeader} from '@bpinc/lib-external-ui-elements'\r\nimport {IconTrash} from '@bpinc/lib-icons'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype Props = {\r\n    defaultValues: CalendarEventFields\r\n    isNewEvent: boolean\r\n    editing: boolean\r\n    deleting: boolean\r\n    saving: boolean\r\n    onDelete(): void\r\n    isCommunicator: boolean\r\n}\r\n\r\nexport const CalendarEventFormControls: FC<Props> = memo(({\r\n    defaultValues,\r\n    isNewEvent,\r\n    editing,\r\n    deleting,\r\n    saving,\r\n    onDelete,\r\n    isCommunicator,\r\n}) => {\r\n    const {t: {CALENDAR_EVENT_FORM: message}} = useLocalizationState()\r\n\r\n    const {\r\n        closeEventForm,\r\n        editSelectedEvent,\r\n    } = useCalendarStateMethods()\r\n\r\n    const handleCancel = useCallback(() => closeEventForm(), [closeEventForm])\r\n    const handleEdit = useCallback(() => editSelectedEvent(), [editSelectedEvent])\r\n\r\n    const saveButton = useMemo(() => (\r\n        <SemanticButton\r\n            type=\"submit\"\r\n            color=\"blue\"\r\n            aria-label={message.aria_event_save_label()}\r\n            content={message.button_save_text()}\r\n            loading={saving}\r\n            disabled={deleting}\r\n        />\r\n    ), [message, saving, deleting])\r\n\r\n    const editButton = useMemo(() => (\r\n        <SemanticButton\r\n            type=\"button\"\r\n            basic\r\n            aria-label={message.aria_event_edit_label()}\r\n            content={message.button_edit_text()}\r\n            enabledInOffline\r\n            disabled={deleting}\r\n            onClick={handleEdit}\r\n        />\r\n    ), [message, deleting, handleEdit])\r\n\r\n    const cancelButton = useMemo(() => (\r\n        <SemanticButton\r\n            type=\"button\"\r\n            onClick={handleCancel}\r\n            aria-label={message.aria_event_cancel_label()}\r\n            {...(isCommunicator ? {\r\n                basic: true,\r\n                content: message.button_cancel_text(),\r\n                disabled: saving || deleting,\r\n            } : {\r\n                className: 'flex h-auto items-center bg-transparent p-1',\r\n                size: 'large',\r\n                icon: 'times',\r\n            })}\r\n        />\r\n    ), [message, saving, deleting, handleCancel, isCommunicator])\r\n\r\n    const deleteButton = useMemo(() => (\r\n        <SemanticButton\r\n            type=\"button\"\r\n            basic\r\n            className={tcn({'px-[11px] py-[7px]': !isCommunicator})}\r\n            aria-label={message.aria_event_delete_label()}\r\n            onClick={onDelete}\r\n            loading={deleting}\r\n            disabled={saving}\r\n        >\r\n            {isCommunicator ? message.button_delete_text() : (\r\n                <IconTrash\r\n                    className={tcn('h-4.5 w-3.5', {\r\n                        'opacity-0': deleting,\r\n                    })}\r\n                />\r\n            )}\r\n        </SemanticButton>\r\n    ), [message, saving, deleting, onDelete, isCommunicator])\r\n\r\n    if (isCommunicator) {\r\n        return (\r\n            <div className=\"flex items-center justify-end pb-4\">\r\n                {!editing && (\r\n                    <SmHeader as=\"h3\" className=\"m-0\">\r\n                        {defaultValues.title}\r\n                    </SmHeader>\r\n                )}\r\n                {editing && !isNewEvent && (\r\n                    <>\r\n                        {cancelButton}\r\n                        {saveButton}\r\n                    </>\r\n                )}\r\n                <div className=\"flex grow-[2] justify-end last:!mr-0\">\r\n                    {isNewEvent && cancelButton}\r\n                    {isNewEvent && saveButton}\r\n                    {!editing && editButton}\r\n                    {!isNewEvent && deleteButton}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-end pb-4\">\r\n            {cancelButton}\r\n            <div className=\"flex grow-[2] justify-end\">\r\n                {editing && saveButton}\r\n                {!editing && editButton}\r\n                {!isNewEvent && deleteButton}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport type {UseFormReturn} from 'react-hook-form'\r\nimport {DevTool} from '@hookform/devtools'\r\n\r\nimport {useIsCommunicator} from '@bpinc/ad-current-tab-data-context'\r\nimport {\r\n    EventEdit,\r\n    EventErrors,\r\n    EventPreview,\r\n    useCalendarFormInit,\r\n    useEventHandlers,\r\n    useSubscribeToSelectedEvent,\r\n} from '@bpinc/cal-event-ui'\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\nimport type {CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {getDefaultValues, isNewEvent as isNewEventUtil} from '@bpinc/cal-utils'\r\nimport {SmForm} from '@bpinc/lib-external-ui-elements'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {Loader} from '@bpinc/lib-ui-elements'\r\n\r\nimport {CalendarEventFormControls} from './CalendarEventFormControls'\r\n\r\n\r\nexport type CalendarEventFormProps = {\r\n    form: UseFormReturn<CalendarEventFields>\r\n    event: CalendarEventDetails\r\n    onClose?: () => void\r\n}\r\n\r\nexport const CalendarEventForm: React.FC<CalendarEventFormProps> = ({\r\n    form,\r\n    event,\r\n    onClose,\r\n}) => {\r\n    const isCommunicator = useIsCommunicator()\r\n    const {\r\n        eventEditing,\r\n        eventSaving,\r\n        eventDeleting,\r\n        calendarEventDetailsLoading,\r\n    } = useCalendarState([\r\n        'eventEditing',\r\n        'eventSaving',\r\n        'eventDeleting',\r\n        'calendarEventDetailsLoading',\r\n    ])\r\n\r\n    const formIsSet = useCalendarFormInit(form, event)\r\n    useSubscribeToSelectedEvent(form, event)\r\n\r\n    const {\r\n        clearDeleteResult,\r\n        clearSaveResult,\r\n        handleDelete,\r\n        handleSave,\r\n        saveRequestResult,\r\n        deleteRequestResult,\r\n    } = useEventHandlers(form, onClose)\r\n\r\n    const defaultValues = getDefaultValues(event)\r\n    const isNewEvent = isNewEventUtil(event)\r\n    const eventId = isNewEvent ? event._temporaryId : event.id\r\n    const isLoading = eventId && calendarEventDetailsLoading[eventId]\r\n\r\n    return (\r\n        <div\r\n            className={tcn(\r\n                'relative h-full w-[308px] overflow-x-hidden py-0 pl-3 pr-4',\r\n                {'mt-5 w-full overflow-y-auto p-0 text-left': isCommunicator},\r\n            )}\r\n        >\r\n            {isLoading && (\r\n                <div className=\"absolute inset-0 bg-white opacity-50\">\r\n                    <Loader active size=\"medium\" />\r\n                </div>\r\n            )}\r\n            {!isLoading && (\r\n                <>\r\n                    <EventErrors\r\n                        saveResult={saveRequestResult}\r\n                        clearSaveResult={clearSaveResult}\r\n                        deleteResult={deleteRequestResult}\r\n                        clearDeleteResult={clearDeleteResult}\r\n                    />\r\n                    <SmForm\r\n                        className=\"overflow-hidden\"\r\n                        onSubmit={form.handleSubmit(handleSave)}\r\n                    >\r\n                        <CalendarEventFormControls\r\n                            defaultValues={defaultValues}\r\n                            editing={eventEditing}\r\n                            saving={eventSaving}\r\n                            deleting={eventDeleting}\r\n                            isNewEvent={isNewEvent}\r\n                            onDelete={handleDelete}\r\n                            isCommunicator={isCommunicator}\r\n                        />\r\n\r\n                        {!eventEditing && (\r\n                            <EventPreview\r\n                                form={form}\r\n                                event={event}\r\n                                showTitle={!isCommunicator}\r\n                            />\r\n                        )}\r\n                        {eventEditing && formIsSet && (\r\n                            <EventEdit\r\n                                form={form}\r\n                                event={event}\r\n                            />\r\n                        )}\r\n                    </SmForm>\r\n                    {process.env.NODE_ENV === 'development' && (\r\n                        <DevTool control={form.control} />\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport type {UseFormReturn} from 'react-hook-form'\r\n\r\nimport type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport type {CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {getDefaultValues} from '@bpinc/cal-utils'\r\n\r\n\r\nexport function useCalendarFormInit(\r\n    form: UseFormReturn<CalendarEventFields>,\r\n    event: CalendarEventDetails,\r\n) {\r\n    const [formIsSet, setFormIsSet] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const defaultValues = getDefaultValues(event)\r\n        form.reset(defaultValues)\r\n        setFormIsSet(true)\r\n\r\n        return () => {\r\n            form.reset({})\r\n        }\r\n        // on init\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    return formIsSet\r\n}\r\n","import {useCallback, useState} from 'react'\r\nimport type {UseFormReturn} from 'react-hook-form'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport type {CalendarEventFields, RequestResult} from '@bpinc/cal-state-types'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {getEventDetailsFromFields} from '../utils'\r\n\r\n\r\ntype EventHandlersReturn = {\r\n    saveRequestResult: RequestResult | undefined\r\n    deleteRequestResult: RequestResult | undefined\r\n    clearSaveResult: () => void\r\n    clearDeleteResult: () => void\r\n    handleSave: () => void\r\n    handleDelete: () => void\r\n}\r\n\r\nexport const useEventHandlers = (\r\n    form: UseFormReturn<CalendarEventFields>,\r\n    onComplete?: () => void,\r\n): EventHandlersReturn => {\r\n    const [saveRequestResult, setSaveRequestResult] = useState<RequestResult>()\r\n    const [deleteRequestResult, setDeleteRequestResult] = useState<RequestResult>()\r\n\r\n    const {\r\n        selectedEvent,\r\n        eventSaving,\r\n        eventDeleting,\r\n    } = useCalendarState([\r\n        'selectedEvent',\r\n        'eventSaving',\r\n        'eventDeleting',\r\n    ])\r\n\r\n    assertDefined(selectedEvent)\r\n\r\n    const {\r\n        resetEventForm,\r\n        saveCalendarEventDetails,\r\n        deleteCalendarEvent,\r\n    } = useCalendarStateMethods()\r\n    const {openModal} = useModalsStateMethods()\r\n    const {t: {CALENDAR_EVENT_FORM: message}} = useLocalizationState()\r\n\r\n    const clearSaveResult = useCallback(() => {\r\n        setSaveRequestResult(undefined)\r\n    }, [])\r\n\r\n    const handleSave = useCallback(() => {\r\n        if (eventSaving) {\r\n            return\r\n        }\r\n\r\n        setDeleteRequestResult(undefined)\r\n        setSaveRequestResult(undefined)\r\n\r\n        const event = getEventDetailsFromFields(\r\n            selectedEvent,\r\n            form.getValues(),\r\n        )\r\n\r\n        saveCalendarEventDetails(event)\r\n            .then(\r\n                () => {\r\n                    resetEventForm()\r\n                    onComplete?.()\r\n                },\r\n                () => {\r\n                    setSaveRequestResult('error')\r\n                },\r\n            )\r\n    }, [\r\n        selectedEvent,\r\n        form,\r\n        eventSaving,\r\n        onComplete,\r\n        saveCalendarEventDetails,\r\n        resetEventForm,\r\n    ])\r\n\r\n    /** Deletes the event */\r\n    const handleDelete = useCallback(() => {\r\n        if (eventDeleting) {\r\n            return\r\n        }\r\n\r\n        assertDefined(selectedEvent)\r\n\r\n        setDeleteRequestResult(undefined)\r\n        setSaveRequestResult(undefined)\r\n\r\n        openModal({\r\n            actions: {\r\n                ok: {\r\n                    action() {\r\n                        assertDefined(selectedEvent.id)\r\n\r\n                        deleteCalendarEvent(selectedEvent.id)\r\n                            .then(\r\n                                () => {\r\n                                    resetEventForm()\r\n                                    onComplete?.()\r\n                                },\r\n                                () => {\r\n                                    setDeleteRequestResult('error')\r\n                                },\r\n                            )\r\n                    },\r\n                    title: message.delete_modal_ok(),\r\n                },\r\n                cancel: {\r\n                    title: message.delete_modal_cancel(),\r\n                },\r\n            },\r\n            body: message.delete_modal_text(\r\n                selectedEvent.title,\r\n            ),\r\n            title: message.delete_modal_title(),\r\n        })\r\n    }, [\r\n        selectedEvent,\r\n        deleteCalendarEvent,\r\n        eventDeleting,\r\n        message,\r\n        onComplete,\r\n        openModal,\r\n        resetEventForm,\r\n    ])\r\n\r\n    const clearDeleteResult = useCallback(() => {\r\n        setDeleteRequestResult(undefined)\r\n    }, [])\r\n\r\n\r\n    return {\r\n        saveRequestResult,\r\n        deleteRequestResult,\r\n        clearDeleteResult,\r\n        clearSaveResult,\r\n        handleDelete,\r\n        handleSave,\r\n    }\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {View} from '@bpinc/cal-state-types'\r\nimport {getRangeFromView} from '@bpinc/cal-utils'\r\n\r\n\r\nexport const useMoveDate = () => {\r\n    const {viewDate, view} = useCalendarState(['viewDate', 'view'])\r\n    const {changeViewDate} = useCalendarStateMethods()\r\n\r\n    return useCallback((isMoveForward: boolean) => {\r\n        const [start] = getRangeFromView(viewDate, view)\r\n        const sampleDate = new Date(start)\r\n\r\n        switch (view) {\r\n            case View.MONTH: {\r\n                const y = sampleDate.getFullYear()\r\n                const m = sampleDate.getMonth()\r\n                sampleDate.setFullYear(y, m + (isMoveForward ? 1 : -1), 1)\r\n                changeViewDate(Number(sampleDate))\r\n                break\r\n            }\r\n            case View.WEEK: {\r\n                sampleDate.setHours(24 * 7 * (isMoveForward ? 1 : -1))\r\n                changeViewDate(Number(sampleDate))\r\n                break\r\n            }\r\n            case View.DAY: {\r\n                sampleDate.setHours(24 * (isMoveForward ? 1 : -1))\r\n                changeViewDate(Number(sampleDate))\r\n                break\r\n            }\r\n            case View.SCHEDULE: {\r\n                sampleDate.setHours(24 * (isMoveForward ? 1 : -1))\r\n                changeViewDate(Number(sampleDate))\r\n                break\r\n            }\r\n            default: {\r\n                ((_x: never) => '')(view)\r\n            }\r\n        }\r\n    }, [viewDate, view, changeViewDate])\r\n}\r\n","import React, {useCallback} from 'react'\r\n\r\nimport {useIsCommunicator} from '@bpinc/ad-current-tab-data-context'\r\nimport {useSelectEvent} from '@bpinc/cal-hooks'\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {SmIcon, SmMenu} from '@bpinc/lib-external-ui-elements'\r\nimport {getStartOfDay, MS_IN_HOUR} from '@bpinc/lib-helpers'\r\nimport {IconCalendarToday, IconChevronLeft, IconChevronRight} from '@bpinc/lib-icons'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useIsTodayFitsView} from '../hooks/useIsTodayFitsView'\r\nimport {useMoveDate} from '../hooks/useMoveDate'\r\n\r\n\r\nexport const CalendarNavigation: React.FC = () => {\r\n    const isCommunicator = useIsCommunicator()\r\n    const {changeViewDate} = useCalendarStateMethods()\r\n\r\n    const {t} = useLocalizationState()\r\n    const selectEvent = useSelectEvent()\r\n    const moveDate = useMoveDate()\r\n\r\n    const handlePrevClick = useCallback(() => {\r\n        moveDate(false)\r\n    }, [moveDate])\r\n\r\n    const handleNextClick = useCallback(() => {\r\n        moveDate(true)\r\n    }, [moveDate])\r\n\r\n    const handleTodayClick = useCallback(() => {\r\n        changeViewDate(Date.now())\r\n    }, [changeViewDate])\r\n\r\n    const handleAddEventClick = useCallback(() => {\r\n        selectEvent({\r\n            startTime: getStartOfDay(new Date().valueOf()) + (8 * MS_IN_HOUR),\r\n            endTime: getStartOfDay(new Date().valueOf()) + (9 * MS_IN_HOUR),\r\n        })\r\n    }, [selectEvent])\r\n\r\n    const todayFitsView = useIsTodayFitsView()\r\n\r\n    return (\r\n        <div className=\"flex flex-1\">\r\n            <SemanticButton\r\n                size=\"small\"\r\n                onClick={handleAddEventClick}\r\n                className={tcn({'mr-2': !isCommunicator})}\r\n                icon=\"plus\"\r\n                color={!isCommunicator ? 'blue' : undefined}\r\n                tooltip={t.CALENDAR.add_event_btn_tooltip()}\r\n            />\r\n            <SemanticButton\r\n                basic\r\n                size=\"small\"\r\n                color={todayFitsView ? 'grey' : 'blue'}\r\n                disabled={todayFitsView}\r\n                onClick={handleTodayClick}\r\n                className={tcn('mr-2', {\r\n                    'px-2 py-1.5': isCommunicator,\r\n                })}\r\n                tooltip={t.CALENDAR.today()}\r\n            >\r\n                {isCommunicator ? <IconCalendarToday /> : t.CALENDAR.today()}\r\n            </SemanticButton>\r\n            <SmMenu compact className=\"m-0 min-h-0 shadow-none last:m-0\">\r\n                <SmMenu.Item\r\n                    as=\"button\"\r\n                    className={tcn('p-[9px]', {\r\n                        'h-8 w-8 px-[11px] py-[7px]': isCommunicator,\r\n                    })}\r\n                    onClick={handlePrevClick}\r\n                    title={t.GLOBAL.back()}\r\n                >\r\n                    {isCommunicator ? (\r\n                        <IconChevronLeft className=\"h-4.5 w-2.5\" />\r\n                    ) : <SmIcon className=\"m-0\" name=\"angle left\" />}\r\n                </SmMenu.Item>\r\n                <SmMenu.Item\r\n                    as=\"button\"\r\n                    className={tcn('p-[9px]', {\r\n                        'h-8 w-8 px-[11px] py-[7px]': isCommunicator,\r\n                    })}\r\n                    onClick={handleNextClick}\r\n                    title={t.GLOBAL.next()}\r\n                >\r\n                    {isCommunicator ? (\r\n                        <IconChevronRight className=\"h-4.5 w-2.5\" />\r\n                    ) : <SmIcon className=\"m-0\" name=\"angle right\" />}\r\n                </SmMenu.Item>\r\n            </SmMenu>\r\n        </div>\r\n    )\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\nimport {getRangeFromView} from '@bpinc/cal-utils'\r\n\r\n\r\nexport const useIsTodayFitsView = () => {\r\n    const {viewDate, view} = useCalendarState(['viewDate', 'view'])\r\n\r\n    return useMemo(() => {\r\n        const now = Date.now()\r\n        const [start, end] = getRangeFromView(viewDate, view)\r\n        return now >= start && now <= end\r\n    }, [viewDate, view])\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {isHTMLElement} from '@bpinc/lib-html-utils'\r\n\r\n\r\nconst MOVE_KEYS = ['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight']\r\nconst VIEW_WEEK_ELEMENTS = ['day-header-cell', 'all-day-cell', 'day-column']\r\n\r\n\r\nfunction checkDayViewElement(element: HTMLElement) {\r\n    if (element.dataset.element && VIEW_WEEK_ELEMENTS.includes(element.dataset.element)) {\r\n        return element\r\n    }\r\n}\r\n\r\nexport const useHandlerMoveKeysCalendar = () => {\r\n    return useCallback((e: KeyboardEvent) => {\r\n        if (MOVE_KEYS.includes(e.key) && e.target && isHTMLElement(e.target)) {\r\n            if (e.target.dataset.element === 'month-cell') {\r\n                handlerMoveKeysMonthView(e.key, e.target)\r\n                return\r\n            }\r\n            if (checkDayViewElement(e.target)) {\r\n                handlerMoveKeysDayView(e.key, e.target)\r\n                return\r\n            }\r\n            if (e.target.dataset.element === 'timezone-item') {\r\n                handlerVerticalNavigationElements(e.key, e.target)\r\n                return\r\n            }\r\n        }\r\n    }, [])\r\n}\r\n\r\nfunction handlerMoveKeysMonthView(key: string, currentElement: HTMLElement) {\r\n    const daysOfMonthView = getNavigationByKeysElements(currentElement)\r\n    if (!daysOfMonthView?.length) {\r\n        return\r\n    }\r\n    let currentFocusIndex = daysOfMonthView.indexOf(currentElement)\r\n    switch (key) {\r\n        case 'ArrowDown':\r\n            if (currentFocusIndex + 7 < daysOfMonthView.length) {\r\n                currentFocusIndex = currentFocusIndex + 7\r\n            } else {\r\n                currentFocusIndex = (currentFocusIndex + 1) % 7\r\n            }\r\n            return daysOfMonthView[currentFocusIndex].focus()\r\n        case 'ArrowUp':\r\n            if (currentFocusIndex >= 7) {\r\n                currentFocusIndex = currentFocusIndex - 7\r\n            } else {\r\n                currentFocusIndex = currentFocusIndex === 0 ? daysOfMonthView.length - 1 : currentFocusIndex + 27\r\n            }\r\n            return daysOfMonthView[currentFocusIndex].focus()\r\n        case 'ArrowLeft':\r\n            if (currentFocusIndex === 0) {\r\n                currentFocusIndex = daysOfMonthView.length\r\n            }\r\n            if (currentFocusIndex > 0) {\r\n                currentFocusIndex--\r\n            }\r\n            return daysOfMonthView[currentFocusIndex].focus()\r\n        case 'ArrowRight':\r\n            if (currentFocusIndex === daysOfMonthView.length - 1) {\r\n                currentFocusIndex = 0\r\n            } else if (currentFocusIndex < daysOfMonthView.length - 1) {\r\n                currentFocusIndex++\r\n            }\r\n            return daysOfMonthView[currentFocusIndex].focus()\r\n        default:\r\n            return\r\n    }\r\n}\r\nfunction handlerMoveKeysDayView(key: string, currentElement: HTMLElement) {\r\n    const headerScaleDateRow = document.getElementById('row-header-days')\r\n    const allDayRow = document.getElementById('row-all-day-cells')\r\n    const bodyTableOfDayColumns = document.getElementById('day-columns')\r\n    if (!allDayRow || !headerScaleDateRow || !bodyTableOfDayColumns) {\r\n        return\r\n    }\r\n    const headerScaleDateElements = Array.from(headerScaleDateRow.children) as HTMLElement[]\r\n    const allDayElements = Array.from(allDayRow.children) as HTMLElement[]\r\n    const dayColumns = Array.from(bodyTableOfDayColumns.children) as HTMLElement[]\r\n    const availableElementsOnView = [...headerScaleDateElements, ...allDayElements, ...dayColumns].filter(item => {\r\n        return checkDayViewElement(item)\r\n    })\r\n    let currentFocusIndex = availableElementsOnView.indexOf(currentElement)\r\n    switch (key) {\r\n        case 'ArrowLeft':\r\n            if (currentFocusIndex > 0) {\r\n                currentFocusIndex--\r\n            }\r\n            return availableElementsOnView[currentFocusIndex].focus()\r\n        case 'ArrowRight':\r\n            if (currentFocusIndex < availableElementsOnView.length - 1) {\r\n                currentFocusIndex++\r\n            }\r\n            return availableElementsOnView[currentFocusIndex].focus()\r\n        case 'ArrowDown':\r\n            if (availableElementsOnView.length === 3 && currentFocusIndex < availableElementsOnView.length - 1) {\r\n                currentFocusIndex++\r\n            } else if (currentFocusIndex + 7 < availableElementsOnView.length) {\r\n                currentFocusIndex = currentFocusIndex + 7\r\n            } else if (currentFocusIndex < availableElementsOnView.length && currentFocusIndex) {\r\n                currentFocusIndex = currentFocusIndex % 7\r\n            }\r\n            return availableElementsOnView[currentFocusIndex].focus()\r\n        case 'ArrowUp':\r\n            if (availableElementsOnView.length === 3 && currentFocusIndex > 0) {\r\n                currentFocusIndex--\r\n            } else if (availableElementsOnView.length > 2 && currentFocusIndex >= 7) {\r\n                currentFocusIndex = currentFocusIndex - 7\r\n            }\r\n            return availableElementsOnView[currentFocusIndex].focus()\r\n        default:\r\n            return\r\n    }\r\n}\r\n\r\nfunction handlerVerticalNavigationElements(key: string, currentElement: HTMLElement) {\r\n    const navigationByKeysElements = getNavigationByKeysElements(currentElement)\r\n    if (!navigationByKeysElements?.length) {\r\n        return\r\n    }\r\n    let currentFocusIndex = navigationByKeysElements.indexOf(currentElement)\r\n\r\n    if (key === 'ArrowDown') {\r\n        currentFocusIndex = currentFocusIndex < navigationByKeysElements.length - 1 ? currentFocusIndex + 1 : 0\r\n    }\r\n    if (key === 'ArrowUp') {\r\n        currentFocusIndex = currentFocusIndex > 0 ? currentFocusIndex - 1 : navigationByKeysElements.length - 1\r\n    }\r\n    return navigationByKeysElements[currentFocusIndex].focus()\r\n}\r\n\r\nfunction getNavigationByKeysElements(currentElement: HTMLElement) {\r\n    const root = document.querySelector('[data-root-navigation-by-keys]')\r\n    if (!root) {\r\n        return\r\n    }\r\n    return Array.from(root.querySelectorAll<HTMLElement>(`[data-element=${currentElement.dataset.element}]`))\r\n}\r\n","import React from 'react'\r\n\r\nimport {SemanticButton} from '@bpinc/lib-ui-elements'\r\n\r\n\r\ntype CalendarSidebarButtonProps = {\r\n    onToggle: () => void\r\n    tooltip?: string\r\n}\r\n\r\nexport const CalendarSidebarButton: React.FC<CalendarSidebarButtonProps> = React.memo(({\r\n    onToggle,\r\n    tooltip,\r\n}) => {\r\n    return (\r\n        <SemanticButton\r\n            basic\r\n            size=\"small\"\r\n            icon=\"calendar\"\r\n            onClick={onToggle}\r\n            tooltip={tooltip}\r\n        />\r\n    )\r\n})\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgEventAlert = function SvgEventAlert(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.5 7.25V20.5h17V7.25ZM18.25 4.5h2.5A1.181 1.181 0 0 1 22 5.75v15A1.181 1.181 0 0 1 20.75 22H3.25A1.181 1.181 0 0 1 2 20.75v-15A1.181 1.181 0 0 1 3.25 4.5h2.5V3.25A1.181 1.181 0 0 1 7 2a1.181 1.181 0 0 1 1.25 1.25V4.5h7.5V3.25a1.25 1.25 0 0 1 2.5 0ZM17 17h-2.5v-2.5H17Zm-3.75 0h-2.5v-2.5h2.5ZM17 13.25h-2.5v-2.5H17Zm-3.75 0h-2.5v-2.5h2.5ZM9.5 17H7v-2.5h2.5Z\",\n    fill: \"#fff\",\n    fillRule: \"evenodd\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgEventAlert);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"3b1877afd860a02fcbbbfdf93cf0f48c.svg\";","import type {FC, LazyExoticComponent} from 'react'\r\nimport React, {Suspense} from 'react'\r\n\r\nimport type {AppType} from '@bpinc/state-lookup'\r\n\r\nimport {CommonOpenEventButton} from './CommonOpenEventButton'\r\n\r\n\r\nconst AdOpenEventButton = React.lazy(() => import('./AdOpenEventButton').then(module => ({default: module.AdOpenEventButton})))\r\nconst AdcOpenEventButton = React.lazy(() => import('./AdcOpenEventButton').then(module => ({default: module.AdcOpenEventButton})))\r\n\r\nconst OpenEventButtons: Partial<Record<AppType, LazyExoticComponent<FC<OpenEventButtonCommonProps>>>> = {\r\n    ad: AdOpenEventButton,\r\n    adc: AdcOpenEventButton,\r\n}\r\n\r\nexport type OpenEventButtonCommonProps = {\r\n    eventId: string\r\n    onClick: () => void\r\n}\r\n\r\ntype OpenEventButtonProps = OpenEventButtonCommonProps & {\r\n    type: AppType\r\n}\r\n\r\nexport const OpenEventButton: FC<OpenEventButtonProps> = ({type, ...restProps}) => {\r\n    const Component = OpenEventButtons[type]\r\n\r\n    if (!Component) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <Suspense fallback={<CommonOpenEventButton disabled /> }>\r\n            <Component {...restProps} />\r\n        </Suspense>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {AppType} from '@bpinc/state-lookup'\r\n\r\nimport {OpenEventButton} from './OpenEventButton/OpenEventButton'\r\nimport type {CalendarEventNotificationModalProps} from './CalendarEventNotificationModal'\r\nimport {useHandlers} from './useHandlers'\r\n\r\n\r\ntype ActionsProps = Pick<CalendarEventNotificationModalProps, 'eventId' | 'onClose'> & {\r\n    type: AppType\r\n}\r\n\r\nexport const Actions: React.FC<ActionsProps> = ({eventId, onClose, type}) => {\r\n    const {t} = useLocalizationState()\r\n    const {handleDismiss, handleSnooze, handleOpen} = useHandlers({eventId, onClose})\r\n\r\n    return (\r\n        <div className=\"-ml-2 mt-4 flex justify-end\">\r\n            <OpenEventButton\r\n                type={type}\r\n                eventId={eventId}\r\n                onClick={handleOpen}\r\n            />\r\n            <SemanticButton\r\n                className=\"mx-2 flex h-7 items-center justify-center text-base font-normal\"\r\n                inverted\r\n                onClick={handleSnooze}\r\n            >\r\n                {t.INCOMING_CALL_DIALOG_BOX.calendarAlert_snooze()}\r\n            </SemanticButton>\r\n            <SemanticButton\r\n                onClick={handleDismiss}\r\n                inverted\r\n                className=\"ml-6 flex h-7 items-center justify-center text-base font-normal\"\r\n            >\r\n                {t.INCOMING_CALL_DIALOG_BOX.calendarAlert_dismiss()}\r\n            </SemanticButton>\r\n        </div>\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\nimport queueMicrotask from 'queue-microtask'\r\n\r\nimport {useSelectEvent} from '@bpinc/cal-hooks'\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport type {VoidFunction} from '@bpinc/lib-types-helpers'\r\n\r\n\r\ninterface Params {\r\n    onClose: VoidFunction\r\n    eventId: string | undefined\r\n}\r\n\r\nexport function useHandlers({onClose, eventId}: Params) {\r\n    const {completeCalendarEvent, snoozeCalendarEvent} = useCalendarStateMethods()\r\n    const selectEvent = useSelectEvent()\r\n    const handleOpen = useCallback(() => {\r\n        if (eventId) {\r\n            completeCalendarEvent(eventId)\r\n            queueMicrotask(() => selectEvent({id: eventId}))\r\n        }\r\n\r\n        onClose()\r\n    }, [completeCalendarEvent, eventId, onClose, selectEvent])\r\n\r\n    const handleSnooze = useCallback(() => {\r\n        if (eventId) {\r\n            snoozeCalendarEvent(eventId)\r\n        }\r\n\r\n        onClose()\r\n    }, [eventId, onClose, snoozeCalendarEvent])\r\n\r\n    const handleDismiss = useCallback(() => {\r\n        if (eventId) {\r\n            completeCalendarEvent(eventId)\r\n        }\r\n\r\n        onClose()\r\n    }, [completeCalendarEvent, eventId, onClose])\r\n\r\n    return {handleDismiss, handleSnooze, handleOpen}\r\n}\r\n\r\n","import React, {useMemo} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport type {ControlPosition} from 'react-draggable'\r\nimport Draggable from 'react-draggable'\r\n\r\nimport {useBrowserTabMetaInfo} from '@bpinc/ad-current-tab-data-context'\r\nimport {useDraggableModal} from '@bpinc/lib-helpers-ui'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {Loader} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\nimport headerIconSrc from '../../images/event-alert.svg'\r\nimport notificationBgSrc from '../../images/notification-bg.png'\r\nimport {Actions} from './Actions'\r\nimport {useDateFormatter} from './useDateFormatter'\r\nimport {useEventDetails} from './useEventDetails'\r\nimport {useTitle} from './useTitle'\r\n\r\n\r\nexport type CalendarEventNotificationModalProps = CommonModalProps & {\r\n    eventId: string\r\n    eventTime: number\r\n    moreQueue?: number\r\n    position?: ControlPosition\r\n}\r\n\r\nexport const CalendarEventNotificationModal: React.FC<CalendarEventNotificationModalProps> = ({\r\n    onClose,\r\n    eventId,\r\n    moreQueue,\r\n    position,\r\n    mountNode,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const browserTabInfo = useBrowserTabMetaInfo()\r\n    const appType = browserTabInfo?.app\r\n    const formatDate = useDateFormatter()\r\n    const {eventDetails, loading} = useEventDetails(eventId)\r\n    const title = useTitle({eventDetails, moreQueue})\r\n\r\n    const {draggableNodeRef, draggableProps} = useDraggableModal({\r\n        modalType: 'calendar_event_notification',\r\n        position,\r\n    })\r\n\r\n    const draggable = !!appType && ['ad', 'cal'].includes(appType)\r\n\r\n    const notificationContent = useMemo(() => {\r\n        if (!appType) {\r\n            return null\r\n        }\r\n\r\n        return (\r\n            <section\r\n                role=\"alertdialog\"\r\n                aria-modal=\"true\"\r\n                style={draggable ? {backgroundImage: `url(${notificationBgSrc})`} : undefined}\r\n                className={tcn(\r\n                    'absolute inset-x-4 top-2 z-[100] rounded-md bg-cal-event-border p-4 text-main-text-inverted shadow',\r\n                    {'fixed bottom-2 left-auto right-2 top-auto bg-repeat-y': draggable},\r\n                )}\r\n                aria-label={t.GLOBAL.heading_calendarAlert()}\r\n                data-testid=\"calendar-event-alert\"\r\n                ref={draggable ? draggableNodeRef : undefined}\r\n            >\r\n                <header className=\"flex w-full items-center\">\r\n                    <img alt=\"calendar icon\" src={headerIconSrc} />\r\n                    <p className=\"my-0 ml-2 mr-0 h-[17px] text-base/[17px]\">\r\n                        {title}\r\n                        {!draggable && eventDetails && ` ${formatDate(eventDetails.startTime)}`}\r\n                    </p>\r\n                </header>\r\n                {draggable && (\r\n                    <div>\r\n                        <p className=\"mx-0 mb-0 mt-4 h-[17px] leading-[17px]\">\r\n                            {eventDetails && formatDate(eventDetails.startTime)}\r\n                        </p>\r\n                        <Loader active={loading} color=\"primary\" size=\"medium\" />\r\n                    </div>\r\n                )}\r\n                <Actions eventId={eventId} onClose={onClose} type={appType} />\r\n            </section>\r\n        )\r\n    }\r\n    , [appType, draggable, draggableNodeRef, eventDetails, eventId, formatDate, loading, onClose, t.GLOBAL, title])\r\n\r\n    if (!draggable) {\r\n        return notificationContent\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(<Draggable {...draggableProps}>\r\n            {notificationContent}\r\n        </Draggable>, mountNode || document.getElementById('root') || window.document.body)\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useDaysOfWeek, useMonthsList} from '@bpinc/cal-hooks'\r\nimport {addLeadingZero} from '@bpinc/lib-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\n//TODO: Get actual formatting logic from the designer, implement it localized\r\nexport function useDateFormatter() {\r\n    const {t} = useLocalizationState()\r\n    const monthsShort = useMonthsList({short: true})\r\n    const daysOfWeek = useDaysOfWeek({startsFromMonday: false, short: true})\r\n    return useCallback(\r\n        (timestamp: number) => {\r\n            const date = new Date(timestamp)\r\n            const month = monthsShort[date.getMonth()]\r\n            const day = date.getDate()\r\n            const dow = daysOfWeek[day]\r\n            let h = date.getHours()\r\n            const m = date.getMinutes()\r\n            const ampm = h < 12 ? 'AM' : 'PM'\r\n            h = h % 12 || 12\r\n            const formatted = `${month} ${day}, ${dow}, ${addLeadingZero(h)}:${addLeadingZero(m)}${ampm}`\r\n            return t.INCOMING_CALL_DIALOG_BOX.calendarAlert_dateString(formatted)\r\n        },\r\n        [t.INCOMING_CALL_DIALOG_BOX, monthsShort, daysOfWeek],\r\n    )\r\n}\r\n","import {useEffect} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\n\r\n\r\nexport function useEventDetails(eventId: string) {\r\n    const {calendarEventDetails, calendarEventDetailsLoading} = useCalendarState(\r\n        ['calendarEventDetails', 'calendarEventDetailsLoading'],\r\n    )\r\n    const {getCalendarEventDetails} = useCalendarStateMethods()\r\n\r\n    const eventDetails = calendarEventDetails[eventId]\r\n    const loading = !!calendarEventDetailsLoading[eventId]\r\n\r\n    useEffect(() => {\r\n        if (!eventDetails) {\r\n            getCalendarEventDetails(eventId)\r\n        }\r\n    }, [eventDetails, eventId, getCalendarEventDetails])\r\n\r\n    return {eventDetails, loading}\r\n}\r\n","import type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ninterface Params {\r\n    moreQueue?: number\r\n    eventDetails?: CalendarEventDetails\r\n}\r\nexport function useTitle({moreQueue, eventDetails}: Params) {\r\n    const {t} = useLocalizationState()\r\n\r\n    return (\r\n        [eventDetails?.title, moreQueue ? t.GLOBAL.heading_calendarAlert_morePrefix(String(moreQueue)) : '']\r\n            .filter(Boolean)\r\n            .join(' ')\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport {useEffect} from 'react'\r\n\r\nimport {useIsCommunicator} from '@bpinc/ad-current-tab-data-context'\r\nimport {useLocalSettings} from '@bpinc/ad-local-settings-context'\r\nimport {useCalendarAlertState} from '@bpinc/cal-alert-state-context'\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\nimport {useOpenGlobalSlidingModal} from '@bpinc/lib-sliding-modal-context'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {CalendarEventNotificationModal} from '../CalendarEventNotificationModal'\r\n\r\n\r\nexport const CalendarModalsAutoOpener: FC = () => {\r\n    const openModal = useModalComponentOpener(CalendarEventNotificationModal)\r\n    const openGlobalSlidingModal = useOpenGlobalSlidingModal()\r\n    const calendarEventAlerts = useCalendarAlertState('calendarEventAlerts')\r\n    const localSettings = useLocalSettings()\r\n    const isCommunicator = useIsCommunicator()\r\n    const hasSelectedEvent = useCalendarState(s => !!s.selectedEvent)\r\n\r\n    useEffect(\r\n        function openCalendarEventModal() {\r\n            openModalWithConfig()\r\n\r\n            async function openModalWithConfig() {\r\n                if (calendarEventAlerts.length) {\r\n                    const {id: eventId, time: eventTime} = calendarEventAlerts[0]\r\n                    const moreQueue = calendarEventAlerts.length > 1 ? calendarEventAlerts.length - 1 : undefined\r\n\r\n                    const modalVisualParams = await localSettings.get('modals')\r\n                    const config = modalVisualParams?.calendar_event_notification ?? {}\r\n\r\n                    openModal({\r\n                        eventId,\r\n                        eventTime,\r\n                        moreQueue,\r\n                        ...config,\r\n                    }, {\r\n                        id: 'calendar_event_notification',\r\n                        notification: true,\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        [calendarEventAlerts, calendarEventAlerts.length, localSettings, openModal],\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (!isCommunicator) {\r\n            return\r\n        }\r\n        if (hasSelectedEvent) {\r\n            openGlobalSlidingModal('calendarEvent')\r\n        }\r\n\r\n    }, [hasSelectedEvent, isCommunicator, openGlobalSlidingModal])\r\n\r\n    return null\r\n}\r\n","import React, {useCallback, useMemo, useState} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport type {TimeoffRequestFields} from '@bpinc/cal-state-types'\r\nimport {SmForm} from '@bpinc/lib-external-ui-elements'\r\nimport {CheckboxField, DatePickerField, SelectField, TextAreaField} from '@bpinc/lib-forms-ui'\r\nimport {MS_IN_DAY} from '@bpinc/lib-helpers'\r\nimport {Modal, SemanticButton, Tabs} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\n\r\nenum RequestType {\r\n    ABSENCE = 'absence',\r\n    SCHEDULE_CHANGE = 'schedule_change',\r\n    OVERTIME = 'overtime',\r\n}\r\n\r\nenum AbsenceType {\r\n    ABSENCE_SICK = 'absence_sick',\r\n}\r\n\r\ntype CreateRequestModalProps = CommonModalProps\r\n\r\nexport const CreateRequestModal: React.FC<CreateRequestModalProps> = ({\r\n    onClose,\r\n    ...restProps\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const {timeoffTypes, timeoffRequestSaving} = useCalendarState([\r\n        'timeoffTypes',\r\n        'timeoffRequestSaving',\r\n    ])\r\n    const {saveTimeoffRequest} = useCalendarStateMethods()\r\n    const [activeRequestTab, setActiveRequestTab] = useState<RequestType>(RequestType.ABSENCE)\r\n\r\n    const form = useForm<TimeoffRequestFields>({\r\n        defaultValues: getDefaultValues(),\r\n    })\r\n    const {control} = form\r\n\r\n    const absenceTypeOptions = useMemo(() => {\r\n        return [AbsenceType.ABSENCE_SICK].map(type => {\r\n            let text = ''\r\n            if (type === AbsenceType.ABSENCE_SICK) {\r\n                text = t.CALENDAR_REQUESTS.absence_sick()\r\n            }\r\n\r\n            const typeId = timeoffTypes.find(tType => tType.name === type)?.id\r\n\r\n            return {\r\n                key: type,\r\n                text,\r\n                value: typeId,\r\n            }\r\n        })\r\n    }, [t, timeoffTypes])\r\n\r\n    const requestTabs = useMemo(() => [\r\n        {id: RequestType.ABSENCE, title: t.CALENDAR_REQUESTS.absence_request()},\r\n        {id: RequestType.SCHEDULE_CHANGE, title: t.CALENDAR_REQUESTS.schedule_change_request()},\r\n        {id: RequestType.OVERTIME, title: t.CALENDAR_REQUESTS.overtime_request()},\r\n    ], [t])\r\n\r\n    const onRequestTabChange = useCallback((type: RequestType) => {\r\n        setActiveRequestTab(type)\r\n    }, [])\r\n\r\n    const handleCreate = useCallback(() => {\r\n        saveTimeoffRequest(form.getValues())\r\n            .then(() => onClose())\r\n            .catch(() => onClose())\r\n    }, [form, saveTimeoffRequest, onClose])\r\n\r\n    return (\r\n        <Modal\r\n            onClose={onClose}\r\n            aria-labelledby=\"activeDialogHeader\"\r\n            className=\"!max-w-[600px]\"\r\n            {...restProps}\r\n        >\r\n            <Modal.Header\r\n                id=\"activeDialogHeader\"\r\n                role=\"heading\"\r\n                className=\"border-b-0 p-0\"\r\n            >\r\n                <div className=\"px-6 pt-6 text-lg\">\r\n                    {t.CALENDAR_REQUESTS.schedule_request()}\r\n                </div>\r\n                <Tabs\r\n                    tabs={requestTabs}\r\n                    activeTabId={activeRequestTab}\r\n                    headerClassName=\"bg-transparent\"\r\n                    tabClassName=\"after:bg-black pt-2\"\r\n                    activeTabClassName=\"font-bold\"\r\n                    onChange={onRequestTabChange}\r\n                />\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <SmForm onSubmit={form.handleSubmit(handleCreate)}>\r\n                    <SelectField\r\n                        control={control}\r\n                        label={t.CALENDAR_REQUESTS.absence_type()}\r\n                        name=\"timeOffTypeId\"\r\n                        options={absenceTypeOptions}\r\n                    />\r\n                    <SmForm.Group\r\n                        className=\"border-b border-b-cal-border pb-6\"\r\n                    >\r\n                        <DatePickerField\r\n                            readOnly\r\n                            control={control}\r\n                            clearable={false}\r\n                            width=\"4\"\r\n                            icon=\"caret down\"\r\n                            name=\"startDate\"\r\n                            label={t.CALENDAR_REQUESTS.date()}\r\n                        />\r\n                        <DatePickerField\r\n                            readOnly\r\n                            clearable={false}\r\n                            width=\"4\"\r\n                            control={control}\r\n                            icon=\"caret down\"\r\n                            name=\"endDate\"\r\n                            label=\"&nbsp;\"\r\n                        />\r\n                    </SmForm.Group>\r\n                    <TextAreaField\r\n                        control={control}\r\n                        label={t.CALENDAR_REQUESTS.comments()}\r\n                        maxRows={5}\r\n                        minRows={5}\r\n                        name=\"comment\"\r\n                    />\r\n                    <div className=\"mb-6\">\r\n                        <CheckboxField\r\n                            className=\"mb-1\"\r\n                            control={control}\r\n                            name=\"allOrNothing\"\r\n                            label={t.CALENDAR_REQUESTS.all_or_nothing()}\r\n                        />\r\n                        <div className=\"text-sm text-cal-dark-text\">\r\n                            {t.CALENDAR_REQUESTS.if_unavailable_deny()}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                        <SemanticButton className=\"mr-2.5\" onClick={() => onClose()}>\r\n                            {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonCancel()}\r\n                        </SemanticButton>\r\n                        <SemanticButton\r\n                            type=\"submit\"\r\n                            primary\r\n                            disabled={timeoffRequestSaving}\r\n                            loading={timeoffRequestSaving}\r\n                        >\r\n                            {t.CALENDAR_REQUESTS.create_request()}\r\n                        </SemanticButton>\r\n                    </div>\r\n                </SmForm>\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nfunction getDefaultValues(): TimeoffRequestFields {\r\n    return {\r\n        timeOffTypeId: '',\r\n        startDate: new Date().toISOString(),\r\n        endDate: new Date(Date.now() + MS_IN_DAY).toISOString(),\r\n        comment: '',\r\n        allOrNothing: false,\r\n    }\r\n}\r\n","import React, {useCallback, useState} from 'react'\r\nimport type {BpPeriodSelectProps} from '@servicepattern/jskit'\r\nimport {BpPeriodSelect} from '@servicepattern/jskit'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {getLongDateFormat, languageToLocaleMap} from '@bpinc/lib-helpers'\r\nimport {Modal, SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport type {SearchResultItem} from '@bpinc/lib-user-search-components'\r\nimport {MultipleUserSearch} from '@bpinc/lib-user-search-components'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\n\r\ntype ReassignCalendarEventModalProps = CommonModalProps & {\r\n    eventId?: string\r\n}\r\n\r\nexport const ReassignCalendarEventModal: React.FC<ReassignCalendarEventModalProps> = ({\r\n    eventId,\r\n    onClose,\r\n    ...restProps\r\n}) => {\r\n    const {t, language} = useLocalizationState()\r\n    const {assignCalendarEvent} = useCalendarStateMethods()\r\n    const calendarOwnerUserId = useCalendarState('calendarOwnerUserId')\r\n\r\n    const [searchValue, setSearchValue] = useState('')\r\n\r\n    const [dateRange, setDateRange] = useState<BpPeriodSelectProps['value']>({\r\n        after: null,\r\n        before: null,\r\n    })\r\n    const [users, setUsers] = useState<SearchResultItem[]>([])\r\n\r\n    const handleConfirm = useCallback(() => {\r\n        assignCalendarEvent({\r\n            fromUser: calendarOwnerUserId,\r\n            toUser: users.map(user => user.id),\r\n            start: dateRange?.before || null,\r\n            end: dateRange?.after || null,\r\n        })\r\n\r\n        onClose()\r\n    }, [onClose, dateRange, calendarOwnerUserId, users, assignCalendarEvent])\r\n\r\n    return (\r\n        <Modal\r\n            onClose={onClose}\r\n            closeIcon\r\n            aria-labelledby=\"activeDialogHeader\"\r\n            className=\"!max-w-[540px]\"\r\n            {...restProps}\r\n        >\r\n            <Modal.Header role=\"heading\" id=\"activeDialogHeader\">\r\n                {t.CALENDAR_EVENT_FORM.batchAssignEvents()}\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <div>\r\n                    <div className=\"-mt-2 mb-4\">\r\n                        <MultipleUserSearch\r\n                            searchForUsers\r\n                            searchForTeams\r\n                            withSessionUser\r\n                            autoFocus\r\n                            uniqueSearchId=\"calendar-owner\"\r\n                            searchValue={searchValue}\r\n                            setSearchValue={setSearchValue}\r\n                            selectedItems={users}\r\n                            setSelectedItems={setUsers}\r\n                            inputPlaceholder={t.CALENDAR_EVENT_FORM.batch_assign_event_users_placeholder()}\r\n                            loadingLabel={t.GLOBAL.loading()}\r\n                        />\r\n                    </div>\r\n\r\n                    {!eventId && (\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"mx-0 mb-2 mt-0 items-center\">\r\n                                <div className=\"max-w-[330px]\">\r\n                                    <BpPeriodSelect\r\n                                        config={{\r\n                                            input: {\r\n                                                format: `${getLongDateFormat('L')} ${getLongDateFormat('LT')}`,\r\n                                                label: t.CALENDAR.events_period(),\r\n                                                placeholder: '',\r\n                                            },\r\n                                            form: {\r\n                                                dateFormat: languageToLocaleMap[language],\r\n                                                timeFormat: languageToLocaleMap[language],\r\n                                            },\r\n                                        }}\r\n                                        hideOnScrollPopup={false}\r\n                                        onChange={setDateRange}\r\n                                        value={dateRange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"text-right\">\r\n                        <SemanticButton\r\n                            className=\"mr-2.5\"\r\n                            onClick={() => onClose()}\r\n                        >\r\n                            {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonCancel()}\r\n                        </SemanticButton>\r\n\r\n                        <SemanticButton\r\n                            primary\r\n                            disabled={users.length === 0}\r\n                            onClick={handleConfirm}\r\n                        >\r\n                            {t.CALENDAR.assign_button()}\r\n                        </SemanticButton>\r\n                    </div>\r\n                </div>\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, {useCallback} from 'react'\r\n\r\nimport {useOpenReassignCalendarEventModal} from '@bpinc/cal-modals-ui'\r\nimport {SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport const BatchAssignEvents: React.FC = React.memo(() => {\r\n    const {t} = useLocalizationState()\r\n    const openReassignCalendarEventModal = useOpenReassignCalendarEventModal()\r\n\r\n    const handleUserReassignClick = useCallback(() => {\r\n        openReassignCalendarEventModal({})\r\n    }, [openReassignCalendarEventModal])\r\n\r\n    return (\r\n        <SemanticButton\r\n            basic\r\n            size=\"small\"\r\n            className=\"self-start whitespace-nowrap\"\r\n            onClick={handleUserReassignClick}\r\n            tooltip={t.CALENDAR_EVENT_FORM.batchAssignEvents()}\r\n        >\r\n            {t.CALENDAR_EVENT_FORM.batchAssignEvents()}\r\n        </SemanticButton>\r\n    )\r\n})\r\n","import {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {ReassignCalendarEventModal} from '../components/ReassignCalendarEventModal'\r\n\r\n\r\nexport function useOpenReassignCalendarEventModal() {\r\n    return useModalComponentOpener(ReassignCalendarEventModal)\r\n}\r\n","import React, {useCallback, useEffect, useState} from 'react'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {useCalendarOwner} from '@bpinc/cal-hooks'\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport type {SearchResultItem} from '@bpinc/lib-user-search-components'\r\nimport {MultipleUserSearch} from '@bpinc/lib-user-search-components'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport type CalendarUserSelectProps = {\r\n    className?: string\r\n}\r\n\r\nconst empty: SearchResultItem[] = []\r\n\r\nexport const CalendarUserSelect: React.FC<CalendarUserSelectProps> = ({\r\n    className,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const {setCalendarOwnerUserId} = useCalendarStateMethods()\r\n    const {firstName, lastName} = useCalendarOwner()\r\n    const {formatFullName} = useFormatting()\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const handleToggle = useCallback(() => setIsOpen(v => !v), [])\r\n    const handleClose = useCallback(() => {\r\n        setIsOpen(false)\r\n        setSearchValue('')\r\n        setSelectedItems([])\r\n    }, [])\r\n\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [selectedItems, setSelectedItems] = useState<SearchResultItem[]>([])\r\n\r\n    useEffect(() => {\r\n        const selectedItem = selectedItems[0]\r\n\r\n        if (selectedItem) {\r\n            handleClose()\r\n            setSelectedItems([])\r\n\r\n            if (selectedItem.type === 'user') {\r\n                setCalendarOwnerUserId(selectedItem.id)\r\n            }\r\n        }\r\n\r\n    }, [selectedItems, handleClose, setCalendarOwnerUserId])\r\n\r\n    return (\r\n        <div className=\"relative inline-block\">\r\n            {isOpen ? (\r\n                <MultipleUserSearch\r\n                    searchForUsers\r\n                    className={tcn('absolute left-2.5 top-[-25px] z-[3] w-[280px] rounded text-base shadow', className)}\r\n                    searchForTeams\r\n                    withSessionUser\r\n                    autoFocus\r\n                    uniqueSearchId=\"calendar-owner\"\r\n                    searchValue={searchValue}\r\n                    onClickOutside={handleClose}\r\n                    setSearchValue={setSearchValue}\r\n                    selectedItems={empty}\r\n                    setSelectedItems={setSelectedItems}\r\n                    inputPlaceholder={t.CHAT_CENTER.chat_add_members_search_input_placeholder()}\r\n                    loadingLabel={t.GLOBAL.loading()}\r\n                />\r\n            ) : (\r\n                <button\r\n                    className={tcn(\r\n                        '-mx-1 my-0 border-none bg-none text-xl text-cal-dark-text',\r\n                        'after:ml-[0.3em] after:inline-block after:h-0 after:w-0 after:border-solid after:content-[\"_\"]',\r\n                        'after:border-x-[0.3em] after:border-b-[0.1em] after:border-t-[0.3em] after:border-[#4d4d4d_transparent_transparent]',\r\n                    )}\r\n                    onClick={handleToggle}\r\n                >\r\n                    {formatFullName(firstName, lastName)}\r\n                </button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {CalendarUserSelect} from './CalendarUserSelect'\r\n\r\n\r\ntype CalendarUserProps = {\r\n    title: string\r\n}\r\n\r\nexport const CalendarUser: React.FC<CalendarUserProps> = React.memo(({\r\n    title,\r\n}) => {\r\n    return (\r\n        <div className=\"self-center whitespace-nowrap\">\r\n            <span className=\"mr-1.5 text-xl text-cal-dark-text\">\r\n                {`${title}: `}\r\n            </span>\r\n            <CalendarUserSelect />\r\n        </div>\r\n    )\r\n})\r\n","import type {SyntheticEvent} from 'react'\r\nimport {useCallback} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {View} from '@bpinc/cal-state-types'\r\nimport {getRangeFromView, isNewEvent} from '@bpinc/cal-utils'\r\nimport type {SmMenuItemProps} from '@bpinc/lib-external-ui-elements'\r\n\r\nimport {useIsStartFromMonday} from './useIsStartFromMonday'\r\nimport {useShowWeekends} from './useShowWeekends'\r\n\r\n\r\nexport const useHandleViewChange = () => {\r\n    const {changeViewDate, changeView, closeEventForm} = useCalendarStateMethods()\r\n    const {\r\n        viewDate,\r\n        view,\r\n        selectedEvent,\r\n    } = useCalendarState(['viewDate', 'view', 'selectedEvent'])\r\n    const weekStartsFromMonday = useIsStartFromMonday()\r\n    const showWeekends = useShowWeekends()\r\n\r\n    return useCallback((_evt: SyntheticEvent, data: SmMenuItemProps) => {\r\n        const newView = data.view\r\n\r\n        // We can't create events on schedule view\r\n        if (newView === View.SCHEDULE && selectedEvent && isNewEvent(selectedEvent)) {\r\n            closeEventForm()\r\n            return\r\n        }\r\n\r\n        changeView(newView)\r\n\r\n        const order = [View.DAY, View.WEEK, View.MONTH]\r\n        const isIncreasingView = order.indexOf(newView) >= order.indexOf(view)\r\n\r\n        if (isIncreasingView) {\r\n            return\r\n        }\r\n\r\n        if (selectedEvent && !selectedEvent.id) {\r\n            if (viewDate !== selectedEvent.startTime) {\r\n                changeViewDate(selectedEvent.startTime)\r\n                return\r\n            }\r\n        }\r\n\r\n        const [newStart, newEnd] = getRangeFromView(\r\n            viewDate,\r\n            newView,\r\n            {weekStartsFromMonday, withoutWeekend: !showWeekends},\r\n        )\r\n        const isStillWithinRange = newStart <= viewDate && viewDate <= newEnd\r\n\r\n        if (isStillWithinRange) {\r\n            return\r\n        }\r\n\r\n        changeViewDate(newStart)\r\n    }, [\r\n        viewDate,\r\n        selectedEvent,\r\n        view,\r\n        changeViewDate,\r\n        changeView,\r\n        closeEventForm,\r\n        weekStartsFromMonday,\r\n        showWeekends,\r\n    ])\r\n}\r\n","import type {SyntheticEvent} from 'react'\r\nimport React from 'react'\r\n\r\nimport {useIsCommunicator} from '@bpinc/ad-current-tab-data-context'\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\nimport {View} from '@bpinc/cal-state-types'\r\nimport type {SmMenuItemProps} from '@bpinc/lib-external-ui-elements'\r\nimport {SmMenu} from '@bpinc/lib-external-ui-elements'\r\nimport {\r\n    IconCalendarViewDay,\r\n    IconCalendarViewMonth,\r\n    IconCalendarViewSchedule,\r\n    IconCalendarViewWeek,\r\n} from '@bpinc/lib-icons'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport type {SVGRComponent} from '@bpinc/lib-types-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useHandleViewChange} from '../hooks/useHandleViewChange'\r\n\r\n\r\nexport const CalendarViewSelect: React.FC = () => {\r\n    const {t} = useLocalizationState()\r\n    const view = useCalendarState('view')\r\n    const handleViewChange = useHandleViewChange()\r\n    const isCommunicator = useIsCommunicator()\r\n\r\n    return (\r\n        <SmMenu compact className=\"min-h-0 shadow-none\">\r\n            <ViewButton\r\n                view={View.MONTH}\r\n                active={view === View.MONTH}\r\n                onClick={handleViewChange}\r\n                Icon={IconCalendarViewMonth}\r\n                title={t.CALENDAR.month()}\r\n                isCommunicator={isCommunicator}\r\n            />\r\n\r\n            <ViewButton\r\n                view={View.WEEK}\r\n                active={view === View.WEEK}\r\n                onClick={handleViewChange}\r\n                Icon={IconCalendarViewWeek}\r\n                title={t.CALENDAR.week()}\r\n                isCommunicator={isCommunicator}\r\n            />\r\n\r\n            <ViewButton\r\n                view={View.DAY}\r\n                active={view === View.DAY}\r\n                onClick={handleViewChange}\r\n                Icon={IconCalendarViewDay}\r\n                title={t.CALENDAR.day()}\r\n                isCommunicator={isCommunicator}\r\n            />\r\n\r\n            <ViewButton\r\n                view={View.SCHEDULE}\r\n                active={view === View.SCHEDULE}\r\n                onClick={handleViewChange}\r\n                Icon={IconCalendarViewSchedule}\r\n                title={t.CALENDAR.schedule()}\r\n                isCommunicator={isCommunicator}\r\n            />\r\n        </SmMenu>\r\n    )\r\n}\r\n\r\ntype ViewButtonProps = {\r\n    view: View\r\n    active: boolean\r\n    onClick: (e: SyntheticEvent, data: SmMenuItemProps) => void\r\n    Icon: SVGRComponent\r\n    title: string\r\n    isCommunicator: boolean\r\n}\r\n\r\nconst ViewButton: React.FC<ViewButtonProps> = ({\r\n    view,\r\n    active,\r\n    onClick,\r\n    Icon,\r\n    title,\r\n    isCommunicator,\r\n}) => {\r\n    return (\r\n        <SmMenu.Item\r\n            as=\"button\"\r\n            view={view}\r\n            active={active}\r\n            title={title}\r\n            onClick={onClick}\r\n            className={tcn('px-4 py-[9px]', {\r\n                'h-8 w-8 px-[7px]': isCommunicator,\r\n            })}\r\n        >\r\n            {isCommunicator ?\r\n                <Icon className=\"[&>svg]:h-3.5 [&>svg]:w-4.5\" /> :\r\n                title\r\n            }\r\n        </SmMenu.Item>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {useIsCommunicator} from '@bpinc/ad-current-tab-data-context'\r\nimport {useMonthsList} from '@bpinc/cal-hooks'\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\nimport {getViewTitle} from '@bpinc/cal-utils'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useIsStartFromMonday} from '../hooks/useIsStartFromMonday'\r\nimport {useShowWeekends} from '../hooks/useShowWeekends'\r\n\r\n\r\nexport const CalendarViewTitle: React.FC = React.memo(() => {\r\n    const {t} = useLocalizationState()\r\n    const {view, viewDate} = useCalendarState(['view', 'viewDate'])\r\n    const monthsList = useMonthsList()\r\n    const monthsListShort = useMonthsList({short: true})\r\n    const isCommunicator = useIsCommunicator()\r\n    const isStartFromMonday = useIsStartFromMonday()\r\n    const showWeekends = useShowWeekends()\r\n    const title = useMemo(() =>\r\n        getViewTitle(view, viewDate, monthsList, monthsListShort, {\r\n            weekStartsFromMonday: isStartFromMonday,\r\n            withoutWeekend: !showWeekends,\r\n        })\r\n    , [\r\n        view,\r\n        viewDate,\r\n        monthsList,\r\n        monthsListShort,\r\n        isStartFromMonday,\r\n        showWeekends,\r\n    ])\r\n\r\n    return (\r\n        <div\r\n            className={tcn(\r\n                'ml-2.5 flex flex-1 items-center justify-center text-center text-xl text-cal-dark-text',\r\n                {'text-base': isCommunicator},\r\n            )}\r\n            title={t.CALENDAR.date_title_tooltip()}\r\n        >\r\n            {title}\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {CalendarSidebarButton} from './CalendarSidebar/CalendarSidebarButton'\r\nimport {BatchAssignEvents} from './BatchAssignEvents'\r\nimport {CalendarNavigation} from './CalendarNavigation'\r\nimport {CalendarUser} from './CalendarUser'\r\nimport {CalendarViewSelect} from './CalendarViewSelect'\r\nimport {CalendarViewTitle} from './CalendarViewTitle'\r\n\r\n\r\nexport const CalendarHeader: React.FC = () => {\r\n    const {t} = useLocalizationState()\r\n    const {toggleCalendarSidebar} = useCalendarStateMethods()\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mb-1 flex flex-wrap items-start justify-end gap-x-4 gap-y-1\">\r\n                <div className=\"flex flex-1 justify-between gap-x-4\">\r\n                    <CalendarUser title={t.CALENDAR.calendar_heading()} />\r\n                    <BatchAssignEvents />\r\n                </div>\r\n                <div className=\"flex gap-x-4\">\r\n                    <CalendarViewSelect />\r\n                    <CalendarSidebarButton\r\n                        onToggle={toggleCalendarSidebar}\r\n                        tooltip={t.CALENDAR.month_nav_btn_tooltip()}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"mb-4 flex flex-row items-center justify-between after:flex-1\">\r\n                <CalendarNavigation />\r\n                <CalendarViewTitle />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback} from 'react'\r\n\r\nimport {Checkbox} from '@bpinc/lib-ui-elements'\r\n\r\n\r\nexport type CalendarSidebarFilter = {\r\n    name: string\r\n    label: string\r\n    disabled?: boolean\r\n    checked?: boolean\r\n}\r\n\r\nexport type CalendarSidebarFiltersProps = {\r\n    title: string\r\n    filters: CalendarSidebarFilter[]\r\n    onFilterChange: (calendar: string, value: boolean) => void\r\n}\r\n\r\nexport const CalendarSidebarFilters: React.FC<CalendarSidebarFiltersProps> = React.memo(({\r\n    title,\r\n    filters,\r\n    onFilterChange,\r\n}) => {\r\n    const onChange = useCallback((calendar: string) => (value: boolean) => {\r\n        onFilterChange(calendar, value)\r\n    }, [onFilterChange])\r\n\r\n    return (\r\n        <div className=\"pl-2\">\r\n            <div className=\"mb-4\">{title}</div>\r\n            {filters.map(({name, label, disabled, checked}) => (\r\n                <Checkbox\r\n                    key={name}\r\n                    className=\"mb-2\"\r\n                    name={name}\r\n                    label={label}\r\n                    onChange={onChange(name)}\r\n                    disabled={disabled}\r\n                    checked={checked}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n})\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {useMonthName} from '@bpinc/cal-hooks'\r\nimport {getDateByMonthViewIndexes, getEventMapKey, getRangeFromView, getWeeksInMonth} from '@bpinc/cal-utils'\r\nimport {isToday} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\n\r\ntype CalendarSidebarMonthProps = {\r\n    monthDate: Date\r\n    viewStart: Date\r\n    viewEnd: Date\r\n    eventsMap: Record<string, unknown>\r\n    daysOfWeek: string[]\r\n    hidePreviousMonth?: boolean\r\n    hideNextMonth?: boolean\r\n}\r\n\r\nexport const CalendarSidebarMonth: React.FC<CalendarSidebarMonthProps> = React.memo(({\r\n    monthDate,\r\n    viewStart,\r\n    viewEnd,\r\n    eventsMap,\r\n    daysOfWeek,\r\n    hidePreviousMonth,\r\n    hideNextMonth,\r\n}) => {\r\n    const monthName = useMonthName(monthDate)\r\n    const [start] = getRangeFromView(monthDate.getTime(), 'month', {expand: true}).map(d => new Date(d))\r\n\r\n    const monthTitle = useMemo(() => {\r\n        const year = monthDate.getFullYear()\r\n        return `${monthName} ${year}`\r\n    }, [monthDate, monthName])\r\n\r\n    const weeksInMonth = useMemo(() =>\r\n        getWeeksInMonth(monthDate.getTime())\r\n    , [monthDate])\r\n\r\n    return (\r\n        <div className=\"mb-9 w-full\">\r\n            <div className=\"mb-1 pl-2 text-cal-dark-text\">\r\n                {monthTitle}\r\n            </div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {daysOfWeek.map((name, i) => (\r\n                            <th\r\n                                key={name + i}\r\n                                className=\"h-8 text-sm font-normal text-cal-dark-text opacity-50\"\r\n                            >\r\n                                {name}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Array.from(\r\n                        {length: weeksInMonth},\r\n                        (_, weekIndex) => (\r\n                            <tr key={weekIndex}>\r\n                                {daysOfWeek.map((__, dayIndex) => {\r\n                                    const day = getDateByMonthViewIndexes(start, weekIndex, dayIndex)\r\n                                    const isCurrentView = viewStart <= day && day <= viewEnd\r\n                                    const isOtherMonth = day.getMonth() !== monthDate.getMonth()\r\n                                    const isPreviousMonth = isOtherMonth && day < monthDate\r\n                                    const isNextMonth = isOtherMonth && day > monthDate\r\n                                    const hideValue = isPreviousMonth && hidePreviousMonth || isNextMonth && hideNextMonth\r\n                                    const hasEvents = !!eventsMap[getEventMapKey(day)]\r\n\r\n                                    return (\r\n                                        <td\r\n                                            key={dayIndex}\r\n                                            className={tcn('h-8 w-8', {\r\n                                                'rounded-none bg-cal-light-bg': !hideValue && isCurrentView,\r\n                                            })}\r\n                                        >\r\n                                            <div\r\n                                                className={tcn(\r\n                                                    'flex h-7 w-7 select-none items-center justify-center rounded-[16px]',\r\n                                                    'text-center text-sm text-cal-dark-text',\r\n                                                    {\r\n                                                        'bg-primary-legacy font-bold text-white': !hideValue && isToday(day),\r\n                                                        'opacity-50': isOtherMonth,\r\n                                                        'font-bold': hasEvents,\r\n                                                    })}\r\n                                            >\r\n                                                {hideValue ? ' ' : day.getDate()}\r\n                                            </div>\r\n                                        </td>\r\n                                    )\r\n                                })}\r\n                            </tr>\r\n                        ),\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n})\r\n","/* eslint-disable react-perf/jsx-no-new-function-as-prop */\r\nimport React, {useMemo} from 'react'\r\n\r\nimport {useDaysOfWeek} from '@bpinc/cal-hooks'\r\nimport {getRangeFromView} from '@bpinc/cal-utils'\r\nimport {getNextMonthDate} from '@bpinc/lib-helpers'\r\n\r\nimport {CalendarSidebarMonth} from './CalendarSidebarMonth'\r\n\r\n\r\ntype CalendarSidebarMonthsProps = {\r\n    currentDate: Date\r\n    viewDate: Date\r\n    eventsDatesMap: Record<string, unknown>\r\n}\r\n\r\nexport const CalendarSidebarMonths: React.FC<CalendarSidebarMonthsProps> = React.memo(({\r\n    currentDate,\r\n    viewDate,\r\n    eventsDatesMap,\r\n}) => {\r\n    const [start, end] = getRangeFromView(viewDate.getTime(), 'month', {expand: true})\r\n        .map(d => new Date(d))\r\n    const nextMonthDate = useMemo(() => getNextMonthDate(currentDate), [currentDate])\r\n    const daysOfWeek = useDaysOfWeek({oneLetter: true})\r\n\r\n    return (\r\n        <div>\r\n            <CalendarSidebarMonth\r\n                monthDate={currentDate}\r\n                viewStart={start}\r\n                viewEnd={end}\r\n                eventsMap={eventsDatesMap}\r\n                daysOfWeek={daysOfWeek}\r\n                hideNextMonth\r\n            />\r\n            <CalendarSidebarMonth\r\n                monthDate={nextMonthDate}\r\n                viewStart={start}\r\n                viewEnd={end}\r\n                eventsMap={eventsDatesMap}\r\n                daysOfWeek={daysOfWeek}\r\n                hidePreviousMonth\r\n            />\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nimport {SemanticButton} from '@bpinc/lib-ui-elements'\r\n\r\n\r\nexport type CalendarSidebarPaginationProps = {\r\n    goNextPage: () => void\r\n    goPreviousPage: () => void\r\n    nextTooltip?: string\r\n    previousTooltip?: string\r\n}\r\n\r\nexport const CalendarSidebarPagination: React.FC<CalendarSidebarPaginationProps> = ({\r\n    goNextPage,\r\n    goPreviousPage,\r\n    nextTooltip,\r\n    previousTooltip,\r\n}) => {\r\n    return (\r\n        <div className=\"absolute right-3 top-3 flex\">\r\n            <SemanticButton\r\n                transparent\r\n                className=\"m-0 h-6 w-6\"\r\n                onClick={goPreviousPage}\r\n                tooltip={previousTooltip}\r\n                icon=\"chevron left\"\r\n                enabledInOffline\r\n            />\r\n            <SemanticButton\r\n                transparent\r\n                className=\"m-0 h-6 w-6\"\r\n                onClick={goNextPage}\r\n                tooltip={nextTooltip}\r\n                icon=\"chevron right\"\r\n                enabledInOffline\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback, useMemo, useState} from 'react'\r\n\r\nimport {SmTransition} from '@bpinc/lib-external-ui-elements'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport type {CalendarSidebarFiltersProps} from './CalendarSidebarFilters'\r\nimport {CalendarSidebarFilters} from './CalendarSidebarFilters'\r\nimport {CalendarSidebarMonths} from './CalendarSidebarMonths'\r\nimport type {CalendarSidebarPaginationProps} from './CalendarSidebarPagination'\r\nimport {CalendarSidebarPagination} from './CalendarSidebarPagination'\r\n\r\n\r\ntype CalendarSidebarProps = {\r\n    show: boolean\r\n    viewDate: Date\r\n    eventsDatesMap: Record<string, unknown>\r\n    filters: CalendarSidebarFiltersProps\r\n    pagination?: Pick<CalendarSidebarPaginationProps, 'nextTooltip' | 'previousTooltip'>\r\n}\r\n\r\nconst MONTHS_PER_PAGE = 2\r\n\r\nexport const CalendarSidebar: React.FC<CalendarSidebarProps> = React.memo(({\r\n    show,\r\n    viewDate,\r\n    eventsDatesMap,\r\n    filters,\r\n    pagination,\r\n}) => {\r\n    const [currentDate, setCurrentDate] = useState<Date>(viewDate)\r\n\r\n    const switchPage = useCallback(({forward}: {forward: boolean}) =>\r\n        () => setCurrentDate(prev => {\r\n            const sample = new Date(prev)\r\n            sample.setMonth(sample.getMonth() + (forward ? MONTHS_PER_PAGE : -MONTHS_PER_PAGE))\r\n            return sample\r\n        },\r\n        ), [])\r\n\r\n    const goNextPage = useMemo(() => switchPage({forward: true}), [switchPage])\r\n    const goPrevPage = useMemo(() => switchPage({forward: false}), [switchPage])\r\n\r\n    return (\r\n        <div\r\n            className={tcn('ease w-0 transition-[width] duration-300', {\r\n                'w-[258px]': show,\r\n            })}\r\n        >\r\n            <SmTransition\r\n                visible={show}\r\n                duration=\"300\"\r\n                animation=\"fade right\"\r\n                unmountOnHide\r\n            >\r\n                <div\r\n                    className={tcn(\r\n                        'relative box-border flex h-full w-[258px] flex-col',\r\n                        'overflow-y-auto overflow-x-hidden py-4 pl-6 pr-2',\r\n                    )}\r\n                >\r\n                    <CalendarSidebarMonths\r\n                        currentDate={currentDate}\r\n                        viewDate={viewDate}\r\n                        eventsDatesMap={eventsDatesMap}\r\n                    />\r\n                    <CalendarSidebarPagination\r\n                        goNextPage={goNextPage}\r\n                        goPreviousPage={goPrevPage}\r\n                        nextTooltip={pagination?.nextTooltip}\r\n                        previousTooltip={pagination?.previousTooltip}\r\n                    />\r\n                    <CalendarSidebarFilters {...filters} />\r\n                </div>\r\n            </SmTransition>\r\n        </div>\r\n    )\r\n})\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\nimport {eventsToEventMap} from '@bpinc/cal-utils'\r\n\r\nimport {useCalendarFilters} from '../hooks/useCalendarFilters'\r\nimport {useCalendarsLoader} from '../hooks/useCalendarsLoader'\r\nimport {CalendarBody} from './CalendarBody'\r\nimport {CalendarHeader} from './CalendarHeader'\r\nimport {CalendarSidebar} from './CalendarSidebar'\r\n\r\n\r\nexport const Calendar: React.FC = React.memo(() => {\r\n    const {\r\n        viewDate,\r\n        calendarEvents,\r\n        showCalendarSidebar,\r\n    } = useCalendarState([\r\n        'viewDate',\r\n        'calendarEvents',\r\n        'showCalendarSidebar',\r\n    ])\r\n    useCalendarsLoader()\r\n\r\n    const eventsMap = useMemo(() => eventsToEventMap(calendarEvents), [calendarEvents])\r\n    const filters = useCalendarFilters()\r\n\r\n    return (\r\n        <div className=\"z-0 flex flex-1 flex-col\">\r\n            <CalendarHeader />\r\n            <div className=\"flex h-full flex-row items-stretch overflow-hidden\">\r\n                <CalendarBody />\r\n                <CalendarSidebar\r\n                    show={showCalendarSidebar}\r\n                    viewDate={new Date(viewDate)}\r\n                    eventsDatesMap={eventsMap}\r\n                    filters={filters}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import {useEffect} from 'react'\r\n\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\n\r\n\r\nexport function useCalendarsLoader() {\r\n    const {getCalendarsList} = useCalendarStateMethods()\r\n\r\n    useEffect(() => {\r\n        getCalendarsList()\r\n    }, [getCalendarsList])\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {DefaultCalendars} from '@bpinc/cal-state-types'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {\r\n    CalendarSidebarFilter,\r\n    CalendarSidebarFiltersProps,\r\n} from '../components/CalendarSidebar/CalendarSidebarFilters'\r\n\r\n\r\nexport function useCalendarFilters(): CalendarSidebarFiltersProps {\r\n    const {t} = useLocalizationState()\r\n    const {\r\n        calendars,\r\n        calendarFilters,\r\n    } = useCalendarState(['calendars', 'calendarFilters'])\r\n    const {changeCalendarFilter} = useCalendarStateMethods()\r\n\r\n    return useMemo<CalendarSidebarFiltersProps>(() => {\r\n        const options: CalendarSidebarFilter[] = [\r\n            {name: DefaultCalendars.HOLIDAYS, label: t.CALENDAR.holidays(), disabled: true, checked: calendarFilters[DefaultCalendars.HOLIDAYS]},\r\n            {name: DefaultCalendars.EVENTS, label: t.CALENDAR.events_and_meetings(), disabled: true, checked: calendarFilters[DefaultCalendars.EVENTS]},\r\n            {name: DefaultCalendars.REQUESTS, label: t.CALENDAR.requests(), disabled: false, checked: calendarFilters[DefaultCalendars.REQUESTS]},\r\n            {name: DefaultCalendars.SHIFTS, label: t.CALENDAR.shifts(), disabled: false, checked: calendarFilters[DefaultCalendars.SHIFTS]},\r\n        ]\r\n        calendars.forEach(calendar => {\r\n            options.push({\r\n                name: calendar.id,\r\n                label: calendar.title,\r\n            })\r\n        })\r\n\r\n        return {\r\n            title: t.CALENDAR.calendars_heading(),\r\n            filters: options,\r\n            onFilterChange: changeCalendarFilter,\r\n        }\r\n    }, [t, calendars, calendarFilters, changeCalendarFilter])\r\n}\r\n","import type {Dispatch, SetStateAction} from 'react'\r\nimport React, {useCallback, useMemo} from 'react'\r\n\r\nimport {Page} from '@bpinc/cal-state-types'\r\nimport {Tabs} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype Props = {\r\n    activePage: Page\r\n    onPageChange: Dispatch<SetStateAction<Page | null>>\r\n}\r\n\r\nexport const CalendarPageHeader: React.FC<Props> = React.memo(({\r\n    activePage,\r\n    onPageChange,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const tabs = useMemo(() => [{id: 'calendar', title: t.CALENDAR.calendar_heading()}], [t])\r\n    const pagesTabs = useMemo(() => [\r\n        {id: Page.MY_CALENDAR, title: t.CALENDAR.my_calendar()},\r\n        {id: Page.MY_REQUESTS, title: t.CALENDAR.my_requests()},\r\n    ], [t])\r\n\r\n    const onTabChange = useCallback((id: Page) => {\r\n        onPageChange(id)\r\n    }, [onPageChange])\r\n\r\n    return (\r\n        <header className=\"flex h-[50px] justify-between bg-tabs-header-bg pr-44\">\r\n            <Tabs\r\n                tabs={tabs}\r\n                activeTabId=\"calendar\"\r\n                headerClassName=\"bg-transparent border-b-transparent\"\r\n            />\r\n            <Tabs\r\n                tabs={pagesTabs}\r\n                activeTabId={activePage}\r\n                tabClassName=\"after:bg-black pt-3\"\r\n                headerClassName=\"bg-transparent border-b-transparent\"\r\n                activeTabClassName=\"font-bold\"\r\n                onChange={onTabChange}\r\n            />\r\n        </header>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport {useForm} from 'react-hook-form'\r\n\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\nimport type {CalendarEventFields} from '@bpinc/cal-state-types'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport {CalendarEventForm} from './CalendarEventForm'\r\n\r\n\r\nexport const EventFormSidebar: React.FC = React.memo(() => {\r\n    const form = useForm<CalendarEventFields>()\r\n    const selectedEvent = useCalendarState('selectedEvent')\r\n\r\n    return (\r\n        <div\r\n            className={tcn(\r\n                'relative ml-[15px] w-0 overflow-hidden border-l border-solid border-l-transparent',\r\n                'ease transition-[width,border-left-color] duration-300',\r\n                {'w-[308px] border-l-[#c6c8c9]': selectedEvent},\r\n            )}\r\n        >\r\n            {selectedEvent && <CalendarEventForm form={form} event={selectedEvent} />}\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nimport type {TimeoffBalance, TimeoffType} from '@bpinc/cal-wfm-request-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype Props = {\r\n    timeoffType: TimeoffType\r\n    balance: TimeoffBalance\r\n}\r\n\r\nexport const Balance: React.FC<Props> = React.memo(({timeoffType, balance}) => {\r\n    const {t} = useLocalizationState()\r\n\r\n    return (\r\n        <div className=\"mr-2 flex min-w-[200px] flex-col rounded border border-cal-border px-4 py-2.5 last:mr-0\">\r\n            <div className=\"mb-1.5 text-sm/[16px] text-cal-dark-text\">\r\n                {timeoffType.name}\r\n            </div>\r\n            <div>\r\n                <span className=\"mr-2 text-2xl/[28px] font-bold text-cal-dark-text\">\r\n                    {balance.unused}\r\n                </span>\r\n                <span className=\"text-sm\">{t.CALENDAR_REQUESTS.hours_available()}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nimport {useCalendarState} from '@bpinc/cal-state-context'\r\n\r\nimport {Balance} from './Balance'\r\n\r\n\r\nexport const Balances: React.FC = React.memo(() => {\r\n    const {timeoffBalances, timeoffTypes} = useCalendarState([\r\n        'timeoffBalances',\r\n        'timeoffTypes',\r\n    ])\r\n\r\n    if (!timeoffBalances.length) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-4 flex px-3 pt-4\">\r\n            {timeoffBalances.map(balance => {\r\n                const timeoffType = timeoffTypes.find(\r\n                    type => type.id === balance.time_off_type_id,\r\n                )\r\n\r\n                if (!timeoffType) return null\r\n\r\n                return (\r\n                    <Balance\r\n                        key={balance.time_off_type_id}\r\n                        timeoffType={timeoffType}\r\n                        balance={balance}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n})\r\n","var _defs, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgAccepted = function SvgAccepted(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"24x24 icon \\\\u2013 accepted\",\n    clipPath: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"#fff\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"Component 350 \\\\u2013 15\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"icons8-ok (2)\",\n    d: \"M12 2a10 10 0 1 0 10 10A10.011 10.011 0 0 0 12 2Zm4.707 6.331-5 7.375-3.912-3.63a.435.435 0 1 1 .591-.637l3.17 2.941 4.436-6.537a.435.435 0 1 1 .72.489Z\",\n    fill: \"#4caf50\"\n  })))));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgAccepted);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"a3da30986912ac774d1b421c621e1372.svg\";","var _defs, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgComment = function SvgComment(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"24x24 icon \\\\u2013 existing comment\",\n    clipPath: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M0 0h24v24H0z\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"Component 458 \\\\u2013 2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.174 3A2.183 2.183 0 0 0 2 5.174v10.435a2.183 2.183 0 0 0 2.174 2.174h1.78a3.365 3.365 0 0 1-.082 1.417 2.237 2.237 0 0 1-1.046 1.264.435.435 0 0 0 .217.8 5.4 5.4 0 0 0 5.027-3.478h9.755A2.183 2.183 0 0 0 22 15.609V5.174A2.183 2.183 0 0 0 19.826 3Zm0 .87h15.652a1.3 1.3 0 0 1 1.3 1.3v10.439a1.3 1.3 0 0 1-1.3 1.3h-10a.435.435 0 0 0-.408.285 4.491 4.491 0 0 1-3.138 3.048 3.044 3.044 0 0 0 .421-.774 4.467 4.467 0 0 0 .068-2.2.436.436 0 0 0-.421-.353H4.174a1.3 1.3 0 0 1-1.3-1.3V5.174a1.3 1.3 0 0 1 1.3-1.304Z\"\n  })))));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgComment);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"30b944264eba605166388fde096c6685.svg\";","var _defs, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgDenied = function SvgDenied(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"24x24 icon \\\\u2013 denied\",\n    clipPath: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"#fff\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 2a10 10 0 1 0 10 10A10.012 10.012 0 0 0 12 2Zm3.787 13.17a.438.438 0 0 1 0 .617.441.441 0 0 1-.617 0L12 12.617l-3.17 3.17a.441.441 0 0 1-.617 0 .438.438 0 0 1 0-.617l3.17-3.17-3.17-3.17a.437.437 0 0 1 .617-.617l3.17 3.17 3.17-3.17a.437.437 0 1 1 .617.617L12.617 12Z\",\n    \"data-name\": \"Component 450 \\\\u2013 4\",\n    fill: \"#ea4335\"\n  }))));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgDenied);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"76a3fe6dd1a5e874bedaab488ec9a676.svg\";","var _defs, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgPending = function SvgPending(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"24x24 icon \\\\u2013 pending\",\n    clipPath: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"#fff\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"Component 352 \\\\u2013 70\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"icons8-active-state (1)\",\n    d: \"M12 2a10 10 0 1 0 10 10A10.007 10.007 0 0 0 12 2Zm0 .87A9.13 9.13 0 1 1 2.87 12 9.124 9.124 0 0 1 12 2.87Z\",\n    fill: \"#fbbd08\"\n  })))));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgPending);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"b984faca46269ddda49735a4cde775b7.svg\";","var _defs, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgWaitlisted = function SvgWaitlisted(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"24x24 icon \\\\u2013 waitlisted\",\n    clipPath: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"#fff\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"Component 460 \\\\u2013 3\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Subtraction 17\",\n    d: \"M777 6894a10 10 0 1 1 10-10 10.012 10.012 0 0 1-10 10Zm4.139-11.461a1.46 1.46 0 1 0 1.46 1.46 1.463 1.463 0 0 0-1.46-1.46Zm-4.139 0a1.46 1.46 0 1 0 1.46 1.46 1.462 1.462 0 0 0-1.46-1.46Zm-4.139 0a1.46 1.46 0 1 0 1.46 1.46 1.462 1.462 0 0 0-1.459-1.46Z\",\n    transform: \"translate(-765 -6872)\",\n    fill: \"#ffc107\"\n  })))));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgWaitlisted);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"390016c449788fef1d1daf9ab58f6940.svg\";","import React from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\n\r\ntype Props = {\r\n    children: React.ReactNode\r\n    className?: string\r\n}\r\n\r\nexport const Cell: React.FC<Props> = ({\r\n    children,\r\n    className,\r\n}) => {\r\n    return (\r\n        <div\r\n            className={tcn(\r\n                'block w-full truncate text-base font-normal text-cal-dark-text',\r\n                className,\r\n            )}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","export enum RequestType {\r\n    VACATION = 'Vacation',\r\n    PTO = 'PTO',\r\n}\r\n\r\nexport enum RequestStatus {\r\n    PENDING = 'pending',\r\n    WAITLISTED = 'waitlisted',\r\n    APPROVED = 'approved',\r\n    DENIED = 'denied',\r\n}\r\n\r\nexport enum ApprovalType {\r\n    SYSTEM = 'system',\r\n    SUPERVISOR = 'supervisor',\r\n}\r\n\r\ntype RequestCommon = {\r\n    id: string\r\n    type: RequestType\r\n    reqTimeStart: number\r\n    reqTimeEnd: number\r\n    submissionDate: number\r\n    comment?: string\r\n}\r\n\r\ntype PendingRequest = RequestCommon & {\r\n    status: RequestStatus.PENDING\r\n}\r\n\r\ntype WaitlistedRequest = RequestCommon & {\r\n    status: RequestStatus.WAITLISTED\r\n    approvalDate: number\r\n}\r\n\r\nexport type DeniedRequest = RequestCommon & {\r\n    status: RequestStatus.DENIED\r\n    approvalDate: number\r\n    approvalType: ApprovalType\r\n    approvedBy?: string\r\n    decisionDetails?: string\r\n}\r\n\r\nexport type ApprovedRequest = RequestCommon & {\r\n    status: RequestStatus.APPROVED\r\n    approvalDate: number\r\n    approvalType: ApprovalType\r\n    approvedBy?: string\r\n    decisionDetails?: string\r\n}\r\n\r\nexport type Request = PendingRequest | WaitlistedRequest | DeniedRequest | ApprovedRequest\r\n","import React, {useCallback} from 'react'\r\n\r\nimport {capitalize} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {RequestStatus} from '../types'\r\n\r\n\r\ntype Props = {\r\n    value?: RequestStatus\r\n    onChange: (status?: RequestStatus) => void\r\n}\r\n\r\nexport const StatusFilter: React.FC<Props> = ({\r\n    value,\r\n    onChange,\r\n}) => {\r\n    const {t: {CALENDAR_REQUESTS: message}} = useLocalizationState()\r\n\r\n    const onStatusChange = useCallback((status?: RequestStatus) => {\r\n        onChange(status)\r\n    }, [onChange])\r\n\r\n    return (\r\n        <div className=\"flex gap-2\">\r\n            <Option\r\n                color=\"#DEDEDF\"\r\n                active={value === undefined}\r\n                label={message.all()}\r\n                onChoose={onStatusChange}\r\n            />\r\n            <Option\r\n                color=\"#FFC107\"\r\n                active={value === RequestStatus.PENDING}\r\n                value={RequestStatus.PENDING}\r\n                onChoose={onStatusChange}\r\n            />\r\n            <Option\r\n                color=\"#FFC107\"\r\n                active={value === RequestStatus.WAITLISTED}\r\n                value={RequestStatus.WAITLISTED}\r\n                onChoose={onStatusChange}\r\n            />\r\n            <Option\r\n                color=\"#4CAF50\"\r\n                active={value === RequestStatus.APPROVED}\r\n                value={RequestStatus.APPROVED}\r\n                onChoose={onStatusChange}\r\n            />\r\n            <Option\r\n                color=\"#EA4335\"\r\n                active={value === RequestStatus.DENIED}\r\n                value={RequestStatus.DENIED}\r\n                onChoose={onStatusChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype OptionProps = {\r\n    color: string\r\n    active: boolean\r\n    value?: RequestStatus\r\n    label?: string\r\n    onChoose: (status?: RequestStatus) => void\r\n}\r\n\r\nconst Option: React.FC<OptionProps> = ({\r\n    color,\r\n    active,\r\n    value,\r\n    label,\r\n    onChoose,\r\n}) => {\r\n    const onClick = useCallback(() => {\r\n        onChoose(value)\r\n    }, [value, onChoose])\r\n\r\n    return (\r\n        <button\r\n            className={tcn(\r\n                'box-border flex h-7 select-none items-center text-sm text-cal-header-text',\r\n                'cursor-pointer rounded-[8px] border px-2',\r\n                {'text-cal-dark-text': active},\r\n            )}\r\n            style={{\r\n                borderColor: color,\r\n                backgroundColor: active ? color : 'transparent',\r\n            }}\r\n            onClick={onClick}\r\n        >\r\n            {value && capitalize(value) || label}\r\n        </button>\r\n    )\r\n}\r\n","import React, {useCallback, useMemo, useState} from 'react'\r\nimport type {BpPeriodSelectProps} from '@servicepattern/jskit'\r\nimport {BpPeriodSelect} from '@servicepattern/jskit'\r\n\r\nimport {useOpenCreateRequestModal} from '@bpinc/cal-modals-ui'\r\nimport {SmSelect} from '@bpinc/lib-external-ui-elements'\r\nimport {getLongDateFormat, languageToLocaleMap} from '@bpinc/lib-helpers'\r\nimport {SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {RequestStatus} from '../types'\r\nimport {RequestType} from '../types'\r\nimport {StatusFilter} from './StatusFilter'\r\n\r\n\r\nexport const Filters: React.FC = () => {\r\n    const {t: {CALENDAR_REQUESTS: message}, language} = useLocalizationState()\r\n    const openCreateRequestModal = useOpenCreateRequestModal()\r\n\r\n    const [dateRange, setDateRange] = useState<BpPeriodSelectProps['value']>({\r\n        after: null,\r\n        before: null,\r\n    })\r\n    const [statusFilter, setStatusFilter] = useState<RequestStatus>()\r\n\r\n    const onNewRequest = useCallback(() => {\r\n        openCreateRequestModal()\r\n    }, [openCreateRequestModal])\r\n\r\n    const onStatusChange = useCallback((status?: RequestStatus) => {\r\n        setStatusFilter(status)\r\n    }, [])\r\n\r\n    const typeOptions = useMemo(() => ([\r\n        {key: 'all', value: '', text: message.any_type()},\r\n        {key: RequestType.PTO, value: RequestType.PTO, text: RequestType.PTO},\r\n        {key: RequestType.VACATION, value: RequestType.VACATION, text: RequestType.VACATION},\r\n    ]), [message])\r\n\r\n    return (\r\n        <div className=\"flex justify-between\">\r\n            <div>\r\n                <SemanticButton\r\n                    size=\"small\"\r\n                    onClick={onNewRequest}\r\n                    className=\"mr-4\"\r\n                    icon=\"plus\"\r\n                    color=\"blue\"\r\n                    tooltip={message.create_request()}\r\n                />\r\n                <span className=\"text-sm text-cal-dark-text\">\r\n                    {message.new_request()}\r\n                </span>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n                <BpPeriodSelect\r\n                    popupPosition=\"bottom center\"\r\n                    config={{\r\n                        input: {\r\n                            className: 'cursor-pointer min-w-[300px] mr-2',\r\n                            format: getLongDateFormat('L'),\r\n                            placeholder: message.choose_requests_period(),\r\n                        },\r\n                        form: {\r\n                            showTime: false,\r\n                            showSearchCheckbox: false,\r\n                            dateFormat: languageToLocaleMap[language],\r\n                            timeFormat: languageToLocaleMap[language],\r\n                        },\r\n                    }}\r\n                    hideOnScrollPopup={false}\r\n                    onChange={setDateRange}\r\n                    value={dateRange}\r\n                    clearable\r\n                />\r\n                <SmSelect\r\n                    className=\"mr-2\"\r\n                    placeholder={message.any_type()}\r\n                    options={typeOptions}\r\n                />\r\n                <StatusFilter\r\n                    value={statusFilter}\r\n                    onChange={onStatusChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {CreateRequestModal} from '../components/CreateRequestModal'\r\n\r\n\r\nexport function useOpenCreateRequestModal() {\r\n    return useModalComponentOpener(CreateRequestModal)\r\n}\r\n","import React from 'react'\r\n\r\nimport type {FCWithChildren} from '@bpinc/lib-types-helpers'\r\n\r\n\r\nexport const HeaderCell: FCWithChildren = ({children}) => {\r\n    return (\r\n        <div className=\"block w-full truncate pl-1 text-start text-sm font-normal text-cal-event-text\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import type {Request} from './types'\r\nimport {ApprovalType, RequestStatus, RequestType} from './types'\r\n\r\n\r\nexport const mockData: Request[] = [\r\n    {\r\n        id: '0',\r\n        type: RequestType.PTO,\r\n        status: RequestStatus.APPROVED,\r\n        reqTimeStart: 1696089600000,\r\n        reqTimeEnd: 1696348800000,\r\n        submissionDate: 1695139200000,\r\n        approvalDate: 1695484800000,\r\n        approvalType: ApprovalType.SYSTEM,\r\n        comment:\r\n            'Qui aliqua excepteur occaecat qui ad exercitation ut laborum tempor reprehenderit adipisicing consequat nulla laboris.',\r\n    },\r\n    {\r\n        id: '1',\r\n        type: RequestType.VACATION,\r\n        status: RequestStatus.APPROVED,\r\n        reqTimeStart: 1695230400000,\r\n        reqTimeEnd: 1695595200000,\r\n        submissionDate: 1695139200000,\r\n        approvalDate: 1695484800000,\r\n        approvalType: ApprovalType.SUPERVISOR,\r\n        approvedBy: 'Sarah Pastor',\r\n        comment: 'Tempor nulla duis nulla Lorem non.',\r\n    },\r\n    {\r\n        id: '2',\r\n        type: RequestType.PTO,\r\n        status: RequestStatus.APPROVED,\r\n        reqTimeStart: 1695353600000,\r\n        reqTimeEnd: 1695576000000,\r\n        submissionDate: 1695484800000,\r\n        approvalDate: 1695230400000,\r\n        approvalType: ApprovalType.SUPERVISOR,\r\n        approvedBy: 'Sarah Pastor',\r\n        comment:\r\n            'Irure officia dolore laboris do est nulla eiusmod et id id esse anim aute.',\r\n    },\r\n    {\r\n        id: '3',\r\n        type: RequestType.VACATION,\r\n        status: RequestStatus.WAITLISTED,\r\n        reqTimeStart: 1695512000000,\r\n        reqTimeEnd: 1695667200000,\r\n        submissionDate: 1695398400000,\r\n        approvalDate: 1695353600000,\r\n    },\r\n    {\r\n        id: '4',\r\n        type: RequestType.VACATION,\r\n        status: RequestStatus.DENIED,\r\n        reqTimeStart: 1695244800000,\r\n        reqTimeEnd: 1695504000000,\r\n        submissionDate: 1695316800000,\r\n        approvalDate: 1695398400000,\r\n        approvalType: ApprovalType.SYSTEM,\r\n        comment: 'Aute irure ullamco eiusmod occaecat tempor duis.',\r\n    },\r\n    {\r\n        id: '5',\r\n        type: RequestType.VACATION,\r\n        status: RequestStatus.DENIED,\r\n        reqTimeStart: 1695340000000,\r\n        reqTimeEnd: 1695704800000,\r\n        submissionDate: 1695206400000,\r\n        approvalDate: 1695619200000,\r\n        approvalType: ApprovalType.SUPERVISOR,\r\n        approvedBy: 'Sarah Pastor',\r\n        decisionDetails: 'Incididunt laboris laborum velit officia.',\r\n    },\r\n    {\r\n        id: '6',\r\n        type: RequestType.VACATION,\r\n        status: RequestStatus.APPROVED,\r\n        reqTimeStart: 1695417600000,\r\n        reqTimeEnd: 1695722400000,\r\n        submissionDate: 1695268800000,\r\n        approvalDate: 1695340000000,\r\n        approvalType: ApprovalType.SUPERVISOR,\r\n        approvedBy: 'Sarah Pastor',\r\n        comment:\r\n            'Commodo occaecat est sunt do duis commodo adipisicing enim duis.',\r\n    },\r\n    {\r\n        id: '7',\r\n        type: RequestType.PTO,\r\n        status: RequestStatus.PENDING,\r\n        reqTimeStart: 1696089600000,\r\n        reqTimeEnd: 1696348800000,\r\n        submissionDate: 1695139200000,\r\n        comment:\r\n            'Ex adipisicing nostrud ad voluptate dolore excepteur cupidatat cillum amet.',\r\n    },\r\n    {\r\n        id: '8',\r\n        type: RequestType.PTO,\r\n        status: RequestStatus.PENDING,\r\n        reqTimeStart: 1695316800000,\r\n        reqTimeEnd: 1695324000000,\r\n        submissionDate: 1695225600000,\r\n        comment:\r\n            'Sint proident et pariatur commodo minim labore consectetur laborum deserunt aliqua ipsum laboris.',\r\n    },\r\n    {\r\n        id: '9',\r\n        type: RequestType.PTO,\r\n        status: RequestStatus.PENDING,\r\n        reqTimeStart: 1695384000000,\r\n        reqTimeEnd: 1695580800000,\r\n        submissionDate: 1695340000000,\r\n    },\r\n    {\r\n        id: '10',\r\n        type: RequestType.VACATION,\r\n        status: RequestStatus.PENDING,\r\n        reqTimeStart: 1695259200000,\r\n        reqTimeEnd: 1695591600000,\r\n        submissionDate: 1695225600000,\r\n        comment:\r\n            'Veniam labore cupidatat est elit sunt fugiat magna labore sint deserunt elit adipisicing.',\r\n    },\r\n    {\r\n        id: '11',\r\n        type: RequestType.PTO,\r\n        status: RequestStatus.PENDING,\r\n        reqTimeStart: 1695268800000,\r\n        reqTimeEnd: 1695526400000,\r\n        submissionDate: 1695163200000,\r\n    },\r\n    {\r\n        id: '12',\r\n        type: RequestType.VACATION,\r\n        status: RequestStatus.PENDING,\r\n        reqTimeStart: 1695526400000,\r\n        reqTimeEnd: 1695736800000,\r\n        submissionDate: 1695291200000,\r\n        comment: 'Nostrud velit mollit cupidatat eu.',\r\n    },\r\n]\r\n","import React from 'react'\r\n\r\nimport {Svg} from '@bpinc/lib-ui-elements'\r\n\r\nimport {acceptedIcon, deniedIcon, pendingIcon, waitlistedIcon} from '../../../icons'\r\nimport {RequestStatus} from './types'\r\n\r\n\r\ntype Props = {\r\n    status: RequestStatus\r\n}\r\n\r\nexport const StatusIcon: React.FC<Props> = ({status}) => {\r\n    switch (status) {\r\n        case RequestStatus.APPROVED:\r\n            return <Svg src={acceptedIcon} />\r\n        case RequestStatus.DENIED:\r\n            return <Svg src={deniedIcon} />\r\n        case RequestStatus.WAITLISTED:\r\n            return <Svg src={waitlistedIcon} />\r\n        case RequestStatus.PENDING:\r\n            return <Svg src={pendingIcon} />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n","import React, {useCallback} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\nimport {formatRequestDate, formatRequestedTime} from '@bpinc/cal-utils'\r\nimport {SmTransition} from '@bpinc/lib-external-ui-elements'\r\nimport {capitalize, useEscapeManager} from '@bpinc/lib-helpers'\r\nimport {IconClose, IconTrash} from '@bpinc/lib-icons'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {StatusIcon} from './StatusIcon'\r\nimport {formatApproval, isRequestProcessed} from './Table'\r\nimport type {Request} from './types'\r\n\r\n\r\ntype Props = {\r\n    request?: Request\r\n    onClose: () => void\r\n}\r\n\r\nexport const RequestSidebar: React.FC<Props> = React.memo(({\r\n    request,\r\n    onClose,\r\n}) => {\r\n    const {t: {CALENDAR_REQUESTS: message}} = useLocalizationState()\r\n    const isDeleting = useCalendarState('timeoffRequestDeleting')\r\n    const {deleteTimeoffRequest} = useCalendarStateMethods()\r\n    const show = Boolean(request)\r\n\r\n    const onDelete = useCallback(() => {\r\n        if (request) {\r\n            deleteTimeoffRequest(request.id)\r\n                .then(() => onClose())\r\n                .catch(() => onClose())\r\n        }\r\n    }, [request, deleteTimeoffRequest, onClose])\r\n\r\n    useEscapeManager(onClose, {enabled: show})\r\n\r\n    return (\r\n        <div\r\n            className={tcn(\r\n                'absolute right-0 top-0 h-full w-0 bg-white shadow',\r\n                'ease transition-[width] duration-300',\r\n                {'w-90': show},\r\n            )}\r\n        >\r\n            <SmTransition\r\n                visible={show}\r\n                duration=\"300\"\r\n                animation=\"fade right\"\r\n                unmountOnHide\r\n            >\r\n                <div\r\n                    className={tcn(\r\n                        'relative box-border flex h-full w-90 flex-col',\r\n                        'overflow-y-auto overflow-x-hidden',\r\n                    )}\r\n                >\r\n                    <div className=\"box-border flex h-[34px] items-center justify-end border-y border-cal-border bg-cal-light-bg px-2\">\r\n                        <button\r\n                            className={tcn(\r\n                                'flex h-8 w-8 cursor-pointer items-center justify-center',\r\n                                {'cursor-not-allowed': isDeleting},\r\n                            )}\r\n                            onClick={isDeleting ? undefined : onDelete}\r\n                        >\r\n                            <IconTrash className=\"h-4.5 w-3.5\" />\r\n                        </button>\r\n                        <button\r\n                            className=\"flex h-8 w-8 cursor-pointer items-center justify-center\"\r\n                            onClick={onClose}\r\n                        >\r\n                            <IconClose className=\"w-5\" />\r\n                        </button>\r\n                    </div>\r\n                    {request && (\r\n                        <div className=\"flex flex-col px-6 py-5\">\r\n                            <div className=\"mb-4 border-b border-cal-border\">\r\n                                <span className=\"mb-4 block text-lg font-bold text-cal-dark-text\">\r\n                                    {message.absence_request()}\r\n                                </span>\r\n                                <div className=\"mb-4 flex flex-col gap-1\">\r\n                                    <InfoItem\r\n                                        label={message.requested_time()}\r\n                                        value={formatRequestedTime(request.reqTimeStart, request.reqTimeEnd)}\r\n                                    />\r\n                                    <InfoItem\r\n                                        label={message.type()}\r\n                                        value={request.type}\r\n                                    />\r\n                                    <InfoItem\r\n                                        label={message.created_at()}\r\n                                        value={formatRequestDate(request.submissionDate)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            {request.comment && (\r\n                                <span className=\"mb-6\">\r\n                                    {request.comment}\r\n                                </span>\r\n                            )}\r\n                            <div className=\"flex flex-col gap-1\">\r\n                                <div className=\"flex\">\r\n                                    <StatusIcon status={request.status} />\r\n                                    <span className=\"ml-2 font-bold\">{capitalize(request.status)}</span>\r\n                                </div>\r\n                                {isRequestProcessed(request) && (\r\n                                    <>\r\n                                        <div className=\"mb-1 text-sm text-cal-header-text\">\r\n                                            <span>{capitalize(request.status) + ' at '}</span>\r\n                                            <span>{formatRequestDate(request.approvalDate) + ', '}</span>\r\n                                            <span>{formatApproval(request, message.by_system())}</span>\r\n                                        </div>\r\n                                        <span>{request.decisionDetails}</span>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </SmTransition>\r\n        </div>\r\n    )\r\n})\r\n\r\ntype InfoItemProps = {\r\n    label: string\r\n    value?: string\r\n}\r\n\r\nconst InfoItem: React.FC<InfoItemProps> = ({label, value}) => {\r\n    return (\r\n        <div className=\"flex\">\r\n            <div className=\"mr-2 w-32 shrink-0 truncate text-cal-header-text\">\r\n                {label}\r\n            </div>\r\n            <div className=\"truncate text-cal-dark-text\">\r\n                {value}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback, useMemo, useState} from 'react'\r\nimport type {ColumnDef, ColumnFiltersState} from '@tanstack/react-table'\r\nimport {flexRender, getCoreRowModel, useReactTable} from '@tanstack/react-table'\r\n\r\nimport {formatRequestDate, formatRequestedTime} from '@bpinc/cal-utils'\r\nimport {isHTMLElement} from '@bpinc/lib-html-utils'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport {Checkbox, Svg} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {commentIcon} from '../../../icons'\r\nimport {Cell} from './Cell'\r\nimport {Filters} from './Filters'\r\nimport {HeaderCell} from './HeaderCell'\r\nimport {mockData} from './mock-data'\r\nimport {RequestSidebar} from './RequestSidebar'\r\nimport {StatusIcon} from './StatusIcon'\r\nimport type {ApprovedRequest, DeniedRequest, Request} from './types'\r\nimport {ApprovalType, RequestStatus} from './types'\r\n\r\n\r\nexport const Table: React.FC = () => {\r\n    const {t: {CALENDAR_REQUESTS: message}} = useLocalizationState()\r\n    const [requests] = useState(() => [...mockData])\r\n    const [selectedRequest, setSelectedRequest] = useState<Request>()\r\n    const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([])\r\n\r\n    const selectRequestByRow = useCallback((row: HTMLTableRowElement) => {\r\n        const reqId = row.dataset.id\r\n        assertDefined(reqId)\r\n        const request = requests.find(r => r.id === reqId)\r\n        setSelectedRequest(request)\r\n    }, [requests])\r\n\r\n    const onRequestClick = useCallback((e: React.MouseEvent<HTMLTableSectionElement>) => {\r\n        if (!isHTMLElement(e.target)) {\r\n            return\r\n        }\r\n        const row = e.target.closest('tr')\r\n        if (row) {\r\n            selectRequestByRow(row)\r\n        }\r\n    }, [selectRequestByRow])\r\n\r\n    const onRowKeyDown = useCallback((e: React.KeyboardEvent<HTMLTableRowElement>) => {\r\n        if (e.key === 'Enter') {\r\n            const row = e.target\r\n            if (row instanceof HTMLTableRowElement) {\r\n                selectRequestByRow(row)\r\n            }\r\n        }\r\n    }, [selectRequestByRow])\r\n\r\n    const onRequestSidebarClose = useCallback(() => {\r\n        setSelectedRequest(undefined)\r\n    }, [])\r\n\r\n    const columns = useMemo<ColumnDef<Request, string>[]>(() => [\r\n        {\r\n            id: 'select',\r\n            header: ({table}) => (\r\n                <div className=\"w-9.5 px-2.5 pt-1\">\r\n                    <Checkbox\r\n                        {...{\r\n                            checked: table.getIsAllRowsSelected(),\r\n                            indeterminate: table.getIsSomeRowsSelected(),\r\n                            onChange: checked => table.toggleAllPageRowsSelected(checked),\r\n                        }}\r\n                    />\r\n                </div>\r\n            ),\r\n            cell: ({row}) => (\r\n                <div className=\"w-9.5 px-2.5 pt-1\">\r\n                    <Checkbox\r\n                        {...{\r\n                            checked: row.getIsSelected(),\r\n                            disabled: !row.getCanSelect(),\r\n                            indeterminate: row.getIsSomeSelected(),\r\n                            onChange: checked => row.toggleSelected(checked),\r\n                        }}\r\n                    />\r\n                </div>\r\n            ),\r\n            size: 38,\r\n        },\r\n        {\r\n            id: 'status',\r\n            accessorKey: 'status',\r\n            header: () => null,\r\n            cell: info => (\r\n                <Cell>\r\n                    <StatusIcon status={info.getValue() as RequestStatus} />\r\n                </Cell>\r\n            ),\r\n            size: 30,\r\n        },\r\n        {\r\n            id: 'type',\r\n            accessorKey: 'type',\r\n            header: () => <HeaderCell>{message.type()}</HeaderCell>,\r\n            cell: info => <Cell>{info.getValue()}</Cell>,\r\n            size: 150,\r\n        },\r\n        {\r\n            id: 'requested-time',\r\n            accessorFn: row => formatRequestedTime(row.reqTimeStart, row.reqTimeEnd),\r\n            header: () => <HeaderCell>{message.requested_time()}</HeaderCell>,\r\n            cell: info => <Cell>{info.getValue()}</Cell>,\r\n            size: 250,\r\n        },\r\n        {\r\n            id: 'submission-date',\r\n            accessorFn: row => formatRequestDate(row.submissionDate),\r\n            header: () => <HeaderCell>{message.submission_date()}</HeaderCell>,\r\n            cell: info => <Cell>{info.getValue()}</Cell>,\r\n            size: 160,\r\n        },\r\n        {\r\n            id: 'approval-date',\r\n            accessorFn: row => row.status !== RequestStatus.PENDING && formatRequestDate(row.approvalDate),\r\n            header: () => <HeaderCell>{message.approval_date()}</HeaderCell>,\r\n            cell: info => <Cell>{info.getValue()}</Cell>,\r\n            size: 160,\r\n        },\r\n        {\r\n            id: 'approval',\r\n            accessorFn: row => formatApproval(row, message.system_approval()),\r\n            header: () => null,\r\n            cell: info => (\r\n                <Cell className=\"text-cal-header-text\">\r\n                    {info.getValue()}\r\n                </Cell>\r\n            ),\r\n            size: 120,\r\n        },\r\n        {\r\n            id: 'reason',\r\n            accessorFn: row => row.status === RequestStatus.DENIED,\r\n            header: () => null,\r\n            cell: info => (\r\n                <Cell>\r\n                    {info.getValue()\r\n                        ? <Svg src={commentIcon} />\r\n                        : null}\r\n                </Cell>\r\n            ),\r\n            size: 40,\r\n        },\r\n        {\r\n            id: 'comment',\r\n            accessorKey: 'comment',\r\n            header: () => <HeaderCell>{message.comments()}</HeaderCell>,\r\n            cell: info => (\r\n                <Cell className=\"max-w-[150px] truncate\">\r\n                    {info.getValue()}\r\n                </Cell>\r\n            ),\r\n            enableResizing: true,\r\n        },\r\n    ], [message])\r\n\r\n    const table = useReactTable({\r\n        data: requests,\r\n        columns,\r\n        state: {columnFilters},\r\n        onColumnFiltersChange: setColumnFilters,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    })\r\n\r\n    return (\r\n        <div className=\"flex flex-1 flex-col gap-3\">\r\n            <Filters />\r\n            <div className=\"relative h-full overflow-hidden\">\r\n                <table className=\"flex flex-1 flex-col\">\r\n                    <thead className=\"box-border h-[34px] border-y border-cal-border bg-cal-light-bg\">\r\n                        {table.getHeaderGroups().map(headerGroup => (\r\n                            <tr key={headerGroup.id}>\r\n                                {headerGroup.headers.map(header => (\r\n                                    <th\r\n                                        key={header.id}\r\n                                        style={{\r\n                                            minWidth: header.getSize(),\r\n                                        }}\r\n                                    >\r\n                                        {header.isPlaceholder\r\n                                            ? null\r\n                                            : flexRender(\r\n                                                header.column.columnDef.header,\r\n                                                header.getContext(),\r\n                                            )}\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody onClick={onRequestClick}>\r\n                        {table.getRowModel().rows.map(row => (\r\n                            <tr\r\n                                key={row.id}\r\n                                className=\"h-9.5 cursor-pointer border-b border-cal-border\"\r\n                                data-id={row.original.id}\r\n                                tabIndex={0}\r\n                                onKeyDown={onRowKeyDown}\r\n                            >\r\n                                {row.getVisibleCells().map(cell => (\r\n                                    <td\r\n                                        key={cell.id}\r\n                                        style={{\r\n                                            minWidth: cell.column.getSize(),\r\n                                        }}\r\n                                    >\r\n                                        {flexRender(\r\n                                            cell.column.columnDef.cell,\r\n                                            cell.getContext(),\r\n                                        )}\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                <RequestSidebar\r\n                    request={selectedRequest}\r\n                    onClose={onRequestSidebarClose}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function isApprovedRequest(req: Request): req is ApprovedRequest {\r\n    return req.status === RequestStatus.APPROVED\r\n}\r\n\r\nexport function isDeniedRequest(req: Request): req is DeniedRequest {\r\n    return req.status === RequestStatus.DENIED\r\n}\r\n\r\nexport function isRequestProcessed(req: Request): req is ApprovedRequest | DeniedRequest {\r\n    return isApprovedRequest(req) || isDeniedRequest(req)\r\n}\r\n\r\nexport function formatApproval(req: Request, sysApprovalMsg: string) {\r\n    if (isRequestProcessed(req)) {\r\n        if (req.approvalType === ApprovalType.SYSTEM) {\r\n            return sysApprovalMsg\r\n        }\r\n\r\n        return `by ${req.approvedBy}`\r\n    }\r\n\r\n    return ''\r\n}\r\n","import React from 'react'\r\n\r\nimport {useBalancesLoader} from '../../hooks/useBalancesLoader'\r\nimport {useTimeoffTypesLoader} from '../../hooks/useTimeoffTypesLoader'\r\nimport {Balances} from './Balances'\r\nimport {Table} from './Table'\r\n\r\n\r\nexport const Requests: React.FC = React.memo(() => {\r\n    useTimeoffTypesLoader()\r\n    useBalancesLoader()\r\n\r\n    return (\r\n        <div className=\"z-0 flex flex-1 flex-col\">\r\n            <Balances />\r\n            <Table />\r\n        </div>\r\n    )\r\n})\r\n","import {useEffect} from 'react'\r\n\r\nimport {useCalendarStateMethods} from '@bpinc/cal-state-context'\r\n\r\n\r\nexport function useTimeoffTypesLoader() {\r\n    const {getTimeoffTypes} = useCalendarStateMethods()\r\n\r\n    useEffect(() => {\r\n        getTimeoffTypes()\r\n    }, [getTimeoffTypes])\r\n}\r\n","import {useEffect} from 'react'\r\n\r\nimport {useCalendarState, useCalendarStateMethods} from '@bpinc/cal-state-context'\r\n\r\n\r\nexport function useBalancesLoader() {\r\n    const {getTimeoffBalances} = useCalendarStateMethods()\r\n    const calendarOwnerUserId = useCalendarState('calendarOwnerUserId')\r\n\r\n    useEffect(() => {\r\n        if (calendarOwnerUserId) {\r\n            getTimeoffBalances(calendarOwnerUserId)\r\n        }\r\n    }, [calendarOwnerUserId, getTimeoffBalances])\r\n}\r\n","import React from 'react'\r\n\r\nimport {Page} from '@bpinc/cal-state-types'\r\nimport {useEventListener} from '@bpinc/lib-helpers'\r\n\r\nimport {useCalendarPage} from '../hooks/useCalendarPage'\r\nimport {useHandlerMoveKeysCalendar} from '../hooks/useHandlerMoveKeysCalendar'\r\nimport {Calendar} from './Calendar'\r\nimport {CalendarPageHeader} from './CalendarPageHeader'\r\nimport {EventFormSidebar} from './EventFormSidebar'\r\nimport {Requests} from './Requests'\r\n\r\n\r\nexport const CalendarPage: React.FC = () => {\r\n    const [page, setPage] = useCalendarPage()\r\n    const handlerCalendarKeys = useHandlerMoveKeysCalendar()\r\n    useEventListener('keydown', handlerCalendarKeys)\r\n\r\n    if (!page) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CalendarPageHeader\r\n                activePage={page}\r\n                onPageChange={setPage}\r\n            />\r\n            <div\r\n                data-testid=\"calendar-page\"\r\n                className=\"flex h-full flex-row items-stretch overflow-hidden pb-2 pl-4 pr-0 pt-3\"\r\n            >\r\n                {page === Page.MY_CALENDAR && <Calendar />}\r\n                {page === Page.MY_REQUESTS && <Requests />}\r\n                <EventFormSidebar />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import type {Dispatch, SetStateAction} from 'react'\r\nimport {useEffect, useState} from 'react'\r\n\r\nimport {Page} from '@bpinc/cal-state-types'\r\nimport {parseQueryString, setQueryParams} from '@bpinc/lib-helpers'\r\n\r\n\r\ntype Result = [Page | null, Dispatch<SetStateAction<Page | null>>]\r\n\r\nexport function useCalendarPage(): Result {\r\n    const [activePage, setActivePage] = useState<Page | null>(null)\r\n\r\n    useEffect(() => {\r\n        const queryParams = parseQueryString()\r\n        const tab = queryParams.tab\r\n\r\n        if (tab) {\r\n            setActivePage(tab as Page)\r\n        } else {\r\n            setQueryParams({tab: Page.MY_CALENDAR})\r\n            setActivePage(Page.MY_CALENDAR)\r\n        }\r\n\r\n        return () => setQueryParams({})\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setQueryParams({tab: activePage})\r\n    }, [activePage])\r\n\r\n    return [activePage, setActivePage]\r\n}\r\n","\r\nimport {View} from '@bpinc/cal-state-types'\r\nimport type {WeekDay} from '@bpinc/lib-helpers'\r\nimport {\r\n    areSameDays,\r\n    DAYS_IN_WEEKEND,\r\n    formatDate,\r\n    getStartOfDay,\r\n    isMidnight,\r\n    MS_IN_DAY,\r\n    MS_IN_HOUR,\r\n    MS_IN_MINUTE,\r\n    MS_IN_WEEK,\r\n    WEEK_DAYS_INDICES,\r\n    WEEK_DAYS_ORDER_MONDAY,\r\n    WEEK_DAYS_ORDER_SUNDAY,\r\n} from '@bpinc/lib-helpers'\r\n\r\n\r\nexport const LAST_DAY_OF_WEEK = 6\r\nexport const WEEKS_IN_MONTH = 5\r\nexport const MS_IN_ONE_MONTH = MS_IN_WEEK * WEEKS_IN_MONTH\r\nexport const MINUTES_IN_CELL = 30\r\nexport const MS_IN_CELL = MINUTES_IN_CELL * MS_IN_MINUTE\r\n\r\n\r\ntype Range = [number, number]\r\n\r\ntype Options = {\r\n    // first/last date of month may be in a middle of the week\r\n    // this controls whether to expand to the start/end of the week\r\n    // number is used to fill extra week in the end of grid (e.g. Feb)\r\n    expand?: boolean | number\r\n    weekStartsFromMonday?: boolean\r\n    withoutWeekend?: boolean\r\n}\r\n\r\nexport const getDaysInMonth = (year: number, month: number): number => {\r\n    // zero day of next month is the last day of current month\r\n    return new Date(year, month + 1, 0).getDate()\r\n}\r\n\r\n/**\r\n * Returns number of weeks in month view\r\n * @param startOfMonth - start of month timestamp\r\n * @returns number of weeks in month view\r\n */\r\nexport function getWeeksInMonth(startOfMonth: number) {\r\n    const [startOfMonthView] = getRangeFromView(startOfMonth, View.MONTH, {expand: true})\r\n\r\n    const currentLastDay = getDateByMonthViewIndexes(\r\n        new Date(startOfMonthView),\r\n        WEEKS_IN_MONTH - 1,\r\n        LAST_DAY_OF_WEEK,\r\n    )\r\n\r\n    const lastDayInMonth = getLastDayOfSameMonth(new Date(startOfMonth))\r\n\r\n    if (getStartOfDay(currentLastDay) < getStartOfDay(lastDayInMonth)) {\r\n        return WEEKS_IN_MONTH + 1\r\n    }\r\n\r\n    return WEEKS_IN_MONTH\r\n}\r\n\r\nexport const getLastDayOfSameMonth = (date: Date): Date => {\r\n    // Calculate the first day of the next month\r\n    const firstDayNextMonth: Date = new Date(\r\n        date.getFullYear(),\r\n        date.getMonth() + 1,\r\n        1,\r\n    )\r\n    // Subtract 1 day to get the last day of the original month\r\n    return new Date(firstDayNextMonth.getTime() - 1)\r\n}\r\n\r\nexport const getDayRange = (date: number, _options?: Options): Range => {\r\n    const sampleDate = new Date(date)\r\n\r\n    sampleDate.setHours(0, 0, 0, 0)\r\n    const start = Number(sampleDate)\r\n\r\n    sampleDate.setHours(24)\r\n    const end = Number(sampleDate)\r\n\r\n    return [start, end]\r\n}\r\n\r\nexport const getWeekRange = (\r\n    date: number,\r\n    {\r\n        weekStartsFromMonday,\r\n        withoutWeekend,\r\n    }: Options,\r\n): Range => {\r\n    const sampleDate = new Date(date)\r\n    const weekStartShift = weekStartsFromMonday || withoutWeekend ? 0 : 1\r\n\r\n    sampleDate.setHours(-24 * (sampleDate.getDay() - 1 + weekStartShift), 0, 0, 0)\r\n    const start = Number(sampleDate)\r\n\r\n    sampleDate.setHours(24 * (6 - (withoutWeekend ? DAYS_IN_WEEKEND : 0)))\r\n    const end = Number(sampleDate)\r\n\r\n    return [start, end]\r\n}\r\n\r\nexport const getMonthRange = (date: number, options: Options): Range => {\r\n    const sampleDate = new Date(date)\r\n\r\n    sampleDate.setHours(-24 * (sampleDate.getDate() - 1), 0, 0, 0)\r\n    const [start] = options.expand ? getWeekRange(Number(sampleDate), options) : [Number(sampleDate)]\r\n\r\n    const daysInMonth = typeof options.expand === 'number'\r\n        ? options.expand - 7\r\n        : getDaysInMonth(sampleDate.getFullYear(), sampleDate.getMonth())\r\n\r\n    sampleDate.setHours(24 * daysInMonth - 1)\r\n    const [, end] = options.expand ? getWeekRange(Number(sampleDate), options) : [0, Number(sampleDate)]\r\n\r\n    return [start, end]\r\n}\r\n\r\nconst getScheduleRange = (timestamp: number): Range => {\r\n    const startDate = new Date(timestamp)\r\n    startDate.setHours(0, 0, 0, 0)\r\n    const start = startDate.valueOf()\r\n\r\n    const endDate = new Date(start)\r\n    const HALF_OF_YEAR_IN_HOURS = 24 * 180\r\n    endDate.setHours(HALF_OF_YEAR_IN_HOURS)\r\n    const end = Number(endDate)\r\n\r\n    return [start, end]\r\n}\r\n\r\nexport const getRangeFromView = (\r\n    date: number,\r\n    view: 'day' | 'week' | 'month' | 'schedule',\r\n    options: Options = {},\r\n): Range => {\r\n    const opts = {\r\n        expand: false,\r\n        weekStartsFromMonday: false,\r\n        withoutWeekend: false,\r\n        ...options,\r\n    }\r\n    switch (view) {\r\n        case 'day':\r\n            return getDayRange(date, opts)\r\n        case 'week':\r\n            return getWeekRange(date, opts)\r\n        case 'month':\r\n            return getMonthRange(date, opts)\r\n        case 'schedule':\r\n            return getScheduleRange(date)\r\n        default:\r\n            return [0, 0]\r\n    }\r\n}\r\n\r\nexport const getRangeInDays = (start: Date, end: Date) => {\r\n    if (start > end) [start, end] = [end, start]\r\n\r\n    let msDiff = Number(end) - Number(start)\r\n    let daysDiff = Math.floor(msDiff / MS_IN_DAY)\r\n\r\n    msDiff -= daysDiff * MS_IN_DAY\r\n\r\n    const newEnd = new Date(Number(start) + msDiff)\r\n    if (daysDiff !== 0 && start.getDate() !== newEnd.getDate()) {\r\n        daysDiff++\r\n    }\r\n    return daysDiff + 1\r\n}\r\n\r\nexport const getLasts = (lastsDays: number, dayOfWeek: number) => {\r\n    return lastsDays + dayOfWeek <= 7\r\n        ? // ends within current week\r\n        lastsDays\r\n        : // expands for the next week\r\n        7 - dayOfWeek\r\n}\r\n\r\nexport type GetDaysOfWeekOptions = {\r\n    short?: boolean\r\n    oneLetter?: boolean\r\n    startsFromMonday?: boolean\r\n    withoutWeekend?: boolean\r\n}\r\n\r\nexport const getDaysOfWeek = (\r\n    dictFull: Record<WeekDay, string>,\r\n    dictShort: Record<WeekDay, string>,\r\n    dictLetter: Record<WeekDay, string>,\r\n    {\r\n        short,\r\n        oneLetter,\r\n        startsFromMonday,\r\n        withoutWeekend,\r\n    }: GetDaysOfWeekOptions = {},\r\n) => {\r\n    const mondayOrder = withoutWeekend ? WEEK_DAYS_ORDER_MONDAY.slice(0, 5) : WEEK_DAYS_ORDER_MONDAY\r\n    const sundayOrder = withoutWeekend ? WEEK_DAYS_ORDER_SUNDAY.slice(1, 6) : WEEK_DAYS_ORDER_SUNDAY\r\n    const weekDaysOrder = startsFromMonday ? [...mondayOrder] : [...sundayOrder]\r\n\r\n    if (short) {\r\n        return weekDaysOrder.map(key => dictShort[key])\r\n    }\r\n\r\n    if (oneLetter) {\r\n        return weekDaysOrder.map(key => dictLetter[key])\r\n    }\r\n\r\n    return weekDaysOrder.map(key => dictFull[key])\r\n}\r\n\r\nexport type GetDaysOfWeekIndicesOptions = Omit<GetDaysOfWeekOptions, 'short' | 'oneLetter'>\r\n\r\nexport const getDaysOfWeekIndices = ({\r\n    withoutWeekend,\r\n    startsFromMonday,\r\n}: GetDaysOfWeekIndicesOptions = {}) => {\r\n    if (withoutWeekend) {\r\n        return WEEK_DAYS_INDICES.slice(1, 6)\r\n    }\r\n\r\n    return startsFromMonday ?\r\n        [...WEEK_DAYS_INDICES.slice(1), WEEK_DAYS_INDICES[0]] :\r\n        [...WEEK_DAYS_INDICES]\r\n}\r\n\r\nexport function isCurrentHalfHour(date: Date) {\r\n    const now = new Date()\r\n    const dateToCheck = new Date(date)\r\n\r\n    const sameDay = now.toDateString() === dateToCheck.toDateString()\r\n    const sameHour = now.getHours() === dateToCheck.getHours()\r\n    const nowHalfHour = now.getMinutes() < 30 ? 0 : 1\r\n    const dateToCheckHalfHour = dateToCheck.getMinutes() < 30 ? 0 : 1\r\n\r\n    return sameDay && sameHour && nowHalfHour === dateToCheckHalfHour\r\n}\r\n\r\nexport const getDateByMonthViewIndexes = (start: Date, calendarWeekIndex: number, weekDayIndex: number): Date => {\r\n    const shift = calendarWeekIndex * 7 + weekDayIndex\r\n    return new Date(\r\n        start.getFullYear(),\r\n        start.getMonth(),\r\n        start.getDate() + shift,\r\n    )\r\n}\r\n\r\nexport const isTodayByDayIndex = (checkingStart: number, dayIndex: number) => {\r\n    const startOfDay = checkingStart + MS_IN_DAY * dayIndex\r\n    const now = Date.now()\r\n    return startOfDay < now && now - startOfDay < MS_IN_DAY\r\n}\r\n\r\nexport const getEventEndByStart = (startDate: Date): Date => {\r\n    const endDate = new Date(Number(startDate))\r\n    endDate.setMinutes(endDate.getMinutes() + MINUTES_IN_CELL)\r\n    return endDate\r\n}\r\n\r\nexport const getWeeksInRange = ([rangeStart, rangeEnd]: [Date, Date]): Date[] => {\r\n    const weeksInRange = []\r\n    const currentDate = new Date(rangeStart)\r\n\r\n    function getWeekStart(curDate: Date) {\r\n        const weekDayIndex = curDate.getDay()\r\n        return new Date(new Date(curDate).setHours(-24 * weekDayIndex))\r\n    }\r\n\r\n    while (currentDate < rangeEnd) {\r\n        weeksInRange.push(getWeekStart(currentDate))\r\n        currentDate.setHours(7 * 24)\r\n    }\r\n\r\n    const weekStart = getWeekStart(currentDate)\r\n    if (weekStart <= rangeEnd) {\r\n        weeksInRange.push(weekStart)\r\n    }\r\n\r\n    return weeksInRange\r\n}\r\n\r\nexport const getNextDayTime = (date: Date | number): number => {\r\n    const time = typeof date === 'number' ? date : date.getTime()\r\n    return time + MS_IN_DAY - 1\r\n}\r\n\r\nexport const getDefaultTimeForHourEvent = (day: Date): {startTime: number; endTime: number} => {\r\n    const startTime = day.setHours(8)\r\n    const endTime = startTime + MS_IN_HOUR\r\n    return {startTime: startTime, endTime: endTime}\r\n}\r\n\r\nexport const isLastsAllDay = (start: number, end: number) => {\r\n    const [startDate, endDate] = [new Date(start), new Date(end)]\r\n\r\n    return areSameDays(startDate, endDate)\r\n        && isMidnight(startDate)\r\n        && endDate.getHours() === 23 && endDate.getMinutes() === 59\r\n}\r\n\r\nexport const isWithinOneDay = (start: number, end: number) => {\r\n    const daysRange = getRangeInDays(new Date(start), new Date(end))\r\n\r\n    return daysRange === 1 && !isLastsAllDay(start, end)\r\n}\r\n\r\nexport function getGMT(timezone: string | undefined) {\r\n    const matches = timezone?.match(/GMT[-+]\\d\\d:\\d\\d/)\r\n\r\n    return matches?.[0].replace(/:00$/, '')\r\n}\r\n\r\nexport function formatRequestedTime(start: number, end: number): string {\r\n    const daysRange = getRangeInDays(new Date(start), new Date(end))\r\n\r\n    if (daysRange === 1) {\r\n        return `${formatDate(start, 'LT')} — ${formatDate(end, 'LT')}, ${formatDate(start, 'L')}`\r\n    }\r\n\r\n    // @todo: 'days' localization\r\n    return `${formatDate(start, 'L')} — ${formatDate(end, 'L')}, ${daysRange} days`\r\n}\r\n\r\nexport function formatRequestDate(time: number): string {\r\n    return `${formatDate(time, 'LT')}, ${formatDate(time, 'L')}`\r\n}\r\n","import type {CalendarEventDetails, CalendarEventItem} from '@bpinc/cal-request-urls'\r\nimport {type SelectionRange, EventCustomId} from '@bpinc/cal-state-types'\r\n\r\nimport {isWithinOneDay} from '../dates'\r\n\r\n\r\nexport const eventDetailsToCalendarEvent = (event: CalendarEventDetails): CalendarEventItem => {\r\n    return {\r\n        id: event.id || EventCustomId.NEW_EVENT,\r\n        allDay: event.allDay || false,\r\n        start: event.startTime,\r\n        end: event.endTime,\r\n        title: event.title,\r\n    }\r\n}\r\n\r\nexport const selectionToCalendarEvent = (\r\n    selection: SelectionRange,\r\n): CalendarEventItem => {\r\n    const [start, end] = selection.map(date => Number(date))\r\n\r\n    return {\r\n        id: EventCustomId.SELECTION,\r\n        allDay: !isWithinOneDay(start, end),\r\n        start,\r\n        end,\r\n        title: '',\r\n    }\r\n}\r\n","import {isEqual} from 'lodash-es'\r\n\r\nimport type {PhoneTypes} from '@bpinc/ad-contacts-state-types'\r\nimport {formatFullName} from '@bpinc/ad-formatting-helpers'\r\nimport type {SessionData} from '@bpinc/ad-session-types'\r\nimport type {CalendarContact, CalendarEventDetails, SaveCalendarEventRequest} from '@bpinc/cal-request-urls'\r\nimport type {CalendarEventExistingContact, SelectionRange} from '@bpinc/cal-state-types'\r\nimport {\r\n    type CalendarEventContact,\r\n    type CalendarEventFields,\r\n    type EventMapItem,\r\n    type RegularEvent,\r\n    EventType,\r\n} from '@bpinc/cal-state-types'\r\nimport {assertDefined, typedKeys} from '@bpinc/lib-types-helpers'\r\n\r\n\r\n/**\r\n * This fields\r\n */\r\nexport const TIME_FIELDS: Array<keyof CalendarEventFields> =\r\n    ['endDate', 'endTime', 'startDate', 'startTime']\r\n\r\n\r\n/**\r\n * Converts event details to form default values.\r\n * These default values are used as base values for comparision\r\n * with current form values and detecting dirty fields\r\n */\r\nexport const getDefaultValues = (\r\n    selectedEvent: CalendarEventDetails,\r\n): CalendarEventFields => {\r\n    const startMoment = new Date(selectedEvent.startTime).toISOString()\r\n    const endMoment = new Date(selectedEvent.endTime).toISOString()\r\n\r\n    return {\r\n        allDay: selectedEvent.allDay || false,\r\n        assignees: selectedEvent.assignees || [],\r\n        completed: selectedEvent.completed,\r\n        contacts: selectedEvent.contacts?.map(c => formatCalendarContactToContactFields(c)) || [],\r\n        email: selectedEvent.email || undefined,\r\n        endDate: endMoment,\r\n        endTime: endMoment,\r\n        notes: selectedEvent.notes || '',\r\n        remindIn: selectedEvent.remindIn ? Number(selectedEvent.remindIn) : 0,\r\n        remindInUnit: selectedEvent.remindInUnit ?? 'MINUTES',\r\n        screenpopSize: selectedEvent.screenpopSize || 0,\r\n        startDate: startMoment,\r\n        startTime: startMoment,\r\n        timezone: selectedEvent.timezone || '',\r\n        title: selectedEvent.title || '',\r\n    }\r\n}\r\n\r\n/**\r\n * Converts event contact to contact form fields\r\n */\r\nexport const formatCalendarContactToContactFields = (\r\n    contact: CalendarContact,\r\n): CalendarEventContact => {\r\n    const firstName = contact.first_name || 'Anonymous'\r\n    const lastName = contact.last_name || ''\r\n\r\n    if (contact.id) {\r\n        return {\r\n            type: 'existing',\r\n            id: contact.id,\r\n            firstName,\r\n            lastName,\r\n            primaryPhone: {\r\n                phone: contact.calendar_phone?.phone || '',\r\n                type: contact.calendar_phone?.type as PhoneTypes,\r\n            },\r\n        }\r\n    }\r\n    return {\r\n        type: 'new',\r\n        name: firstName + (lastName && ' ' + lastName),\r\n        phone: {\r\n            phone: contact.calendar_phone?.phone || '',\r\n            type: contact.calendar_phone?.type as PhoneTypes,\r\n        },\r\n        create: false,\r\n    }\r\n}\r\n\r\n/**\r\n * Detects that two events are equal.\r\n * Equility means that both events have identical id, or both are new events\r\n */\r\nexport const isEqualCalendarEvents = (\r\n    event1: CalendarEventDetails | undefined,\r\n    event2: CalendarEventDetails | undefined,\r\n): boolean => {\r\n    return event1 && event2\r\n        ? (isNewEvent(event1) && isNewEvent(event2)) || event1.id === event2.id\r\n        : false\r\n}\r\n\r\n/**\r\n * Checks that any of form values is dirty with respect to default values\r\n */\r\nexport const isFormDirty = (\r\n    isNewEvent: boolean | undefined,\r\n    defaultValues: CalendarEventFields,\r\n    values: CalendarEventFields,\r\n): boolean => {\r\n    const dirtyFields = typedKeys(values)\r\n        .reduce<Record<string, boolean>>((acc, key) => {\r\n            if (!isEqual(values[key], defaultValues[key])) {\r\n                acc[key] = true\r\n            }\r\n            return acc\r\n        }, {})\r\n\r\n    // For a new event exclude time fields from dirty fields\r\n    if (isNewEvent) {\r\n        TIME_FIELDS.forEach(field => { delete dirtyFields[field] })\r\n    }\r\n    return typedKeys(dirtyFields).length > 0\r\n}\r\n\r\n/**\r\n* Detects that event has not been saved\r\n*/\r\nexport const isNewEvent = (event: CalendarEventDetails): boolean =>\r\n    Boolean(!event.id && event._temporaryId)\r\n\r\n\r\nexport function isRegularEvent(event: EventMapItem): event is RegularEvent {\r\n    return event.type === EventType.EVENT\r\n}\r\n\r\n/**\r\n * Makes event details suitable to save on the backend\r\n * @param event Event details\r\n * @param sessionData Session data\r\n * @returns Event details to save\r\n */\r\nexport const normalizeEventDetailsToSave = (\r\n    event: CalendarEventDetails,\r\n    sessionData: SessionData,\r\n): SaveCalendarEventRequest => {\r\n    const {userId: myUserId, firstName, lastName, displayNameFormat} = sessionData\r\n\r\n    const myFullName = formatFullName(displayNameFormat, firstName, lastName)\r\n    const userName = event.userName || myFullName\r\n    const userId = event.userId || myUserId\r\n\r\n    assertDefined(userId)\r\n\r\n    return {\r\n        ...event,\r\n        completed: !!event.completed,\r\n        startTime: event.startTime,\r\n        endTime: event.endTime,\r\n        remindIn: event.remindIn ? Number(event.remindIn) : undefined,\r\n        remindInUnit: event.remindInUnit ?? 'MINUTES',\r\n        screenpopSize: event.screenpopSize || -1,\r\n        userId,\r\n        userName,\r\n    }\r\n}\r\n\r\n/**\r\n * Prevents selection range from component state to be changed in place\r\n */\r\nexport const getSortedSelectionRange = (range: SelectionRange): SelectionRange => {\r\n    return range[0] > range[1] ? [range[1], range[0]] : [...range]\r\n}\r\n\r\nexport const mergeEvents = (\r\n    formValues: CalendarEventFields,\r\n    defaultValues: CalendarEventFields,\r\n    newEvent: CalendarEventDetails,\r\n) => {\r\n    const nextDefaultValues = getDefaultValues(newEvent)\r\n\r\n    const keys = typedKeys(nextDefaultValues).filter(\r\n        key => key in formValues,\r\n    )\r\n\r\n    const newFormValues = keys.reduce<CalendarEventFields>(\r\n        (acc, key) => {\r\n            const value = acc[key]\r\n            const nextDefaultValue = nextDefaultValues[key]\r\n\r\n            if (value === nextDefaultValue) {\r\n                return acc\r\n            }\r\n\r\n            // We prevent dirty fields (fields that user changed),\r\n            // but always reset time fields\r\n            const isDirtyField = value !== defaultValues[key]\r\n            const needForceUpdate = TIME_FIELDS.includes(key)\r\n            if (isDirtyField && !needForceUpdate) {\r\n                return acc\r\n            }\r\n\r\n            return {\r\n                ...acc,\r\n                [key]: nextDefaultValue,\r\n            }\r\n        },\r\n        {...formValues},\r\n    )\r\n\r\n    return newFormValues\r\n}\r\n\r\nexport function isExistingContact(contact: CalendarEventContact): contact is CalendarEventExistingContact {\r\n    return contact.type === 'existing'\r\n}\r\n","\r\nimport type {CalendarEventItem} from '@bpinc/cal-request-urls'\r\nimport {EventType as EventBlockType} from '@bpinc/cal-request-urls'\r\nimport {\r\n    type EventMap,\r\n    type EventMapItem,\r\n    type NewEvent,\r\n    type RegularEvent,\r\n    type SelectionRange,\r\n    EventCustomId,\r\n    EventType,\r\n} from '@bpinc/cal-state-types'\r\nimport type {Shift, TimeoffRequest} from '@bpinc/cal-wfm-request-urls'\r\nimport {MS_IN_DAY} from '@bpinc/lib-helpers'\r\n\r\nimport {selectionToCalendarEvent} from './mappers/event'\r\nimport {getRangeInDays, getWeeksInRange, isWithinOneDay} from './dates'\r\nimport {getSortedSelectionRange} from './events-common'\r\n\r\n\r\nexport const getEventMapKey = (date: Date) => {\r\n    const y = date.getFullYear()\r\n    const m = date.getMonth() + 1\r\n    const d = date.getDate()\r\n    return `${y}-${m}-${d}`\r\n}\r\n\r\nexport const eventsToEventMap = (\r\n    calendarEvents: CalendarEventItem[],\r\n    selectedEvent?: CalendarEventItem,\r\n    selectionRange?: SelectionRange,\r\n) => {\r\n    const eventMap: EventMap = {}\r\n    const sortedEvents =\r\n        calendarEvents.slice(0).sort((a, b) => a.start - b.start)\r\n\r\n    sortedEvents.forEach(event => {\r\n        if (event.id !== selectedEvent?.id) {\r\n            addEventToEventMap(eventMap, event)\r\n        }\r\n    })\r\n\r\n    if (selectedEvent && selectedEvent.id !== EventCustomId.SELECTION) {\r\n        addEditedEventToMap(eventMap, selectedEvent)\r\n    } else if (selectionRange) {\r\n        addSelectionToEventMap(eventMap, selectionRange)\r\n    }\r\n\r\n    return eventMap\r\n}\r\n\r\nexport const requestsToEventMap = (\r\n    eventMap: EventMap,\r\n    requests: TimeoffRequest[],\r\n) => {\r\n    const requestEvents = requests.map(r => requestToCalendarEvent(r))\r\n    const sorted = requestEvents.slice(0).sort((a, b) => a.start - b.start)\r\n\r\n    sorted.forEach(event => {\r\n        addEventToEventMap(eventMap, event)\r\n    })\r\n\r\n    return eventMap\r\n}\r\n\r\nconst requestToCalendarEvent = (request: TimeoffRequest): CalendarEventItem => {\r\n    const [start, end] = [request.startDate, request.endDate].map(\r\n        d => new Date(d).getTime(),\r\n    )\r\n\r\n    return {\r\n        type: EventBlockType.REQUEST,\r\n        id: request.id,\r\n        allDay: !isWithinOneDay(start, end),\r\n        start,\r\n        end,\r\n        title: request.status,\r\n    }\r\n}\r\n\r\nexport const shiftsToEventMap = (\r\n    eventMap: EventMap,\r\n    shifts: Shift[],\r\n) => {\r\n    const shiftEvents = shifts.map(s => shiftToCalendarEvent(s))\r\n    const sorted = shiftEvents.slice(0).sort((a, b) => a.start - b.start)\r\n\r\n    sorted.forEach(event => {\r\n        addEventToEventMap(eventMap, event)\r\n    })\r\n\r\n    return eventMap\r\n}\r\n\r\nconst shiftToCalendarEvent = (shift: Shift): CalendarEventItem => {\r\n    const [start, end] = [shift.startTime, shift.endTime].map(\r\n        d => new Date(d).getTime(),\r\n    )\r\n\r\n    return {\r\n        type: EventBlockType.SHIFT,\r\n        id: shift.id,\r\n        allDay: !isWithinOneDay(start, end),\r\n        start,\r\n        end,\r\n        title: 'Shift',\r\n    }\r\n}\r\n\r\nconst addEventToEventMap = (eventMap: EventMap, event: CalendarEventItem): void => {\r\n    const startDate = new Date(event.start)\r\n    const endDate = new Date(event.end)\r\n    const mapKey: string = getEventMapKey(startDate) // YYYY-MM-DD\r\n\r\n    if (!eventMap[mapKey]) {\r\n        eventMap[mapKey] = []\r\n    }\r\n\r\n    const lastsDays = getRangeInDays(startDate, endDate)\r\n\r\n    const mapEventItem: RegularEvent = {\r\n        type: EventType.EVENT,\r\n        data: event,\r\n        lastsDays,\r\n    }\r\n\r\n    let emptySlotIndex = eventMap[mapKey].findIndex(item => item.type === EventType.EMPTY)\r\n    emptySlotIndex = emptySlotIndex === -1 ? eventMap[mapKey].length : emptySlotIndex\r\n    eventMap[mapKey][emptySlotIndex] = mapEventItem\r\n\r\n    if (lastsDays > 1) {\r\n        addOccupiedItemsToEventMap(\r\n            eventMap,\r\n            mapEventItem,\r\n            startDate,\r\n            lastsDays,\r\n            emptySlotIndex,\r\n        )\r\n    }\r\n}\r\n\r\nconst addOccupiedItemsToEventMap = (\r\n    eventMap: EventMap,\r\n    eventMapItem: RegularEvent | NewEvent,\r\n    eventStartDate: Date,\r\n    eventLastsDays: number,\r\n    eventSlotIndex: number,\r\n): void => {\r\n    const insertionDate = new Date(eventStartDate)\r\n\r\n    for (let lastsCount = 1; lastsCount < eventLastsDays; lastsCount++) {\r\n        insertionDate.setHours(24) // increment day\r\n\r\n        const nextDayKey = getEventMapKey(insertionDate)\r\n\r\n        if (!eventMap[nextDayKey]) {\r\n            eventMap[nextDayKey] = []\r\n        }\r\n\r\n        const dayOfWeek = insertionDate.getDay()\r\n        // lastsDay > 1, so if we increment 1 day and get day === 0 then it's next week\r\n        const isNextWeek = dayOfWeek === 0\r\n\r\n        if (!isNextWeek) {\r\n            while (eventMap[nextDayKey].length < eventSlotIndex) {\r\n                eventMap[nextDayKey].push({\r\n                    type: EventType.EMPTY,\r\n                })\r\n            }\r\n        }\r\n\r\n        const occupiedItem: EventMapItem = {\r\n            type: EventType.OCCUPIED,\r\n            data: eventMapItem.data,\r\n            lastsDays: eventLastsDays - lastsCount,\r\n        }\r\n\r\n        if (isNextWeek || eventMap[nextDayKey].length === eventSlotIndex) {\r\n            eventMap[nextDayKey].push(occupiedItem)\r\n        } else {\r\n            // occupy an empty spot\r\n            eventMap[nextDayKey][eventSlotIndex] = occupiedItem\r\n        }\r\n    }\r\n}\r\n\r\nconst addSelectionToEventMap = (\r\n    eventMap: EventMap,\r\n    selection: SelectionRange,\r\n): void => {\r\n    const range = getSortedSelectionRange(selection)\r\n    const selectionEvent = selectionToCalendarEvent(range)\r\n    addEditedEventToMap(eventMap, selectionEvent)\r\n}\r\n\r\nconst addEditedEventToMap = (eventMap: EventMap, event: CalendarEventItem) => {\r\n    const [start, end] = [new Date(event.start), new Date(event.end)]\r\n\r\n    const daysCount = getRangeInDays(start, end)\r\n\r\n    for (let i = 0; i < daysCount; i++) {\r\n        const nextDate = new Date(new Date(start).setHours(24 * i))\r\n        const mapKey = getEventMapKey(nextDate)\r\n\r\n        if (!eventMap[mapKey]) {\r\n            eventMap[mapKey] = []\r\n        }\r\n\r\n        eventMap[mapKey].unshift({\r\n            type: i === 0 ? EventType.NEW_EVENT : EventType.OCCUPIED,\r\n            lastsDays: daysCount - i,\r\n            data: event,\r\n        })\r\n    }\r\n\r\n    addEmptyEventsToEventMap(eventMap, start, end)\r\n}\r\n\r\nconst addEmptyEventsToEventMap = (\r\n    eventMap: EventMap,\r\n    eventStart: Date,\r\n    eventEnd: Date,\r\n): void => {\r\n    const weeksInRange = getWeeksInRange([eventStart, eventEnd])\r\n\r\n    weeksInRange.forEach(weekStart => {\r\n        for (let i = 0; i < 7; i++) {\r\n            const day = new Date(new Date(weekStart).setHours(24 * i))\r\n\r\n            if (dayIsWithinEvent(day, eventStart, eventEnd)) {\r\n                continue\r\n            }\r\n\r\n            const dateKey = getEventMapKey(day)\r\n\r\n            if (!eventMap[dateKey]) {\r\n                eventMap[dateKey] = []\r\n            }\r\n\r\n            eventMap[dateKey].unshift({\r\n                type: EventType.EMPTY,\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nconst dayIsWithinEvent = (\r\n    startOfDay: Date,\r\n    eventStart: Date,\r\n    eventEnd: Date,\r\n): boolean => {\r\n    const dayStartTs = Number(startOfDay)\r\n    const dayEndTs = Number(startOfDay) + MS_IN_DAY\r\n    const eventStartTs = Number(eventStart)\r\n    const eventEndTs = Number(eventEnd)\r\n\r\n    const isEventStartInDay = dayStartTs <= eventStartTs && eventStartTs < dayEndTs\r\n    const isEventMiddleInDay = eventStartTs < dayStartTs && dayEndTs < eventEndTs\r\n    const isEventEndInDay = dayStartTs <= eventEndTs && eventEndTs < dayEndTs\r\n\r\n    return isEventStartInDay || isEventMiddleInDay || isEventEndInDay\r\n}\r\n","import type {CalendarEventDetails} from '@bpinc/cal-request-urls'\r\nimport {\r\n    type DragInfo,\r\n    type EventMap,\r\n    type EventMapItem,\r\n    type SelectionRange,\r\n    EventType,\r\n} from '@bpinc/cal-state-types'\r\nimport {\r\n    areSameDays,\r\n    DAYS_IN_WEEK,\r\n    getStartOfDay,\r\n    isMidnight,\r\n    MS_IN_HOUR,\r\n} from '@bpinc/lib-helpers'\r\n\r\nimport {getNextDayTime, getRangeInDays, isWithinOneDay} from './dates'\r\nimport {getEventMapKey} from './event-map'\r\nimport {getSortedSelectionRange, isRegularEvent} from './events-common'\r\n\r\n\r\nexport const getSelectionRange = (selectedItem?: CalendarEventDetails): SelectionRange | undefined => {\r\n    if (selectedItem && !selectedItem.id) {\r\n        const {startTime, endTime} = selectedItem\r\n        if (startTime && endTime) {\r\n            return [new Date(startTime), new Date(endTime)]\r\n        }\r\n    }\r\n}\r\n\r\nexport const getDragStartDate = (x: number, y: number): Date | null => {\r\n    const monthContainer = document.getElementById('month-content')\r\n    if (!monthContainer) {\r\n        return null\r\n    }\r\n    const monthCells = Array.from(monthContainer.querySelectorAll<HTMLDivElement>('[data-element=\"month-cell\"]'))\r\n\r\n    const resultCell = monthCells.find(cell => {\r\n        const rect = cell.getBoundingClientRect()\r\n        // Check if the coordinates are within the cell's boundaries\r\n        return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom\r\n    })\r\n\r\n    if (!resultCell) {\r\n        return null\r\n    }\r\n\r\n    const dateStr = resultCell.dataset.day\r\n    if (!dateStr) {\r\n        return null\r\n    }\r\n\r\n    return new Date(Number(dateStr))\r\n}\r\n\r\nexport const checkIfCellIsSelected = (\r\n    day: Date,\r\n    selection: SelectionRange,\r\n) => {\r\n    const [rangeStart, rangeEnd] = getSortedSelectionRange(selection)\r\n    const allDay = !isWithinOneDay(Number(rangeStart), Number(rangeEnd))\r\n\r\n    // All day selection\r\n    if (allDay) {\r\n        const [start, end] = [rangeStart, rangeEnd]\r\n            .map(d => new Date(getStartOfDay(d)))\r\n        return start <= day && day <= end\r\n    }\r\n\r\n    // If not all day event for example from 10pm to 12am, then no select next day\r\n    if (isMidnight(rangeEnd)) {\r\n        return areSameDays(day, rangeStart)\r\n    }\r\n\r\n    return areSameDays(day, rangeStart) || areSameDays(day, rangeEnd)\r\n}\r\n\r\nexport const checkIfCellIsDropTarget = (\r\n    weekOfMonth: number,\r\n    dayOfWeek: number,\r\n    dragInfo?: DragInfo,\r\n    dragStartDate?: Date,\r\n) => {\r\n    if (!dragInfo || !dragStartDate) return false\r\n\r\n    const {item, cell} = dragInfo\r\n    const [start, end] = [item.data.start, item.data.end].map(v => new Date(v))\r\n    const lastsDays = getRangeInDays(start, end)\r\n    const dragDiffDays = getRangeInDays(start, dragStartDate) - 1\r\n    const [w, d] = cell\r\n    const cellOrdinal = weekOfMonth * DAYS_IN_WEEK + dayOfWeek\r\n    const startCell = w * DAYS_IN_WEEK + d - dragDiffDays\r\n\r\n    return startCell <= cellOrdinal && cellOrdinal < startCell + lastsDays\r\n}\r\n\r\nexport const getMonthEventSelectionRange = (\r\n    selection: SelectionRange,\r\n    eventsByDate?: EventMap,\r\n): SelectionRange => {\r\n    const [selectionStart, selectionEnd] = getSortedSelectionRange(selection)\r\n    const withinOneDay = areSameDays(selectionStart, selectionEnd)\r\n\r\n    if (!withinOneDay) {\r\n        return [\r\n            selectionStart,\r\n            new Date(getNextDayTime(Number(selectionEnd))),\r\n        ]\r\n    }\r\n\r\n    if (!eventsByDate) {\r\n        return [selectionStart, selectionEnd]\r\n    }\r\n\r\n    // on month view we set up time for one-hour event\r\n    // if there are events in the day, we need to set it up after all events until 00.00\r\n    // if day is empty or there isn't free slot for one-hour event after all events, we need to set it up to work day start\r\n    const clickCellDate = new Date(selection[0])\r\n    const eventsOfDay =\r\n        eventsByDate[getEventMapKey(clickCellDate)].filter(isRegularEvent)\r\n    const lastEvent = eventsOfDay.length > 0 ? eventsOfDay[eventsOfDay.length - 1] : undefined\r\n\r\n    const [start, end] = [selectionStart, selectionEnd].map((dateItem, i) => {\r\n        const sample = new Date(dateItem)\r\n        if (lastEvent) {\r\n            // check 1 hour slot after the last event\r\n            const hasSlot = areSameDays(clickCellDate, new Date(lastEvent.data.end + MS_IN_HOUR - 1))\r\n            if (hasSlot) {\r\n                const lastEventEndDate = new Date(lastEvent.data.end)\r\n                sample.setHours(lastEventEndDate.getHours() + i)\r\n                sample.setMinutes(lastEventEndDate.getMinutes())\r\n                return sample\r\n            }\r\n        }\r\n        sample.setHours(8 + i)\r\n        return sample\r\n    })\r\n\r\n    return [start, end]\r\n}\r\n\r\nexport const getInfoForMore = (\r\n    list: EventMapItem[],\r\n    limit: number,\r\n    eventsByDate: EventMap,\r\n): [boolean, number] => {\r\n    let hasMore = false\r\n    let moreAmount = 0\r\n\r\n    if (limit <= 0) {\r\n        moreAmount = list.length\r\n        hasMore = !!moreAmount\r\n        return [hasMore, moreAmount]\r\n    }\r\n\r\n    if (list.length > limit) {\r\n        // one spot will be occupied by more link\r\n        limit--\r\n\r\n        moreAmount = list.filter((_, i) => i >= limit).length\r\n\r\n        if (moreAmount) {\r\n            hasMore = true\r\n            return [hasMore, moreAmount]\r\n        }\r\n    } else if (list.length === limit) {\r\n        const lastItem = list[list.length - 1]\r\n\r\n        // if last item lasts for few days,\r\n        // check if it should be collapsed\r\n        // in order to give space for \"more\" link\r\n        // to some next day\r\n        if (lastItem.type === EventType.EVENT && lastItem.lastsDays > 1) {\r\n            const nextSection = new Date(lastItem.data.start)\r\n\r\n            for (let i = 1; i < lastItem.lastsDays; i++) {\r\n                nextSection.setHours(24) // increment day\r\n\r\n                // break if new week (Sunday)\r\n                if (nextSection.getDay() === 0) {\r\n                    break\r\n                }\r\n\r\n                const key = getEventMapKey(nextSection)\r\n                const nextList = eventsByDate[key]\r\n                const [nextDayHasMore] = getInfoForMore(nextList, limit, eventsByDate)\r\n\r\n                if (nextDayHasMore) {\r\n                    hasMore = true\r\n                    moreAmount = 1\r\n                    return [hasMore, moreAmount]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return [hasMore, moreAmount]\r\n}\r\n","import {View} from '@bpinc/cal-state-types'\r\n\r\nimport {getRangeFromView} from './dates'\r\n\r\n\r\ntype Options = {\r\n    weekStartsFromMonday?: boolean\r\n    withoutWeekend?: boolean\r\n}\r\n\r\nexport const getViewTitle = (\r\n    view: View,\r\n    viewDateTs: number,\r\n    monthsListLong: string[],\r\n    monthsListShort: string[],\r\n    options?: Options,\r\n): string => {\r\n    const viewDate = new Date(viewDateTs)\r\n    const viewDateMonth = viewDate.getMonth()\r\n    const viewDateYear = viewDate.getFullYear()\r\n\r\n    switch (view) {\r\n        case View.MONTH: {\r\n            const month = monthsListLong[viewDateMonth]\r\n            return `${month} ${viewDateYear}`\r\n        }\r\n        case View.WEEK: {\r\n            const [startDate, endDate] = getRangeFromView(\r\n                viewDateTs,\r\n                View.WEEK,\r\n                {\r\n                    weekStartsFromMonday: options?.weekStartsFromMonday,\r\n                    withoutWeekend: options?.withoutWeekend,\r\n                },\r\n            ).map(d => new Date(d))\r\n            const [startDay, startMonth, startYear] = [\r\n                startDate.getDate(),\r\n                monthsListShort[startDate.getMonth()],\r\n                startDate.getFullYear(),\r\n            ]\r\n            const [endDay, endMonth, endYear] = [\r\n                endDate.getDate(),\r\n                monthsListShort[endDate.getMonth()],\r\n                endDate.getFullYear(),\r\n            ]\r\n\r\n            // two months intersection\r\n            if (endDay < startDay) {\r\n                // not two years intersection\r\n                if (startYear === endYear) {\r\n                    // Oct 25 — Nov 2, 2023\r\n                    return `${startMonth} ${startDay} - ${endMonth} ${endDay}, ${viewDateYear}`\r\n                }\r\n                // Dec 30, 2023 — Jan 6, 2024\r\n                return `${startMonth} ${startDay}, ${startYear} - ${endMonth} ${endDay}, ${endYear}`\r\n            }\r\n            // Nov 11 - 18, 2023\r\n            return `${startMonth} ${startDay} - ${endDay}, ${viewDateYear}`\r\n        }\r\n        case View.DAY: {\r\n            const month = monthsListLong[viewDateMonth]\r\n            const day = viewDate.getDate()\r\n            return `${month} ${day}, ${viewDateYear}`\r\n        }\r\n        case View.SCHEDULE: {\r\n            const currentMonth = monthsListLong[viewDateMonth]\r\n\r\n            const [, end] = getRangeFromView(viewDateTs, View.SCHEDULE)\r\n            const endDate = new Date(end)\r\n            const endMonthIndex = endDate.getMonth()\r\n            const endMonth = monthsListLong[endMonthIndex]\r\n            const endYear = endDate.getFullYear()\r\n\r\n            return `${currentMonth} - ${endMonth}${viewDateYear !== endYear ? (`, ${endYear}`) : ''}`\r\n        }\r\n        default: {\r\n            return ''\r\n        }\r\n    }\r\n}\r\n","import type {CSSProperties} from 'react'\r\n\r\nimport type {CalendarEventItem} from '@bpinc/cal-request-urls'\r\nimport type {DragInfo} from '@bpinc/cal-state-types'\r\nimport {MS_IN_DAY, MS_IN_HOUR, MS_IN_MINUTE} from '@bpinc/lib-helpers'\r\n\r\nimport {getRangeInDays, MINUTES_IN_CELL, MS_IN_CELL} from './dates'\r\n\r\n\r\ninterface GetHeaderEventStyles extends GetEventStyles {\r\n    viewEnd: number\r\n}\r\n\r\ninterface GetEventStyles {\r\n    viewStart: number\r\n    viewEnd: number\r\n    cellSize: [number, number]\r\n    start: number\r\n    end: number\r\n    line: number\r\n    lines: number\r\n}1 | 7\r\n\r\n// 24 hours x 2 event cells per hour\r\nexport const CELLS_IN_DAY = 24 * 2\r\n\r\nconst EVENT_PADDING = 4\r\nconst EVENT_RIGHT_MARGIN = 16\r\nconst CELL_HEIGHT = 24\r\n\r\nexport const getWeekHeaderCellIndex = (timestamp: number, startOfWeek = 0) => {\r\n    return Math.floor((timestamp - startOfWeek) / MS_IN_DAY)\r\n}\r\n\r\nexport const getWeekCellIndices = (timestamp: number, startOfWeek = 0) => {\r\n    const dayIndex = Math.floor((timestamp - startOfWeek) / MS_IN_DAY)\r\n    const startDate = new Date(timestamp)\r\n    const h = startDate.getHours()\r\n    const m = startDate.getMinutes()\r\n    const cellIndex = h * 2 + Math.floor(m / MINUTES_IN_CELL)\r\n    return [dayIndex, cellIndex]\r\n}\r\n\r\nexport function getEventStyles(options: GetEventStyles) {\r\n    const {\r\n        viewStart,\r\n        viewEnd,\r\n        cellSize: [_, cellHeight],\r\n        start,\r\n        end,\r\n        line,\r\n        lines,\r\n    } = options\r\n    const dateToHeight = (t: number) => {\r\n        const [, cellIndex] = getWeekCellIndices(t)\r\n        return cellIndex * cellHeight\r\n    }\r\n\r\n    const styles: CSSProperties = {}\r\n    styles.width = `calc((100% - ${EVENT_RIGHT_MARGIN}px) / ${lines})`\r\n    styles.left = `calc(${styles.width} * ${line} + ${line}px)`\r\n    styles.top = start <= viewStart ? 0 : dateToHeight(start)\r\n    const height = (end >= viewEnd ? cellHeight * 24 * 2 : dateToHeight(end) - 1) - styles.top\r\n    // min height event - 30-minutes event\r\n    styles.height = height >= CELL_HEIGHT ? height : CELL_HEIGHT - 1\r\n    return styles\r\n}\r\n\r\nexport function getHeaderEventStyles(options: GetHeaderEventStyles) {\r\n    const {\r\n        viewStart,\r\n        viewEnd,\r\n        cellSize: [cellWidth, cellHeight],\r\n        start,\r\n        end,\r\n        line,\r\n        lines,\r\n    } = options\r\n    const styles: CSSProperties = {}\r\n    const beforeViewStart = Math.min(start, end) < viewStart\r\n\r\n    const days = getRangeInDays(\r\n        new Date(Math.max(start, viewStart)),\r\n        new Date(Math.min(viewEnd, end)),\r\n    )\r\n\r\n    const daysFromWeekStart = getRangeInDays(new Date(viewStart), new Date(start)) - 1\r\n\r\n    styles.bottom = EVENT_PADDING / 2 + (lines ? CELL_HEIGHT * (lines - line - 1) : 0)\r\n\r\n    styles.height = cellHeight - EVENT_PADDING\r\n\r\n    styles.width = days * cellWidth - EVENT_RIGHT_MARGIN\r\n    styles.left = beforeViewStart ? EVENT_PADDING / 2 : cellWidth * daysFromWeekStart\r\n\r\n    styles.backgroundColor = 'var(--c-calendar-day-event-bg)'\r\n    styles.borderLeftColor = 'var(--c-calendar-day-event-border)'\r\n\r\n    return styles\r\n}\r\n\r\nexport const getDragItemShift = (dragItemStart: number, dragInfo: DragInfo, startOfWeek: number) => {\r\n    const [dayIndex, cellIndex] = getWeekCellIndices(dragItemStart, startOfWeek)\r\n    const [dragDayIndex, dragCellIndex] = dragInfo.cell\r\n    const shiftHours = (dragDayIndex - dayIndex) * MS_IN_DAY\r\n    const shiftMinutes = (dragCellIndex - cellIndex) * MS_IN_CELL\r\n    return shiftHours + shiftMinutes\r\n}\r\n\r\nexport const getDateFromCell = (cell: Element, start: number) => {\r\n    const x = cell.getAttribute('data-x')\r\n    const y = cell.getAttribute('data-y')\r\n    if (x && y) {\r\n        const dayIndex = Number(x)\r\n        const cellIndex = Number(y)\r\n        return getDateByCellIndex(start, dayIndex, cellIndex)\r\n    }\r\n}\r\n\r\nexport const getDateByCellIndex = (\r\n    start: number,\r\n    dayIndex: number,\r\n    cellIndex: number,\r\n) => {\r\n    const startOfDay = start + MS_IN_DAY * dayIndex\r\n    const hours = Math.floor(cellIndex / 2)\r\n    const minutes = cellIndex % 2 ? MINUTES_IN_CELL : 0\r\n\r\n    return new Date(startOfDay + hours * MS_IN_HOUR + minutes * MS_IN_MINUTE)\r\n}\r\n\r\nexport const dragCalendarEvent = (\r\n    event: CalendarEventItem,\r\n    shift: number,\r\n): CalendarEventItem => {\r\n    return {\r\n        ...event,\r\n        start: event.start + shift,\r\n        end: event.end + shift,\r\n    }\r\n}\r\n\r\nexport const resizeCalendarEvent = (\r\n    event: CalendarEventItem,\r\n    shift: number,\r\n): CalendarEventItem => {\r\n    let [eventStart, eventEnd] = [event.start, event.end + shift]\r\n\r\n    if (eventStart > eventEnd) [eventStart, eventEnd] = [eventEnd, eventStart]\r\n    if (eventStart === eventEnd) eventEnd += MS_IN_CELL\r\n\r\n    return {\r\n        ...event,\r\n        start: eventStart,\r\n        end: eventEnd,\r\n    }\r\n}\r\n","import cn from 'classnames'\r\nimport {twMerge} from 'tailwind-merge'\r\n\r\n\r\nexport function tcn(...classnames: cn.ArgumentArray) {\r\n    return twMerge(cn(classnames))\r\n}\r\n"],"names":["useCalendarOwner","useSessionState","userId","firstName","lastName","calendarOwnerUserId","useCalendarState","getUserDetailsOnce","useUserDetailsOnceGetter","userDetails","useUserDetailsById","user","useMemo","myUserId","myFirstName","myLastName","details","data","useEffect","timeout","setTimeout","userIds","clearTimeout","useDaysOfWeek","options","DAYS","useLocalizationState","t","dictFull","messages","sunday","monday","tuesday","wednesday","thursday","friday","saturday","dictShort","sundayShort","mondayShort","tuesdayShort","wednesdayShort","thursdayShort","fridayShort","saturdayShort","dictLetter","sundayLetter","mondayLetter","tuesdayLetter","wednesdayLetter","thursdayLetter","fridayLetter","saturdayLetter","getDaysOfWeek","useDayOfWeek","date","daysOfWeek","startsFromMonday","getDay","useLocalTimezone","useTimezonesState","localTimezone","length","getUserTimezone","useMonthsList","short","MONTHS","fullArr","january","february","march","april","may","june","july","august","september","october","november","december","shortArr","januaryShort","februaryShort","marchShort","aprilShort","mayShort","juneShort","julyShort","augustShort","septemberShort","octoberShort","novemberShort","decemberShort","useMonthName","getMonth","useSelectEvent","calendarEvents","calendarEventDetails","useCalendarStateMethods","getCalendarEventDetails","selectEvent","setNewSelectedEvent","timezone","calendarOwner","useFormatting","formatFullName","useCallback","startTime","endTime","userName","isAllDay","isWithinOneDay","eventDetails","_temporaryId","uuid","allDay","assignees","displayText","type","completed","contacts","remindIn","remindInUnit","screenpopSize","title","useSetNewSelectedCalendarEvent","setSelectedEvent","event","id","end","notes","start","useSetSelectedCalendarEvent","args","eventId","foundEventDetails","find","then","fetchedEventDetails","findOrFetchEvent","CommonOpenEventButton","disabled","onClick","SemanticButton","inverted","className","tcn","INCOMING_CALL_DIALOG_BOX","incomingInteraction_open","Error","Symbol","toStringTag","OpenAPI","BASE","VERSION","WITH_CREDENTIALS","CREDENTIALS","TOKEN","undefined","USERNAME","PASSWORD","HEADERS","ENCODE_PATH","isDefined","value","isString","isStringWithValue","isBlob","stream","arrayBuffer","constructor","name","test","isFormData","FormData","resolve","resolver","config","token","username","password","additionalHeaders","headers","credentials","Object","entries","Accept","filter","_","reduce","key","String","str","btoa","err","Buffer","from","toString","base64","body","mediaType","Headers","url","formData","onCancel","controller","request","AbortController","method","signal","abort","fetch","response","contentType","error","status","get","toLowerCase","startsWith","json","isJSON","text","console","EventType","VIEWS_ORDER","View","CalendarBodyLoader","React","div","Loader","active","size","color","useAllDayEventsByLine","daysAmount","events","eventsByLines","viewEnd","viewStart","MS_IN_DAY","eventsList","values","flatMap","flatEvents","isAllDayEvent","inRange","isEventWithinView","forEach","lineIndex","index","every","lineEvent","eventStart","lineEventEnd","lineEventStart","eventEnd","getLineIndex","push","newEvents","unshift","getEventsByDay","Array","map","i","startOfday","getEventMapKey","Date","list","item","sort","a","b","order","indexOf","isEventInColumn","column","columnStart","setSeconds","columnEnd","useSelectionRange","selectedEvent","useState","selectionRange","setSelectionRange","prevSelectedEvent","usePrevious","intlFormatters","createSelector","locale","timeZone","fullDate","Intl","DateTimeFormat","day","month","weekday","h","hour","hmm","minute","hhmm","normalize","RegExp","replace","formatEventTimes","to","allDayMessage","startDate","dayjs","toDate","format","time","endDate","getRangeInDays","areSameDays","formatRange","mergeDateTime","dateString","timeString","setHours","getHours","setMinutes","getMinutes","getSeconds","Number","getEventDetailsFromFields","fields","omit","contact","getContactDetailsFromFields","parseContactName","parts","trim","split","slice","join","create","first_name","last_name","calendar_phone","phone","useSubscribeToSelectedEvent","form","eventEditing","nextSelectedEvent","resetEventForm","discardEventForm","openDiscardModal","continueEventForm","isDialogOpenRef","useRef","handleDiscard","current","handleCancel","useModalsStateMethods","openModal","CALENDAR_EVENT_FORM","actions","ok","action","message","discard_modal_discard","cancel","discard_modal_cancel","afterClose","discard_modal_text","useEventDiscardModal","editing","defaultValues","getDefaultValues","isNew","isNewEvent","isFormDirty","getValues","isEqual","newFormValues","mergeEvents","reset","COMBO_BOX_ID","AssigneesComboBox","control","label","rules","defaultValue","searchValue","setSearchValue","useController","field","onBlur","onChange","handleSelected","selected","newValue","selectedItems","htmlFor","MultipleUserSearch","searchForUsers","withSessionUser","searchForTeams","uniqueSearchId","setSelectedItems","noSearchValueLabel","CALENDAR","assignees_search_tooltip","inputPlaceholder","CHAT_CENTER","chat_add_members_search_input_placeholder","loadingLabel","GLOBAL","loading","onInputBlur","useShowSearchContactModal","onSelectContact","openSearchContactModal","useOpenSearchContactModal","useContactsStateMethods","getContact","handleSelectContact","force","dataKey","add_contact_dialog_title","onSelect","selectButtonTitle","add_contact_dialog_select_button_text","AddContactButton","onAdd","useBoolean","toggle","handleSelectedContact","Id","oid","primaryPhone","formatContactToContactsFields","handleSearchContact","handleAddContactManually","PhoneTypes","onKeyPressHandler","useOnKeyPressHandler","children","field_contact_dropdown_search_label","field_contact_dropdown_manually_label","PopupButton","show","toggleShow","onKeyDown","optionClassName","content","field_contact_label","ContactPhoneLabel","formatPhoneType","span","formatPhone","ExistingContact","getContactPictureUrl","useGetContactPictureUrl","buildPhoneId","primaryPhoneId","setPrimaryPhoneId","contactPhones","setContactPhones","isContactLoading","setContactLoading","loadedContact","phones","avatar","phoneIdField","contactPhone","phoneId","onChangePhone","onChangePrimaryPhoneId","HiddenField","AvatarLegacy","SelectFieldRaw","inline","selection","NewContact","optionsPhoneTypes","keys","phoneValidationRules","usePhoneValidationRules","SmForm","TextField","placeholder","add_new_contact_name_placeholder","width","add_new_contact_phone_placeholder","SelectField","CheckboxField","add_new_contact_create_label","EventContacts","useFieldArray","keyName","remove","append","onContactAdd","addedContacts","c","isExistingContact","Boolean","some","Contact","dataId","handleRemove","Panel","Button","transparent","semanticIcon","EventDetails","staticValue","setValue","isEditableFormField","field_details_label","p","field_details_text","SmIcon","fitted","link","shouldDirty","field_details_none","TimezoneSelect","allTimezones","timezoneOptions","fullName","tabIndex","search","remindUnitsOptions","unit","EventEdit","view","viewDate","scrollCalendarToDate","changeViewDate","getRangeFromView","expand","getStartOfDay","updateSelectedEvent","watch","momentRef","endMoment","startMoment","calendarEventRef","useAsRef","onlyDigitsValidationRule","useOnlyDigitsValidationRule","nextStartMoment","nextEndMoment","Math","floor","MS_IN_HOUR","isoString","toISOString","ceil","autoFocus","required","field_title_placeholder","field_completed_label","widths","DatePickerField","readOnly","clearable","icon","field_date_label","field_allday_label","displayFormat","field_time_label","field_reminder_label","field_assignee_label","TextAreaField","field_summary_label","maxRows","minRows","EventErrors","saveResult","deleteResult","clearSaveResult","clearDeleteResult","SmMessage","onDismiss","header","error_save_event_header","error_save_event_text","error_delete_event_header","error_delete_event_text","EventContactDetails","phoneType","ContactListItem","contentClassName","contactId","avatarProps","EventPreview","showTitle","language","text_all_day_event","SmHeader","as","text_reminde_before","format_minutes","format_hours","format_days","DayEventBlock","isSelectionInProgress","cellSize","line","lines","titleRef","startTimeChanged","useValueUpdated","scrollIntoView","block","behavior","useDrag","DragItemTypes","collect","monitor","isDragging","dropResult","getDropResult","onEnd","dragEventRef","previewDragRef","isResizeDragging","resizeEventRef","previewResizeRef","handleEventClick","e","currentTarget","getAttribute","handleEventPressKey","target","HTMLElement","style","properties","getHeaderEventStyles","getEventStyles","noEnd","isSelected","isSelectionEvent","EventCustomId","data-event-id","onMouseDown","stopPropagation","ref","data-after","DayMeeting","props","isHeader","titleStr","removeSpaces","DayRequest","useShiftTitle","shiftRange","DayShift","DayEvent","HeaderEvents","eventsByLine","isCommunicator","TimezoneDropdown","memo","localTimezoneId","onSelectTimezone","recentTimezoneIds","ariaLabel","setTrue","setFalse","setSearch","inputRef","dropdownRef","handleClick","handleSearch","recentTimezones","acc","timezoneId","timezoneItem","concat","filteredTimezones","s","includes","handleKeyDown","element","isHTMLElement","dataset","getTimezoneId","useOutsideClick","handler","focus","handlePressKey","preventDefault","shiftKey","useEscapeManager","enabled","SmDropdown","href","open","closeOnBlur","openOnFocus","onOpen","onClose","aria-label","data-testid","SearchInput","fluid","aria_search_label","IconSearch","timezone_search_placeholder","scrolling","data-root-navigation-by-keys","Header","timezone_local_header","TimezoneItem","highlight","timezone_recently_header","timezone_all_header","no_results_label","data-id","data-element","highlighted","TimezoneDropdownToggle","secondaryTimezone","recentSecondaryTimezones","useTimezonesStateMethods","setSecondaryTimezone","handleTimezoneSelect","idx","splice","isSecondaryTimezone","secondaryTimezoneGMT","getGMT","timezone_local_secondary_title","timezone_local_title","aria_timezone_dropdown","labelText","timezone_local_name","useOpenDayView","changeView","dateTime","HeaderDropContainer","dragInfo","onDrop","onHover","rest","drop","useDrop","accept","hover","diffCoords","getDifferenceFromInitialOffset","dayIndex","getWeekHeaderCellIndex","x","cellWidth","newDayIndex","round","diffX","cell","tbody","HeaderTable","linesAmount","isStartFromMonday","showWeekends","onDropCellHover","openDayView","withoutWeekend","dayOfWeek","days","isToday","startOfDay","now","getWeekDayDate","getDateFromMouseEvent","handleCellMouseDown","getNextDayTime","handleCellMouseOver","currentSelectionRange","selectionStart","selectionEnd","dayInMs","getTime","nextDayInMs","startInMs","endInMs","max","min","handlerOpenDayView","columnIndex","handlerPressAllDayEvent","startDayTime","nextDayTime","handleDayHeaderClick","handlePressKeyForElement","cellStyle","height","tdStyles","table","thead","tr","th","td","data-column","getDate","data-day","data-i","onMouseOver","all_day","EmptyLinesForEvents","arr","DayEvents","dayBuckets","dayStart","dayEnd","bucket","bucketIndex","Fragment","ColumnsDropContainer","resizeInfo","onResize","onEventResizeMove","dragType","getItemType","y","cellHeight","getWeekCellIndices","cellIndex","newCellIndex","diffY","CELLS_IN_DAY","shift","MS_IN_CELL","DayTimeColumn","timezoneDifferenceInMS","getOffset","timeZoneId","tz","offset","secondaryOffset","MS_IN_MINUTE","getTimeByIndex","offsetInMS","ms","hFormat","toUpperCase","first","localTime","secondaryTime","timeToCssPosition","percentsFromTop","MINUTES_IN_CELL","top","Timeline","position","setPosition","interval","setInterval","clearInterval","DaysColumns","headerLinesAmount","onEventDrop","onEventResize","onCellSizeChange","onCellMouseDown","onCellMouseOver","containerRef","handleMouseDown","isHTMLDivElement","closest","getDateFromCell","handleMouseOver","useLayoutEffect","observer","container","eventCell","querySelector","ResizeObserver","resizeObserverEntry","getBoundingClientRect","observe","disconnect","__","data-cell","data-x","data-y","isCurrentHalfHour","getDateByCellIndex","INITIAL_CELL_SIZE","ViewColumns","setDragInfo","setResizeInfo","dragInfoRef","resizeInfoRef","calendarFilters","timeoffRequests","shifts","viewDaysAmount","closeEventForm","useIsCommunicator","setCellSize","cellSizeInitialized","weekStartsFromMonday","moveCalendarEvent","stretchCalendarEvent","tableWrapperRef","isSelectedEventsEqual","eventsByDate","eventMap","selectedCalendarEvent","eventDetailsToCalendarEvent","getDragItemShift","dragItem","dragCalendarEvent","eventsToEventMap","resizeType","resizeCalendarEvent","resizeItem","DefaultCalendars","requestsToEventMap","shiftsToEventMap","handleEventDrop","calendarEvent","delta","handleEventResize","initialStart","initialEnd","duration","isReverse","abs","nextStart","nextEnd","handlingDate","prev","handleCellMouseUp","getSortedSelectionRange","getEventEndByStart","useEventListener","el","scrollTop","headerCellSize","allDayEventsByLine","dayEvents","withinOneDay","eventsByDay","buckets","isWithinOneDayEvent","findIndex","flatten","columns","lastBucket","lastColumn","useBodyEventsList","ViewMonthEmptyBlock","useMonthEventTitle","lastsDays","showEventTime","isShowEventTime","eventTime","ViewMonthEventBlock","classNameAllDay","onDragStart","showOccupied","showInModal","drag","startDragDate","getDragStartDate","pageX","pageY","lasts","getLasts","isOccupied","eventClassName","ViewMonthMeeting","ViewMonthRequest","ViewMonthShift","ViewMonthEvent","EventBlockType","ViewMonthMorePopup","onEventFormClose","monthName","dayName","buildTitle","evt","onMouseUp","basic","tooltip","WINDOW_POPUP_TITLES_AND_MESSAGES","window_buttonClose","MoreEventsPopupOpener","mountRef","Popup","mountNode","placement","onClickOutside","handleClose","MoreEventsPopupToggle","eventsCount","button","more","noEvents","ViewMonthEvents","dragStartDate","itemsInCell","onCellKeyPress","weekOfMonth","isOtherMonth","getItem","getInfoForMore","hasMore","moreAmount","cellEvents","isANewEvent","isBNewEvent","handleDayClick","handleCellKeyPressHandler","onKeyPressCellHandler","onKeyPressDayHandler","range","getSelectionRange","checkIfCellIsSelected","isDropTarget","checkIfCellIsDropTarget","ViewMonthContent","setDragStartDate","d","weeksInMonth","getWeeksInMonth","weekDaysIndices","getDaysOfWeekIndices","monthEventRange","getMonthEventSelectionRange","handleDropCellDrop","dropCellDate","getDateByMonthViewIndexes","itemId","itemStart","itemEnd","handleCellKeyPressEvent","getDefaultTimeForHourEvent","calendarWeekIndex","weekDayIndex","areSameMonths","ViewMonthHeader","oneLetter","ViewMonth","viewRef","setItemsInCell","viewObserverEntry","useResizeObserver","viewHeight","contentRect","prevViewHeight","calculateItemsInCell","eventContainer","document","getElementById","offsetHeight","itemsCanFit","itemHeight","ScheduleEvent","ScheduleTableRowEvent","row","cellStyles","monthsList","dayTitle","monthIndex","weekDayName","toLocaleDateString","dayNumber","checkIsToday","isFirstEventInCurrentDay","ScheduleTableRowWeekTitle","weekTitle","startDay","startMonthIndex","startMonthName","getFullYear","endDay","endMonthIndex","endMonthName","shouldShowEndMonth","ScheduleTableRowType","ScheduleTableRow","ScheduleTimeline","tableRows","setTop","recalculateTop","firstTableRowMoreThanNowIndex","valueOf","sum","EVENT","WEEK_TITLE","ScheduleGrid","uniqueCalendarEvents","it","daysCounter","DAYS_IN_WEEK","items","currentDateStart","currentDayEnd","range1","range2","ViewSchedule","CalendarBody","loaded","getCalendarEvents","prevViewDate","usePreviousValue","prevView","isViewChanged","shouldLoad","startPrev","defaultCalendarEventsIncluded","useEventsLoader","getTimeoffRequests","dateFrom","dateTo","useRequestsLoader","getShifts","calendarEventsLoading","DndProvider","backend","HTML5Backend","isLoading","CalendarEventFormControls","deleting","saving","onDelete","editSelectedEvent","handleEdit","saveButton","aria_event_save_label","button_save_text","editButton","aria_event_edit_label","button_edit_text","enabledInOffline","cancelButton","aria_event_cancel_label","button_cancel_text","deleteButton","aria_event_delete_label","button_delete_text","IconTrash","CalendarEventForm","eventSaving","eventDeleting","calendarEventDetailsLoading","formIsSet","setFormIsSet","useCalendarFormInit","useEventHandlers","onComplete","saveRequestResult","setSaveRequestResult","deleteRequestResult","setDeleteRequestResult","assertDefined","saveCalendarEventDetails","deleteCalendarEvent","handleSave","handleDelete","delete_modal_ok","delete_modal_cancel","delete_modal_text","delete_modal_title","isNewEventUtil","onSubmit","handleSubmit","process","CalendarNavigation","moveDate","isMoveForward","sampleDate","m","setFullYear","useMoveDate","handlePrevClick","handleNextClick","handleTodayClick","handleAddEventClick","todayFitsView","add_event_btn_tooltip","today","IconCalendarToday","SmMenu","compact","back","IconChevronLeft","next","IconChevronRight","MOVE_KEYS","VIEW_WEEK_ELEMENTS","checkDayViewElement","useHandlerMoveKeysCalendar","currentElement","daysOfMonthView","getNavigationByKeysElements","currentFocusIndex","handlerMoveKeysMonthView","headerScaleDateRow","allDayRow","bodyTableOfDayColumns","headerScaleDateElements","allDayElements","dayColumns","availableElementsOnView","handlerMoveKeysDayView","navigationByKeysElements","handlerVerticalNavigationElements","root","querySelectorAll","CalendarSidebarButton","onToggle","OpenEventButtons","ad","module","default","AdOpenEventButton","adc","AdcOpenEventButton","OpenEventButton","restProps","Component","Suspense","fallback","Actions","useHandlers","completeCalendarEvent","snoozeCalendarEvent","handleOpen","queueMicrotask","handleSnooze","handleDismiss","calendarAlert_snooze","calendarAlert_dismiss","CalendarEventNotificationModal","moreQueue","browserTabInfo","useBrowserTabMetaInfo","appType","app","formatDate","monthsShort","timestamp","dow","ampm","formatted","addLeadingZero","calendarAlert_dateString","useDateFormatter","useEventDetails","heading_calendarAlert_morePrefix","useTitle","useDraggableModal","modalType","draggableNodeRef","draggableProps","draggable","notificationContent","section","role","aria-modal","backgroundImage","notificationBgSrc","heading_calendarAlert","img","alt","src","headerIconSrc","ReactDOM","Draggable","window","CalendarModalsAutoOpener","useModalComponentOpener","openGlobalSlidingModal","useOpenGlobalSlidingModal","calendarEventAlerts","useCalendarAlertState","localSettings","useLocalSettings","hasSelectedEvent","openModalWithConfig","modalVisualParams","calendar_event_notification","notification","RequestType","AbsenceType","CreateRequestModal","timeoffTypes","timeoffRequestSaving","saveTimeoffRequest","activeRequestTab","setActiveRequestTab","useForm","timeOffTypeId","comment","allOrNothing","absenceTypeOptions","CALENDAR_REQUESTS","absence_sick","typeId","tType","requestTabs","absence_request","schedule_change_request","overtime_request","onRequestTabChange","handleCreate","catch","Modal","aria-labelledby","schedule_request","Tabs","tabs","activeTabId","headerClassName","tabClassName","activeTabClassName","absence_type","comments","all_or_nothing","if_unavailable_deny","window_buttonCancel","primary","create_request","ReassignCalendarEventModal","assignCalendarEvent","after","before","dateRange","setDateRange","users","setUsers","handleConfirm","fromUser","toUser","closeIcon","batchAssignEvents","batch_assign_event_users_placeholder","BpPeriodSelect","input","getLongDateFormat","events_period","dateFormat","languageToLocaleMap","timeFormat","hideOnScrollPopup","assign_button","BatchAssignEvents","openReassignCalendarEventModal","handleUserReassignClick","empty","CalendarUserSelect","setCalendarOwnerUserId","isOpen","setIsOpen","handleToggle","v","selectedItem","CalendarUser","CalendarViewSelect","handleViewChange","_evt","newView","newStart","newEnd","useHandleViewChange","ViewButton","Icon","IconCalendarViewMonth","IconCalendarViewWeek","week","IconCalendarViewDay","IconCalendarViewSchedule","schedule","CalendarViewTitle","monthsListShort","getViewTitle","date_title_tooltip","CalendarHeader","toggleCalendarSidebar","calendar_heading","month_nav_btn_tooltip","CalendarSidebarFilters","filters","onFilterChange","calendar","checked","Checkbox","CalendarSidebarMonth","monthDate","eventsMap","hidePreviousMonth","hideNextMonth","monthTitle","year","weekIndex","isCurrentView","hideValue","hasEvents","CalendarSidebarMonths","currentDate","eventsDatesMap","nextMonthDate","getNextMonthDate","CalendarSidebarPagination","goNextPage","goPreviousPage","nextTooltip","previousTooltip","CalendarSidebar","pagination","setCurrentDate","switchPage","forward","sample","setMonth","goPrevPage","SmTransition","visible","animation","unmountOnHide","Calendar","showCalendarSidebar","getCalendarsList","calendars","changeCalendarFilter","holidays","events_and_meetings","requests","calendars_heading","useCalendarFilters","CalendarPageHeader","activePage","onPageChange","pagesTabs","Page","my_calendar","my_requests","onTabChange","EventFormSidebar","Balance","timeoffType","balance","unused","hours_available","Balances","timeoffBalances","time_off_type_id","Cell","RequestStatus","ApprovalType","StatusFilter","onStatusChange","Option","all","onChoose","PENDING","WAITLISTED","APPROVED","DENIED","borderColor","backgroundColor","capitalize","Filters","openCreateRequestModal","statusFilter","setStatusFilter","onNewRequest","typeOptions","any_type","new_request","popupPosition","choose_requests_period","showTime","showSearchCheckbox","SmSelect","HeaderCell","mockData","reqTimeStart","reqTimeEnd","submissionDate","approvalDate","approvalType","SYSTEM","SUPERVISOR","approvedBy","decisionDetails","StatusIcon","Svg","acceptedIcon","deniedIcon","waitlistedIcon","pendingIcon","RequestSidebar","isDeleting","deleteTimeoffRequest","IconClose","InfoItem","requested_time","formatRequestedTime","created_at","formatRequestDate","isRequestProcessed","formatApproval","by_system","Table","selectedRequest","setSelectedRequest","columnFilters","setColumnFilters","selectRequestByRow","reqId","r","onRequestClick","onRowKeyDown","HTMLTableRowElement","onRequestSidebarClose","getIsAllRowsSelected","indeterminate","getIsSomeRowsSelected","toggleAllPageRowsSelected","getIsSelected","getCanSelect","getIsSomeSelected","toggleSelected","accessorKey","info","getValue","accessorFn","submission_date","approval_date","system_approval","commentIcon","enableResizing","useReactTable","state","onColumnFiltersChange","getCoreRowModel","getHeaderGroups","headerGroup","minWidth","getSize","isPlaceholder","flexRender","columnDef","getContext","getRowModel","rows","original","getVisibleCells","req","isApprovedRequest","isDeniedRequest","sysApprovalMsg","Requests","getTimeoffTypes","getTimeoffBalances","CalendarPage","setActivePage","useCalendarPage","tab","parseQueryString","setQueryParams","page","setPage","handlerCalendarKeys","MS_IN_WEEK","startOfMonth","startOfMonthView","currentLastDay","WEEKS_IN_MONTH","lastDayInMonth","getLastDayOfSameMonth","firstDayNextMonth","getDayRange","_options","getWeekRange","weekStartShift","DAYS_IN_WEEKEND","getMonthRange","daysInMonth","getScheduleRange","opts","msDiff","daysDiff","mondayOrder","WEEK_DAYS_ORDER_MONDAY","sundayOrder","WEEK_DAYS_ORDER_SUNDAY","weekDaysOrder","WEEK_DAYS_INDICES","dateToCheck","sameDay","toDateString","sameHour","nowHalfHour","dateToCheckHalfHour","isMidnight","isLastsAllDay","matches","match","daysRange","TIME_FIELDS","formatCalendarContactToContactFields","email","dirtyFields","typedKeys","isRegularEvent","formValues","newEvent","nextDefaultValues","nextDefaultValue","isDirtyField","needForceUpdate","addEventToEventMap","addEditedEventToMap","addSelectionToEventMap","requestToCalendarEvent","shiftToCalendarEvent","mapKey","mapEventItem","emptySlotIndex","addOccupiedItemsToEventMap","eventMapItem","eventStartDate","eventLastsDays","eventSlotIndex","insertionDate","lastsCount","nextDayKey","isNextWeek","occupiedItem","selectionEvent","selectionToCalendarEvent","daysCount","nextDate","addEmptyEventsToEventMap","rangeStart","rangeEnd","getWeekStart","curDate","weeksInRange","weekStart","getWeeksInRange","dayIsWithinEvent","dateKey","dayStartTs","dayEndTs","eventStartTs","eventEndTs","monthContainer","resultCell","rect","left","right","bottom","dateStr","dragDiffDays","w","cellOrdinal","startCell","clickCellDate","eventsOfDay","lastEvent","dateItem","lastEventEndDate","limit","lastItem","nextSection","nextList","viewDateTs","monthsListLong","viewDateMonth","viewDateYear","startMonth","startYear","endMonth","endYear","currentMonth","startOfWeek","dateToHeight","styles","CELL_HEIGHT","beforeViewStart","daysFromWeekStart","EVENT_PADDING","borderLeftColor","dragItemStart","dragDayIndex","dragCellIndex","hours","minutes","classnames","twMerge","cn"],"sourceRoot":""}