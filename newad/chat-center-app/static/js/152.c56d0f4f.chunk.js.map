{"version":3,"file":"static/js/152.c56d0f4f.chunk.js","mappings":"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","sources":["webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/UnreadBadge.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/hooks/useMessagesWithAuxilaryLabels.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/announcement.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/cancel.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/chat_center_icon.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/delivered_message_icon.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/pin.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/remove_member.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/reply.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/save.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/thumb_up.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/unpin.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/images/unread.svg","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/MarkAsReadSensor.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/AnnouncementMessage.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/DateSeparator.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-tailwind-classnames/src/tcn.ts","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/DeletedMessage.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/channel-context/state.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/channel-context/context.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/helpers/getGroupChatAvatar.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/ChatMessagesActions/ChatMessagesContext.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/ChatForm/atoms.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/ChatForm/UploadErrorModal.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-attachments-state/src/constants.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-attachments-state/src/provider-chat.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-attachments-state/src/provider-email.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/ExternalMessages/useMessages/CallMessageContent/CallMessageContent.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/messages/images/bot-suggestion.svg","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/messages/images/facebook.svg","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/messages/images/line.svg","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/messages/images/sms.svg","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/messages/images/telegram.svg","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/messages/images/twitter.svg","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/messages/images/viber.svg","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/messages/images/web-chat.svg","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/messages/images/wechat.svg","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/messages/images/whatsapp.svg","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/VoiceTranscript/VoiceTranscriptContext.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/external/ChatForm/InvisibleAttachButton.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/hooks/useMessageUpdater.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/Chat.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-chat-ui/src/components/SystemMessageUI.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/EmojiReactionPopupContent.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/EmojiReactionIndicator.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/MessageContentCard.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/ReplyingMessagePreview.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/EditMessage.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/RegularMessageHoverControls.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/UserAvatar.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/RegularMessage.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/SystemMessage.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/messages/UnreadMessage.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/ChatMessage.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/ChatMessagesVirtualization.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/hooks/useScrollToBottomHandler.ts","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/ChatMessagesArea.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/helpers/helpers.ts","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/MessageTypeSelector.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/TextArea.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/GroupChatControls.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/InputControlsArea.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/PinnedMessageItem.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/PinnedMessagesStack.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/ChatContent.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/ChatCenterScopeProvider.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/ChatCenterInteraction.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/ChatCenterHeader.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/NewTeamsChatModal/NewTeamsChatModal.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/GroupChatActionsButton.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/GroupChatSubActions.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/ChatListItem.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/hooks/useMembersDetails.ts","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/hooks/useLeaveChatHandler.ts","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/hooks/useSortedChats.ts","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/ChatCenterLeftPanel.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/hooks/useAddNewTeamChatModal.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/hooks/useChatListActionDispatcher.ts","webpack://@bpinc/web-chat-center-ui/../../packages/state-group-chat-ui/src/ns/UtilsNS.ts","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/popups/AddChatMembers.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/hooks/useMembersDisplayData.ts","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/hooks/useRemoveChatMemberHandler.ts","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/popups/ChatMemberItem.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/popups/FullChatMembersListModal.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/popups/ChatMembersList.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/hooks/useShowFullChatMembersListModal.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/popups/ChatMembersPopup.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/ChatMembersButton/ChatMembersButton.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/ChatHeader.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/chat/PotentialChat.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/ChatCenterMainArea.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/ChatCenterPage.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/ChatMembersButton/ChatMembresButtonProvider.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/constants.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/system/useDomainAuthorizationPopup.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/system/useInstallationRequiredPopup.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/system/useOutdatedBrowserExtensionPopup.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/system/useOutdatedClientNotification.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/system/usePhoneOutOfServiceNotification.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/hooks.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/system/useOfflineNotification.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/system/useSipServerDisconnectedNotification.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/system/useSlowNetworkNotification.ts","webpack://@bpinc/web-chat-center-ui/../../packages/lib-system-notifications/src/system/useUnauthorizedDomainNotification.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-authorization-module/src/AuthorizedConnectorsConsumers.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-login-ui/src/components/ForceLogout.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-authorization-module/src/UnauthorizedUI.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-authorization-module/src/AuthorizationUIRouter.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-authorization-module/src/BaseConnectorsConsumers.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-authorization-module/src/TopLevelProviders.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/lib-authorization-module/src/AuthorizationModule.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/FullscreenChatCenterApp/MainPageUIMockProvider.tsx","webpack://@bpinc/web-chat-center-ui/../../packages/chat-center-ui/src/components/FullscreenChatCenterApp/FullscreenChatCenterApp.tsx"],"sourcesContent":["import React, {useEffect, useMemo, useState} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\nimport {debounce} from 'lodash-es'\r\n\r\nimport {SmIcon} from '@bpinc/lib-external-ui-elements'\r\nimport {useAsRef} from '@bpinc/lib-helpers'\r\nimport {SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {scrollerApiAtom, useGroupChatItem} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport function UnreadBadge() {\r\n    const {t} = useLocalizationState()\r\n    const [showUnredBadge, setShowUnreadBadge] = useState(false)\r\n\r\n    const scrollerApi = useAtomValue(scrollerApiAtom)\r\n\r\n    const haveUnread = Boolean(useGroupChatItem()?.unreadMessages.length)\r\n    const haveUnreadRef = useAsRef(haveUnread)\r\n\r\n    const showUnredBadgeDebounce = useMemo(\r\n        () => debounce(() => {\r\n            setShowUnreadBadge(haveUnreadRef.current)\r\n        }, 500),\r\n        [haveUnreadRef, setShowUnreadBadge],\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (haveUnread) {\r\n            showUnredBadgeDebounce()\r\n        } else {\r\n            setShowUnreadBadge(false)\r\n        }\r\n    }, [haveUnread, showUnredBadgeDebounce])\r\n\r\n    return showUnredBadge\r\n        ? (\r\n            <SemanticButton\r\n                enabledInOffline\r\n                basic\r\n                primary\r\n                onClick={scrollerApi.scrollToBottom}\r\n                className=\"absolute bottom-4 left-4 z-[1] flex h-8 shrink-0 items-center self-end !bg-white px-6 hover:!bg-white\"\r\n            >\r\n                {t.CHAT_CENTER.unread_messages_button_text()}\r\n                <SmIcon name=\"caret down\" />\r\n            </SemanticButton>\r\n        )\r\n        : null\r\n}\r\n","import {useMemo, useRef} from 'react'\r\n\r\nimport {formatChatDate} from '@bpinc/ad-formatting-helpers'\r\nimport {areSameDays} from '@bpinc/lib-helpers'\r\nimport type {ComposedMessage} from '@bpinc/state-group-chat-types'\r\nimport {useGroupChatItem} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype Message = Exclude<ComposedMessage, string>\r\n\r\n/**\r\n * Appends date labels that divide messages day by day (1)\r\n * and an Unread messages label before first unread message (2)\r\n */\r\nexport function useMessagesWithAuxilaryLabels(): ComposedMessage[] {\r\n    const {t} = useLocalizationState()\r\n    const unreadMessage = t.CHAT_CENTER.unread_messages()\r\n\r\n    const chatItem = useGroupChatItem()\r\n    const firstUnreadTimestampRef = useRef(chatItem?.firstUnreadTimestamp)\r\n\r\n    return useMemo(() => {\r\n        const nextMessages = chatItem && insertDayLabels(chatItem.messages) || []\r\n        const firstUnreadTimestamp = firstUnreadTimestampRef.current\r\n\r\n        return firstUnreadTimestamp\r\n            ? insertUnreadLabel(nextMessages, firstUnreadTimestamp, unreadMessage)\r\n            : nextMessages\r\n    }, [chatItem, unreadMessage])\r\n}\r\n\r\nfunction insertDayLabels(messages: Message[]): ComposedMessage[] {\r\n    const nextMessages: ComposedMessage[] = [...messages]\r\n    let i = messages.length\r\n\r\n    while (i--) {\r\n        const time1 = messages[i - 1]?.sendTime || 0\r\n        const time2 = messages[i].sendTime\r\n\r\n        if (!areSameDays(time1, time2)) {\r\n            nextMessages.splice(i, 0, formatChatDate(time2))\r\n        }\r\n    }\r\n    return nextMessages\r\n}\r\n\r\nfunction insertUnreadLabel(\r\n    messages: ComposedMessage[],\r\n    firstUnreadTimestamp: number,\r\n    unreadMessage: string,\r\n): ComposedMessage[] {\r\n    for (let i = 0; i < messages.length; i += 1) {\r\n        const message = messages[i]\r\n\r\n        const isFirstUnreadMessage =\r\n            message instanceof Object &&\r\n            message.sendTime === firstUnreadTimestamp\r\n\r\n        if (isFirstUnreadMessage) {\r\n            return messages.slice(0, i)\r\n                .concat(unreadMessage)\r\n                .concat(messages.slice(i))\r\n        }\r\n    }\r\n    return messages\r\n}\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgAnnouncement = function SvgAnnouncement(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 30,\n    height: 26.667,\n    viewBox: \"0 0 30 26.667\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30 12.5a3.318 3.318 0 0 0-1.667-2.871V1.667A1.684 1.684 0 0 0 26.667 0a1.663 1.663 0 0 0-1.041.366L21.2 3.909a12.641 12.641 0 0 1-7.864 2.758h-10A3.333 3.333 0 0 0 0 10v5a3.333 3.333 0 0 0 3.333 3.333h1.756A12.657 12.657 0 0 0 4.975 20a13.194 13.194 0 0 0 1.331 5.778 1.634 1.634 0 0 0 1.479.889h3.869A1.656 1.656 0 0 0 13 24.033 6.633 6.633 0 0 1 11.641 20a6.3 6.3 0 0 1 .23-1.667h1.463a12.639 12.639 0 0 1 7.866 2.758l4.429 3.543a1.666 1.666 0 0 0 2.707-1.3v-7.963A3.319 3.319 0 0 0 30 12.5Zm-5 7.366-1.721-1.377A15.979 15.979 0 0 0 13.333 15v-5a15.979 15.979 0 0 0 9.945-3.489L25 5.134Z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgAnnouncement);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"0df9f8300a552238cf5c688749796108.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgCancel = function SvgCancel(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 0a10 10 0 1 0 10 10A10.007 10.007 0 0 0 10 0Zm0 .87A9.13 9.13 0 1 1 .87 10 9.124 9.124 0 0 1 10 .87Zm3.474 5.211a.435.435 0 0 0-.3.133L10 9.385 6.829 6.214a.435.435 0 1 0-.615.615L9.385 10l-3.171 3.171a.435.435 0 1 0 .615.615L10 10.615l3.171 3.171a.435.435 0 1 0 .615-.615L10.615 10l3.171-3.171a.435.435 0 0 0-.312-.748Z\",\n    fill: \"#767676\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgCancel);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"75e5f8bf192b1897ce104cdee953d7dd.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgChatCenterIcon = function SvgChatCenterIcon(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 3C6.477 3 2 6.694 2 11.25a7.408 7.408 0 0 0 2.315 5.275c.029.071.77 1.93-1.424 3.826a.371.371 0 0 0-.122.274.38.38 0 0 0 .385.375.394.394 0 0 0 .083-.009A10.377 10.377 0 0 0 8.5 18.968a11.847 11.847 0 0 0 3.5.532c5.523 0 10-3.694 10-8.25S17.523 3 12 3Z\",\n    fill: \"none\",\n    stroke: \"#4b85a0\",\n    strokeWidth: 2\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgChatCenterIcon);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"8f3adff824a64bd94079b47a9014c5ee.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgDeliveredMessageIcon = function SvgDeliveredMessageIcon(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m10.6 16.451 6.575-6.575-.975-1-5.6 5.6-2.8-2.825-1 1Zm1.4 5.15a9.143 9.143 0 0 1-3.625-.725 9.239 9.239 0 0 1-4.95-4.95 9.425 9.425 0 0 1 0-7.25 9.23 9.23 0 0 1 4.95-4.95 9.425 9.425 0 0 1 7.25 0 9.261 9.261 0 0 1 4.95 4.938 9.113 9.113 0 0 1 .725 3.637 9.143 9.143 0 0 1-.725 3.625 9.27 9.27 0 0 1-4.938 4.95 9.113 9.113 0 0 1-3.637.725Zm0-9.3Zm0 7.9a7.621 7.621 0 0 0 5.6-2.3 7.621 7.621 0 0 0 2.3-5.6 7.621 7.621 0 0 0-2.3-5.6 7.621 7.621 0 0 0-5.6-2.3 7.621 7.621 0 0 0-5.6 2.3 7.621 7.621 0 0 0-2.3 5.6 7.621 7.621 0 0 0 2.3 5.6 7.621 7.621 0 0 0 5.6 2.3Z\",\n    fill: \"#767676\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgDeliveredMessageIcon);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"5a96a8b85525deddef593c4941b76541.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgPin = function SvgPin(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.761 1 8.7 2.058l.82.82L4.884 6.6l-1.11-1.11-1.058 1.059L5.56 9.393 1 13.952V15h1.048l4.559-4.56 2.844 2.844 1.058-1.058-1.045-1.045 3.67-4.691.807.807L15 6.239Z\",\n    fill: \"none\",\n    stroke: \"#767676\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgPin);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"ab23ed48bd9c8406e268b6f582de2add.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgRemoveMember = function SvgRemoveMember(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.763 2.865 9.63 7l4.133 4.135a.8.8 0 0 1 0 1.131l-1.5 1.5a.8.8 0 0 1-1.131 0L6.999 9.631l-4.133 4.135a.8.8 0 0 1-1.131 0l-1.5-1.5a.8.8 0 0 1 0-1.131L4.368 7 .235 2.865a.8.8 0 0 1 0-1.131l1.5-1.5a.8.8 0 0 1 1.131 0l4.133 4.135L11.132.234a.8.8 0 0 1 1.131 0l1.5 1.5a.792.792 0 0 1 0 1.131Z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgRemoveMember);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"41e1f2ad7048a73687ef15796273815d.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgReply = function SvgReply(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.579 1 1 4.523l3.579 3.522 1.075-1.058-1.74-1.716h6.528a3.007 3.007 0 0 1 3.041 2.994V15h1.521V8.265a4.538 4.538 0 0 0-4.562-4.49H3.914l1.74-1.717Z\",\n    fill: \"#767676\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgReply);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"15275efa2ceac93e5e4129f0ed0090fc.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgSave = function SvgSave(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 0a10 10 0 1 0 10 10A10.007 10.007 0 0 0 10 0Zm0 .87A9.13 9.13 0 1 1 .87 10 9.124 9.124 0 0 1 10 .87Zm4.343 4.778a.435.435 0 0 0-.355.2l-4.435 6.538L6.382 9.44a.435.435 0 1 0-.591.638L9.7 13.707l5.005-7.376a.435.435 0 0 0-.365-.684Z\",\n    fill: \"#538ec0\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgSave);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"370c9bc6f6e5c378db8909ce5a6de186.svg\";","var _defs, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgThumbUp = function SvgThumbUp(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"c\",\n    x1: 0.846,\n    y1: 0.455,\n    x2: 0.093,\n    y2: 0.564\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#f4ba22\",\n    stopOpacity: 0.408\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#fbce32\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"d\",\n    x1: 0.931,\n    y1: 0.372,\n    x2: 0.034,\n    y2: 0.655\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#f2b721\",\n    stopOpacity: 0.467\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#f9c930\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"e\",\n    x1: 0.916,\n    y1: 0.269,\n    x2: 0.064,\n    y2: 0.754\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#f0b320\",\n    stopOpacity: 0.525\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#f6c32d\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"f\",\n    x1: 0.789,\n    y1: 0.182,\n    x2: 0.182,\n    y2: 0.839\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#eeb01f\",\n    stopOpacity: 0.584\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#f3be2a\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"g\",\n    x1: 0.6,\n    y1: 0.143,\n    x2: 0.383,\n    y2: 0.887\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#ecac1e\",\n    stopOpacity: 0.643\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#f0b827\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"h\",\n    x1: 0.405,\n    y1: 0.151,\n    x2: 0.622,\n    y2: 0.895\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#eaa91c\",\n    stopOpacity: 0.706\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#eeb325\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"i\",\n    x1: 0.218,\n    y1: 0.171,\n    x2: 0.852,\n    y2: 0.857\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#e8a51b\",\n    stopOpacity: 0.765\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#ebad22\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"j\",\n    x1: 0.066,\n    y1: 0.232,\n    x2: 1.008,\n    y2: 0.769\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#e6a21a\",\n    stopOpacity: 0.824\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#e8a81f\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"k\",\n    x1: -0.003,\n    y1: 0.325,\n    x2: 1.042,\n    y2: 0.657\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#e49e19\",\n    stopOpacity: 0.882\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#e5a21c\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"l\",\n    x1: 0.039,\n    y1: 0.425,\n    x2: 0.947,\n    y2: 0.557\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#e29b18\",\n    stopOpacity: 0.941\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#e39d1a\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"m\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#e09717\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#e09717\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"n\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#efae13\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.519,\n    stopColor: \"#fccc24\",\n    stopOpacity: 0.537\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#fccb23\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"o\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#eeac13\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.519,\n    stopColor: \"#f9c723\",\n    stopOpacity: 0.584\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#f9c621\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"p\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#edab14\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.519,\n    stopColor: \"#f7c321\",\n    stopOpacity: 0.627\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#f7c220\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"q\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#ecaa14\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.519,\n    stopColor: \"#f5bf20\",\n    stopOpacity: 0.675\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#f5be1f\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"r\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#eba814\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.519,\n    stopColor: \"#f3ba1e\",\n    stopOpacity: 0.722\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#f3ba1d\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"s\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#eaa714\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.519,\n    stopColor: \"#f0b61d\",\n    stopOpacity: 0.769\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#f0b51c\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"t\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#e9a514\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.519,\n    stopColor: \"#eeb11b\",\n    stopOpacity: 0.816\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#eeb11a\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"u\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#e8a414\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.519,\n    stopColor: \"#ecad1a\",\n    stopOpacity: 0.863\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#ecad19\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"v\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#e7a315\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.519,\n    stopColor: \"#eaa918\",\n    stopOpacity: 0.906\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#eaa918\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"w\",\n    y1: 0.5,\n    x2: 1,\n    y2: 0.5\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#e6a115\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.519,\n    stopColor: \"#e7a417\",\n    stopOpacity: 0.953\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#e7a416\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"B\",\n    x1: 1.846,\n    y1: 0.684,\n    x2: 1.165,\n    y2: 1.522\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#ffdb53\",\n    stopOpacity: 0\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.605,\n    stopColor: \"#f6c02d\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#f2b416\",\n    stopOpacity: 0.635\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"a\",\n    cx: 0.368,\n    cy: 0.442,\n    r: 0.578\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#ffe16e\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.629,\n    stopColor: \"#ffd226\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.75,\n    stopColor: \"#fdcd23\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.899,\n    stopColor: \"#f6bd1b\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#f0af13\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"x\",\n    cx: 0.422,\n    cy: 0.741,\n    r: 0.939,\n    xlinkHref: \"#a\"\n  }), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"y\",\n    cx: 0.464,\n    cy: 0.721,\n    r: 0.93,\n    xlinkHref: \"#a\"\n  }), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"z\",\n    cx: 0.453,\n    cy: 0.787,\n    r: 1.008,\n    xlinkHref: \"#a\"\n  }), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"A\",\n    cx: 0.479,\n    cy: 0.523,\n    r: 0.988,\n    xlinkHref: \"#a\"\n  }), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"b\",\n    cx: 0.499,\n    cy: 0.501,\n    r: 0.437\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.425,\n    stopColor: \"#ffe16e\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#ffe16e\",\n    stopOpacity: 0\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"C\",\n    cx: 0.5,\n    cy: 0.499,\n    r: 0.336,\n    xlinkHref: \"#b\"\n  }), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"D\",\n    cx: 0.5,\n    cy: 0.499,\n    r: 0.449,\n    xlinkHref: \"#b\"\n  }), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"E\",\n    cx: 0.5,\n    cy: 0.495,\n    r: 0.449,\n    xlinkHref: \"#b\"\n  }), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"F\",\n    cx: 0.501,\n    cy: 0.493,\n    r: 0.449,\n    xlinkHref: \"#b\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-5.004 -4.746)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.538 11.456h1.324a2.833 2.833 0 0 0 2.043-.878 5.071 5.071 0 0 1 .833-.7c.062-.042.127-.074.19-.112l1.155-.8 1.447-1 .112-.117a3.5 3.5 0 0 0 .843-1.492l.333-1.221a.536.536 0 0 1 .53-.4c1.579.115 1.844 2.847.619 5.616a.207.207 0 0 0-.019.149c.025.075.144.113.364.133.2.017 3.15.276 3.788.276.364 0-1.016 7.683-1.016 8.3a1.4 1.4 0 0 1-1.31 1.366s-5.937.134-7.072-.31a2.7 2.7 0 0 1-1.041-.763 2.838 2.838 0 0 0-2.141-.987h-.982c-.3 0-.534-1.582-.534-3.533s.239-3.527.534-3.527Z\",\n    fill: \"url(#a)\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.87\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.019 20.9a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.358 1.358 0 0 0-.376.937v.039a1.369 1.369 0 0 0 .127.544.867.867 0 0 1-.121.932 1.322 1.322 0 0 0-.105.139 1.368 1.368 0 0 0-.222.755 1.317 1.317 0 0 0 .045.337 1.344 1.344 0 0 0 .083.227.808.808 0 0 1 .082.365.573.573 0 0 1-.072.272 1.439 1.439 0 0 1-.092.144.9.9 0 0 0-.171.648 1.032 1.032 0 0 0 .993.831h1.368A1.034 1.034 0 0 0 25.705 28a.939.939 0 0 0-.276-.739 1.37 1.37 0 0 0 .749-1.218 1.37 1.37 0 0 0-.556-1.1.016.016 0 0 1 .006-.028 1.368 1.368 0 0 0 .228-2.422.016.016 0 0 1 .007-.028 1.371 1.371 0 0 0 .968-1.519c-.1-.684.3-1.536-.394-1.536l-1.637-.08a.81.81 0 0 0-.174.005 2.019 2.019 0 0 0-1.607 1.565Z\",\n    transform: \"translate(-9.605 -8.264)\",\n    opacity: 0.091,\n    fill: \"url(#c)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.594 20.973a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.358 1.358 0 0 0-.376.934v.038a1.38 1.38 0 0 0 .125.543.869.869 0 0 1-.128.934 1.233 1.233 0 0 0-.107.14 1.369 1.369 0 0 0-.221.762 1.308 1.308 0 0 0 .047.338 1.339 1.339 0 0 0 .088.229.928.928 0 0 1 .1.358.423.423 0 0 1-.069.268c-.032.046-.064.094-.1.139a.862.862 0 0 0-.183.645 1.029 1.029 0 0 0 .99.839h1.372a1.034 1.034 0 0 0 1.151-.871.939.939 0 0 0-.279-.738 1.37 1.37 0 0 0 .749-1.218 1.371 1.371 0 0 0-.558-1.1.017.017 0 0 1 .009-.026 1.368 1.368 0 0 0 .224-2.424c-.008-.007 0-.022.011-.026a1.37 1.37 0 0 0 .967-1.519c-.1-.684.3-1.533-.4-1.533l-1.7-.029a.842.842 0 0 0-.169.006 1.9 1.9 0 0 0-1.539 1.516Z\",\n    transform: \"translate(-9.948 -8.335)\",\n    opacity: 0.182,\n    fill: \"url(#d)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.167 21.023a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.359 1.359 0 0 0-.376.931v.038a1.391 1.391 0 0 0 .122.542.869.869 0 0 1-.134.937 1.219 1.219 0 0 0-.108.141 1.381 1.381 0 0 0-.221.769 1.277 1.277 0 0 0 .05.34 1.358 1.358 0 0 0 .092.231 1.14 1.14 0 0 1 .122.351.33.33 0 0 1-.066.265c-.036.044-.07.09-.108.134a.832.832 0 0 0-.2.642 1.026 1.026 0 0 0 .986.847H25.7a1.034 1.034 0 0 0 1.151-.871.939.939 0 0 0-.276-.739 1.37 1.37 0 0 0 .749-1.218 1.37 1.37 0 0 0-.56-1.1.018.018 0 0 1 .012-.025A1.368 1.368 0 0 0 27 22.6c-.006-.007 0-.02.013-.025a1.371 1.371 0 0 0 .967-1.519c-.1-.684.294-1.531-.4-1.531l-1.767.017a.885.885 0 0 0-.164.007 1.781 1.781 0 0 0-1.482 1.474Z\",\n    transform: \"translate(-10.289 -8.385)\",\n    opacity: 0.273,\n    fill: \"url(#e)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.74 21.027a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.36 1.36 0 0 0-.376.928v.038a1.412 1.412 0 0 0 .119.542.871.871 0 0 1-.141.939 1.138 1.138 0 0 0-.11.142 1.386 1.386 0 0 0-.22.777 1.269 1.269 0 0 0 .053.342 1.35 1.35 0 0 0 .1.233 1.532 1.532 0 0 1 .142.344.271.271 0 0 1-.063.261c-.04.041-.076.086-.116.129a.8.8 0 0 0-.209.639 1.022 1.022 0 0 0 .983.855h1.38a1.034 1.034 0 0 0 1.151-.871.939.939 0 0 0-.276-.739 1.37 1.37 0 0 0 .749-1.218 1.371 1.371 0 0 0-.562-1.106.021.021 0 0 1 .015-.023 1.368 1.368 0 0 0 .218-2.427c0-.006 0-.019.017-.023a1.371 1.371 0 0 0 .967-1.519c-.1-.684.293-1.528-.4-1.528l-1.832.063a.9.9 0 0 0-.159.008 1.665 1.665 0 0 0-1.426 1.419Z\",\n    transform: \"translate(-10.63 -8.389)\",\n    opacity: 0.364,\n    fill: \"url(#f)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.314 21.03a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.358 1.358 0 0 0-.376.924v.038a1.416 1.416 0 0 0 .116.541.871.871 0 0 1-.147.941 1.085 1.085 0 0 0-.112.144 1.392 1.392 0 0 0-.219.784 1.236 1.236 0 0 0 .056.344 1.342 1.342 0 0 0 .1.235 2.417 2.417 0 0 1 .161.337.228.228 0 0 1-.06.258c-.043.039-.082.083-.123.124a.778.778 0 0 0-.222.637 1.019 1.019 0 0 0 .979.862h1.384A1.034 1.034 0 0 0 28 28.123a.939.939 0 0 0-.276-.739 1.37 1.37 0 0 0 .749-1.218 1.37 1.37 0 0 0-.565-1.107.025.025 0 0 1 .017-.022 1.368 1.368 0 0 0 .214-2.429c0-.006.006-.017.019-.021a1.371 1.371 0 0 0 .967-1.519c-.1-.684.291-1.525-.4-1.525l-1.9.108a.961.961 0 0 0-.153.008 1.557 1.557 0 0 0-1.358 1.371Z\",\n    transform: \"translate(-10.972 -8.392)\",\n    opacity: 0.455,\n    fill: \"url(#g)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.889 21.033a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.356 1.356 0 0 0-.376.921v.038a1.428 1.428 0 0 0 .113.54.872.872 0 0 1-.154.943 1.045 1.045 0 0 0-.113.144 1.4 1.4 0 0 0-.218.791 1.232 1.232 0 0 0 .059.346 1.381 1.381 0 0 0 .106.237c.072.127.142.246.182.33a.2.2 0 0 1-.057.255c-.046.037-.088.079-.131.119a.751.751 0 0 0-.234.634 1.016 1.016 0 0 0 .976.871h1.388a1.034 1.034 0 0 0 1.151-.871.939.939 0 0 0-.276-.739 1.37 1.37 0 0 0 .749-1.218 1.371 1.371 0 0 0-.567-1.109.033.033 0 0 1 .02-.021 1.368 1.368 0 0 0 .211-2.431.032.032 0 0 1 .022-.019 1.371 1.371 0 0 0 .964-1.519c-.1-.684.29-1.523-.4-1.523l-1.961.155a1.051 1.051 0 0 0-.148.009 1.451 1.451 0 0 0-1.302 1.322Z\",\n    transform: \"translate(-11.314 -8.395)\",\n    opacity: 0.545,\n    fill: \"url(#h)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.462 21.036a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.356 1.356 0 0 0-.376.917v.037a1.444 1.444 0 0 0 .11.539.875.875 0 0 1-.16.945 1.019 1.019 0 0 0-.115.146 1.408 1.408 0 0 0-.218.8 1.2 1.2 0 0 0 .062.347 1.363 1.363 0 0 0 .11.239c.074.129.152.246.2.323a.175.175 0 0 1-.054.251 1.666 1.666 0 0 0-.139.114.729.729 0 0 0-.247.631 1.012 1.012 0 0 0 .973.878H28a1.034 1.034 0 0 0 1.151-.871.939.939 0 0 0-.276-.739 1.37 1.37 0 0 0 .749-1.218 1.371 1.371 0 0 0-.569-1.111.047.047 0 0 1 .023-.019 1.368 1.368 0 0 0 .208-2.432.047.047 0 0 1 .025-.018 1.37 1.37 0 0 0 .966-1.519c-.1-.684.288-1.52-.4-1.52l-2.026.2a1.1 1.1 0 0 0-.143.011 1.348 1.348 0 0 0-1.246 1.274Z\",\n    transform: \"translate(-11.655 -8.399)\",\n    opacity: 0.636,\n    fill: \"url(#i)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.035 21.043a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.357 1.357 0 0 0-.376.914v.037a1.457 1.457 0 0 0 .108.538.876.876 0 0 1-.167.947.975.975 0 0 0-.117.147 1.413 1.413 0 0 0-.217.805 1.186 1.186 0 0 0 .064.349 1.408 1.408 0 0 0 .115.242 2.489 2.489 0 0 0 .221.316.158.158 0 0 1-.051.248 1.451 1.451 0 0 0-.147.109.707.707 0 0 0-.26.629 1.01 1.01 0 0 0 .969.886h1.4a1.034 1.034 0 0 0 1.151-.871.939.939 0 0 0-.276-.739 1.37 1.37 0 0 0 .749-1.218 1.371 1.371 0 0 0-.571-1.112.079.079 0 0 1 .025-.018 1.368 1.368 0 0 0 .2-2.434.076.076 0 0 1 .028-.016 1.371 1.371 0 0 0 .966-1.519c-.1-.684.287-1.517-.4-1.517l-2.09.246a1.262 1.262 0 0 0-.138.011 1.248 1.248 0 0 0-1.182 1.225Z\",\n    transform: \"translate(-11.996 -8.406)\",\n    opacity: 0.727,\n    fill: \"url(#j)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.609 21.045a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.359 1.359 0 0 0-.376.911v.037a1.471 1.471 0 0 0 .1.537.877.877 0 0 1-.173.949.946.946 0 0 0-.118.148 1.421 1.421 0 0 0-.216.813 1.171 1.171 0 0 0 .067.351 1.382 1.382 0 0 0 .119.244 1.47 1.47 0 0 0 .242.31.145.145 0 0 1-.049.244 1.367 1.367 0 0 0-.154.1.69.69 0 0 0-.273.626 1.007 1.007 0 0 0 .966.894h1.4a1.034 1.034 0 0 0 1.151-.871.938.938 0 0 0-.276-.739 1.37 1.37 0 0 0 .749-1.218 1.37 1.37 0 0 0-.573-1.114.176.176 0 0 1 .028-.016 1.368 1.368 0 0 0 .2-2.435.168.168 0 0 1 .032-.014 1.371 1.371 0 0 0 .966-1.519c-.1-.684.285-1.515-.406-1.515l-2.155.292a.938.938 0 0 0-.132.012c-.824.117-1.005.541-1.115 1.178Z\",\n    transform: \"translate(-12.338 -8.407)\",\n    opacity: 0.818,\n    fill: \"url(#k)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.183 21.048a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.358 1.358 0 0 0-.376.908v.036a1.486 1.486 0 0 0 .1.537.878.878 0 0 1-.18.951.908.908 0 0 0-.119.149 1.429 1.429 0 0 0-.216.82 1.154 1.154 0 0 0 .07.353 1.385 1.385 0 0 0 .124.246 1.079 1.079 0 0 0 .261.3c.045.03.12.156-.046.241a1.231 1.231 0 0 0-.162.1.672.672 0 0 0-.285.623 1 1 0 0 0 .962.9h1.4a1.034 1.034 0 0 0 1.151-.871.939.939 0 0 0-.276-.739 1.37 1.37 0 0 0 .749-1.218 1.371 1.371 0 0 0-.576-1.115l.031-.015a1.368 1.368 0 0 0 .2-2.437l.034-.013A1.371 1.371 0 0 0 32 21.085c-.1-.684.284-1.512-.407-1.512l-2.22.338c-.044 0-.086.007-.127.013-.829.111-.953.488-1.063 1.124Z\",\n    transform: \"translate(-12.68 -8.411)\",\n    opacity: 0.909,\n    fill: \"url(#l)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.226 23.79a1.371 1.371 0 0 0-.66-1.17 1.371 1.371 0 0 0 1-1.529c-.1-.684.282-1.51-.408-1.51l-2.284.384c-.934.09-1.005.423-1.12 1.088a1.37 1.37 0 0 0 .109.825.861.861 0 0 1-.113.97 1.358 1.358 0 0 0-.376.941 1.5 1.5 0 0 0 .1.536.879.879 0 0 1-.186.953.872.872 0 0 0-.121.15 1.384 1.384 0 0 0-.142 1.182 1.156 1.156 0 0 0 .41.544c.049.024.136.155-.043.238a.691.691 0 0 0-.468.714 1 1 0 0 0 1 .911h1.366a1.034 1.034 0 0 0 1.151-.871.939.939 0 0 0-.276-.739 1.37 1.37 0 0 0 .749-1.218 1.371 1.371 0 0 0-.578-1.117 1.373 1.373 0 0 0 .89-1.282Z\",\n    transform: \"translate(-13.021 -8.415)\",\n    fill: \"url(#m)\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.24\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.333 27.035h.939a2.69 2.69 0 0 1 2.047.965 2.585 2.585 0 0 0 .995.743 14.783 14.783 0 0 0 3.408.307l.423.007c.907.012 1.756.005 2.265 0a4.5 4.5 0 0 0 .734-.038 1.061 1.061 0 0 0 .346-.09 1.15 1.15 0 0 0 .025-.393c-.006-.081 0-.3.006-.619-.526.006-1.3.011-2.119 0-.395 0-.8-.013-1.2-.025a17.162 17.162 0 0 1-2.39-.2 2.123 2.123 0 0 1-.393-.112 2.417 2.417 0 0 1-.645-.409 3.858 3.858 0 0 1-.35-.35A2.711 2.711 0 0 0 10 25.969a2.9 2.9 0 0 0-.648-.073H9.1a3.931 3.931 0 0 1-.657-.058c-.225-.057-.412-1.118-.467-2.543-.011-.3-.016-.61-.015-.93 0-.522.024-1.008.057-1.443-.087 0-.175 0-.263-.014 0-.006-.149-.011-.147-.016h-.156a2.841 2.841 0 0 0-.438.035 15.9 15.9 0 0 0-.19 2.646v.236c.016 1.8.238 3.226.509 3.226Z\",\n    transform: \"translate(-1.083 -9.196)\",\n    opacity: 0.091,\n    fill: \"url(#n)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.15 27.111h.94a2.69 2.69 0 0 1 2.047.962 2.585 2.585 0 0 0 .995.743 15 15 0 0 0 3.446.308l.422.006c.952.012 1.831 0 2.289 0a2.572 2.572 0 0 0 .736-.063 1.074 1.074 0 0 0 .339-.112 1.337 1.337 0 0 0-.04-.334c-.011-.072-.026-.272-.067-.556-.53.006-1.306.011-2.132 0-.4 0-.807-.013-1.206-.026a16.157 16.157 0 0 1-2.4-.2 2.079 2.079 0 0 1-.392-.12 2.459 2.459 0 0 1-.641-.423 5.326 5.326 0 0 1-.353-.352 2.7 2.7 0 0 0-1.451-.828 3.256 3.256 0 0 0-.652-.066h-.246c-.02 0-.606-.043-.621-.116a5.276 5.276 0 0 1-.442-2.569c-.01-.3-.014-.618-.011-.937 0-.529.029-1.019.066-1.452a4.098 4.098 0 0 1-.231-.046c0-.011-.131-.021-.128-.031h-.16c-.015 0-.405.025-.418.07a15.457 15.457 0 0 0-.2 2.662v.238c.016 1.804.239 3.242.511 3.242Z\",\n    transform: \"translate(-.974 -9.198)\",\n    opacity: 0.182,\n    fill: \"url(#o)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.968 27.183h.939a2.69 2.69 0 0 1 2.047.962 2.585 2.585 0 0 0 .995.743 15.156 15.156 0 0 0 3.484.308l.433.006c1 .011 1.9 0 2.312 0a1.9 1.9 0 0 0 .738-.089 1.084 1.084 0 0 0 .331-.134.849.849 0 0 0-.1-.274 2.531 2.531 0 0 0-.14-.493c-.533.006-1.315.011-2.145 0-.4 0-.813-.013-1.214-.026a15.1 15.1 0 0 1-2.414-.213 1.991 1.991 0 0 1-.391-.129 2.5 2.5 0 0 1-.643-.444 7.919 7.919 0 0 1-.356-.354 2.687 2.687 0 0 0-1.475-.8 3.7 3.7 0 0 0-.655-.059h-.249c-.03 0-.562-.065-.585-.174a5.925 5.925 0 0 1-.416-2.595 24.531 24.531 0 0 1-.008-.943c.007-.537.034-1.031.074-1.461l-.2-.077c0-.017-.113-.032-.11-.047h-.157c-.023 0-.378.038-.4.105a15.079 15.079 0 0 0-.207 2.678v.239c.016 1.822.239 3.271.512 3.271Z\",\n    transform: \"translate(-.865 -9.197)\",\n    opacity: 0.273,\n    fill: \"url(#p)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.786 27.257h.939a2.69 2.69 0 0 1 2.047.962 2.585 2.585 0 0 0 .995.743 15.372 15.372 0 0 0 3.521.309l.437.006c1.042.011 1.979 0 2.336-.005a1.586 1.586 0 0 0 .74-.115 1.107 1.107 0 0 0 .325-.157 2.856 2.856 0 0 0-.169-.215 1.543 1.543 0 0 0-.212-.43c-.536.006-1.323.011-2.159 0-.4 0-.819-.013-1.222-.027a14.334 14.334 0 0 1-2.426-.222 1.962 1.962 0 0 1-.39-.138 2.555 2.555 0 0 1-.635-.45 17.205 17.205 0 0 1-.359-.356 2.676 2.676 0 0 0-1.5-.776 4.287 4.287 0 0 0-.659-.051h-.248c-.04 0-.518-.086-.549-.233a6.672 6.672 0 0 1-.391-2.621 17.736 17.736 0 0 1 0-.951c.01-.544.04-1.042.083-1.47l-.166-.109c0-.022-.1-.043-.091-.062h-.164c-.031 0-.352.051-.378.14a14.687 14.687 0 0 0-.215 2.694v.24c.012 1.837.236 3.294.51 3.294Z\",\n    transform: \"translate(-.757 -9.197)\",\n    opacity: 0.364,\n    fill: \"url(#q)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.605 27.331h.939a2.69 2.69 0 0 1 2.047.962 2.585 2.585 0 0 0 .995.743 15.574 15.574 0 0 0 3.559.309l.443.006c1.087.011 2.054 0 2.359-.007a1.4 1.4 0 0 0 .741-.14 1.14 1.14 0 0 0 .317-.178 1.043 1.043 0 0 1-.234-.155c0-.049-.11-.179-.285-.367-.54.006-1.332.011-2.172 0a55.937 55.937 0 0 1-1.23-.028 13.611 13.611 0 0 1-2.438-.23 1.943 1.943 0 0 1-.389-.146 2.6 2.6 0 0 1-.632-.464l-.362-.358a2.669 2.669 0 0 0-1.523-.75 5.066 5.066 0 0 0-.663-.044h-.25c-.05 0-.475-.108-.513-.291a7.443 7.443 0 0 1-.365-2.646 23.535 23.535 0 0 1 0-.958c.012-.552.045-1.054.092-1.479-.045-.049-.089-.1-.133-.141.006-.028-.078-.054-.072-.078h-.16c-.038 0-.325.063-.357.175a14.336 14.336 0 0 0-.224 2.71v.242c.01 1.841.235 3.313.51 3.313Z\",\n    transform: \"translate(-.65 -9.197)\",\n    opacity: 0.455,\n    fill: \"url(#r)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.423 27.4h.939a2.69 2.69 0 0 1 2.047.962 2.585 2.585 0 0 0 .995.743 15.743 15.743 0 0 0 3.6.31l.448.006c1.132.011 2.128-.006 2.383-.008a1.516 1.516 0 0 0 .743-.166 2.2 2.2 0 0 0 .31-.2.605.605 0 0 1-.3-.1c0-.04-.138-.149-.357-.3-.543.006-1.341.011-2.186 0-.41-.005-.83-.014-1.238-.028a12.94 12.94 0 0 1-2.45-.239 1.961 1.961 0 0 1-.387-.155 2.639 2.639 0 0 1-.629-.478 15.489 15.489 0 0 0-.365-.36 2.665 2.665 0 0 0-1.547-.724 6.166 6.166 0 0 0-.667-.036h-.25c-.06 0-.431-.129-.477-.349a8.383 8.383 0 0 1-.34-2.672c-.006-.323 0-.647 0-.965.015-.559.051-1.065.1-1.488q-.05-.091-.1-.172c.008-.034-.06-.065-.053-.093h-.159c-.046 0-.3.076-.337.21a14.007 14.007 0 0 0-.232 2.726v.243c.008 1.854.233 3.333.509 3.333Z\",\n    transform: \"translate(-.541 -9.197)\",\n    opacity: 0.545,\n    fill: \"url(#s)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.242 27.477h.939a2.69 2.69 0 0 1 2.047.962 2.585 2.585 0 0 0 .995.743 15.96 15.96 0 0 0 3.636.311l.453.006c1.177.011 2.2-.008 2.406-.01a1.393 1.393 0 0 0 .745-.192 1.968 1.968 0 0 0 .3-.223.585.585 0 0 1-.363-.036c0-.032-.166-.117-.43-.24-.546.006-1.35.011-2.2 0a57.106 57.106 0 0 1-1.246-.029 12.339 12.339 0 0 1-2.462-.248 1.974 1.974 0 0 1-.386-.163 2.677 2.677 0 0 1-.626-.491 7.36 7.36 0 0 0-.368-.361 2.66 2.66 0 0 0-1.571-.7c-.076-.019-.59-.029-.671-.029h-.247a.616.616 0 0 1-.441-.407 9.524 9.524 0 0 1-.315-2.7c0-.328 0-.654.007-.972.017-.566.056-1.077.109-1.5q-.035-.109-.068-.2c.009-.039-.043-.076-.034-.109h-.162a.427.427 0 0 0-.316.245 13.636 13.636 0 0 0-.24 2.742v.244c.005 1.862.231 3.357.509 3.357Z\",\n    transform: \"translate(-.433 -9.196)\",\n    opacity: 0.636,\n    fill: \"url(#t)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.059 27.552H7a2.69 2.69 0 0 1 2.047.962 2.585 2.585 0 0 0 .995.743 16.16 16.16 0 0 0 3.673.311l.458.006c1.222.011 2.277-.01 2.43-.011a1.31 1.31 0 0 0 .747-.217 1.762 1.762 0 0 0 .3-.245.665.665 0 0 1-.428.023 1.914 1.914 0 0 0-.5-.178 95.01 95.01 0 0 1-2.213 0 57.68 57.68 0 0 1-1.254-.03 11.805 11.805 0 0 1-2.474-.256 2.013 2.013 0 0 1-.384-.172 2.719 2.719 0 0 1-.623-.505 5.151 5.151 0 0 0-.371-.363 2.658 2.658 0 0 0-1.603-.672 10.048 10.048 0 0 0-.674-.022h-.252a.616.616 0 0 1-.4-.465 10.721 10.721 0 0 1-.29-2.723c0-.333 0-.662.011-.979.019-.573.061-1.088.117-1.506l-.035-.236c.01-.045-.025-.087-.015-.125h-.167a.414.414 0 0 0-.3.28 13.336 13.336 0 0 0-.249 2.757v.246c.008 1.871.235 3.377.513 3.377Z\",\n    transform: \"translate(-.324 -9.197)\",\n    opacity: 0.727,\n    fill: \"url(#u)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.878 27.624h.939a2.69 2.69 0 0 1 2.047.962 2.585 2.585 0 0 0 .995.743 16.353 16.353 0 0 0 3.711.312l.463.005c1.268.011 2.351-.012 2.453-.013a1.253 1.253 0 0 0 .749-.243 1.638 1.638 0 0 0 .288-.267.79.79 0 0 1-.493.083 3.386 3.386 0 0 0-.576-.115c-.553.006-1.368.011-2.226 0a58.574 58.574 0 0 1-1.262-.03 11.318 11.318 0 0 1-2.485-.265 2.059 2.059 0 0 1-.383-.18 2.751 2.751 0 0 1-.62-.519 4.082 4.082 0 0 0-.374-.365 2.657 2.657 0 0 0-1.619-.645c-.038-.01-.638-.015-.678-.015h-.251c-.091 0-.3-.194-.369-.523a12.083 12.083 0 0 1-.264-2.749c0-.338 0-.669.015-.986a14.843 14.843 0 0 1 .125-1.514v-.268c.011-.051-.007-.1 0-.14H5.9a.416.416 0 0 0-.276.315 13.018 13.018 0 0 0-.257 2.773v.247c.004 1.88.233 3.397.511 3.397Z\",\n    transform: \"translate(-.216 -9.196)\",\n    opacity: 0.818,\n    fill: \"url(#v)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.7 27.7h.939a2.69 2.69 0 0 1 2.047.962 2.585 2.585 0 0 0 .995.743 16.53 16.53 0 0 0 3.749.312l.468.005c1.312.01 2.425-.014 2.477-.015a1.207 1.207 0 0 0 .751-.269 1.547 1.547 0 0 0 .281-.289.946.946 0 0 1-.557.142c0-.008-.249-.025-.648-.051a97.26 97.26 0 0 1-2.239 0 53.036 53.036 0 0 1-1.27-.031 10.9 10.9 0 0 1-2.5-.273 2.1 2.1 0 0 1-.382-.189 2.782 2.782 0 0 1-.617-.532 3.3 3.3 0 0 0-.377-.367 2.66 2.66 0 0 0-1.643-.618l-.682-.007h-.255c-.1 0-.257-.215-.333-.582a13.557 13.557 0 0 1-.239-2.775c0-.343.005-.676.018-.993a14.314 14.314 0 0 1 .135-1.524c.009-.109.019-.209.03-.3.013-.056.01-.108.023-.156h-.164c-.077 0-.191.127-.255.35a12.769 12.769 0 0 0-.266 2.789v.248c.001 1.889.229 3.42.514 3.42Z\",\n    transform: \"translate(-.108 -9.197)\",\n    opacity: 0.909,\n    fill: \"url(#w)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.661 20.178s-1.419.032-2.973.011a16.749 16.749 0 0 1-3.788-.314 2.585 2.585 0 0 1-.995-.743 2.692 2.692 0 0 0-2.047-.962h-.939c-.282 0-.51-1.54-.51-3.44a13.354 13.354 0 0 1 .27-3.035h-.165c-.282 0-.51 1.54-.51 3.44s.229 3.44.51 3.44h.939a2.69 2.69 0 0 1 2.047.962 2.585 2.585 0 0 0 .995.743 16.747 16.747 0 0 0 3.787.313c1.554.021 2.973-.011 2.973-.011a1.266 1.266 0 0 0 1.026-.606 1.129 1.129 0 0 1-.62.202Z\",\n    fill: \"#e5a015\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.534 37.441a1.425 1.425 0 0 0-2.4-.843l-1.2.538a.72.72 0 0 0-.147 0 .927.927 0 0 0-.7 1.078.9.9 0 0 0 .851.839h2.366a1.428 1.428 0 0 0 1.23-1.612Z\",\n    transform: \"translate(-13.114 -18.312)\",\n    fill: \"url(#x)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.533 31.974a1.66 1.66 0 0 0-2.8-1l-1.847.483a1.158 1.158 0 0 0-.831 1.3 1.109 1.109 0 0 0 1.055 1.048l2.823.026h.147a1.667 1.667 0 0 0 1.453-1.857Z\",\n    transform: \"translate(-13.092 -14.92)\",\n    fill: \"url(#y)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.622 26.051a1.667 1.667 0 0 0-1.871-1.435 295.1 295.1 0 0 0-2.822.954 1.153 1.153 0 0 0-.84 1.316 1.129 1.129 0 0 0 .99 1.04s3.038 0 3.108 0a1.667 1.667 0 0 0 1.435-1.875Z\",\n    transform: \"translate(-13.707 -11.548)\",\n    fill: \"url(#z)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.178 20.777a1.5 1.5 0 0 0-1.605-1.312s-.106.012-.128.015l-2.74.453a1.216 1.216 0 0 0-.815 1.367 1.154 1.154 0 0 0 1.043 1.111l2.774.04a1.534 1.534 0 0 0 .161 0 1.5 1.5 0 0 0 1.31-1.674Z\",\n    transform: \"translate(-14.185 -8.563)\",\n    fill: \"url(#A)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.5 30.459c-1.6-.325-3.076.253-3.285 1.29s.921 2.141 2.526 2.465 3.076-.253 3.285-1.29-.926-2.14-2.526-2.465Z\",\n    transform: \"translate(-3.517 -14.838)\",\n    opacity: 0.59,\n    fill: \"url(#b)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.492 17.975a6.822 6.822 0 0 1-.7 2.215 7.023 7.023 0 0 1-.809 1.239A5.887 5.887 0 0 1 16.053 23a4.488 4.488 0 0 1-.79.3 2.253 2.253 0 0 1-.827.136.36.36 0 0 1-.207-.06.234.234 0 0 1-.1-.157v-.016a.286.286 0 0 1 .307-.265 5.074 5.074 0 0 0 3.918-2.966 6.27 6.27 0 0 0 .66-2.2Z\",\n    transform: \"translate(-5.2 -7.527)\",\n    opacity: 0.59,\n    fill: \"url(#B)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.069 22.046c-1.228 1.044-2.723 1.3-3.34.578s-.12-2.159 1.109-3.2 2.723-1.3 3.34-.578.122 2.154-1.109 3.2Z\",\n    transform: \"translate(-3.689 -7.938)\",\n    opacity: 0.72,\n    fill: \"url(#C)\"\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 2.398,\n    cy: 1.044,\n    rx: 2.398,\n    ry: 1.044,\n    transform: \"translate(15.986 11.389)\",\n    opacity: 0.5,\n    fill: \"url(#D)\"\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 2.398,\n    cy: 0.915,\n    rx: 2.398,\n    ry: 0.915,\n    transform: \"translate(15.599 14.393)\",\n    opacity: 0.5,\n    fill: \"url(#E)\"\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 2.398,\n    cy: 0.915,\n    rx: 2.398,\n    ry: 0.915,\n    transform: \"translate(15.173 16.889)\",\n    opacity: 0.5,\n    fill: \"url(#E)\"\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 1.718,\n    cy: 0.656,\n    rx: 1.718,\n    ry: 0.656,\n    transform: \"translate(15.315 19.136)\",\n    opacity: 0.5,\n    fill: \"url(#F)\"\n  }))));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgThumbUp);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"56cf44af0adbfd1bd613e8af86ffb823.svg\";","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgUnpin = function SvgUnpin(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 15.207,\n    height: 15.207,\n    viewBox: \"0 0 15.207 15.207\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.261.707 8.2 1.765l.82.82-4.636 3.722-1.11-1.11-1.058 1.059L5.06 9.1.5 13.659v1.048h1.048l4.559-4.56 2.844 2.844 1.058-1.058-1.045-1.045 3.67-4.691.807.807L14.5 5.946Z\",\n    stroke: \"#767676\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#707070\",\n    d: \"m2.5.707 12 12\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgUnpin);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"9132708b139711f5f4538592a7779e8f.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgUnread = function SvgUnread(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.187 16.508h10.346v-5.8a4.381 4.381 0 0 0 .779-.258 3.01 3.01 0 0 0 .691-.423v6.481a1.534 1.534 0 0 1-.428 1.1 1.385 1.385 0 0 1-1.042.451H7.8L5 21.005V7.817a1.534 1.534 0 0 1 .428-1.1 1.385 1.385 0 0 1 1.042-.446h6.963a3.466 3.466 0 0 0 0 1.547H6.47v9.445Zm-.717-8.69v8.69-8.691Zm10.43 1.6a1.978 1.978 0 0 1-1.488-.647 2.188 2.188 0 0 1-.612-1.565 2.19 2.19 0 0 1 .612-1.562 2.04 2.04 0 0 1 2.975 0 2.19 2.19 0 0 1 .612 1.565 2.188 2.188 0 0 1-.611 1.562 1.976 1.976 0 0 1-1.488.648Z\",\n    fill: \"#767676\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgUnread);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"2a7101b2ecfd4e40f03a1594f125ba80.svg\";","import type {FC, ReactNode} from 'react'\r\nimport React, {useEffect, useRef} from 'react'\r\n\r\nimport {useIntersectionObserver} from '@bpinc/lib-helpers'\r\nimport {useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport type {MessagePointer} from '@bpinc/state-group-chat-types'\r\n\r\nimport type {ScrollerNode} from '../../../types'\r\n\r\n\r\ninterface Props extends MessagePointer {\r\n    children: ReactNode\r\n    scrollerNode: ScrollerNode\r\n}\r\n\r\nexport const MarkAsReadSensor: FC<Props> = ({children, chatId, messageId, scrollerNode}) => {\r\n    const ref = useRef<HTMLDivElement>(null)\r\n\r\n    const {isIntersecting} = useIntersectionObserver(ref, {root: scrollerNode})\r\n    const {markMessageAsRead} = useGroupChatStateMethods()\r\n\r\n    useEffect(() => {\r\n        if (isIntersecting) {\r\n            markMessageAsRead({chatId, messageId})\r\n        }\r\n    }, [chatId, isIntersecting, markMessageAsRead, messageId])\r\n\r\n    return <div className=\"flex\" ref={ref}>{children}</div>\r\n}\r\n","import React from 'react'\r\n\r\nimport {useGetAvatarUrl} from '@bpinc/ad-contacts-state-hooks'\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {useChatMessageSanitizer} from '@bpinc/ad-interaction-state-hooks'\r\nimport {getUserStatusIcon, useUserDetailsById} from '@bpinc/ad-user-details-state-context'\r\nimport {AvatarLegacy} from '@bpinc/lib-avatar-ui'\r\nimport {formatDate} from '@bpinc/lib-helpers'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport type {GroupChatMessage} from '@bpinc/state-group-chat-types'\r\nimport {useGroupChatItem, useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {IconAnnouncement} from '../../../images'\r\nimport type {ScrollerNode} from '../../../types'\r\nimport {MarkAsReadSensor} from './MarkAsReadSensor'\r\n\r\n\r\ninterface Props {\r\n    message: GroupChatMessage\r\n    scrollerNode: ScrollerNode\r\n}\r\n\r\nexport const AnnouncementMessage: React.FC<Props> = React.memo(function AnnouncementMessage({\r\n    message,\r\n    scrollerNode,\r\n}) {\r\n    const {\r\n        direction = 'in',\r\n        content,\r\n        sendTime,\r\n        firstName: messageFirstName,\r\n        lastName: messageLastName,\r\n        messageId,\r\n        userId,\r\n    } = message\r\n\r\n    const {t} = useLocalizationState()\r\n    const {formatFullName} = useFormatting()\r\n    const userDetails = useUserDetailsById(userId)\r\n    const getAvatarUrl = useGetAvatarUrl()\r\n    const {groupChatId} = useGroupChatUIParams()\r\n    assertDefined(groupChatId)\r\n\r\n    const userDetailsData = userDetails?.data\r\n    const firstName = messageFirstName ?? userDetailsData?.firstName\r\n    const lastName = messageLastName ?? userDetailsData?.lastName\r\n    const displayName = formatFullName(firstName, lastName)\r\n    const presenceState = userDetailsData?.presenceState\r\n    const isUserOnline = presenceState === 'available'\r\n    const userOnlineStatusIcon = getUserStatusIcon(userDetailsData)\r\n    const userPhotoUrl = getAvatarUrl({userId})\r\n\r\n    const sanitizedMessage = useChatMessageSanitizer({message: content})\r\n\r\n    const chatItem = useGroupChatItem()\r\n    const isUnread = chatItem?.unreadMessages.some(m => m.messageId === messageId)\r\n\r\n    const messageContent = (\r\n        <>\r\n            {direction === 'in' && (\r\n                <AvatarLegacy\r\n                    className=\"mx-3.5 mb-0 mt-2.5\"\r\n                    type=\"user\"\r\n                    size={32}\r\n                    headPhones\r\n                    firstName={firstName}\r\n                    lastName={lastName}\r\n                    online={isUserOnline}\r\n                    onlineStatus={userOnlineStatusIcon}\r\n                    url={userPhotoUrl}\r\n                />\r\n            )}\r\n            <div className=\"mb-2 flex flex-1 flex-row flex-nowrap rounded border border-primary-legacy bg-white p-2\">\r\n                <IconAnnouncement className=\"mx-4 mb-2 mt-1.5 fill-primary-legacy\" />\r\n                <div>\r\n                    <div className=\"flex justify-between pb-1 text-sm/[16px]\">\r\n                        {direction === 'in' && (\r\n                            <span className=\"secondary mr-4 font-semibold\" data-testid=\"party-display-name\">\r\n                                {displayName}\r\n                            </span>\r\n                        )}\r\n                        <span className=\"text-chat-title [&:not(:last-child)]:mr-4\" data-testid=\"message-time\">\r\n                            {formatDate(sendTime, 'h:mm A')}\r\n                        </span>\r\n                    </div>\r\n                    <div\r\n                        className=\"text-lg/[18px] text-chat-center-message-text-color\"\r\n                        aria-live=\"polite\"\r\n                        role=\"status\"\r\n                        aria-label={t.ACCESSIBILITY.chat_center_message_status_announcement()}\r\n                        data-testid=\"message-content\"\r\n                    >\r\n                        <div\r\n                            className=\"[&>blockquote]:relative [&>blockquote]:mx-0 [&>blockquote]:my-[0.5em] [&>blockquote]:px-3 [&>blockquote]:py-[0.5em]\r\n                                [&>blockquote]:before:absolute [&>blockquote]:before:inset-y-0 [&>blockquote]:before:left-0 [&>blockquote]:before:w-0.5\r\n                                [&>blockquote]:before:bg-primary-legacy [&>table]:border-collapse [&>td]:border [&>td]:border-gray-400\"\r\n                            dangerouslySetInnerHTML={{__html: sanitizedMessage}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div\r\n            className=\"flex max-w-[70%]\"\r\n            aria-label={t.ACCESSIBILITY.internal_chat_message()}\r\n            data-testid=\"message-item\"\r\n            data-message=\"true\"\r\n            data-announcement-message=\"true\"\r\n            data-incoming={direction === 'in' ? 'true' : undefined}\r\n            data-outgoing={direction === 'out' ? 'true' : undefined}\r\n        >\r\n            {isUnread\r\n                ? (\r\n                    <MarkAsReadSensor\r\n                        chatId={groupChatId}\r\n                        messageId={messageId}\r\n                        scrollerNode={scrollerNode}\r\n                    >\r\n                        {messageContent}\r\n                    </MarkAsReadSensor>\r\n                )\r\n                : messageContent\r\n            }\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nimport type {FCWithChildren} from '@bpinc/lib-types-helpers'\r\n\r\n\r\nexport const DateSeparator: FCWithChildren = React.memo(function DateMessage({children}) {\r\n    return (\r\n        <div\r\n            className=\"text-neutral-on-fade words-break flex w-full select-none items-center justify-center gap-1 px-8 py-4 caption-s\"\r\n            data-testid=\"date-separator\"\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n})\r\n","import cn from 'classnames'\r\nimport {twMerge} from 'tailwind-merge'\r\n\r\n\r\nexport function tcn(...classnames: cn.ArgumentArray) {\r\n    return twMerge(cn(classnames))\r\n}\r\n","import React, {memo, useCallback} from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport {Button, SelectionItem} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport type {GroupChatMessage} from '@bpinc/state-group-chat-types'\r\nimport {useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ninterface Props {\r\n    message: GroupChatMessage\r\n}\r\n\r\nexport const DeletedMessage: React.FC<Props> = memo(function DeletedMessage({\r\n    message: {messageId, direction},\r\n}) {\r\n    const {t} = useLocalizationState()\r\n    const {restoreDeletedMessage} = useGroupChatStateMethods()\r\n    const {groupChatId} = useGroupChatUIParams()\r\n    assertDefined(groupChatId)\r\n\r\n    const restoreMessage = useCallback(() => {\r\n        restoreDeletedMessage({chatId: groupChatId, messageId})\r\n    }, [groupChatId, messageId, restoreDeletedMessage])\r\n\r\n    return (\r\n        <div\r\n            className={tcn('relative flex items-start px-0 py-2', {'items-end justify-end': direction === 'out'})}\r\n            aria-label={t.ACCESSIBILITY.chat_center_deleted_message()}\r\n            data-testid=\"message-item\"\r\n            data-message=\"true\"\r\n            data-deleted=\"true\"\r\n            data-incoming={direction === 'in' ? 'true' : undefined}\r\n            data-outgoing={direction === 'out' ? 'true' : undefined}\r\n        >\r\n            <SelectionItem\r\n                focusOnSelection\r\n                touchedOnly\r\n                itemId={messageId}\r\n                className={tcn('flex rounded p-2 text-base/[18px]',\r\n                    {'border border-chat-center-in-message-bg bg-chat-center-in-message-bg': direction === 'in'},\r\n                    {'border border-chat-center-out-message-border bg-white': direction === 'out'},\r\n                )}\r\n            >\r\n                <div className=\"text-chat-center-message-text-color\">\r\n                    {t.CHAT_CENTER.deleted_message_text()}\r\n                </div>\r\n                {direction === 'out' && (\r\n                    <Button\r\n                        className=\"ml-6 cursor-pointer border-none bg-none p-0 text-primary-legacy\"\r\n                        onClick={restoreMessage}\r\n                        tooltip={t.CHAT_CENTER.deleted_message_undo_button_text()}\r\n                    >\r\n                        {t.CHAT_CENTER.deleted_message_undo_button_text()}\r\n                    </Button>\r\n                )}\r\n            </SelectionItem>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import {useCallback, useMemo, useRef, useState} from 'react'\r\nimport produce from 'immer'\r\n\r\nimport {useOnItemRemoved} from '@bpinc/ad-interaction-state-hooks'\r\nimport type {Item} from '@bpinc/ad-interaction-state-types'\r\nimport {useOnLogout} from '@bpinc/ad-session-context'\r\nimport {useOpenChannel} from '@bpinc/lib-helpers-ui'\r\n\r\nimport type {\r\n    ChannelOption,\r\n    ChannelState,\r\n    SelectedChannel,\r\n    SelectedPhone,\r\n    Touched,\r\n} from './types'\r\nimport {useOptions} from './useOptions'\r\n\r\n\r\n//TODO: Check if we need this initialOption or we can throw an error if it's not provided\r\nexport const initialOption: ChannelOption = {value: 'sms', text: 'SMS'}\r\n\r\nexport function useChannel(): ChannelState {\r\n    const channelOptions = useOptions()\r\n    const openChannel = useOpenChannel()\r\n\r\n    const channelOptionsRef = useRef(channelOptions)\r\n    channelOptionsRef.current = channelOptions\r\n\r\n    //------------Select logic------------//\r\n    const [selectedChannel, setSelectedChannel] = useState<SelectedChannel>({})\r\n    const [selectedPhone, setSelectedPhone] = useState<SelectedPhone>({})\r\n\r\n    const getSelectedChannel = useCallback((itemId: string) => {\r\n        if (selectedChannel[itemId]) {\r\n            return selectedChannel[itemId]\r\n        }\r\n\r\n        if (channelOptions) {\r\n            return channelOptions[0]\r\n        }\r\n\r\n        return undefined\r\n    }, [channelOptions, selectedChannel])\r\n\r\n    const getSelectedPhone = useCallback((itemId: string) => {\r\n        const channel = getSelectedChannel(itemId)\r\n        if (channel?.value !== 'sms') {\r\n            return undefined\r\n        }\r\n\r\n        if (selectedPhone[itemId]) {\r\n            return selectedPhone[itemId]\r\n        }\r\n\r\n        if (channel) {\r\n            return channel?.phones?.[0]\r\n        }\r\n    }, [getSelectedChannel, selectedPhone])\r\n\r\n    const selectCurrentItemChannel = useCallback(\r\n        function selectCurrentItemChannelCallback(itemId: string, channel: ChannelOption, phoneId?: string) {\r\n            setSelectedChannel(\r\n                produce(channels => {\r\n                    channels[itemId] = channel\r\n                }),\r\n            )\r\n            setSelectedPhone(produce(phones => {\r\n                phones[itemId] = phoneId ? channel.phones?.find(p => p.id === phoneId) : undefined\r\n            }))\r\n\r\n            return channel\r\n        },\r\n\r\n        [],\r\n    )\r\n    //------------Select logic end------------//\r\n\r\n    //------------Reset logic------------//\r\n    const resetChannel = useCallback(function resetChannelCallback() {\r\n        setSelectedChannel({'': initialOption})\r\n    }, [])\r\n\r\n    const resetSelectedChannel = useCallback(function deleteChannelCallback(item: Item) {\r\n        setSelectedChannel(\r\n            produce(channels => {\r\n                delete channels[item.id]\r\n            }),\r\n        )\r\n    }, [])\r\n\r\n\r\n    const [touchedState, setTouchedState] = useState<Touched>({})\r\n\r\n    const isTouched = useCallback((itemId: string) => {\r\n        return touchedState[itemId || '']\r\n    }, [touchedState])\r\n\r\n    const setIsTouched = useCallback(\r\n        (itemId: string, touched: boolean) => {\r\n            setTouchedState(\r\n                produce(draft => {\r\n                    draft[itemId] = touched\r\n                }),\r\n            )\r\n        },\r\n        [],\r\n    )\r\n\r\n    function resetAllTouched() {\r\n        setTouchedState({})\r\n    }\r\n\r\n    function resetTouched(item: Item) {\r\n        setTouchedState(\r\n            produce(draft => {\r\n                delete draft[item.id]\r\n            }),\r\n        )\r\n    }\r\n\r\n\r\n    useOnLogout(() => {\r\n        resetChannel()\r\n        resetAllTouched()\r\n    })\r\n    useOnItemRemoved(item => {\r\n        resetSelectedChannel(item)\r\n        resetTouched(item)\r\n    })\r\n\r\n\r\n    const setSelectedChannelImpl = useCallback(\r\n        function setSelectedChannelCallback(itemId: string, channel: ChannelOption, phoneId?: string) {\r\n            openChannel(channel.value)\r\n            selectCurrentItemChannel(itemId, channel, phoneId)\r\n            setIsTouched(itemId, true)\r\n        },\r\n        [openChannel, selectCurrentItemChannel, setIsTouched],\r\n    )\r\n\r\n    return useMemo(\r\n        function memoizedChannelState() {\r\n            return {\r\n                getSelectedChannel,\r\n                getSelectedPhone,\r\n                setSelectedChannel: setSelectedChannelImpl,\r\n                channelOptions,\r\n                isTouched,\r\n                setIsTouched,\r\n            }\r\n        },\r\n        [getSelectedChannel, getSelectedPhone, setSelectedChannelImpl, channelOptions, isTouched, setIsTouched],\r\n    )\r\n}\r\n","import type {ReactElement, ReactFragment} from 'react'\r\nimport React, {useContext} from 'react'\r\n\r\nimport {throwNoProviderError} from '@bpinc/lib-helpers'\r\nimport type {FCWithChildren} from '@bpinc/lib-types-helpers'\r\n\r\nimport {initialOption, useChannel} from './state'\r\nimport type {ChannelState} from './types'\r\n\r\n\r\nconst contextName = 'ChannelStateContext'\r\nconst initialState: ChannelState = {\r\n    getSelectedChannel: () => initialOption,\r\n    getSelectedPhone: () => undefined,\r\n    isTouched: () => false,\r\n    channelOptions: [initialOption],\r\n    setIsTouched: throwNoProviderError(contextName),\r\n    setSelectedChannel: throwNoProviderError(contextName),\r\n}\r\n\r\nconst ChannelStateContext = React.createContext<ChannelState>(initialState)\r\nChannelStateContext.displayName = contextName\r\n\r\nexport const ChannelStateProvider: FCWithChildren<ReactElement | ReactFragment> = props => {\r\n    const channelState: ChannelState = useChannel()\r\n\r\n    return (\r\n        <ChannelStateContext.Provider value={channelState}>\r\n            {props.children}\r\n        </ChannelStateContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useChannelState = () => useContext(ChannelStateContext)\r\n","import {constructUserPictureUrl} from '@bpinc/ad-contacts-state-methods'\r\nimport type {SessionData} from '@bpinc/ad-session-types'\r\nimport {getUserStatusIcon} from '@bpinc/ad-user-details-state-context'\r\nimport type {UserDetails} from '@bpinc/ad-user-details-state-types'\r\nimport type {PropsAvatar} from '@bpinc/lib-contact-list-item-ui'\r\nimport type {GroupChatItem} from '@bpinc/state-group-chat-types'\r\n\r\n\r\ninterface Params {\r\n    chatData?: GroupChatItem\r\n    p2pUser?: UserDetails\r\n    session: SessionData\r\n}\r\n\r\nexport function getGroupChatAvatar({chatData, p2pUser, session}: Params): PropsAvatar {\r\n    if (!chatData || chatData.members.length > 2) {\r\n        return getMultiuserChatAvatar()\r\n    }\r\n    if (chatData.type === 'TEAM') {\r\n        return getTeamChatAvatar(chatData)\r\n    }\r\n    const avatar = getP2PChatAvatar(chatData, session)\r\n\r\n    if (p2pUser) {\r\n        avatar.isOnline = p2pUser.presenceState === 'available'\r\n        avatar.onlineStatusIcon = getUserStatusIcon(p2pUser)\r\n    }\r\n    return avatar\r\n}\r\n\r\n/** Makes avatar props for a group chat if there is more then two users*/\r\nfunction getMultiuserChatAvatar(): PropsAvatar {\r\n    return {\r\n        avatarType: 'conference',\r\n        isAgent: true,\r\n    }\r\n}\r\n\r\n/** Makes avatar props for a pear-to-pear group chat */\r\nfunction getP2PChatAvatar(\r\n    chatData: GroupChatItem,\r\n    session: SessionData,\r\n): PropsAvatar {\r\n    const member = chatData.members.find(m => m.id !== session.userId)\r\n    return {\r\n        avatarType: 'user',\r\n        firstName: member?.firstName,\r\n        isAgent: true,\r\n        lastName: member?.lastName,\r\n        url: member?.id && constructUserPictureUrl(session, member.id),\r\n    }\r\n}\r\n\r\n/** Makes avatar props for a team group chat */\r\nfunction getTeamChatAvatar(chatData: GroupChatItem): PropsAvatar {\r\n    return {\r\n        avatarType: 'team-chat',\r\n        fullName: chatData.title,\r\n        isAgent: false,\r\n    }\r\n}\r\n","import type {ReactElement} from 'react'\r\nimport React, {\r\n    useCallback,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState,\r\n} from 'react'\r\nimport {noop} from 'lodash-es'\r\nimport {createContext, useContextSelector} from 'use-context-selector'\r\n\r\nimport {useEvent, useEventListener, useValueUpdated} from '@bpinc/lib-helpers'\r\nimport type {StateSetter} from '@bpinc/lib-types-helpers'\r\n\r\nimport {getMessageId} from '../../../helpers'\r\nimport type {ChatCommonMessagesType, ChatScrollNodeType} from '../../../types'\r\n\r\n\r\ntype ChatMessagesContextType = {\r\n    hasSelection: boolean\r\n    setHasSelection: StateSetter<boolean>\r\n    messages: ChatCommonMessagesType[]\r\n    selectedMessages: ChatCommonMessagesType[]\r\n    getClipboardBuffer: () => string\r\n    setClipboardBuffer: StateSetter<string>\r\n    scrollContainer: ChatScrollNodeType\r\n}\r\n\r\nconst ChatMessagesContext = createContext<ChatMessagesContextType>({\r\n    hasSelection: false,\r\n    setHasSelection: noop,\r\n    messages: [],\r\n    selectedMessages: [],\r\n    getClipboardBuffer: () => '',\r\n    setClipboardBuffer: noop,\r\n    scrollContainer: null,\r\n})\r\nChatMessagesContext.displayName = 'ChatMessagesContextProvider'\r\n\r\ninterface ChatMessagesContextProviderProps {\r\n    messages: ChatCommonMessagesType[]\r\n    children: ReactElement\r\n    interactionId: string\r\n    scrollContainer: ChatScrollNodeType\r\n}\r\n\r\n\r\nexport const ChatMessagesContextProvider: React.FC<ChatMessagesContextProviderProps> = ({children, messages, interactionId, scrollContainer}) => {\r\n    const [hasSelection, setHasSelection] = useState(false)\r\n    const [clipboardBuffer, setClipboardBuffer] = useState('')\r\n    const [selectedMessages, setSelectedMessages] = useState<ChatCommonMessagesType[]>([])\r\n    const firstSelectedMessageRef = useRef<string>()\r\n    const getClipboardBuffer = useEvent(() => clipboardBuffer)\r\n    const interactionChanged = useValueUpdated(interactionId)\r\n\r\n    useEffect(() => {\r\n        if (!interactionChanged) {\r\n            return\r\n        }\r\n\r\n        setHasSelection(false)\r\n        setClipboardBuffer('')\r\n        setSelectedMessages([])\r\n    }, [interactionChanged])\r\n\r\n    useEventListener('mouseup', e => {\r\n        if (!firstSelectedMessageRef.current || !(e instanceof MouseEvent)) {\r\n            return\r\n        }\r\n\r\n        const lastSelectedMessageId = getNearestMessageId(e.target)\r\n        if (!lastSelectedMessageId) {\r\n            return\r\n        }\r\n\r\n        const firstSelectedMessageIndex = messages.findIndex(m => getMessageId(m) === firstSelectedMessageRef.current)\r\n        const lastSelectedMessageIndex = messages.findIndex(m => getMessageId(m) === lastSelectedMessageId)\r\n        const indexes = [firstSelectedMessageIndex, lastSelectedMessageIndex].sort((a, b) => a - b)\r\n\r\n        const selected = messages.slice(indexes[0], indexes[1] + 1)\r\n        const selection = window.getSelection()\r\n        const range = (selection?.rangeCount ?? 0) > 0 ? selection?.getRangeAt(0) : undefined\r\n\r\n        // If selected more than one message extend selection to include whole messages\r\n        if (selected.length > 1 && selection && range) {\r\n            const forwardSelection = firstSelectedMessageIndex < lastSelectedMessageIndex\r\n            const firstElement = document.querySelector(`[data-message-id-selection='${firstSelectedMessageRef.current}']`)\r\n            const lastElement = document.querySelector(`[data-message-id-selection='${lastSelectedMessageId}']`)\r\n            const startElement = forwardSelection ? firstElement : lastElement\r\n            const endElement = forwardSelection ? lastElement : firstElement\r\n            range.setStartBefore(startElement || range.startContainer)\r\n            range.setEndAfter(endElement || range.endContainer)\r\n            if (forwardSelection) {\r\n                selection.setBaseAndExtent(range.startContainer, range.startOffset, range.endContainer, range.endOffset)\r\n            } else {\r\n                selection.setBaseAndExtent(range.endContainer, range.endOffset, range.startContainer, range.startOffset)\r\n            }\r\n        }\r\n        setSelectedMessages(selected)\r\n    })\r\n\r\n    const mouseDownHandler = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\r\n        firstSelectedMessageRef.current = getNearestMessageId(e.target)\r\n    }, [])\r\n\r\n    const value = useMemo<ChatMessagesContextType>(\r\n        () => ({\r\n            hasSelection,\r\n            setHasSelection,\r\n            messages,\r\n            selectedMessages,\r\n            setClipboardBuffer,\r\n            getClipboardBuffer,\r\n            scrollContainer,\r\n        }),\r\n        [getClipboardBuffer, hasSelection, messages, scrollContainer, selectedMessages],\r\n    )\r\n\r\n    return (\r\n        <ChatMessagesContext.Provider value={value}>\r\n            <div onMouseDown={mouseDownHandler}>\r\n                {children}\r\n            </div>\r\n        </ChatMessagesContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useChatHasSelection = () => useContextSelector(ChatMessagesContext, data => data.hasSelection)\r\nexport const useChatSetHasSelection = () => useContextSelector(ChatMessagesContext, data => data.setHasSelection)\r\nexport const useChatMessages = () => useContextSelector(ChatMessagesContext, data => data.messages)\r\nexport const useChatSelectedMessages = () => useContextSelector(ChatMessagesContext, data => data.selectedMessages)\r\nexport const useChatGetClipboardBuffer = () => useContextSelector(ChatMessagesContext, data => data.getClipboardBuffer)\r\nexport const useChatSetClipboardBuffer = () => useContextSelector(ChatMessagesContext, data => data.setClipboardBuffer)\r\nexport const useChatScrollContainer = () => useContextSelector(ChatMessagesContext, data => data.scrollContainer)\r\n\r\n\r\nfunction getNearestMessageId(target: EventTarget | null) {\r\n    let element: Element | undefined = undefined\r\n    if (target instanceof HTMLElement) {\r\n        element = target.closest('[data-message]')?.querySelector('[data-message-id-selection]') || undefined\r\n    } else if (target instanceof Node) {\r\n        element = target.parentElement?.closest('[data-message]')?.querySelector('[data-message-id-selection]') || undefined\r\n    }\r\n\r\n    return element?.getAttribute('data-message-id-selection') || undefined\r\n}\r\n","import {atom} from 'jotai'\r\n\r\n\r\nexport const predefinedMessagesSearchAtom = atom('')\r\nexport const predefinedSearchInsertPositionAtom = atom(-1)\r\nexport const chatPopupContentAtom = atom<'predefinedMessages' | 'emojiPicker' | undefined>(undefined)\r\nexport const attachmentButtonElementAtom = atom<HTMLButtonElement | null>(null)\r\n","import type {FC} from 'react'\r\nimport React from 'react'\r\nimport {Button} from '@servicepattern/ui'\r\nimport {useAtomValue} from 'jotai'\r\nimport {uniq} from 'lodash-es'\r\n\r\nimport {mimeTypeToExternalChatFileType} from '@bpinc/ad-formatting-helpers'\r\nimport {Attachment as AttachmentUI, InlineAlert, Modal} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\nimport type {getFileRejection} from '../../../helpers'\r\nimport {attachmentButtonElementAtom} from './atoms'\r\n\r\n\r\ntype UploadErrorModalProps = CommonModalProps & {\r\n    rejection: Exclude<ReturnType<typeof getFileRejection>, null>[]\r\n    totalFilesAmount: number\r\n    onCloseCallback?: () => void\r\n}\r\n\r\nexport const UploadErrorModal: FC<UploadErrorModalProps> = ({\r\n    rejection,\r\n    onClose,\r\n    onCloseCallback,\r\n    totalFilesAmount,\r\n    ...props\r\n}) => {\r\n    const attachmentButton = useAtomValue(attachmentButtonElementAtom)\r\n    const t = useLocalizationState('t')\r\n    const errorMessages = uniq(rejection.flatMap(r => r.errors.map(e => e.message)))\r\n\r\n    function handleClose() {\r\n        onClose()\r\n        onCloseCallback?.()\r\n    }\r\n\r\n    return (\r\n        <Modal {...props} onClose={handleClose}>\r\n            <Modal.Header type=\"error\">\r\n                {t.CHAT_CENTER.upload_failed()}\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <InlineAlert variant=\"error\">\r\n                    <ul className=\"m-0 p-0\">\r\n                        {errorMessages.map((message, index) => (\r\n                            <li key={index}>{message}</li>\r\n                        ))}\r\n                    </ul>\r\n                </InlineAlert>\r\n                <p className=\"my-6\">\r\n                    {t.CHAT_CENTER.failed_to_upload(\r\n                        rejection.length,\r\n                        totalFilesAmount,\r\n                    )}\r\n                </p>\r\n                <div className=\"flex flex-col gap-2\">\r\n                    {rejection.map((err, index) =>\r\n                        mimeTypeToExternalChatFileType(err.file.type) ===\r\n                    'attachment' ? (\r\n                                <AttachmentUI.File\r\n                                    key={index}\r\n                                    name={err.file.name}\r\n                                    className=\"pointer-events-none\"\r\n                                    isFailed\r\n                                />\r\n                            ) : (\r\n                                <AttachmentUI.Image\r\n                                    key={index}\r\n                                    name={err.file.name}\r\n                                    className=\"pointer-events-none\"\r\n                                    isFailed\r\n                                />\r\n                            ),\r\n                    )}\r\n                </div>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => {\r\n                        attachmentButton?.click()\r\n                        handleClose()\r\n                    }}\r\n                >\r\n                    {t.CHAT_CENTER.select_files()}\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => handleClose()}>\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","import {noop} from 'lodash-es'\r\n\r\n\r\nexport const defaultState = {\r\n    isAttachmentsListReady: () => true,\r\n    getAttachmentsList: () => [],\r\n    addAttachment: noop,\r\n    removeAttachment: noop,\r\n    clearAttachmentsList: noop,\r\n    initializeAttachmentsList: noop,\r\n    fileRejections: [],\r\n    setFileRejections: noop,\r\n}\r\n","import type {ReactElement, ReactFragment} from 'react'\r\nimport React from 'react'\r\nimport {createContext} from 'use-context-selector'\r\n\r\nimport {useOnItemRemoved} from '@bpinc/ad-interaction-state-hooks'\r\nimport {getInteractionStepId} from '@bpinc/ad-interaction-state-methods'\r\nimport type {ChatAttachment} from '@bpinc/ad-request-urls'\r\nimport {createUIStateSelectorHook} from '@bpinc/ad-state-context-factory'\r\nimport {useUploadChatFile} from '@bpinc/ad-upload-methods'\r\nimport type {FCWithChildren} from '@bpinc/lib-types-helpers'\r\n\r\nimport {defaultState} from './constants'\r\nimport type {AttachmentsState, RequestQueueItem} from './types'\r\nimport {useAttachmentsState} from './useAttachmentsState'\r\n\r\n\r\nconst ChatAttachmentsUIContext = createContext <AttachmentsState<ChatAttachment>>(\r\n    defaultState,\r\n)\r\nChatAttachmentsUIContext.displayName = 'ChatAttachmentsUIContext'\r\n\r\nfunction getFormData({file}: RequestQueueItem) {\r\n    const bodyFormData = new FormData()\r\n\r\n    bodyFormData.append('file', file)\r\n    return bodyFormData\r\n}\r\n\r\nexport const ChatAttachmentsUIStateProvider: FCWithChildren<ReactElement | ReactFragment> = ({children}) => {\r\n    const uploadChatFile = useUploadChatFile()\r\n\r\n    const value = useAttachmentsState({uploadFile: uploadChatFile, getFormData})\r\n\r\n    useOnItemRemoved(item => {\r\n        value.removeAttachmentsList(getInteractionStepId(item))\r\n    })\r\n\r\n    return (\r\n        <ChatAttachmentsUIContext.Provider value={value}>\r\n            {children}\r\n        </ChatAttachmentsUIContext.Provider>\r\n    )\r\n}\r\n\r\nexport const {useChatAttachmentsUIState} = createUIStateSelectorHook(ChatAttachmentsUIContext, 'chatAttachmentsUIState')\r\n","import type {ReactElement, ReactFragment} from 'react'\r\nimport React from 'react'\r\nimport {createContext} from 'use-context-selector'\r\n\r\nimport type {EmailAttachment} from '@bpinc/ad-request-urls'\r\nimport {createUIStateSelectorHook} from '@bpinc/ad-state-context-factory'\r\nimport {useUploadEmailFile} from '@bpinc/ad-upload-methods'\r\n\r\nimport {defaultState} from './constants'\r\nimport type {AttachmentsState, RequestQueueItem} from './types'\r\nimport {useAttachmentsState} from './useAttachmentsState'\r\n\r\n\r\nconst EmailAttachmentsUIContext = createContext <AttachmentsState<EmailAttachment>>(\r\n    defaultState,\r\n)\r\nEmailAttachmentsUIContext.displayName = 'EmailAttachmentsUIContext'\r\n\r\ninterface EmailAttachmentsUIStateProviderProps {\r\n    children: ReactElement | ReactFragment\r\n}\r\n\r\nfunction getFormData({file, attachmentsGroupId}: RequestQueueItem) {\r\n    const bodyFormData = new FormData()\r\n\r\n    bodyFormData.append('file', file)\r\n    bodyFormData.append('email', attachmentsGroupId)\r\n\r\n    return bodyFormData\r\n}\r\n\r\nexport const EmailAttachmentsUIStateProvider: React.FC<EmailAttachmentsUIStateProviderProps> = ({children}) => {\r\n    const uploadEmailFile = useUploadEmailFile()\r\n\r\n    const value = useAttachmentsState({uploadFile: uploadEmailFile, getFormData})\r\n\r\n    //TODO: Clean state on email draft removed\r\n\r\n    return (\r\n        <EmailAttachmentsUIContext.Provider value={value}>\r\n            {children}\r\n        </EmailAttachmentsUIContext.Provider>\r\n    )\r\n}\r\n\r\nexport const {useEmailAttachmentsUIState} = createUIStateSelectorHook(EmailAttachmentsUIContext, 'emailAttachmentsUIState')\r\n","import React from 'react'\r\n\r\nimport type {ExternalChatMessageSentiment} from '@bpinc/ad-transport-types'\r\nimport {formatDate} from '@bpinc/lib-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {HistoryVoiceTranscriptMessage} from '../../../../../types'\r\nimport {CallMessageRecording} from './CallMessageRecording'\r\nimport {EmptyCallMessage} from './EmptyCallMessage'\r\n\r\n\r\nexport interface CallMessageProps {\r\n    direction?: string\r\n    duration?: string\r\n    timestamp?: number\r\n    sentiment?: ExternalChatMessageSentiment\r\n    hasVoiceRecording?: boolean\r\n    recordingLink?: string\r\n    isMissedCall: boolean\r\n    voiceTranscript?: HistoryVoiceTranscriptMessage[]\r\n}\r\n\r\nexport const CallMessageContent: React.FC<CallMessageProps> = ({\r\n    direction,\r\n    duration,\r\n    timestamp,\r\n    hasVoiceRecording,\r\n    recordingLink,\r\n    isMissedCall,\r\n    voiceTranscript,\r\n    ...props\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const hasVoiceTranscript = !!voiceTranscript?.length\r\n    const createdTime = formatDate(timestamp, 'LT')\r\n\r\n    const ariaDirection =\r\n        direction === 'incoming'\r\n            ? t.ACTIVITY_HISTORY.call_message_incoming_aria_label()\r\n            : t.ACTIVITY_HISTORY.call_message_outgoing_aria_label()\r\n\r\n    const ariaLabel = [\r\n        ariaDirection,\r\n        t.ACTIVITY_HISTORY.call_message_created_time_aria() + createdTime,\r\n        t.ACTIVITY_HISTORY.call_message_duration_aria() + duration,\r\n    ].join('; ')\r\n\r\n    const title = isMissedCall\r\n        ? t.ACTIVITY_HISTORY.call_message_missed()\r\n        : direction === 'incoming'\r\n            ? t.ACTIVITY_HISTORY.call_message_incoming_text()\r\n            : t.ACTIVITY_HISTORY.call_message_outgoing_text()\r\n\r\n    if (!hasVoiceRecording || !recordingLink) {\r\n        return (\r\n            <EmptyCallMessage\r\n                timestamp={timestamp}\r\n                duration={duration}\r\n                isMissedCall={isMissedCall}\r\n                title={title}\r\n                createdTime={createdTime}\r\n                ariaLabel={ariaLabel}\r\n                direction={direction}\r\n                {...props}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <CallMessageRecording\r\n            hasVoiceRecording={hasVoiceRecording}\r\n            recordingLink={recordingLink}\r\n            voiceTranscript={voiceTranscript}\r\n            timestamp={timestamp}\r\n            duration={duration}\r\n            isMissedCall={isMissedCall}\r\n            title={title}\r\n            createdTime={createdTime}\r\n            hasVoiceTranscript={hasVoiceTranscript}\r\n            ariaLabel={ariaLabel}\r\n            direction={direction}\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgBotSuggestion = function SvgBotSuggestion(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m12 21-2.575-2.5h-3.8a1.6 1.6 0 0 1-1.162-.448A1.5 1.5 0 0 1 4 16.93V4.575a1.5 1.5 0 0 1 .463-1.127A1.6 1.6 0 0 1 5.625 3h12.75a1.606 1.606 0 0 1 1.163.448A1.506 1.506 0 0 1 20 4.575V16.93a1.506 1.506 0 0 1-.462 1.127 1.606 1.606 0 0 1-1.163.448h-3.8Zm-6.375-3.464H9.85L12 19.619l2.15-2.083h4.225a.62.62 0 0 0 .45-.17.581.581 0 0 0 .175-.436V4.575a.581.581 0 0 0-.175-.436.62.62 0 0 0-.45-.17H5.625a.62.62 0 0 0-.45.17.581.581 0 0 0-.175.436V16.93a.581.581 0 0 0 .175.436.62.62 0 0 0 .45.17ZM5 3.969Zm8.175 7.922 2.6-1.139-2.6-1.139L12 7.094l-1.175 2.52-2.6 1.139 2.6 1.139L12 14.41Z\",\n    fill: \"#767676\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgBotSuggestion);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"21ff305d2488d9478cc624e673ec8bab.svg\";","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgFacebook = function SvgFacebook(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 3c-4.974 0-9 3.645-9 8.1a7.687 7.687 0 0 0 2.842 5.895V21l3.695-2.115A10.817 10.817 0 0 0 12 19.2c4.974 0 9-3.645 9-8.1S16.974 3 12 3Z\",\n    fill: \"#448aff\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m6.275 13.908 4.771-5.146 2.385 2.339 4.294-2.339-4.771 5.146-2.385-2.339Z\",\n    fill: \"#fff\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgFacebook);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"57f727bf2f169e0b19d872ec87e1ebc4.svg\";","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgLine = function SvgLine(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.25 21h11.5A3.25 3.25 0 0 0 21 17.75V6.25A3.25 3.25 0 0 0 17.75 3H6.25A3.25 3.25 0 0 0 3 6.25v11.5A3.25 3.25 0 0 0 6.25 21Z\",\n    fill: \"#00c300\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.556 11.21c0-2.932-2.94-5.318-6.553-5.318S5.451 8.276 5.451 11.21c0 2.629 2.332 4.831 5.481 5.247.214.046.5.141.578.323a1.348 1.348 0 0 1 .021.593s-.076.462-.094.561c-.028.166-.132.648.568.354a21.147 21.147 0 0 0 5.146-3.807 4.728 4.728 0 0 0 1.405-3.271Zm-9.119 1.745h-1.3a.344.344 0 0 1-.344-.344V10.01a.344.344 0 0 1 .687 0v2.26h.958a.344.344 0 0 1 0 .688Zm1.347-.344a.344.344 0 1 1-.687 0V10.01a.344.344 0 1 1 .687 0Zm3.135 0a.344.344 0 0 1-.618.206L11.966 11v1.61a.344.344 0 0 1-.688 0v-2.6a.344.344 0 0 1 .235-.326.338.338 0 0 1 .109-.017.346.346 0 0 1 .274.137l1.335 1.818V10.01a.344.344 0 0 1 .688 0Zm2.107-1.646a.344.344 0 1 1 0 .688h-.958v.615h.958a.344.344 0 1 1 0 .688h-1.3a.344.344 0 0 1-.344-.344V10.01a.344.344 0 0 1 .344-.344h1.3a.344.344 0 1 1 0 .687h-.958v.615h.958Z\",\n    fill: \"#fff\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgLine);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"0c921db40ddee9f34a5d15b376ee0df7.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgSms = function SvgSms(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 11.2a.725.725 0 0 0 .538-.251.8.8 0 0 0 0-1.133.7.7 0 0 0-1.075 0 .793.793 0 0 0 0 1.133A.722.722 0 0 0 8 11.2Zm4 0a.725.725 0 0 0 .538-.251.8.8 0 0 0 0-1.133.7.7 0 0 0-1.075 0 .793.793 0 0 0 0 1.133.722.722 0 0 0 .537.251Zm4 0a.725.725 0 0 0 .538-.251.8.8 0 0 0 0-1.133.7.7 0 0 0-1.075 0 .793.793 0 0 0 0 1.133.722.722 0 0 0 .537.251ZM3 21V4.713a1.711 1.711 0 0 1 .463-1.226A1.534 1.534 0 0 1 4.625 3h14.75a1.537 1.537 0 0 1 1.163.487A1.713 1.713 0 0 1 21 4.713v11.332a1.713 1.713 0 0 1-.462 1.226 1.537 1.537 0 0 1-1.163.487h-13.3Zm1-2.556L5.65 16.7h13.725a.593.593 0 0 0 .45-.184.661.661 0 0 0 .175-.471V4.713a.661.661 0 0 0-.175-.474.593.593 0 0 0-.45-.184H4.625a.593.593 0 0 0-.45.184.661.661 0 0 0-.175.474ZM4 4.713Z\",\n    fill: \"#767676\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgSms);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"910dfbe6763a148f8a6af4b2866390ff.svg\";","var _path, _path2, _path3, _path4;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgTelegram = function SvgTelegram(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 3a9 9 0 1 0 9 9 9 9 0 0 0-9-9Z\",\n    fill: \"#29b6f6\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m17.109 7.525-1.844 9.415a.574.574 0 0 1-.613.43.659.659 0 0 1-.43-.135l-3.994-3.315-1.954-.987-2.508-.667s-.447-.129-.447-.5c0-.308.459-.454.459-.454l10.493-4.169a2 2 0 0 1 .555-.11c.144 0 .308.062.308.246a1.439 1.439 0 0 1-.025.246Z\",\n    fill: \"#fff\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m11.649 14.855-1.687 1.661a.322.322 0 0 1-.171.059.243.243 0 0 1-.108-.021l.475-2.936Z\",\n    fill: \"#b0bec5\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.968 9.007a.246.246 0 0 0-.345-.046l-6.496 3.884s1.037 2.9 1.195 3.4.286.514.286.514l.475-2.936 4.84-4.478a.246.246 0 0 0 .045-.338Z\",\n    fill: \"#cfd8dc\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgTelegram);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"3b81ec51938bfa793e8ba0cb4f274188.svg\";","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgTwitter = function SvgTwitter(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 3a9 9 0 1 0 9 9 9 9 0 0 0-9-9Z\",\n    fill: \"#03a9f4\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.224 8.73a4.6 4.6 0 0 1-1.306.415 3.333 3.333 0 0 0 1.306-1.415 5.926 5.926 0 0 1-1.651.648 2 2 0 0 0-1.563-.648A2.176 2.176 0 0 0 12 10.09v.94c-1.741 0-3.439-1.438-4.5-2.832a2.42 2.42 0 0 0-.29 1.16 3.038 3.038 0 0 0 1.3 2.145 3.828 3.828 0 0 1-1.306-.472v.027a2.065 2.065 0 0 0 1.7 2.088 2.548 2.548 0 0 1-1.236.246c.272.913 1.642 1.4 2.58 1.416a5.19 5.19 0 0 1-3.047.944 2.958 2.958 0 0 1-.424-.008 6.359 6.359 0 0 0 3.482.955 6.1 6.1 0 0 0 6.094-6.312c0-.1 0-.435-.008-.533a3.528 3.528 0 0 0 .879-1.124\",\n    fill: \"#fff\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgTwitter);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"6157ddd8a81feea7b302231a623e132e.svg\";","var _path, _path2, _path3, _path4;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgViber = function SvgViber(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 3.426c-1.191 0-4.815 0-6.819 1.738-1.193 1.129-1.755 2.762-1.755 5.121v1.286c0 2.36.562 3.992 1.769 5.134a6.358 6.358 0 0 0 2.423 1.221l.321.092v2.288c0 .268.082.268.109.268.056 0 .144-.017.313-.159.041-.038.338-.344 1.787-1.886l.146-.156.219.013c.485.029.986.044 1.487.044 1.191 0 4.815 0 6.819-1.738 1.193-1.129 1.755-2.761 1.755-5.121v-1.286c0-2.36-.562-3.992-1.769-5.134-1.99-1.725-5.614-1.725-6.805-1.725Z\",\n    fill: \"#fff\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.443 13.623a9.161 9.161 0 0 0-1.477-.911 2.611 2.611 0 0 0-.994-.3.814.814 0 0 0-.479.223c-.307.279-.407.629-.945.629a3.863 3.863 0 0 1-2.105-1.118 3.357 3.357 0 0 1-1.228-1.917c0-.49.377-.588.684-.868a.7.7 0 0 0 .252-.435 2.068 2.068 0 0 0-.334-.9 8.2 8.2 0 0 0-1-1.345.663.663 0 0 0-.494-.234 1.894 1.894 0 0 0-.957.315 2.088 2.088 0 0 0-.929 1.1 1 1 0 0 0-.028.191 2.759 2.759 0 0 0 .408 1.377 14.5 14.5 0 0 0 1.977 2.749 9.6 9.6 0 0 0 .778.759 9.94 9.94 0 0 0 .834.708 16.219 16.219 0 0 0 3.02 1.8 3.553 3.553 0 0 0 1.5.372 1.325 1.325 0 0 0 .223-.025 2.236 2.236 0 0 0 1.209-.846 1.532 1.532 0 0 0 .346-.871.568.568 0 0 0-.261-.453Zm.257-2.067a.448.448 0 0 1-.468-.426v-.426a4.04 4.04 0 0 0-4.21-3.833.428.428 0 1 1 0-.852 4.938 4.938 0 0 1 5.146 4.685v.426a.448.448 0 0 1-.468.43Zm-2.873-.852a.463.463 0 0 1-.452-.319 1.341 1.341 0 0 0-1-.912.424.424 0 0 1-.336-.519.474.474 0 0 1 .57-.306 2.242 2.242 0 0 1 1.672 1.522.424.424 0 0 1-.334.52.517.517 0 0 1-.121.018Z\",\n    fill: \"#7e57c2\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.095 11.126a.426.426 0 0 1-.426-.426 2.553 2.553 0 0 0-2.418-2.549.426.426 0 0 1 .045-.851 3.4 3.4 0 0 1 3.225 3.4.426.426 0 0 1-.426.426Z\",\n    fill: \"#7e57c2\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 3c-2.025 0-5.28.977-7.1 1.85C3.538 6.138 3 7.946 3 10.286v1.285c0 2.34.538 4.147 1.9 5.436a6.8 6.8 0 0 0 2.6 1.331V20.3c0 .684.472.7.558.7a.944.944 0 0 0 .607-.267c.072-.061.909-.949 1.819-1.92.542.033 1.057.045 1.511.045 2.025 0 5.18-.178 7.1-1.85 1.359-1.288 1.9-3.1 1.9-5.436v-1.286c0-2.34-.538-4.147-1.9-5.436C17.18 3.177 14.025 3 12 3Zm7.65 8.422v.149c0 2.1-.47 3.535-1.479 4.505-1.747 1.5-5.075 1.5-6.172 1.5-.334 0-.876 0-1.515-.043L8.4 19.75v-2.513a6.03 6.03 0 0 1-2.571-1.161c-1.008-.97-1.479-2.4-1.479-4.506v-1.282c0-2.1.47-3.535 1.479-4.505 1.746-1.5 5.075-1.5 6.171-1.5s4.424 0 6.171 1.5c1.009.97 1.479 2.4 1.479 4.505v1.134Z\",\n    fill: \"#7e57c2\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgViber);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"705a55fc7f1f462947be817d84a580cc.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgWebChat = function SvgWebChat(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 21V4.713a1.711 1.711 0 0 1 .463-1.226A1.534 1.534 0 0 1 4.625 3h14.75a1.537 1.537 0 0 1 1.163.487A1.713 1.713 0 0 1 21 4.713v11.332a1.713 1.713 0 0 1-.462 1.226 1.537 1.537 0 0 1-1.163.487h-13.3Zm1-2.556L5.65 16.7h13.725a.593.593 0 0 0 .45-.184.661.661 0 0 0 .175-.471V4.713a.661.661 0 0 0-.175-.474.593.593 0 0 0-.45-.184H4.625a.593.593 0 0 0-.45.184.661.661 0 0 0-.175.474ZM4 4.713Z\",\n    fill: \"#767676\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgWebChat);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"14effeb1e434fca9cf40a30e4b4c1cfa.svg\";","var _path, _path2, _path3, _path4, _path5;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgWechat = function SvgWechat(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.689 3c-4.23 0-7.691 2.884-7.691 6.489a6.076 6.076 0 0 0 2.884 5.047l-.961 2.884 3.028-1.875a8.4 8.4 0 0 0 2.74.433c4.23 0 7.691-2.884 7.691-6.489S14.919 3 10.689 3Z\",\n    fill: \"#8bc34a\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.933 14.068c.38-2.708 3.331-4.51 6.614-4.05.137.02 1.617.409 1.758.429a3.465 3.465 0 0 0 0-1.33c-.046-.006-.137-.083-.183-.09-5.07-1.443-9.06 1.238-9.098 4.913a5.88 5.88 0 0 0 .07 1.82 7.053 7.053 0 0 0 .97.046 4.36 4.36 0 0 1-.13-1.738Z\",\n    fill: \"#7cb342\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 14.751a5.52 5.52 0 0 0-5.75-5.288 5.52 5.52 0 0 0-5.75 5.288 5.52 5.52 0 0 0 5.75 5.288 6.515 6.515 0 0 0 2.212-.385L19.674 21l-.619-2.307A5.033 5.033 0 0 0 21 14.751Z\",\n    fill: \"#cfd8dc\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.866 7.478a.961.961 0 1 1-.962-.961.964.964 0 0 1 .962.961Zm4.807-.961a.961.961 0 1 0 .961.961.964.964 0 0 0-.961-.961Z\",\n    fill: \"#33691e\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.996 13.254a.721.721 0 1 1-.721-.721.739.739 0 0 1 .721.721Zm3.605-.721a.721.721 0 1 0 .721.721.739.739 0 0 0-.721-.721Z\",\n    fill: \"#546e7a\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgWechat);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"720e2babef2e76400cb343b776053cba.svg\";","var _path, _path2, _path3, _path4, _path5;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgWhatsapp = function SvgWhatsapp(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m3.46 20.54 1.207-4.386A8.5 8.5 0 0 1 18.052 5.941a8.394 8.394 0 0 1 2.489 5.988 8.5 8.5 0 0 1-8.5 8.464 8.525 8.525 0 0 1-4.073-1.034Z\",\n    fill: \"#fff\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.454 20.77a.223.223 0 0 1-.216-.282l1.183-4.3A8.725 8.725 0 0 1 18.214 5.78a8.622 8.622 0 0 1 2.556 6.15 8.742 8.742 0 0 1-12.833 7.677l-4.426 1.156a.206.206 0 0 1-.057.007Z\",\n    fill: \"#fff\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.032 3.447a8.48 8.48 0 1 1 0 16.959 8.534 8.534 0 0 1-4.07-1.032l-4.514 1.179 1.208-4.392a8.474 8.474 0 0 1 7.376-12.714m0-.447a8.922 8.922 0 0 0-7.86 13.22l-1.157 4.215a.445.445 0 0 0 .117.432.449.449 0 0 0 .433.118l4.345-1.134A8.972 8.972 0 0 0 21 11.93 8.945 8.945 0 0 0 12.032 3Z\",\n    fill: \"#cfd8dc\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.01 6.982a7.014 7.014 0 0 0-10.93 8.659l.168.265-.711 2.579 2.661-.694.257.152a7.047 7.047 0 0 0 3.579.974 7.02 7.02 0 0 0 7.031-6.99 6.928 6.928 0 0 0-2.055-4.945Z\",\n    fill: \"#40c351\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.854 8.28c-.163-.363-.335-.37-.491-.377-.127-.006-.272-.005-.418-.005a.8.8 0 0 0-.581.273 2.443 2.443 0 0 0-.763 1.817 4.238 4.238 0 0 0 .89 2.254 8.948 8.948 0 0 0 3.723 3.29c1.841.726 2.216.582 2.615.545a2.2 2.2 0 0 0 1.471-1.036 1.825 1.825 0 0 0 .127-1.036c-.055-.091-.2-.145-.418-.255s-1.29-.636-1.489-.709-.345-.109-.491.109-.563.709-.69.854-.255.164-.472.055a5.966 5.966 0 0 1-1.753-1.081 6.566 6.566 0 0 1-1.212-1.509c-.127-.218-.014-.336.1-.445s.218-.255.327-.382a1.49 1.49 0 0 0 .218-.363.4.4 0 0 0-.018-.382c-.057-.117-.481-1.19-.675-1.617Z\",\n    fill: \"#fff\",\n    fillRule: \"evenodd\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgWhatsapp);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"a39c903b5cca1b36c65e91151a83b019.svg\";","import type {ReactElement} from 'react'\r\nimport React, {useMemo, useState} from 'react'\r\nimport {createContext, useContext} from 'use-context-selector'\r\n\r\nimport type {Toggle} from '@bpinc/lib-helpers'\r\nimport {useBoolean} from '@bpinc/lib-helpers'\r\nimport type {FCWithChildren, StateSetter} from '@bpinc/lib-types-helpers'\r\n\r\nimport type {VoiceTranscriptSearchResultType} from '../../../types'\r\n\r\n\r\ninterface VoiceTranscriptUIState {\r\n    search: string\r\n    setSearch: StateSetter<string>\r\n\r\n    searchResult: VoiceTranscriptSearchResultType | undefined\r\n    setSearchResult: StateSetter<VoiceTranscriptSearchResultType | undefined>\r\n\r\n    showBotSuggestions: boolean\r\n    toggleBotSuggestions: Toggle\r\n\r\n    showSMS: boolean\r\n    toggleSMS: Toggle\r\n\r\n    showTranscript: boolean\r\n    toggleTranscript: Toggle\r\n}\r\n\r\nconst noop = () => {}\r\n\r\nconst initialState: VoiceTranscriptUIState = {\r\n    search: '',\r\n    setSearch: noop,\r\n\r\n    searchResult: undefined,\r\n    setSearchResult: noop,\r\n\r\n    showBotSuggestions: true,\r\n    toggleBotSuggestions: noop,\r\n\r\n    showSMS: true,\r\n    toggleSMS: noop,\r\n\r\n    showTranscript: true,\r\n    toggleTranscript: noop,\r\n}\r\n\r\nconst VoiceTranscriptUIContext = createContext<VoiceTranscriptUIState>(initialState)\r\n\r\nVoiceTranscriptUIContext.displayName = 'VoiceTranscriptUIContext'\r\n\r\nexport const VoiceTranscriptStateProvider: FCWithChildren<ReactElement> = ({children}) => {\r\n    const [search, setSearch] = useState<VoiceTranscriptUIState['search']>(initialState.search)\r\n    const [searchResult, setSearchResult] = useState<VoiceTranscriptUIState['searchResult']>(undefined)\r\n    const {value: showBotSuggestions, toggle: toggleBotSuggestions} = useBoolean(initialState.showBotSuggestions)\r\n    const {value: showSMS, toggle: toggleSMS} = useBoolean(initialState.showSMS)\r\n    const {value: showTranscript, toggle: toggleTranscript} = useBoolean(initialState.showTranscript)\r\n\r\n    const contextValue = useMemo(function memoizeContextValue() {\r\n        return {\r\n            search,\r\n            setSearch,\r\n\r\n            searchResult,\r\n            setSearchResult,\r\n\r\n            showBotSuggestions,\r\n            toggleBotSuggestions,\r\n\r\n            showSMS,\r\n            toggleSMS,\r\n\r\n            showTranscript,\r\n            toggleTranscript,\r\n        }\r\n    }, [search, searchResult, showBotSuggestions, showSMS, showTranscript, toggleBotSuggestions, toggleSMS, toggleTranscript])\r\n\r\n    return <VoiceTranscriptUIContext.Provider value={contextValue}>{children}</VoiceTranscriptUIContext.Provider>\r\n}\r\n\r\nexport function useVoiceTranscriptUIState() {\r\n    return useContext(VoiceTranscriptUIContext)\r\n}\r\n","import React, {useCallback, useEffect, useState} from 'react'\r\nimport type {PrimitiveAtom} from 'jotai'\r\nimport {useSetAtom} from 'jotai'\r\nimport {partial} from 'lodash-es'\r\n\r\nimport {getInteractionStepId, isCall, isPotentialInteraction} from '@bpinc/ad-interaction-state-methods'\r\nimport type {Item} from '@bpinc/ad-interaction-state-types'\r\nimport {useChatAttachmentsUIState} from '@bpinc/lib-attachments-state'\r\nimport {not, useDidUnmount} from '@bpinc/lib-helpers'\r\nimport {truthy} from '@bpinc/lib-types-helpers'\r\nimport {type InjectedFileInputProps, withFileInput} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {getFileRejection} from '../../../helpers'\r\nimport {useInitiateChatByAttachment} from '../../../hooks/useInitiateChatByAttachment'\r\nimport {UploadErrorModal} from './UploadErrorModal'\r\n\r\n\r\ninterface InvisibleAttachButtonProps {\r\n    disabled?: boolean\r\n    chatItem: Item\r\n    buttonElementAtom: PrimitiveAtom<HTMLButtonElement | null>\r\n}\r\n\r\n/** It's invisible, and uncontrolled like every other file input element.\r\n * To control it, you need to pass the buttonElementAtom throuth the props\r\n * Ane later you can use the buttonElementAtom to trigger the click event like this:\r\n * const buttonElement = useAtomValue(buttonElementAtom)\r\n * buttonElement?.click()\r\n */\r\nexport const InvisibleAttachButton: React.FC<InvisibleAttachButtonProps> = ({\r\n    disabled = false,\r\n    chatItem,\r\n    buttonElementAtom,\r\n}) => {\r\n    const setAttachmentButtonElement = useSetAtom(buttonElementAtom)\r\n\r\n    const {\r\n        addAttachment,\r\n        fileRejections,\r\n        setFileRejections,\r\n        isAttachmentsListReady,\r\n        getAttachmentsList,\r\n    } = useChatAttachmentsUIState([\r\n        'addAttachment',\r\n        'fileRejections',\r\n        'setFileRejections',\r\n        'isAttachmentsListReady',\r\n        'getAttachmentsList',\r\n    ])\r\n    const shouldInitiateChat =\r\n        isPotentialInteraction(chatItem) || isCall(chatItem)\r\n    const interactionStepId = getInteractionStepId(chatItem)\r\n\r\n    const {t} = useLocalizationState()\r\n    const openUploadErrorModal = useModalComponentOpener(UploadErrorModal)\r\n    const handleUploadFiles = useCallback(\r\n        (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n            addFilesToAttachmentsList()\r\n\r\n            function addFilesToAttachmentsList() {\r\n                const files = getFilesFromEvent()\r\n                if (!files) {\r\n                    return\r\n                }\r\n\r\n                const getLocalizedFileError = partial(getFileRejection, t)\r\n                const fileRejection = truthy(files.map(getLocalizedFileError))\r\n                const validFiles = files.filter(not(getLocalizedFileError))\r\n\r\n                if (fileRejection.length) {\r\n                    openUploadErrorModal({\r\n                        rejection: fileRejection,\r\n                        totalFilesAmount: files.length,\r\n                    })\r\n                }\r\n\r\n                if (interactionStepId) {\r\n                    validFiles.forEach(\r\n                        partial(addAttachment, interactionStepId),\r\n                    )\r\n                }\r\n            }\r\n\r\n            function getFilesFromEvent() {\r\n                const input = event.target\r\n                return input.files ? Array.from(input.files) : []\r\n            }\r\n        },\r\n        [addAttachment, interactionStepId, openUploadErrorModal, t],\r\n    )\r\n\r\n    useEffect(\r\n        function showRejections() {\r\n            if (isAttachmentsListReady(interactionStepId) && fileRejections.length) {\r\n                openUploadErrorModal({\r\n                    rejection: fileRejections,\r\n                    onCloseCallback: () => setFileRejections([]),\r\n                    totalFilesAmount:\r\n                        getAttachmentsList(interactionStepId).length +\r\n                        fileRejections.length,\r\n                })\r\n            }\r\n        },\r\n        [\r\n            fileRejections,\r\n            getAttachmentsList,\r\n            interactionStepId,\r\n            isAttachmentsListReady,\r\n            openUploadErrorModal,\r\n            setFileRejections,\r\n        ],\r\n    )\r\n\r\n    useDidUnmount(() => {\r\n        setAttachmentButtonElement(null)\r\n        setFileRejections([])\r\n    })\r\n\r\n    const initiateChat = useInitiateChatByAttachment({chatItem})\r\n    /**\r\n     * Callback function for clicking on a file input element.\r\n     *\r\n     * @remarks\r\n     * Opens the file input dialog and initiates a chat if necessary.\r\n     */\r\n    const onFileClick = useCallback(async () => {\r\n        /**\r\n         * If the user is not supposed to initiate a chat, simply open the file input dialog.\r\n         */\r\n        if (!shouldInitiateChat) {\r\n            return {selectFiles: true}\r\n        }\r\n\r\n        const chatWasInitiated = initiateChat()\r\n\r\n        return {selectFiles: chatWasInitiated}\r\n    }, [initiateChat, shouldInitiateChat])\r\n\r\n    //This is workaround because passing atom value directly leads to infinite loop\r\n    const [innerButtonElement, setInnerButtonElement] =\r\n        useState<HTMLButtonElement | null>(null)\r\n\r\n    useEffect(() => {\r\n        setAttachmentButtonElement(innerButtonElement)\r\n    }, [innerButtonElement, setAttachmentButtonElement])\r\n\r\n    return (\r\n        <InvisibleAttachButtonWithInput\r\n            ref={element => {\r\n                if (element instanceof HTMLButtonElement || element === null) {\r\n                    setInnerButtonElement(element)\r\n                }\r\n            }}\r\n            onFileInputClick={onFileClick}\r\n            handleUploadFiles={handleUploadFiles}\r\n            isDisabled={disabled}\r\n        />\r\n    )\r\n}\r\n\r\nconst InvisinbleAttachButtonUI = React.forwardRef<\r\n    HTMLButtonElement,\r\n    InjectedFileInputProps\r\n>(({onFileInputClick}, ref) => (\r\n    <button\r\n        onClick={onFileInputClick}\r\n        ref={ref}\r\n        className=\"invisible absolute z-[-1] w-0\"\r\n    />\r\n))\r\n\r\nconst InvisibleAttachButtonWithInput = withFileInput(InvisinbleAttachButtonUI)\r\n","import {useCallback} from 'react'\r\nimport {flow} from 'lodash-es'\r\n\r\nimport {Selection} from '@bpinc/lib-helpers'\r\n\r\n\r\nexport function useMessageUpdater(\r\n    setCurrentMessage: (setter: (message: string) => string) => void,\r\n    textAreaSelector: string,\r\n) {\r\n    return useCallback(\r\n        function updateMessageCallback<T, S extends string>(getMessage = (e: T) => e as unknown as S) {\r\n            return function updater(data: T) {\r\n                const textAreaNode = document.querySelector(textAreaSelector)\r\n\r\n                flow(getMessage, updateMessageContent, setCaretToRightPosition)(data)\r\n\r\n\r\n                function updateMessageContent(dataToAdd: string) {\r\n                    let offsetToFocus = 0\r\n                    let nodeToFocus: Node | null = null\r\n\r\n                    setCurrentMessage((currentMessage: string) => {\r\n                        const selection = new Selection()\r\n                        const selectionNode = selection?.getLastNode()\r\n                        const selectionElement = (\r\n                            selectionNode?.nodeType === Node.TEXT_NODE ? selectionNode?.parentElement : selectionNode\r\n                        ) as Element\r\n\r\n                        const textAreaSelected = selectionElement?.closest(textAreaSelector)\r\n\r\n                        if (textAreaNode) {\r\n                            currentMessage = cutExtraBR()\r\n\r\n                            if (!textAreaSelected) {\r\n                                return currentMessage + dataToAdd\r\n                            } else if (selection && selectionNode) {\r\n                                setNodeAndOffsetToFocus(selection)\r\n                                removeSelectedTextOnPaste(selection)\r\n\r\n                                if (nodeToFocus) {\r\n                                    insertDataInSelectedNode(nodeToFocus, offsetToFocus)\r\n                                }\r\n\r\n                                return getUpdatedHTMLAsString()\r\n                            }\r\n\r\n                            return currentMessage\r\n                        }\r\n\r\n                        return currentMessage + dataToAdd\r\n\r\n                        function differentNodesSelected(selectionInner: Selection) {\r\n                            return selectionInner.getFirstNode() !== selectionInner.getLastNode()\r\n                        }\r\n\r\n                        function textSelected(selectionInner: Selection) {\r\n                            return selectionInner.getSelectionStartIndex() !== selectionInner.getSelectionEndIndex()\r\n                        }\r\n\r\n                        function setNodeAndOffsetToFocus(selectionInner: Selection) {\r\n                            if (differentNodesSelected(selectionInner)) {\r\n                                offsetToFocus = selectionInner.getSelectionStartIndex() ?? 0\r\n                                nodeToFocus = selectionInner.getFirstNode()\r\n                            } else if (textSelected(selectionInner)) {\r\n                                offsetToFocus = selectionInner.getSelectionStartIndex() ?? 0\r\n                                nodeToFocus = selectionInner.getFirstNode()\r\n                            } else {\r\n                                offsetToFocus = selectionInner.getSelectionEndIndex() ?? 0\r\n                                nodeToFocus = selectionInner.getLastNode()\r\n                            }\r\n                        }\r\n                        function removeSelectedTextOnPaste(selectionInner: Selection) {\r\n                            if (differentNodesSelected(selectionInner) || textSelected(selectionInner)) {\r\n                                selectionInner.deleteSelected()\r\n                            }\r\n                        }\r\n\r\n                        function insertDataInSelectedNode(selectionNodeInner: Node, selectionOffset: number) {\r\n                            const textContent = selectionNodeInner?.textContent ?? ''\r\n                            selectionNodeInner.textContent =\r\n                                textContent?.slice(0, selectionOffset) + dataToAdd + textContent?.slice(selectionOffset)\r\n                        }\r\n\r\n                        function getUpdatedHTMLAsString() {\r\n                            return document.querySelector(textAreaSelector)?.innerHTML ?? currentMessage\r\n                        }\r\n\r\n                        function cutExtraBR() {\r\n                            const extraBRExist = currentMessage.substring(currentMessage.length - 8) === '<br><br>'\r\n                            if (extraBRExist) {\r\n                                return currentMessage.substring(0, currentMessage.length - 4)\r\n                            } else {\r\n                                return currentMessage\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    return {nodeToFocus, offsetToFocus, dataToAdd} as const\r\n                }\r\n\r\n                function setCaretToRightPosition({\r\n                    nodeToFocus,\r\n                    offsetToFocus,\r\n                    dataToAdd,\r\n                }: {\r\n                    nodeToFocus: Node | null\r\n                    offsetToFocus: number\r\n                    dataToAdd: string\r\n                }) {\r\n                    if (textAreaNode instanceof HTMLElement) {\r\n                        textAreaNode.focus()\r\n                        requestAnimationFrame(() => {\r\n                            setCursorPosition()\r\n                            requestAnimationFrame(setCursorPosition)\r\n\r\n                            function setCursorPosition() {\r\n                                if (textAreaNode) {\r\n                                    if (nodeToFocus) {\r\n                                        keepCursorAtTheCurrentPosition(nodeToFocus)\r\n                                    } else if (textAreaNode.lastChild) {\r\n                                        setCursorToTheEnd(textAreaNode.lastChild)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            function keepCursorAtTheCurrentPosition(node: Node) {\r\n                                const range = document.createRange()\r\n                                range.setStart(node, offsetToFocus + dataToAdd.length)\r\n                                range.setEnd(node, offsetToFocus + dataToAdd.length)\r\n                                window.getSelection()?.removeAllRanges()\r\n                                window.getSelection()?.addRange(range)\r\n                            }\r\n\r\n                            function setCursorToTheEnd(lastChild: Node) {\r\n                                const range = document.createRange()\r\n                                range.setStart(lastChild, lastChild.textContent?.length ?? 0)\r\n                                range.setEnd(lastChild, lastChild.textContent?.length ?? 0)\r\n                                window.getSelection()?.removeAllRanges()\r\n                                window.getSelection()?.addRange(range)\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        [textAreaSelector, setCurrentMessage],\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useInteraction} from '@bpinc/ad-interaction-state-context'\r\nimport {createComponentLoader} from '@bpinc/lib-ui-elements'\r\nimport type {GroupChatUIScope} from '@bpinc/state-group-chat-ui'\r\n\r\nimport {ExternalChat} from './external/ExternalChat'\r\n\r\n\r\nconst {ChatCenterInteractionLoader} = createComponentLoader(\r\n    'chatCenter', () => import('chatCenter'), 'ChatCenterInteraction',\r\n)\r\n\r\ntype Props = {\r\n    itemId: string\r\n    scope: GroupChatUIScope\r\n}\r\n\r\nexport const Chat: React.FC<Props> = React.memo(function Chat({itemId, scope}) {\r\n    const item = useInteraction(itemId)\r\n    const isInternalChat = Boolean(item && (\r\n        item.groupChatId ||\r\n        item.groupChatMembers ||\r\n        item.userId\r\n    ))\r\n\r\n    return isInternalChat\r\n        ? <ChatCenterInteractionLoader scope={scope} interactionId={itemId} />\r\n        : <ExternalChat itemId={itemId} />\r\n})\r\n","import type {FC, HTMLAttributes} from 'react'\r\nimport React from 'react'\r\n\r\nimport {IconCogwheel} from '@bpinc/lib-icons'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\n\r\nexport const SystemMessageUI: FC<HTMLAttributes<HTMLDivElement>> = ({children, className, ...rest}) => {\r\n    return (\r\n        <div className={tcn('flex items-center px-3 py-2 text-sm/[18px] text-chat-title', className)} {...rest}>\r\n            <IconCogwheel className=\"mr-4.5 h-6 shrink-0\" />\r\n            <div data-testid=\"content\">{children}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback, useMemo, useState} from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {Button} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype ReactedUser = {\r\n    userId: string\r\n    displayName: string\r\n}\r\n\r\ntype Props = {\r\n    users: ReactedUser[]\r\n}\r\n\r\nconst MAX_USERS_DISPLAY_NUMBER = 8\r\nconst USERS_DISPLAY_NUMBER_OVER_LIMIT = 5\r\n\r\nexport const EmojiReactionPopupContent: React.FC<Props> = ({users}) => {\r\n    const {t} = useLocalizationState()\r\n\r\n    const [showExtraUsers, setShowExtraUsers] = useState(false)\r\n\r\n    const toggleShowExtraUsers = useCallback(() => {\r\n        setShowExtraUsers(state => !state)\r\n    }, [])\r\n\r\n    const [displayedUsers, extraDisplayedUsers] = useMemo(() => {\r\n        const numberToDisplay = users.length > MAX_USERS_DISPLAY_NUMBER\r\n            ? USERS_DISPLAY_NUMBER_OVER_LIMIT\r\n            : users.length\r\n        return [\r\n            users.slice(0, numberToDisplay),\r\n            users.slice(numberToDisplay),\r\n        ]\r\n    }, [users])\r\n\r\n    const extraUsersCount = String(extraDisplayedUsers.length)\r\n    const titleClassName = tcn('mt-2 text-sm/[18px] font-semibold text-main-secondary')\r\n    return (\r\n        <>\r\n            <h3 className=\"m-0 text-base/[17px] font-semibold text-black\">\r\n                {t.CHAT_CENTER.message_reactions_users_list_title()}\r\n            </h3>\r\n            {displayedUsers.map(({userId, displayName}) => (\r\n                <div key={userId} className={titleClassName}>\r\n                    {displayName}\r\n                </div>\r\n            ))}\r\n            {showExtraUsers && (\r\n                extraDisplayedUsers.map(({userId, displayName}) => (\r\n                    <div key={userId} className={titleClassName}>\r\n                        {displayName}\r\n                    </div>\r\n                ))\r\n            )}\r\n            {!showExtraUsers && !!extraDisplayedUsers.length && (\r\n                <Button\r\n                    enabledInOffline\r\n                    onClick={toggleShowExtraUsers}\r\n                    className=\"mt-2 cursor-pointer border-none bg-none p-0 text-sm/[18px] font-semibold text-main-secondary\"\r\n                    data-testid=\"expand-reaction-users-button\"\r\n                >\r\n                    {t.CHAT_CENTER.message_reactions_expand_users_button_text(extraUsersCount)}\r\n                </Button>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React, {useCallback, useMemo} from 'react'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useUserDetails} from '@bpinc/ad-user-details-state-context'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {assertDefined, isDefined} from '@bpinc/lib-types-helpers'\r\nimport {Button, Popup} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport {useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport {IconThumbUp} from '../../../images'\r\nimport {EmojiReactionPopupContent} from './EmojiReactionPopupContent'\r\n\r\n\r\ntype EmojiReactionIndicatorProps = {\r\n    emoji: string\r\n    userIds: string[]\r\n    messageId: string\r\n}\r\n\r\nexport const SPECIAL_EMOJI_LIKE_CHARACTER = 'L'\r\n\r\nexport const EmojiReactionIndicator: React.FC<EmojiReactionIndicatorProps> = ({emoji, userIds, messageId}) => {\r\n    const userDetails = useUserDetails()\r\n    const {formatFullName} = useFormatting()\r\n    const {\r\n        userId: selfUserId,\r\n        firstName: selfFirstName,\r\n        lastName: selfLastName,\r\n    } = useSessionState()\r\n    const {removeReactionOnMessage} = useGroupChatStateMethods()\r\n    const {groupChatId} = useGroupChatUIParams()\r\n\r\n    assertDefined(selfUserId)\r\n    assertDefined(groupChatId)\r\n\r\n    const reactedBySelf = userIds.includes(selfUserId)\r\n    const isSpecialLikeEmoji = emoji === SPECIAL_EMOJI_LIKE_CHARACTER\r\n\r\n    const allUsers = useMemo(() => {\r\n        return userIds.map(userId => {\r\n            if (userId === selfUserId) {\r\n                const displayName = formatFullName(selfFirstName, selfLastName)\r\n                return {userId, displayName}\r\n            } else {\r\n                const userData = userDetails[userId]?.data\r\n                if (userData) {\r\n                    const displayName = formatFullName(userData.firstName, userData.lastName)\r\n                    return {userId, displayName}\r\n                }\r\n            }\r\n        }).filter(isDefined)\r\n    }, [userIds, selfUserId, formatFullName, selfFirstName, selfLastName, userDetails])\r\n\r\n    const reactionButtonClickHandler = useCallback(() => {\r\n        if (reactedBySelf) {\r\n            removeReactionOnMessage({chatId: groupChatId, messageId})\r\n        }\r\n    }, [reactedBySelf, removeReactionOnMessage, groupChatId, messageId])\r\n\r\n    if (!allUsers.length) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <Popup\r\n            hoverable\r\n            mode=\"hover\"\r\n            contentClassName=\"border-chat-center-emoji-popup-border p-3 !shadow-none\"\r\n            data-testid=\"message-emoji-reaction-popup\"\r\n            content={\r\n                <EmojiReactionPopupContent users={allUsers} />\r\n            }\r\n            delay={300}\r\n        >\r\n            <Button\r\n                enabledInOffline\r\n                className={tcn('flex cursor-default select-none border-none p-0 leading-[16px]', {'cursor-pointer': reactedBySelf})}\r\n                onClick={reactionButtonClickHandler}\r\n                data-testid=\"certain-emoji-reaction-button\"\r\n            >\r\n                {isSpecialLikeEmoji\r\n                    ? (\r\n                        //<Svg src={iconThumbsUp} className=\"h-4\" />\r\n                        <IconThumbUp className=\"h-4\" />\r\n                    )\r\n                    : (\r\n                        <span className=\"text-base\">{emoji}</span>\r\n                    )\r\n                }\r\n                <span className=\"text-sm text-chat-center-message-text-color\">{allUsers.length}</span>\r\n            </Button>\r\n        </Popup>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {useChatMessageSanitizer} from '@bpinc/ad-interaction-state-hooks'\r\nimport type {AgentChatAttachment} from '@bpinc/ad-transport-types'\r\nimport {useUserDetailsSelector} from '@bpinc/ad-user-details-state-context'\r\nimport {formatDate} from '@bpinc/lib-helpers'\r\nimport {useMsTeamsAttachmentsParser} from '@bpinc/lib-interaction-ui-hooks'\r\nimport {IconDelivered, IconRead} from '@bpinc/lib-jskit-ui'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {Button} from '@bpinc/lib-ui-elements'\r\nimport type {GroupChatMessage, Reaction, SimplifiedMessage} from '@bpinc/state-group-chat-types'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {EmojiReactionIndicator} from './EmojiReactionIndicator'\r\n\r\n\r\ntype Props = {\r\n    messageId: string\r\n    userId: string\r\n    sendTime: number\r\n    content: string\r\n    firstName?: string\r\n    lastName?: string\r\n    attachments?: AgentChatAttachment[]\r\n    reactions?: Reaction[]\r\n    replyOnMessage?: SimplifiedMessage\r\n    ariaStatusLabel?: string\r\n    className?: string\r\n    showName?: boolean\r\n    closable?: boolean\r\n    nestingLayer?: number\r\n    onClose?: () => void\r\n} & Partial<Pick<GroupChatMessage, 'direction' | 'isDelivered' | 'isRead'>>\r\n\r\nexport const MessageContentCard: React.FC<Props> = props => {\r\n    const {\r\n        direction,\r\n        isDelivered,\r\n        isRead,\r\n        messageId,\r\n        userId,\r\n        sendTime,\r\n        content,\r\n        firstName: messageFirstName,\r\n        lastName: messageLastName,\r\n        attachments,\r\n        reactions = [],\r\n        replyOnMessage,\r\n        className,\r\n        ariaStatusLabel,\r\n        showName = false,\r\n        closable = false,\r\n        nestingLayer = 0,\r\n        onClose,\r\n    } = props\r\n\r\n    const {t} = useLocalizationState()\r\n    const {formatFullName} = useFormatting()\r\n    const userDetailsFirstName = useUserDetailsSelector(userId, data => data?.firstName)\r\n    const userDetailsLastName = useUserDetailsSelector(userId, data => data?.lastName)\r\n\r\n    const firstName = messageFirstName ?? userDetailsFirstName\r\n    const lastName = messageLastName ?? userDetailsLastName\r\n    const displayName = formatFullName(firstName, lastName)\r\n\r\n    const messageWithAttachments = useMsTeamsAttachmentsParser({\r\n        message: content,\r\n        attachments,\r\n    })\r\n\r\n    const sanitizedMessage = useChatMessageSanitizer({message: messageWithAttachments})\r\n\r\n    const textMessageNode = useMemo(\r\n        function memoizeChatMessageInnerHTML() {\r\n            // Disabled as it is already memoized\r\n            // eslint-disable-next-line\r\n            const innerHTML = {__html: sanitizedMessage}\r\n            return (\r\n                <div\r\n                    className={tcn(\r\n                        `text-base [&>blockquote]:relative [&>blockquote]:mx-0 [&>blockquote]:my-[0.5em] [&>blockquote]:px-3\r\n                        [&>blockquote]:py-[0.5em] [&>blockquote]:before:absolute [&>blockquote]:before:inset-y-0 \r\n                        [&>blockquote]:before:left-0 [&>blockquote]:before:w-0.5 [&>blockquote]:before:bg-primary-legacy\r\n                        [&>table]:border-collapse [&>td]:border [&>td]:border-gray-400`,\r\n                    )}\r\n                    dangerouslySetInnerHTML={innerHTML}\r\n                />\r\n            )\r\n        },\r\n        [sanitizedMessage],\r\n    )\r\n\r\n    return (\r\n        <div\r\n            className={tcn(`relative inline-block whitespace-normal break-all rounded border\r\n                border-chat-center-in-message-bg bg-chat-center-in-message-bg p-2`, className)}\r\n        >\r\n            <div className=\"flex justify-between pb-1 text-sm leading-[16px]\">\r\n                <div className={tcn('flex justify-start', {'w-full justify-end': direction === 'out'})}>\r\n                    {showName && (\r\n                        <span\r\n                            className=\"mr-2 text-neutral-fade\"\r\n                            data-testid=\"party-display-name\"\r\n                        >\r\n                            {displayName}\r\n                        </span>\r\n                    )}\r\n                    <span\r\n                        className=\"text-neutral-fade [&:not(:last-child)]:mr-2\"\r\n                        data-testid=\"message-time\"\r\n                    >\r\n                        {formatDate(sendTime, 'h:mm A')}\r\n                    </span>\r\n                    {direction === 'out' && isDelivered && !isRead && <IconDelivered className=\"[&:not(:last-child)]:mr-2\" />}\r\n                    {direction === 'out' && isRead && <IconRead className=\"[&:not(:last-child)]:mr-2 [&_path]:fill-primary-600\" />}\r\n                    {reactions.map(({emoji, userIds}) => (\r\n                        <div className=\"[&:not(:last-child)]:mr-2\" key={emoji}>\r\n                            <EmojiReactionIndicator\r\n                                key={emoji}\r\n                                emoji={emoji}\r\n                                userIds={userIds}\r\n                                messageId={messageId}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"flex justify-end [&:not(:empty)]:ml-4\">\r\n                    {closable && (\r\n                        <Button\r\n                            enabledInOffline\r\n                            semanticIcon=\"close\"\r\n                            onClick={onClose}\r\n                            className=\"cursor-pointer border-none bg-none p-0\"\r\n                            iconClassName=\"flex justify-end text-[--c-close-message-btn-text] text-lg/[14px]\r\n                            m-0 opacity-100 transition-opacity duration-300 ease-in-out hover:opacity-70\"\r\n                            tooltip={t.CHAT_CENTER.selected_reply_message_close_button_tooltip()}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {replyOnMessage && !nestingLayer && (\r\n                <MessageContentCard\r\n                    showName\r\n                    className=\"mx-6 mb-1 mt-0 border !border-white !bg-white shadow\"\r\n                    messageId={replyOnMessage.messageId}\r\n                    userId={replyOnMessage.userId}\r\n                    content={replyOnMessage.content}\r\n                    sendTime={replyOnMessage.sendTime}\r\n                    nestingLayer={nestingLayer + 1}\r\n                />\r\n            )}\r\n            <div\r\n                className=\"text-chat-center-message-text-color\"\r\n                aria-live=\"polite\"\r\n                role=\"status\"\r\n                aria-label={ariaStatusLabel}\r\n                data-testid=\"message-content\"\r\n            >\r\n                {textMessageNode}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {assertGroupChatMessage} from '@bpinc/state-group-chat-types'\r\nimport {useGroupChatItem} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport {MessageContentCard} from './messages/MessageContentCard'\r\n\r\n\r\ntype Props = {\r\n    messageId: string\r\n    onRemoveReply: () => void\r\n}\r\n\r\nexport const ReplyingMessagePreview: React.FC<Props> = ({messageId, onRemoveReply}) => {\r\n    const messages = useGroupChatItem()?.messages || []\r\n\r\n    const message = messages.find(msg => msg.type !== 'system' && msg.messageId === messageId)\r\n    if (!message) {\r\n        return null\r\n    }\r\n    assertGroupChatMessage(message)\r\n\r\n    return (\r\n        <MessageContentCard\r\n            showName\r\n            closable\r\n            className=\"my-2 ml-0 mr-[auto] shadow\"\r\n            onClose={onRemoveReply}\r\n            messageId={message.messageId}\r\n            userId={message.userId}\r\n            sendTime={message.sendTime}\r\n            content={message.content}\r\n            firstName={message.firstName}\r\n            lastName={message.lastName}\r\n            reactions={message.reactions}\r\n            attachments={message.attachments}\r\n        />\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {memo, useCallback, useEffect, useRef} from 'react'\r\n\r\nimport {useMessageUpdater} from '@bpinc/lib-chat-ui'\r\nimport {isHTMLDivElement} from '@bpinc/lib-html-utils'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport {Button, ContentEditable, EmojiButton} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport type {GroupChatMessage} from '@bpinc/state-group-chat-types'\r\nimport {useGroupChatUIParams, useMessageParams, useSetMessageParams} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {IconCancel, IconSave} from '../../../images'\r\nimport {ReplyingMessagePreview} from '../ReplyingMessagePreview'\r\n\r\n\r\nconst EDIT_MESSAGE_TEXT_AREA_DATA_KEY = 'edit-message-text-area'\r\n\r\ninterface Props {\r\n    message: GroupChatMessage\r\n}\r\n\r\nexport const EditMessage: FC<Props> = memo(function EditMessage({message}) {\r\n    const {direction, content, replyOnMessage} = message\r\n    const {t} = useLocalizationState()\r\n    const {updateMessage} = useGroupChatStateMethods()\r\n    const {openModal} = useModalsStateMethods()\r\n    const {groupChatId} = useGroupChatUIParams()\r\n    const {editMessage} = useMessageParams()\r\n    const setMessageParams = useSetMessageParams()\r\n\r\n    const textAreaRef = useRef(null)\r\n    const changedRef = useRef(false)\r\n\r\n    const editMessageId = editMessage?.messageId\r\n    const editMessageContent = editMessage?.content\r\n    const editReplyMessageId = editMessage?.replyOnMessageId ?? undefined\r\n\r\n    assertDefined(groupChatId)\r\n    assertDefined(editMessageId)\r\n    assertDefined(editMessageContent)\r\n\r\n    const setMessageContent = useCallback((value: React.SetStateAction<string>) => {\r\n        setMessageParams(draft => {\r\n            if (draft.editMessage) {\r\n                draft.editMessage.content = typeof value === 'function'\r\n                    ? value(draft.editMessage.content)\r\n                    : value\r\n            }\r\n        })\r\n    }, [setMessageParams])\r\n\r\n    const textAreaSelector = `[data-testid=\"${EDIT_MESSAGE_TEXT_AREA_DATA_KEY}\"]`\r\n    const updateMessageContent = useMessageUpdater(setMessageContent, textAreaSelector)\r\n    const onSelectEmoji = updateMessageContent((emoji: string) => emoji)\r\n\r\n    const removeReply = useCallback(() => {\r\n        setMessageParams(draft => {\r\n            if (draft.editMessage) {\r\n                delete draft.replyOnMessageId\r\n            }\r\n        })\r\n    }, [setMessageParams])\r\n\r\n    const resetEditState = useCallback(() => {\r\n        setMessageParams(draft => {\r\n            delete draft.editMessage\r\n        })\r\n    }, [setMessageParams])\r\n\r\n    const showDiscardChangesConfirmationDialog = useCallback(() => {\r\n        openModal({\r\n            dataKey: 'chat-discard-message-edit-changes-confirmation-dialog',\r\n            body: t.CHAT_CENTER.edit_message_discard_changes_confirmation_text(),\r\n            actions: {\r\n                ok: {\r\n                    title: t.CHAT_CENTER.edit_message_discard_changes_positive_button_text(),\r\n                    action: resetEditState,\r\n                },\r\n                cancel: {\r\n                    title: t.CHAT_CENTER.edit_message_discard_changes_negative_button_text(),\r\n                },\r\n            },\r\n        })\r\n    }, [t, openModal, resetEditState])\r\n\r\n    const cancelEditing = useCallback(() => {\r\n        if (changedRef.current) {\r\n            showDiscardChangesConfirmationDialog()\r\n        } else {\r\n            resetEditState()\r\n        }\r\n    }, [showDiscardChangesConfirmationDialog, resetEditState])\r\n\r\n    const saveEditing = useCallback(() => {\r\n        updateMessage({\r\n            chatId: groupChatId,\r\n            messageId: editMessageId,\r\n            content: editMessageContent,\r\n            replyOnMessageId: editReplyMessageId,\r\n        })\r\n        resetEditState()\r\n    }, [\r\n        groupChatId,\r\n        editMessageId,\r\n        editMessageContent,\r\n        editReplyMessageId,\r\n        updateMessage,\r\n        resetEditState,\r\n    ])\r\n\r\n    const handleTextareaChange = useCallback((event: React.FormEvent<HTMLElement>, value = '') => {\r\n        if (isHTMLDivElement(event.target)) {\r\n            event.target.scrollTop = event.target.scrollHeight\r\n        }\r\n        setMessageParams(draft => {\r\n            if (draft.editMessage) {\r\n                draft.editMessage.content = value\r\n            }\r\n        })\r\n    }, [setMessageParams])\r\n\r\n    useEffect(() => {\r\n        changedRef.current =\r\n            content !== editMessageContent ||\r\n            replyOnMessage !== editReplyMessageId\r\n    }, [content, replyOnMessage, editMessageContent, editReplyMessageId])\r\n\r\n    const buttonStyles = `transition-opacity duration-300 ease-in-out hover:opacity-70'`\r\n\r\n    return (\r\n        <div\r\n            className={tcn('relative flex items-start px-0 py-2', {'items-end justify-end': direction === 'out'})}\r\n            aria-label={t.ACCESSIBILITY.internal_chat_message()}\r\n            data-testid=\"message-item\"\r\n            data-message=\"true\"\r\n            data-edit-message=\"true\"\r\n            data-incoming={direction === 'in' ? 'true' : undefined}\r\n            data-outgoing={direction === 'out' ? 'true' : undefined}\r\n        >\r\n            <div\r\n                className={tcn(`relative w-full max-w-[70%]\r\n                    whitespace-normal break-all rounded border border-chat-center-in-message-bg bg-chat-center-in-message-bg p-2`, {\r\n                    'border-chat-center-out-message-border bg-white': direction === 'out',\r\n                })}\r\n            >\r\n                {editReplyMessageId && (\r\n                    <ReplyingMessagePreview messageId={editReplyMessageId} onRemoveReply={removeReply} />\r\n                )}\r\n                <ContentEditable\r\n                    autoFocus\r\n                    ref={textAreaRef}\r\n                    onChange={handleTextareaChange}\r\n                    className=\"pb-2 [&:not(:first-child)]:mt-2\"\r\n                    data-testid={EDIT_MESSAGE_TEXT_AREA_DATA_KEY}\r\n                    value={editMessageContent}\r\n                />\r\n                <div className=\"flex justify-end gap-2\">\r\n                    <EmojiButton\r\n                        textAreaRef={textAreaRef}\r\n                        onSelectEmoji={onSelectEmoji}\r\n                        tooltip={t.INTERNAL_CHAT.chat_addEmoji_button_tooltip()}\r\n                    />\r\n                    <Button\r\n                        transparent\r\n                        enabledInOffline\r\n                        className={tcn(buttonStyles, 'ml-7')}\r\n                        onClick={cancelEditing}\r\n                        tooltip={t.CHAT_CENTER.edit_message_cancel_button_tooltip()}\r\n                        iconClassName=\"w-4.5 h-4.5\"\r\n                    >\r\n                        <IconCancel />\r\n                    </Button>\r\n                    <Button\r\n                        transparent\r\n                        className={buttonStyles}\r\n                        onClick={saveEditing}\r\n                        iconClassName=\"w-4.5 h-4.5\"\r\n                        tooltip={t.CHAT_CENTER.edit_message_save_button_tooltip()}\r\n                    >\r\n                        <IconSave />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React, {useCallback, useMemo} from 'react'\r\n\r\nimport {useBoolean} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport {Button, EmojiButton, PopupButton} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport {useGroupChatUIParams, useSetMessageParams} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {IconPin, IconReply, IconThumbUp} from '../../../images'\r\nimport {SPECIAL_EMOJI_LIKE_CHARACTER} from './EmojiReactionIndicator'\r\n\r\n\r\ntype RegularMessageHoverControlsProps = {\r\n    messageId: string\r\n    direction: 'in' | 'out'\r\n    messageContent: string\r\n    replyMessageId?: string\r\n    setControlsFixation: (state: boolean) => void\r\n    className?: string\r\n    style?: React.CSSProperties\r\n}\r\n\r\nexport const RegularMessageHoverControls = React.forwardRef<HTMLDivElement, RegularMessageHoverControlsProps>(({\r\n    messageId,\r\n    direction,\r\n    messageContent,\r\n    replyMessageId,\r\n    className,\r\n    style,\r\n    setControlsFixation,\r\n}, ref) => {\r\n    const {value: show, toggle: toggleShow} = useBoolean()\r\n    const {t} = useLocalizationState()\r\n    const {reactOnMessage, pinMessage, deleteMessage} = useGroupChatStateMethods()\r\n    const setMessageParams = useSetMessageParams()\r\n    const {groupChatId} = useGroupChatUIParams()\r\n\r\n    assertDefined(groupChatId)\r\n\r\n    const likeMessage = useCallback(() => {\r\n        reactOnMessage({\r\n            chatId: groupChatId,\r\n            messageId,\r\n            emoji: SPECIAL_EMOJI_LIKE_CHARACTER,\r\n        })\r\n    }, [groupChatId, messageId, reactOnMessage])\r\n\r\n    const messageEmojiReact = useCallback((emoji: string) => {\r\n        reactOnMessage({\r\n            chatId: groupChatId,\r\n            messageId,\r\n            emoji,\r\n        })\r\n    }, [groupChatId, messageId, reactOnMessage])\r\n\r\n    const replyCallback = useCallback(() => {\r\n        setMessageParams(draft => { draft.replyOnMessageId = messageId })\r\n    }, [messageId, setMessageParams])\r\n\r\n    const pinMessageCallback = useCallback(() => {\r\n        pinMessage({chatId: groupChatId, messageId})\r\n    }, [groupChatId, messageId, pinMessage])\r\n\r\n    const enterEditMode = useCallback(() => {\r\n        setMessageParams(draft => {\r\n            draft.editMessage = {\r\n                messageId,\r\n                content: messageContent,\r\n                replyOnMessageId: replyMessageId,\r\n            }\r\n        })\r\n    }, [messageId, messageContent, replyMessageId, setMessageParams])\r\n\r\n    const deleteMessageCallback = useCallback(() => {\r\n        deleteMessage({chatId: groupChatId, messageId})\r\n    }, [groupChatId, messageId, deleteMessage])\r\n\r\n    const options = useMemo(() => {\r\n        return [\r\n            {children: t.CHAT_CENTER.message_enter_edit_mode_button_text(), onClick: enterEditMode},\r\n            {children: t.CHAT_CENTER.message_delete_button_text(), onClick: deleteMessageCallback},\r\n        ]\r\n    }, [t.CHAT_CENTER, enterEditMode, deleteMessageCallback])\r\n\r\n    const messageHoverControlsClassName = `h-4 w-4 transition-opacity duration-300 hover:opacity-70`\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={tcn(`flex flex-row flex-nowrap gap-2 rounded border border-chat-center-emoji-popup-border bg-white px-2 py-1.5 shadow-none`, className)}\r\n            style={style}\r\n        >\r\n            <Button\r\n                onClick={likeMessage}\r\n                className={messageHoverControlsClassName}\r\n                tooltip={t.CHAT_CENTER.message_like_button_tooltip()}\r\n                clickThrottle={500}\r\n                data-testid=\"like-message-button\"\r\n            >\r\n                <IconThumbUp />\r\n            </Button>\r\n            <EmojiButton\r\n                closeOnSelect\r\n                onSelectEmoji={messageEmojiReact}\r\n                onToggle={setControlsFixation}\r\n                className={messageHoverControlsClassName}\r\n                iconClassName=\"w-4 h-4\"\r\n                tooltip={t.CHAT_CENTER.message_reactions_button_tooltip()}\r\n                data-testid=\"show-message-reactions-button\"\r\n            />\r\n            <Button\r\n                enabledInOffline\r\n                onClick={replyCallback}\r\n                className={messageHoverControlsClassName}\r\n                tooltip={t.CHAT_CENTER.message_reply_button_tooltip()}\r\n                clickThrottle={500}\r\n                data-testid=\"reply-message-button\"\r\n            >\r\n                <IconReply />\r\n            </Button>\r\n            <Button\r\n                onClick={pinMessageCallback}\r\n                className={messageHoverControlsClassName}\r\n                tooltip={t.CHAT_CENTER.message_pin_button_tooltip()}\r\n                clickThrottle={500}\r\n                data-testid=\"pin-message-button\"\r\n            >\r\n                <IconPin />\r\n            </Button>\r\n            {direction === 'out' && (\r\n                <PopupButton\r\n                    custom\r\n                    enabledInOffline\r\n                    show={show}\r\n                    toggleShow={toggleShow}\r\n                    options={options}\r\n                    className={tcn(messageHoverControlsClassName, 'relative flex justify-center text-xl/[6px]')}\r\n                >\r\n                    ...\r\n                </PopupButton>\r\n            )}\r\n        </div>\r\n    )\r\n})\r\n","import type {FC} from 'react'\r\n\r\nimport {useGetAvatarUrl} from '@bpinc/ad-contacts-state-hooks'\r\nimport {useUserDetailsById} from '@bpinc/ad-user-details-state-context'\r\nimport {Avatar} from '@bpinc/lib-avatar-ui'\r\n\r\n\r\ninterface UserAvatarProps {\r\n    userId: string\r\n    firstName: string | undefined\r\n    lastName: string | undefined\r\n}\r\n\r\nexport const UserAvatar: FC<UserAvatarProps> = ({userId, firstName, lastName}) => {\r\n    const userDetails = useUserDetailsById(userId)\r\n    const getAvatarUrl = useGetAvatarUrl()\r\n    const userDetailsData = userDetails?.data\r\n\r\n    const userPhotoUrl = getAvatarUrl({userId})\r\n\r\n    return (\r\n        <Avatar\r\n            className=\"m-0 mr-1.5\"\r\n            type=\"user\"\r\n            size=\"28\"\r\n            firstName={firstName || userDetailsData?.firstName}\r\n            lastName={lastName || userDetailsData?.lastName}\r\n            url={userPhotoUrl}\r\n        />\r\n    )\r\n}\r\n","import React, {useCallback, useRef, useState} from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {SelectionItem, ShowOnHover} from '@bpinc/lib-ui-elements'\r\nimport type {GroupChatMessage} from '@bpinc/state-group-chat-types'\r\nimport {useGroupChatItem} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {ScrollerNode} from '../../../types'\r\nimport {MarkAsReadSensor} from './MarkAsReadSensor'\r\nimport {MessageContentCard} from './MessageContentCard'\r\nimport {RegularMessageHoverControls} from './RegularMessageHoverControls'\r\nimport {UserAvatar} from './UserAvatar'\r\n\r\n\r\nconst MIN_CONTROLS_POPUP_MARGIN = 6\r\n\r\ninterface Props {\r\n    message: GroupChatMessage\r\n    scrollerNode: ScrollerNode\r\n}\r\n\r\nexport const RegularMessage: React.FC<Props> = React.memo(function RegularMessage({\r\n    message,\r\n    scrollerNode,\r\n}) {\r\n    const {\r\n        messageId,\r\n        direction = 'in',\r\n        content,\r\n        sendTime,\r\n        attachments,\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        reactions,\r\n        replyOnMessage,\r\n    } = message\r\n    const {t} = useLocalizationState()\r\n\r\n    const {chatId, disabled} = useGroupChatItem()!\r\n\r\n    const messageBubbleRef = useRef<HTMLDivElement>(null)\r\n\r\n    const ariaStatus = direction === 'in'\r\n        ? t.ACCESSIBILITY.chat_center_message_status_incoming_message()\r\n        : t.ACCESSIBILITY.chat_center_message_status_outgoing_message()\r\n\r\n    const [actionsPopupFixation, setActionsPopupFixation] = useState(false)\r\n    const showControls = disabled || actionsPopupFixation || undefined\r\n\r\n    const [controlsStyle, setControlsStyle] = useState<React.CSSProperties>({})\r\n\r\n    const mouseEnterXRef = useRef(0)\r\n    /*\r\n        Hover controls popup should appear near the user mouse but bounded by message bubble area\r\n     */\r\n    const hoverControlsRefCallback = useCallback((element: HTMLDivElement | null) => {\r\n        if (element && messageBubbleRef.current) {\r\n            const {x, width: containerWidth} = messageBubbleRef.current.getBoundingClientRect()\r\n            const {width} = element.getBoundingClientRect()\r\n            if (direction === 'in') {\r\n                let calculatedLeft = mouseEnterXRef.current - x - width / 2\r\n                if (calculatedLeft + width > containerWidth - MIN_CONTROLS_POPUP_MARGIN) {\r\n                    calculatedLeft -= calculatedLeft + width - containerWidth + MIN_CONTROLS_POPUP_MARGIN\r\n                }\r\n                setControlsStyle({\r\n                    left: Math.max(calculatedLeft, MIN_CONTROLS_POPUP_MARGIN),\r\n                })\r\n            } else if (direction === 'out') {\r\n                let calculatedRight = x + containerWidth - mouseEnterXRef.current - width / 2\r\n                if (calculatedRight + width > containerWidth - MIN_CONTROLS_POPUP_MARGIN) {\r\n                    calculatedRight -= calculatedRight + width - containerWidth + MIN_CONTROLS_POPUP_MARGIN\r\n                }\r\n                setControlsStyle({\r\n                    right: Math.max(calculatedRight, MIN_CONTROLS_POPUP_MARGIN),\r\n                })\r\n            }\r\n        }\r\n    }, [direction])\r\n\r\n    const chatItem = useGroupChatItem()\r\n    const isUnread = chatItem?.unreadMessages.some(m => m.messageId === messageId)\r\n\r\n    const messageContent = (\r\n        <>\r\n            {direction === 'in' && <UserAvatar firstName={firstName} lastName={lastName} userId={userId} />}\r\n            <SelectionItem\r\n                focusOnSelection\r\n                touchedOnly\r\n                itemId={messageId}\r\n                className=\"relative z-0\"\r\n                ref={messageBubbleRef}\r\n            >\r\n                <MessageContentCard\r\n                    className={tcn(\r\n                        `relative inline-block\r\n                        whitespace-normal break-all rounded border p-2\r\n                        border-on-secondary text-primary-on-primary before:absolute\r\n                        before:-bottom-px before:z-[-1] before:h-0 before:w-0 before:rounded-b-[33%]\r\n                        before:border-b-4 before:border-t-0\r\n                        before:border-transparent before:border-b-secondary-100 before:content-[''] after:absolute\r\n                        after:bottom-0 after:z-0 after:h-0 after:w-0 after:rounded-b-[33%] after:border-b-[9px]\r\n                        after:border-t-0 after:border-transparent after:content-[''] hover:text-primary-on-primary`,\r\n                        {\r\n                            // we could use rounded-bl-md instead of rounded-bl-[8px],\r\n                            // however we couldn't, the layout goes break down\r\n                            [`rounded-bl-[8px] bg-secondary-50\r\n                            before:left-[-5px] before:border-l-[9px] before:border-r-0\r\n                            after:left-[-5px] after:border-l-[8px]\r\n                            after:border-r-0 after:border-b-secondary-50`]: direction === 'in',\r\n                            [`rounded-br-[8px] bg-primary-background\r\n                            before:right-[-5px] before:border-l-0 before:border-r-[9px]\r\n                            after:right-[-5px] after:border-l-0\r\n                            after:border-r-[8px] after:border-b-neutral-0`]: direction === 'out',\r\n                        },\r\n                    )}\r\n                    direction={direction}\r\n                    isRead={message.isRead}\r\n                    isDelivered={message.isDelivered}\r\n                    messageId={messageId}\r\n                    userId={userId}\r\n                    sendTime={sendTime}\r\n                    content={content}\r\n                    firstName={firstName}\r\n                    lastName={lastName}\r\n                    reactions={reactions}\r\n                    attachments={attachments}\r\n                    replyOnMessage={replyOnMessage}\r\n                    showName={direction === 'in'}\r\n                    ariaStatusLabel={ariaStatus}\r\n                />\r\n            </SelectionItem>\r\n        </>\r\n    )\r\n\r\n    const onMouseEnter = useCallback((e: React.MouseEvent) => {\r\n        mouseEnterXRef.current = e.clientX\r\n    }, [])\r\n\r\n    return (\r\n        <div className={tcn('relative flex items-start py-2', {'items-end justify-end': direction === 'out'})}>\r\n            <ShowOnHover\r\n                show={showControls}\r\n                elementContainerRef={messageBubbleRef}\r\n                elementToShow={\r\n                    <RegularMessageHoverControls\r\n                        ref={hoverControlsRefCallback}\r\n                        style={controlsStyle}\r\n                        className=\"absolute top-0 -translate-y-1/2\"\r\n                        messageId={messageId}\r\n                        direction={direction}\r\n                        messageContent={content}\r\n                        replyMessageId={replyOnMessage?.messageId}\r\n                        setControlsFixation={setActionsPopupFixation}\r\n                    />\r\n                }\r\n                onMouseEnter={onMouseEnter}\r\n                className={tcn('flex max-w-[70%]', {'items-end': direction === 'in'})}\r\n                aria-label={t.ACCESSIBILITY.internal_chat_message()}\r\n                data-testid=\"message-item\"\r\n                data-message=\"true\"\r\n                data-text-message=\"true\"\r\n            >\r\n                {isUnread\r\n                    ? (\r\n                        <MarkAsReadSensor chatId={chatId} messageId={messageId} scrollerNode={scrollerNode}>\r\n                            {messageContent}\r\n                        </MarkAsReadSensor>\r\n                    )\r\n                    : messageContent\r\n                }\r\n            </ShowOnHover>\r\n        </div>\r\n    )\r\n})\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {SystemMessageUI} from '@bpinc/lib-chat-ui'\r\nimport {SelectionItem} from '@bpinc/lib-ui-elements'\r\nimport type {GroupChatSystemMessage} from '@bpinc/state-group-chat-types'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ninterface Props {\r\n    message: GroupChatSystemMessage\r\n}\r\n\r\nexport const SystemMessage: React.FC<Props> = ({message}) => {\r\n    const messageContent = useSystemMessageContent(message)\r\n\r\n    return (\r\n        <SelectionItem\r\n            focusOnSelection\r\n            touchedOnly\r\n            itemId={message.messageId}\r\n            data-testid=\"message-item\"\r\n            data-system=\"true\"\r\n            className=\"inline-block\"\r\n        >\r\n            <SystemMessageUI>{messageContent}</SystemMessageUI>\r\n        </SelectionItem>\r\n    )\r\n}\r\n\r\nfunction useSystemMessageContent(message: GroupChatSystemMessage): string {\r\n    const {t} = useLocalizationState()\r\n    const {formatFullName} = useFormatting()\r\n\r\n    return useMemo(() => {\r\n        switch (message.event) {\r\n            case 'chat_created': {\r\n                const {addedUsers, creatorFirstName, creatorLastName} = message\r\n\r\n                const creatorDisplayName = formatFullName(creatorFirstName, creatorLastName)\r\n                const firstUserDisplayName = addedUsers.length\r\n                    ? formatFullName(addedUsers[0].firstName, addedUsers[0].lastName)\r\n                    : ''\r\n                const otherUsersCount = String(addedUsers.length - 1)\r\n\r\n                return addedUsers.length === 1\r\n                    ? t.CHAT_CENTER.sys_message_personal_chat_created_text(creatorDisplayName, firstUserDisplayName)\r\n                    : t.CHAT_CENTER.sys_message_group_chat_created_text(\r\n                        creatorDisplayName,\r\n                        firstUserDisplayName,\r\n                        otherUsersCount,\r\n                    )\r\n            }\r\n            case 'member_left': {\r\n                const {firstName, lastName} = message\r\n                const memberDisplayName = formatFullName(firstName, lastName)\r\n\r\n                return t.CHAT_CENTER.sys_message_member_left_text(memberDisplayName)\r\n            }\r\n            case 'chat_renamed': {\r\n                const {firstName, lastName, newTitle} = message\r\n                const actorDisplayName = formatFullName(firstName, lastName)\r\n\r\n                return t.CHAT_CENTER.sys_message_chat_renamed(actorDisplayName, newTitle)\r\n            }\r\n            case 'members_added': {\r\n                const {firstName, lastName, addedUsers} = message\r\n\r\n                const actorDisplayName = formatFullName(firstName, lastName)\r\n                const firstUserDisplayName = addedUsers.length\r\n                    ? formatFullName(addedUsers[0].firstName, addedUsers[0].lastName)\r\n                    : ''\r\n                const otherUsersCount = String(addedUsers.length - 1)\r\n\r\n                return addedUsers.length === 1\r\n                    ? t.CHAT_CENTER.sys_message_one_member_added_no_history(actorDisplayName, firstUserDisplayName)\r\n                    : t.CHAT_CENTER.sys_message_multiple_members_added_no_history(\r\n                        actorDisplayName,\r\n                        firstUserDisplayName,\r\n                        otherUsersCount,\r\n                    )\r\n            }\r\n            default:\r\n                //TODO: add message\r\n                return ''\r\n        }\r\n    }, [message, t, formatFullName])\r\n}\r\n","import type {FC} from 'react'\r\n\r\nimport type {UnreadMessage as UnreadMessageType} from '@bpinc/state-group-chat-types'\r\n\r\nimport {IconUnread} from '../../../images'\r\n\r\n\r\ninterface Props {\r\n    message: UnreadMessageType\r\n}\r\n\r\nexport const UnreadMessage: FC<Props> = ({message}) => {\r\n    return <div />\r\n\r\n    /**\r\n     * Konstantin Verbov (designer) asked to skip this UI for now. So now it is used as a scroll controller only.\r\n     * TODO: uncomment it when have approved UI for it;\r\n     */\r\n    return (\r\n        <div className=\"flex items-center\" data-testid=\"unread-message\">\r\n            <IconUnread />\r\n            <span className=\"ml-[19px] text-sm/[18px] text-chat-title\">\r\n                {message.content}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React, {memo} from 'react'\r\n\r\nimport {ErrorBoundary} from '@bpinc/lib-ui-elements'\r\nimport type {ComposedMessage} from '@bpinc/state-group-chat-types'\r\nimport {useMessageParams} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport type {ScrollerNode} from '../../types'\r\nimport {AnnouncementMessage} from './messages/AnnouncementMessage'\r\nimport {DateSeparator} from './messages/DateSeparator'\r\nimport {DeletedMessage} from './messages/DeletedMessage'\r\nimport {EditMessage} from './messages/EditMessage'\r\nimport {RegularMessage} from './messages/RegularMessage'\r\nimport {SystemMessage} from './messages/SystemMessage'\r\nimport {UnreadMessage} from './messages/UnreadMessage'\r\n\r\n\r\ninterface Props {\r\n    message: ComposedMessage\r\n    scrollerNode: ScrollerNode\r\n}\r\n\r\nexport const ChatMessage = memo<Props>(function ChatMessage({message, scrollerNode}) {\r\n    const editMessageId = useMessageParams().editMessage?.messageId\r\n\r\n    function renderMessage() {\r\n        if (typeof message === 'string') {\r\n            return <DateSeparator>{message}</DateSeparator>\r\n        }\r\n        if (message.type === 'system') {\r\n            return <SystemMessage message={message} />\r\n        }\r\n        if (message.type === 'unread') {\r\n            return <UnreadMessage message={message} />\r\n        }\r\n        if (message.isDeleted) {\r\n            return <DeletedMessage message={message} />\r\n        }\r\n        if (message.messageId === editMessageId) {\r\n            return <EditMessage message={message} />\r\n        }\r\n        if (message.type === 'announcement') {\r\n            return <AnnouncementMessage message={message} scrollerNode={scrollerNode} />\r\n        }\r\n        return <RegularMessage message={message} scrollerNode={scrollerNode} />\r\n    }\r\n\r\n    return (\r\n        <ErrorBoundary fallback={<DateSeparator>Broken message</DateSeparator>}>\r\n            {renderMessage()}\r\n        </ErrorBoundary>\r\n    )\r\n})\r\n","import React, {memo, useState} from 'react'\r\nimport type {FlatIndexLocationWithAlign, LocationOptions, VirtuosoHandle} from 'react-virtuoso'\r\nimport {Virtuoso} from 'react-virtuoso'\r\nimport {useSetAtom} from 'jotai'\r\n\r\nimport {useAsRef} from '@bpinc/lib-helpers'\r\nimport type {ComposedMessage} from '@bpinc/state-group-chat-types'\r\nimport {scrollerApiAtom} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport {useMessagesWithAuxilaryLabels} from '../../hooks/useMessagesWithAuxilaryLabels'\r\nimport {useScrollToBottomHandler} from '../../hooks/useScrollToBottomHandler'\r\nimport type {ScrollerNode} from '../../types'\r\nimport {ChatMessage} from './ChatMessage'\r\n\r\n\r\nconst LAST_MESSAGE_LOCATION: FlatIndexLocationWithAlign = {index: 'LAST'}\r\nconst VIEWPORT_INCREASE = 200 //Viewport increasing to prevent new messages from blinking\r\n\r\nfunction computeItemKey(index: number, message: ComposedMessage) {\r\n    return message instanceof Object ? message.messageId : `${message}_${index}`\r\n}\r\n\r\nexport const ChatMessagesVirtualization = memo(function ChatMessagesVirtualization() {\r\n    const [scrollerNode, setScrollerNode] = useState<ScrollerNode | Window>(null)\r\n\r\n    const messages = useMessagesWithAuxilaryLabels()\r\n    const messagesRef = useAsRef(messages)\r\n    const setScrollerApi = useSetAtom(scrollerApiAtom)\r\n\r\n    const handleScrollToBottom = useScrollToBottomHandler()\r\n\r\n    const propagateScrollerApi = (virtuoso: VirtuosoHandle | null) => {\r\n        if (!virtuoso) {\r\n            return\r\n        }\r\n        setScrollerApi({\r\n            scrollToMessage: (messageId: string, options: LocationOptions = {}) => {\r\n                const index = messagesRef.current.findIndex(\r\n                    message => message instanceof Object && message.messageId === messageId,\r\n                )\r\n                virtuoso.scrollToIndex({...options, index})\r\n            },\r\n            scrollToBottom: () => {\r\n                virtuoso.scrollToIndex(LAST_MESSAGE_LOCATION)\r\n            },\r\n        })\r\n    }\r\n\r\n    const renderChatMessage = (_: number, message: ComposedMessage) => (\r\n        <ChatMessage\r\n            message={message}\r\n            scrollerNode={scrollerNode instanceof HTMLElement ? scrollerNode : null}\r\n        />\r\n    )\r\n\r\n    return messages.length\r\n        ? (\r\n            <Virtuoso\r\n                atBottomStateChange={handleScrollToBottom}\r\n                atBottomThreshold={10}\r\n                alignToBottom\r\n                className=\"overflow-x-hidden px-4 pb-6 pt-0 [&>:first-child]:!w-[calc(100%-32px)]\"\r\n                computeItemKey={computeItemKey}\r\n                data={messages}\r\n                followOutput\r\n                initialTopMostItemIndex={LAST_MESSAGE_LOCATION}\r\n                itemContent={renderChatMessage}\r\n                ref={propagateScrollerApi}\r\n                scrollerRef={setScrollerNode}\r\n                tabIndex={undefined} // by default Virtuoso add the tabIndex=\"0\" but for better support SelectionContainer we should set it undefined\r\n                increaseViewportBy={VIEWPORT_INCREASE}\r\n            />\r\n        )\r\n        : null\r\n})\r\n","import {useCallback} from 'react'\r\n\r\nimport {useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport {useGroupChatItem} from '@bpinc/state-group-chat-ui-context'\r\n\r\n\r\nexport function useScrollToBottomHandler(): (atBottom: boolean) => void {\r\n    const chatItem = useGroupChatItem()\r\n\r\n    const {markChatAsRead} = useGroupChatStateMethods()\r\n\r\n    const handleScrollToBottom = useCallback((atBottom: boolean) => {\r\n        if (atBottom && chatItem?.chatId) {\r\n            markChatAsRead(chatItem?.chatId)\r\n        }\r\n    }, [chatItem, markChatAsRead])\r\n\r\n    return handleScrollToBottom\r\n}\r\n","import React, {useCallback} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport type {SelectionOrigin} from '@bpinc/lib-ui-elements'\r\nimport {Loader, SelectionContainer} from '@bpinc/lib-ui-elements'\r\nimport {scrollerApiAtom, useGroupChatItem} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport {UnreadBadge} from './messages/UnreadBadge'\r\nimport {ChatMessagesVirtualization} from './ChatMessagesVirtualization'\r\n\r\n\r\nexport const ChatMessagesArea: React.FC = React.memo(function ChatMessagesArea() {\r\n    const scrollerApi = useAtomValue(scrollerApiAtom)\r\n    const messages = useGroupChatItem()?.messages\r\n\r\n    const itemsProvider = useCallback(() => messages\r\n        ? messages.filter(m => m.messageId).map(m => m.messageId)\r\n        : [],\r\n    [messages])\r\n\r\n    // TODO: implement real loading indication\r\n    const isLoading = false\r\n\r\n    return (\r\n        <SelectionContainer\r\n            startFrom=\"bottom\"\r\n            getAriaSRAlert={() => ''}\r\n            className=\"relative h-full overflow-x-hidden bg-secondary-container-variant1\"\r\n            data-testid=\"chat-content\"\r\n            itemsListProvider={itemsProvider}\r\n            onItemSelect={(messageId: string, selectionOrigin: SelectionOrigin | undefined) => {\r\n                if (selectionOrigin === 'keys') {\r\n                    scrollerApi.scrollToMessage(messageId)\r\n                }\r\n            }}\r\n        >\r\n            {isLoading && <Loader active size=\"medium\" color=\"primary\" />}\r\n            <ChatMessagesVirtualization />\r\n            <UnreadBadge />\r\n        </SelectionContainer>\r\n    )\r\n})\r\n","\r\nexport function getTrimMessage(message: string) {\r\n    return message.replace(/^(<br>)+|(<br>)+$/g, '')\r\n}\r\n\r\nexport function isEmpty(text: string | undefined) {\r\n    return !text?.replace(/(&nbsp;|<br>)/g, '').trim()\r\n}\r\n","import React, {memo, useCallback, useMemo} from 'react'\r\n\r\nimport type {DropdownProps} from '@bpinc/lib-ui-elements'\r\nimport {Dropdown} from '@bpinc/lib-ui-elements'\r\nimport type {MessageType} from '@bpinc/state-group-chat-ui'\r\nimport {useMessageParams, useSetMessageParams} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst ANNOUNCEMEN: MessageType = 'announcement'\r\nconst MESSAGE: MessageType = 'message'\r\n\r\nexport const MessageTypeSelector: React.FC = memo(function MessageTypeSelector() {\r\n    const {t} = useLocalizationState()\r\n\r\n    const {messageType = MESSAGE} = useMessageParams()\r\n    const setMessageParams = useSetMessageParams()\r\n\r\n    const messageTypeOptions = useMemo(() => [\r\n        {\r\n            value: MESSAGE,\r\n            text: t.CHAT_CENTER.message_type_selector_regular_message(),\r\n        }, {\r\n            value: ANNOUNCEMEN,\r\n            text: t.CHAT_CENTER.message_type_selector_announcement(),\r\n        },\r\n    ], [t])\r\n\r\n    const onChangeHandler = useCallback((e: React.SyntheticEvent, {value}: DropdownProps): void => {\r\n        if (value === MESSAGE || value === ANNOUNCEMEN) {\r\n            setMessageParams(draft => { draft.messageType = value })\r\n        }\r\n    }, [setMessageParams])\r\n\r\n    return (\r\n        <Dropdown\r\n            className=\"!min-w-[162px] text-base\"\r\n            options={messageTypeOptions}\r\n            value={messageType}\r\n            onChange={onChangeHandler}\r\n            aria-label={t.ACCESSIBILITY.chat_center_message_type_selector_label()}\r\n            data-testid=\"message-type-selector\"\r\n            upward\r\n            selection\r\n        />\r\n    )\r\n})\r\n","import React from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport {useFocusElement} from '@bpinc/lib-helpers'\r\nimport {ContentEditable} from '@bpinc/lib-ui-elements'\r\nimport {autoFocusAtom, useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype TextAreaProps = {\r\n    currentMessage: string\r\n    disabled?: boolean\r\n    inputRef: React.RefObject<HTMLDivElement>\r\n    handleKeyDown(evt: React.SyntheticEvent): void\r\n    handleChange(evt: React.FormEvent<HTMLElement>, value?: string): void\r\n}\r\n\r\nexport const TEXT_AREA_DATA_ID = 'chat-center-input'\r\n\r\nexport const TextArea: React.FC<TextAreaProps> = props => {\r\n    const {t} = useLocalizationState()\r\n    const {currentMessage, disabled, inputRef, handleKeyDown, handleChange} = props\r\n    const {groupChatId} = useGroupChatUIParams()\r\n\r\n    const autoFocusInput = useAtomValue(autoFocusAtom)\r\n\r\n    useFocusElement(inputRef, {\r\n        condition: autoFocusInput,\r\n        dependencies: [inputRef, groupChatId],\r\n    })\r\n\r\n    return (\r\n        <ContentEditable\r\n            ref={inputRef}\r\n            autoFocus={autoFocusInput}\r\n            onKeyDown={handleKeyDown}\r\n            onChange={handleChange}\r\n            placeholder={disabled ? t.INTERNAL_CHAT.message_input_placeholder_disabled() : t.INTERNAL_CHAT.message_input_placeholder()}\r\n            className=\"!min-h-12 resize-none overflow-auto rounded-none border-none p-0 pt-1 text-lg before:!text-chat-title\"\r\n            data-id={TEXT_AREA_DATA_ID}\r\n            data-testid=\"chat-center-text-area\"\r\n            value={currentMessage}\r\n            disabled={disabled}\r\n        />\r\n    )\r\n}\r\n","import React, {useCallback} from 'react'\r\n\r\nimport {useMessageUpdater} from '@bpinc/lib-chat-ui'\r\nimport {IconChatSendMessage} from '@bpinc/lib-icons'\r\nimport {AttachButton, Button, EmojiButton} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {MessageTypeSelector} from './MessageTypeSelector'\r\nimport {TEXT_AREA_DATA_ID} from './TextArea'\r\n\r\n\r\ntype GroupChatControlsProps = {\r\n    textAreaRef: React.RefObject<HTMLTextAreaElement>\r\n    sendCurrentMessage: () => void\r\n    setCurrentMessage: (setter: (message: string) => string) => void\r\n    disableSendButton?: boolean\r\n}\r\n\r\nexport const GroupChatControls: React.FC<GroupChatControlsProps> = props => {\r\n    const {textAreaRef, sendCurrentMessage, setCurrentMessage, disableSendButton} = props\r\n    const {t} = useLocalizationState()\r\n\r\n    const {groupChatMembers} = useGroupChatUIParams()\r\n\r\n    const updateMessage = useMessageUpdater(\r\n        setCurrentMessage,\r\n        `[data-id=\"${TEXT_AREA_DATA_ID}\"]`,\r\n    )\r\n    const onSelectEmoji = updateMessage((emoji: string) => emoji)\r\n\r\n    // TODO: attachments handlers when server API will be ready\r\n    const attachButtonClickHandler = useCallback(() => {}, [])\r\n    const handlerUploadFiles = useCallback(() => {}, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex w-full items-center justify-between px-0 py-2\">\r\n                <div className=\"flex items-center\">\r\n                    {groupChatMembers.length > 2 && <MessageTypeSelector />}\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                    <AttachButton\r\n                        onClick={attachButtonClickHandler}\r\n                        handleUploadFiles={handlerUploadFiles}\r\n                    />\r\n                    <EmojiButton\r\n                        textAreaRef={textAreaRef}\r\n                        onSelectEmoji={onSelectEmoji}\r\n                        tooltip={t.INTERNAL_CHAT.chat_addEmoji_button_tooltip()}\r\n                    />\r\n                    <Button\r\n                        transparent\r\n                        onClick={sendCurrentMessage}\r\n                        className=\"ml-4 transition-opacity duration-300 ease-in-out hover:opacity-70\"\r\n                        tooltip={t.INTERNAL_CHAT.chat_sendMessage_tooltip()}\r\n                        clickThrottle={500}\r\n                        data-testid=\"send-button\"\r\n                        disabled={disableSendButton}\r\n                    >\r\n                        <IconChatSendMessage />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useCallback, useRef} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport {useIsOffline, useOfflineStateMethods} from '@bpinc/ad-offline-state-context'\r\nimport {isHTMLDivElement} from '@bpinc/lib-html-utils'\r\nimport {useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport {\r\n    scrollerApiAtom,\r\n    useGroupChatItem,\r\n    useGroupChatUIParams,\r\n    useMessageParams,\r\n    useSetMessageParams,\r\n} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport {getTrimMessage, isEmpty} from '../../helpers/helpers'\r\nimport {GroupChatControls} from './GroupChatControls'\r\nimport {ReplyingMessagePreview} from './ReplyingMessagePreview'\r\nimport {TextArea} from './TextArea'\r\n\r\n\r\nexport const InputControlsArea: React.FC = React.memo(function InputControlsArea() {\r\n    const {sendMessage} = useGroupChatStateMethods()\r\n    const {setShowOfflineAlert} = useOfflineStateMethods()\r\n    const isOffline = useIsOffline()\r\n    const {groupChatId, groupChatMembers} = useGroupChatUIParams()\r\n\r\n    const {messageText, replyOnMessageId} = useMessageParams()\r\n    const setMessageParams = useSetMessageParams()\r\n\r\n    const isChatDisabled = useGroupChatItem()?.disabled\r\n    const textAreaRef = useRef(null)\r\n    const scrollerApi = useAtomValue(scrollerApiAtom)\r\n\r\n    const handleTextareaChange = useCallback((event: React.FormEvent<HTMLElement>, value: string) => {\r\n        if (isHTMLDivElement(event.target)) {\r\n            event.target.scrollTop = event.target.scrollHeight\r\n        }\r\n        setMessageParams(draft => {\r\n            draft.messageText = value\r\n        })\r\n    }, [setMessageParams])\r\n\r\n    const setCurrentMessage = useCallback((setter: (message: string) => string) => {\r\n        setMessageParams(draft => {\r\n            draft.messageText = setter(draft.messageText || '')\r\n        })\r\n    }, [setMessageParams])\r\n\r\n    const sendCurrentMessage = useCallback(async () => {\r\n        if (!messageText || isEmpty(messageText)) {\r\n            return\r\n        }\r\n        if (isOffline) {\r\n            setShowOfflineAlert(true)\r\n            return\r\n        }\r\n        sendMessage({\r\n            groupChatId,\r\n            groupChatMembers,\r\n            message: getTrimMessage(messageText),\r\n            replyOnMessageId,\r\n        })\r\n        scrollerApi.scrollToBottom()\r\n    }, [\r\n        isOffline,\r\n        messageText,\r\n        replyOnMessageId,\r\n        scrollerApi,\r\n        groupChatId,\r\n        groupChatMembers,\r\n        sendMessage,\r\n        setShowOfflineAlert,\r\n    ])\r\n\r\n    const sendNewMessageOnEnter = useCallback(\r\n        function sendNewMessageOnEnterCallback(event: React.KeyboardEvent<HTMLTextAreaElement>): void {\r\n            if (event.key === 'Enter') {\r\n                if (event.shiftKey || event.ctrlKey) {\r\n                    return\r\n                }\r\n                event.preventDefault()\r\n                event.stopPropagation()\r\n                sendCurrentMessage()\r\n            }\r\n        },\r\n        [sendCurrentMessage],\r\n    )\r\n\r\n    const removeReply = useCallback(() => {\r\n        setMessageParams(draft => { draft.replyOnMessageId = undefined })\r\n    }, [setMessageParams])\r\n\r\n    return (\r\n        <div className=\"z-[5] mx-4 my-0 flex max-h-[33%] flex-col border-t border-main-border\">\r\n            { /* TODO: Attachments */ }\r\n            {replyOnMessageId && (\r\n                <ReplyingMessagePreview messageId={replyOnMessageId} onRemoveReply={removeReply} />\r\n            )}\r\n            <TextArea\r\n                inputRef={textAreaRef}\r\n                currentMessage={messageText || ''}\r\n                handleKeyDown={sendNewMessageOnEnter}\r\n                handleChange={handleTextareaChange}\r\n                disabled={isChatDisabled}\r\n            />\r\n            {!isChatDisabled && (\r\n                <GroupChatControls\r\n                    textAreaRef={textAreaRef}\r\n                    sendCurrentMessage={sendCurrentMessage}\r\n                    setCurrentMessage={setCurrentMessage}\r\n                    disableSendButton={isEmpty(messageText)}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport {formatDate} from '@bpinc/lib-helpers'\r\nimport {Button} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport {scrollerApiAtom, useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {IconUnpin} from '../../images'\r\n\r\n\r\ntype Props = {\r\n    messageId: string\r\n    displayName: string\r\n    content: string\r\n    sendTime: number\r\n}\r\n\r\nexport const PinnedMessageItem: React.FC<Props> = props => {\r\n    const {messageId, displayName, content, sendTime} = props\r\n\r\n    const {t} = useLocalizationState()\r\n    const {unpinMessage} = useGroupChatStateMethods()\r\n    const {openModal} = useModalsStateMethods()\r\n    const {groupChatId} = useGroupChatUIParams()\r\n    const scrollerApi = useAtomValue(scrollerApiAtom)\r\n\r\n    const onClickHandler = () => {\r\n        scrollerApi.scrollToMessage(messageId, {align: 'start'})\r\n    }\r\n\r\n    const unpinMessageButtonHandler = () => {\r\n        openModal({\r\n            dataKey: 'chat-unpin-message-confirmation-dialog',\r\n            body: t.CHAT_CENTER.message_unpin_confirmation_text(),\r\n            actions: {\r\n                ok: {\r\n                    title: t.CHAT_CENTER.message_unpin_positive_button_text(),\r\n                    action: () => {\r\n                        if (groupChatId) {\r\n                            unpinMessage({chatId: groupChatId, messageId})\r\n                        }\r\n                    },\r\n                },\r\n                cancel: {\r\n                    title: t.CHAT_CENTER.message_unpin_negative_button_text(),\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"z-[2] flex items-center bg-chat-center-in-message-bg py-[9px] pl-2 pr-6 leading-[18px] shadow\">\r\n            <Button\r\n                onClick={unpinMessageButtonHandler}\r\n                className=\"ease m-0 h-4 w-4 cursor-pointer border-none bg-transparent p-0 opacity-100 transition-opacity duration-300 hover:opacity-70\"\r\n                tooltip={t.CHAT_CENTER.message_unpin_button_tooltip()}\r\n                clickThrottle={500}\r\n                data-testid=\"unpin-message-button\"\r\n            >\r\n                <IconUnpin />\r\n            </Button>\r\n            <div className=\"ml-2 flex-[0_0_auto] text-sm font-semibold text-main\" data-testid=\"party-display-name\">\r\n                {displayName}\r\n            </div>\r\n            <div\r\n                className=\"mx-2 cursor-pointer truncate text-base text-chat-center-message-text-color\"\r\n                onClick={onClickHandler}\r\n                data-testid=\"message-content\"\r\n            >\r\n                {content}\r\n            </div>\r\n            <span\r\n                className=\"ml-auto flex-[0_0_auto] text-sm text-chat-title\"\r\n                data-testid=\"message-time\"\r\n            >\r\n                {formatDate(sendTime, 'h:mm A')}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useUserDetails} from '@bpinc/ad-user-details-state-context'\r\nimport {formatHTMLAsOneLineString} from '@bpinc/lib-html-utils'\r\nimport {assertGroupChatMessage} from '@bpinc/state-group-chat-types'\r\nimport {useGroupChatItem} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport {PinnedMessageItem} from './PinnedMessageItem'\r\n\r\n\r\nexport const PinnedMessagesStack: React.FC = React.memo(function PinnedMessagesStack() {\r\n    const {\r\n        userId: selfUserId,\r\n        firstName: selfFirstName,\r\n        lastName: selfLastName,\r\n    } = useSessionState()\r\n    const userDetails = useUserDetails()\r\n    const {formatFullName} = useFormatting()\r\n    const chatItem = useGroupChatItem()\r\n    const messages = chatItem?.messages || []\r\n    const pinnedMessages = chatItem?.pinnedMessages || []\r\n\r\n    return (\r\n        <>\r\n            {pinnedMessages.map(pinned => {\r\n\r\n                const message = messages.find(msg => msg.type !== 'system' && msg.messageId === pinned.messageId)\r\n                if (message) {\r\n                    assertGroupChatMessage(message)\r\n                }\r\n\r\n                const userDetailsData = userDetails[pinned.userId]?.data\r\n                const isSelf = pinned.userId === selfUserId\r\n                const firstName = isSelf ? selfFirstName : userDetailsData?.firstName\r\n                const lastName = isSelf ? selfLastName : userDetailsData?.lastName\r\n                const displayName = formatFullName(firstName, lastName)\r\n                const messageContent = formatHTMLAsOneLineString(message?.content ?? pinned.content)\r\n                const sendTime = message?.sendTime ?? pinned.sendTime\r\n\r\n                return (\r\n                    <PinnedMessageItem\r\n                        key={pinned.messageId}\r\n                        messageId={pinned.messageId}\r\n                        displayName={displayName}\r\n                        content={messageContent}\r\n                        sendTime={sendTime}\r\n                    />\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport {ChatMessagesArea} from './ChatMessagesArea'\r\nimport {InputControlsArea} from './InputControlsArea'\r\nimport {PinnedMessagesStack} from './PinnedMessagesStack'\r\n\r\n\r\nexport const ChatContent: React.FC = () => {\r\n    const {groupChatId} = useGroupChatUIParams()\r\n    const privileges = useSessionState('privileges')\r\n    return (\r\n        <div className=\"relative flex flex-auto flex-col justify-between overflow-hidden\">\r\n            <PinnedMessagesStack />\r\n            <ChatMessagesArea key={groupChatId} />\r\n            {privileges.CAN_START_INTERNAL_CHAT && <InputControlsArea />}\r\n        </div>\r\n    )\r\n}\r\n","import type {FC, PropsWithChildren} from 'react'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {createStore, Provider} from 'jotai'\r\n\r\nimport type {GroupChatUIScope} from '@bpinc/state-group-chat-ui'\r\nimport {chatScopeAtom, useGroupChatUIStateMethods} from '@bpinc/state-group-chat-ui-context'\r\n\r\n\r\ntype Props = PropsWithChildren<{\r\n    scope: GroupChatUIScope\r\n}>\r\n\r\nexport const ChatCenterScopeProvider: FC<Props> = ({children, scope}) => {\r\n    const {resetGroupChat} = useGroupChatUIStateMethods()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            resetGroupChat(scope)\r\n        }\r\n    }, [scope, resetGroupChat])\r\n\r\n    const [storeWithScope] = useState(() => {\r\n        const store = createStore()\r\n        store.set(chatScopeAtom, scope)\r\n        return store\r\n    })\r\n\r\n    return (\r\n        <Provider store={storeWithScope}>\r\n            {children}\r\n        </Provider>\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nimport {useGroupChatUIStateMethods} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport type {ChatCenterInteractionProps} from '../types'\r\nimport {ChatContent} from './chat/ChatContent'\r\nimport {ChatCenterScopeProvider} from './ChatCenterScopeProvider'\r\n\r\n\r\nexport const ChatCenterInteraction: FC<ChatCenterInteractionProps> = ({interactionId, scope}) => {\r\n    const [setupComplete, setSetupComplete] = useState(false)\r\n    const {setupGroupChatByInteraction} = useGroupChatUIStateMethods()\r\n\r\n    useEffect(() => {\r\n        setupGroupChatByInteraction(scope, interactionId).then(\r\n            () => setSetupComplete(true),\r\n        )\r\n    }, [interactionId, scope, setupGroupChatByInteraction])\r\n\r\n    return setupComplete\r\n        ? (\r\n            <ChatCenterScopeProvider scope={scope}>\r\n                <ChatContent />\r\n            </ChatCenterScopeProvider>\r\n        )\r\n        : null\r\n}\r\n","import React, {useCallback, useEffect, useState} from 'react'\r\nimport {useAtom} from 'jotai'\r\n\r\nimport {not} from '@bpinc/lib-helpers'\r\nimport type {StateSetter} from '@bpinc/lib-types-helpers'\r\nimport {type SearchResultItem, isUserSearchResult, MultipleUserSearch} from '@bpinc/lib-user-search-components'\r\nimport {\r\n    autoFocusAtom,\r\n    useGroupChatUIParams,\r\n    useResetGroupChat,\r\n    useSetupGroupChatById,\r\n    useSetupGroupChatByMembers,\r\n} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport const ChatCenterHeader: React.FC = () => {\r\n    const {t} = useLocalizationState()\r\n\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [selectedItems, setSelectedItems] = useState<SearchResultItem[]>([])\r\n\r\n    const setupGroupChatById = useSetupGroupChatById()\r\n    const setupGroupChatByMembers = useSetupGroupChatByMembers()\r\n    const resetGroupChat = useResetGroupChat()\r\n\r\n    const {groupChatId} = useGroupChatUIParams()\r\n    useEffect(() => {\r\n        if (groupChatId) {\r\n            setSelectedItems([])\r\n            setSearchValue('')\r\n        }\r\n    }, [groupChatId])\r\n\r\n    const [, setAutoFocus] = useAtom(autoFocusAtom)\r\n\r\n    const handleGroupChatSelect = useCallback((selectedChatId: string) => {\r\n        setupGroupChatById(selectedChatId)\r\n    }, [setupGroupChatById])\r\n\r\n    const handleSelectedItems: StateSetter<SearchResultItem[]> = useCallback(\r\n        itemsOrSetter => {\r\n            const groupChatMembers = typeof itemsOrSetter === 'function'\r\n                ? itemsOrSetter(selectedItems)\r\n                : itemsOrSetter\r\n\r\n            setSelectedItems(groupChatMembers)\r\n\r\n            //TODO: Remove when teams and group chats are supported\r\n            if (groupChatMembers.some(not(isUserSearchResult))) {\r\n                console.error('Teams and group chats are not supported yet')\r\n            }\r\n\r\n            const onlyUsersGroupChatMembers = groupChatMembers.filter(isUserSearchResult)\r\n\r\n            if (groupChatMembers.length) {\r\n                setupGroupChatByMembers({groupChatMembers: onlyUsersGroupChatMembers})\r\n                setAutoFocus(false)\r\n            } else {\r\n                resetGroupChat()\r\n                setAutoFocus(true)\r\n            }\r\n        }, [resetGroupChat, selectedItems, setAutoFocus, setupGroupChatByMembers],\r\n    )\r\n    return (\r\n        <div className=\"flex h-14 bg-white\">\r\n            <span className=\"ml-5 w-60 text-[13px]/[56px] font-semibold\">\r\n                {t.CHAT_CENTER.chat_center_header()}\r\n            </span>\r\n            <div className=\"flex flex-1 items-center border-b border-l border-chat-center-header-border bg-chat-center-in-message-bg px-2.5\">\r\n                <div className=\"flex w-full max-w-100 flex-col\">\r\n                    <MultipleUserSearch\r\n                        inputClassName=\"max-h-10 overflow-y-auto\"\r\n                        inputPlaceholder={t.CHAT_CENTER.main_search_input_placeholder()}\r\n                        loadingLabel={t.CHAT_CENTER.main_search_loader_text()}\r\n                        noSearchValueLabel={selectedItems.length ? undefined : t.CHAT_CENTER.main_search_loader_text()}\r\n                        onGroupChatSelect={handleGroupChatSelect}\r\n                        searchForGroupChats\r\n                        searchForTeamChats\r\n                        searchForTeams\r\n                        searchForUsers\r\n                        searchValue={searchValue}\r\n                        selectedItems={selectedItems}\r\n                        setSearchValue={setSearchValue}\r\n                        setSelectedItems={handleSelectedItems}\r\n                        showSearchIcon\r\n                        uniqueSearchId=\"chat-center\"\r\n                        withSearchInChatsOption\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback, useMemo, useState} from 'react'\r\nimport produce from 'immer'\r\n\r\nimport {useDirectoryState} from '@bpinc/ad-directory-state-context'\r\nimport type {DirectoryObject} from '@bpinc/ad-directory-state-types'\r\nimport {type SmInputOnChangeData, SmInput} from '@bpinc/lib-external-ui-elements'\r\nimport {type SelectionInputItem, Modal, SelectionInput, SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {SearchResultTeam} from '@bpinc/lib-user-search-components'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\n\r\nexport const NewTeamsChatModal: React.FC<CommonModalProps> = ({onClose, ...restProps}) => {\r\n    const {t} = useLocalizationState()\r\n    const [teamChatTitle, setTeamChatTitle] = useState('')\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [selectedTeams, setSelectedTeams] = useState<SelectionInputItem[]>([])\r\n    const teams = useDirectoryState('teams')\r\n\r\n    const saveNewChatTeamTitle = useCallback((event: React.ChangeEvent<HTMLInputElement>, data: SmInputOnChangeData) => {\r\n        setTeamChatTitle(data.value)\r\n    }, [])\r\n\r\n    const selectItem = useCallback((item: SelectionInputItem) => {\r\n        setSearchValue('')\r\n        setSelectedTeams(items =>\r\n            produce(items, itemsDraft => {\r\n                itemsDraft.push(item)\r\n            }),\r\n        )\r\n    }, [])\r\n\r\n    const foundTeams = useMemo(() => {\r\n        return teams.filter(team => (\r\n            team.name.toLowerCase().includes(searchValue.toLowerCase()) &&\r\n            !selectedTeams.some(selectedTeam => selectedTeam.id === team.id)\r\n        ))\r\n    }, [searchValue, teams, selectedTeams])\r\n\r\n    const removeSelectedTeam = useCallback((removedTeam: SelectionInputItem) => {\r\n        setSelectedTeams(items => items.filter(item => item.id !== removedTeam.id))\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            onClose={onClose}\r\n            aria-labelledby=\"newTeamsChatDialogHeader\"\r\n            className=\"flex max-w-[620px] flex-col justify-center bg-white\"\r\n            {...restProps}\r\n        >\r\n            <Modal.Header id=\"newTeamsChatDialogHeader\">\r\n                {t.CHAT_CENTER.chat_add_new_team_chat_title()}\r\n            </Modal.Header>\r\n            <Modal.Content className=\"h-[60vh] !overflow-hidden\">\r\n                <div className=\"mb-2 text-left font-bold text-info\">\r\n                    {t.CHAT_CENTER.chat_add_new_team_chat_text()}\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <SmInput\r\n                        fluid\r\n                        placeholder={t.CHAT_CENTER.chat_add_new_team_chat_optional()}\r\n                        value={teamChatTitle}\r\n                        onChange={saveNewChatTeamTitle}\r\n                        className=\"rounded leading-[17px] [&_input]:h-[37px]\"\r\n                    />\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                    <SelectionInput\r\n                        id=\"chat-center-search-team\"\r\n                        className=\"border-main-border px-3.5\r\n                        text-base text-main focus-within:!border-semantic-border-input\r\n                        focus:!border-semantic-border-input active:!border-semantic-border-input\"\r\n                        items={selectedTeams}\r\n                        value={searchValue}\r\n                        onChange={setSearchValue}\r\n                        onItemRemoved={removeSelectedTeam}\r\n                        placeholder={t.CHAT_CENTER.chat_add_new_team_chat_placeholder()}\r\n                    />\r\n                </div>\r\n                <div className=\"overflow-y-auto overflow-x-hidden\">\r\n                    {foundTeams.map((team: DirectoryObject) => (\r\n                        <SearchResultTeam\r\n                            id={team.id}\r\n                            key={team.id}\r\n                            displayText={team.name}\r\n                            onClick={selectItem}\r\n                        />\r\n                    ))}\r\n                    {searchValue && !foundTeams.length && (\r\n                        <div className=\"h-[37px] truncate py-[3px] pl-3.5 pr-0.5 leading-[31px]\">\r\n                            {t.CHAT_CENTER.search_no_results(searchValue)}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <SemanticButton\r\n                    enabledInOffline\r\n                    onClick={() => onClose()}\r\n                >\r\n                    {t.CHAT_CENTER.chat_add_new_team_chat_btn_cancel()}\r\n                </SemanticButton>\r\n                <SemanticButton\r\n                    primary\r\n                    disabled={!selectedTeams.length}\r\n                    onClick={() => onClose()}\r\n                >\r\n                    {t.CHAT_CENTER.chat_add_new_team_chat_btn_start_chat()}\r\n                </SemanticButton>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n","import React, {memo, useCallback, useMemo} from 'react'\r\n\r\nimport type {Toggle} from '@bpinc/lib-helpers'\r\nimport type {PopupMenuOption} from '@bpinc/lib-ui-elements'\r\nimport {PopupButton} from '@bpinc/lib-ui-elements'\r\nimport type {GroupChatItem} from '@bpinc/state-group-chat-types'\r\nimport type {MessagesDeclaration} from '@bpinc/state-localization'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {RecentChatAction} from './ChatListItem'\r\n\r\n\r\ntype Props = {\r\n    actionDispatcher: SpecificRecentChatActionDispatcher\r\n    item: GroupChatItem\r\n    show: boolean\r\n    toggleShow: Toggle\r\n}\r\n\r\ntype SpecificRecentChatActionDispatcher = (action: RecentChatAction) => void\r\n\r\nexport const GroupChatActionsButton: React.FC<Props> = memo(({actionDispatcher, item, show, toggleShow}) => {\r\n    const {t} = useLocalizationState()\r\n    const options = useRecentChatActions(actionDispatcher, item, toggleShow, t)\r\n\r\n    return (\r\n        <PopupButton\r\n            custom\r\n            show={show}\r\n            toggleShow={toggleShow}\r\n            enabledInOffline\r\n            tabIndex={0}\r\n            className=\"cursor-pointer border-none bg-none pb-2 text-[22px]/[24px] hover:scale-110 hover:text-black\"\r\n            tooltip={t.CHAT_CENTER.show_actions_button_tooltip()}\r\n            data-testid=\"show-group-chat-actions-button\"\r\n            options={options}\r\n        >\r\n            ...\r\n        </PopupButton>\r\n    )\r\n})\r\n\r\n\r\nconst useRecentChatActions = (\r\n    dispatchAction: SpecificRecentChatActionDispatcher,\r\n    item: GroupChatItem,\r\n    closePopup: Toggle,\r\n    t: MessagesDeclaration,\r\n): PopupMenuOption[] => {\r\n    const isTeamChat = item.type === 'TEAM'\r\n\r\n    const pin = useCallback(() => {\r\n        dispatchAction(RecentChatAction.pin)\r\n        closePopup()\r\n    }, [dispatchAction, closePopup])\r\n\r\n    const mute = useCallback(() => {\r\n        dispatchAction(RecentChatAction.mute)\r\n        closePopup()\r\n    }, [dispatchAction, closePopup])\r\n\r\n    const enableAlerts = useCallback(() => {\r\n        dispatchAction(RecentChatAction.enable_alerts)\r\n        closePopup()\r\n    }, [dispatchAction, closePopup])\r\n\r\n    const deleteChat = useCallback(() => {\r\n        dispatchAction(RecentChatAction.delete)\r\n        closePopup()\r\n    }, [dispatchAction, closePopup])\r\n\r\n    const leaveChat = useCallback(() => {\r\n        dispatchAction(RecentChatAction.leave)\r\n        closePopup()\r\n    }, [dispatchAction, closePopup])\r\n\r\n    return useMemo(() => {\r\n        const options: PopupMenuOption[] = [\r\n            {\r\n                children: item.pinned ? t.CHAT_CENTER.recent_chat_action_unpin_text() : t.CHAT_CENTER.recent_chat_action_pin_text(),\r\n                onClick: pin,\r\n            },\r\n        ]\r\n        if (!item.disabled && !item.muted) {\r\n            options.push({\r\n                children: t.CHAT_CENTER.recent_chat_action_mute_text(),\r\n                onClick: mute,\r\n            })\r\n        }\r\n        if (!item.disabled) {\r\n            options.push({\r\n                children: t.CHAT_CENTER.recent_chat_action_enable_alerts_text(),\r\n                onClick: enableAlerts,\r\n            })\r\n        }\r\n        if (!isTeamChat && !item.disabled && item.members.length > 2) {\r\n            options.push({\r\n                children: t.CHAT_CENTER.recent_chat_action_leave_text(),\r\n                onClick: leaveChat,\r\n            })\r\n        }\r\n        if (!isTeamChat) {\r\n            options.push({\r\n                children: t.CHAT_CENTER.recent_chat_action_delete_text(),\r\n                onClick: deleteChat,\r\n            })\r\n        }\r\n        return options\r\n    }, [item.pinned, item.disabled, item.muted, item.members.length, t.CHAT_CENTER, pin, mute, enableAlerts, isTeamChat, leaveChat, deleteChat])\r\n}\r\n","import React, {memo, useCallback} from 'react'\r\n\r\nimport {LinkLikeButton} from '@bpinc/lib-ui-elements'\r\nimport type {GroupChatItem} from '@bpinc/state-group-chat-types'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {RecentChatAction} from './ChatListItem'\r\n\r\n\r\ntype Props = {\r\n    actionDispatcher: SpecificRecentChatActionDispatcher\r\n    item: GroupChatItem\r\n}\r\n\r\ntype SpecificRecentChatActionDispatcher = (action: RecentChatAction) => void\r\n\r\nexport const GroupChatSubActions: React.FC<Props> = memo(({actionDispatcher, item}) => {\r\n    const {t} = useLocalizationState()\r\n\r\n    const unmuteHandler = useCallback(() => {\r\n        actionDispatcher(RecentChatAction.mute)\r\n    }, [actionDispatcher])\r\n\r\n    if (!item.muted) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <LinkLikeButton onClick={unmuteHandler} className=\"text-sm/[18px]\" as=\"div\">\r\n            {t.CHAT_CENTER.recent_chat_action_unmute_text()}\r\n        </LinkLikeButton>\r\n    )\r\n})\r\n\r\n","import type {RefObject} from 'react'\r\nimport React, {useCallback, useRef} from 'react'\r\n\r\nimport {formatDate} from '@bpinc/ad-formatting-helpers'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useUserDetails} from '@bpinc/ad-user-details-state-context'\r\nimport {getGroupChatAvatar} from '@bpinc/lib-chat-ui/src/helpers'\r\nimport {ContactListItem} from '@bpinc/lib-contact-list-item-ui'\r\nimport {useBoolean} from '@bpinc/lib-helpers'\r\nimport {formatHTMLAsOneLineString} from '@bpinc/lib-html-utils'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {UnreadBadge} from '@bpinc/lib-ui-elements'\r\nimport {useLastGroupChatMessage} from '@bpinc/state-group-chat-context'\r\nimport type {ChatUser, GroupChatItem, GroupChatMessage} from '@bpinc/state-group-chat-types'\r\nimport {useGroupChatUIState} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useMembersDetails} from '../hooks/useMembersDetails'\r\nimport {GroupChatActionsButton} from './GroupChatActionsButton'\r\nimport {GroupChatSubActions} from './GroupChatSubActions'\r\n\r\n\r\ntype RecentChatItemProps = {\r\n    item: GroupChatItem\r\n    unreadCount: number | undefined\r\n    selected: boolean\r\n    scrollContainerRef: RefObject<HTMLDivElement>\r\n    actionDispatcher: RecentChatActionDispatcher\r\n    onClick: (chatId: string) => void\r\n    showControlWithModal?: boolean | undefined\r\n}\r\n\r\nexport enum RecentChatAction {\r\n    'pin' = 'pin',\r\n    'mute' = 'mute',\r\n    'enable_alerts' = 'enable_alerts',\r\n    'delete' = 'delete',\r\n    'leave' = 'leave',\r\n}\r\n\r\ntype RecentChatActionDispatcher = (chatId: string, action: RecentChatAction) => void\r\n\r\nconst useBody = (\r\n    lastMessage: GroupChatMessage | null,\r\n    members: ChatUser[],\r\n    selfUserId: string,\r\n): React.ReactNode => {\r\n    const {t} = useLocalizationState()\r\n    const userDetailsMap = useUserDetails()\r\n\r\n    const member = members.find(memberItem => memberItem.id === lastMessage?.userId)\r\n    const userDetails = lastMessage ? userDetailsMap[lastMessage.userId] : undefined\r\n    const firstName = userDetails?.data?.firstName ?? lastMessage?.firstName ?? member?.firstName\r\n\r\n    const messageAuthorName = lastMessage\r\n        ? lastMessage.userId === selfUserId\r\n            ? t.CHAT_CENTER.chat_last_message_your_author_name()\r\n            : firstName\r\n        : ''\r\n\r\n    // TODO: waits for protocol change\r\n    const messageText = lastMessage\r\n        ? formatHTMLAsOneLineString(lastMessage.content)\r\n        : ''\r\n\r\n    return (\r\n        <div className=\"truncate text-sm text-chat-title\">\r\n            {\r\n                messageAuthorName && messageText\r\n                    ? `${messageAuthorName}: ${messageText}`\r\n                    : ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ChatListItem = React.memo<RecentChatItemProps>(\r\n    function ChatListItemMemo(props) {\r\n        const {item, selected, scrollContainerRef, actionDispatcher, onClick, unreadCount} = props\r\n        const {title, members, chatId, muted} = item\r\n        const session = useSessionState()\r\n        const {value: show, toggle: toggleShow} = useBoolean()\r\n        const elemRef = useRef(null)\r\n\r\n        const itemActionDispatcher = useCallback((action: RecentChatAction) => {\r\n            actionDispatcher(chatId, action)\r\n        }, [actionDispatcher, chatId])\r\n\r\n        const {\r\n            isConference,\r\n            p2pUserDetails,\r\n            p2pUserId,\r\n        } = useMembersDetails({elemRef, members, scrollContainerRef, selected})\r\n\r\n        // TODO: waits for protocol change\r\n        const lastChatMessage = useLastGroupChatMessage(chatId)\r\n\r\n        const avatar = getGroupChatAvatar({\r\n            chatData: item,\r\n            p2pUser: p2pUserDetails?.data,\r\n            session,\r\n        })\r\n\r\n        const body = useBody(lastChatMessage, members, session.userId!)\r\n\r\n        const hoverControls = (\r\n            <GroupChatActionsButton\r\n                actionDispatcher={itemActionDispatcher}\r\n                item={item}\r\n                show={show}\r\n                toggleShow={toggleShow}\r\n            />\r\n        )\r\n        const subControls = (\r\n            <GroupChatSubActions actionDispatcher={itemActionDispatcher} item={item} />\r\n        )\r\n\r\n        const itemClickHandler = useCallback(() => {\r\n            onClick(chatId)\r\n        }, [onClick, chatId])\r\n\r\n        const showZero = useGroupChatUIState('messageParams')[chatId]?.showZeroUnreadBadge\r\n\r\n        const titleElement = (\r\n            <>\r\n                <div className=\"inline-flex overflow-hidden\">\r\n                    <span className=\"truncate\">{title}</span>\r\n                    <UnreadBadge\r\n                        className=\"ml-2\"\r\n                        inline\r\n                        muted={muted}\r\n                        showZerro={showZero}\r\n                        unreadAmount={unreadCount}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"ml-auto flex-none pl-2 text-sm font-normal text-main-secondary\r\n                        group-focus-within:hidden group-hover:hidden\"\r\n                >\r\n                    {lastChatMessage && formatDate(lastChatMessage.sendTime)}\r\n                </div>\r\n            </>\r\n        )\r\n\r\n        const contentClassName = tcn(\r\n            'px-4 pb-[13px] pt-[11px]',\r\n            {'bg-contact-list-bg-hover': selected},\r\n        )\r\n\r\n        return (\r\n            <ContactListItem\r\n                as=\"div\"\r\n                containerRef={elemRef}\r\n                showControls={show}\r\n                userId={p2pUserId} // TODO Not sure what to specify here\r\n                isConference={isConference}\r\n                avatarProps={avatar}\r\n                title={titleElement}\r\n                body={body}\r\n                onClick={itemClickHandler}\r\n                className=\"group\"\r\n                contentClassName={contentClassName}\r\n                controls={hoverControls}\r\n                subControls={subControls}\r\n                isSelected={selected}\r\n            />\r\n        )\r\n    },\r\n)\r\n","import {type RefObject, useMemo} from 'react'\r\n\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useSubscribeForUserDetails, useUserDetails} from '@bpinc/ad-user-details-state-context'\r\nimport type {UserDetailsObject} from '@bpinc/ad-user-details-state-types'\r\nimport {useIntersectionObserver} from '@bpinc/lib-helpers'\r\n\r\n\r\ninterface Args {\r\n    elemRef: RefObject<HTMLElement>\r\n    /* Chat is selected in the Chat Center */\r\n    selected: boolean\r\n    members: Array<{id: string}>\r\n    scrollContainerRef: RefObject<HTMLElement | null>\r\n}\r\ninterface Result {\r\n    isConference: boolean\r\n    p2pUserDetails: UserDetailsObject | undefined\r\n    p2pUserId: string | undefined\r\n}\r\n\r\nexport const useMembersDetails = (args: Args): Result => {\r\n    const {elemRef, selected, members, scrollContainerRef} = args\r\n\r\n    const userDetails = useUserDetails()\r\n    const {userId: selfUserId} = useSessionState()\r\n\r\n    const membersExceptSelf = useMemo(\r\n        () => members.map(({id}) => id).filter(id => id !== selfUserId),\r\n        [members, selfUserId])\r\n\r\n    const isConference = membersExceptSelf.length > 1\r\n    const p2pUserId = isConference ? undefined : membersExceptSelf[0]\r\n    const p2pUserDetails = p2pUserId ? userDetails[p2pUserId] : undefined\r\n\r\n    const {isIntersecting} = useIntersectionObserver(elemRef, {\r\n        enabled: !selected,\r\n        root: scrollContainerRef.current,\r\n    })\r\n\r\n    const usersToSubscribe = selected ? membersExceptSelf : p2pUserId\r\n    useSubscribeForUserDetails(usersToSubscribe, selected || isIntersecting)\r\n\r\n    return useMemo(() => ({\r\n        isConference,\r\n        p2pUserDetails,\r\n        p2pUserId,\r\n    }), [isConference, p2pUserId, p2pUserDetails])\r\n}\r\n\r\n","import {useCallback} from 'react'\r\n\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useRemoveMemberFromGroupChat} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\n\r\nexport const useLeaveChatHandler = () => {\r\n    const {t} = useLocalizationState()\r\n    const {openModal} = useModalsStateMethods()\r\n    const removeMemberFromChat = useRemoveMemberFromGroupChat()\r\n    const {userId: selfUserId} = useSessionState()\r\n\r\n    return useCallback(() => {\r\n        openModal({\r\n            dataKey: 'leave-group-chat-confirmation-dialog',\r\n            body: t.CHAT_CENTER.leave_chat_confirmation_warning(),\r\n            actions: {\r\n                ok: {\r\n                    title: t.CHAT_CENTER.leave_chat_positive_button_text(),\r\n                    action: () => { removeMemberFromChat(selfUserId!) },\r\n                },\r\n                cancel: {\r\n                    title: t.CHAT_CENTER.leave_chat_negative_button_text(),\r\n                },\r\n            },\r\n        })\r\n    }, [t, openModal, removeMemberFromChat, selfUserId])\r\n}\r\n","import {useMemo} from 'react'\r\nimport {isEmpty, pickBy, values} from 'lodash-es'\r\n\r\nimport {useGroupChatState} from '@bpinc/state-group-chat-context'\r\n\r\nimport type {DisplayChats} from '../types'\r\n\r\n\r\nexport function useSortedChats(): DisplayChats {\r\n    const {items, chatListReceived} = useGroupChatState(['items', 'chatListReceived'])\r\n\r\n    return useMemo<DisplayChats>(() => {\r\n        const isLoading = !chatListReceived\r\n        if (isEmpty(items)) {\r\n            return {\r\n                recentChats: [],\r\n                pinnedChats: [],\r\n                teamChats: [],\r\n                isLoading,\r\n            }\r\n        }\r\n\r\n        const visibleChats = pickBy(items, item => !item.hidden)\r\n        const sortedChats = values(visibleChats)\r\n            .filter(chat => !chat.hidden)\r\n            .sort((chat1, chat2) => {\r\n                const chat1Messages = items[chat1.chatId]?.messages ?? []\r\n                const chat2Messages = items[chat2.chatId]?.messages ?? []\r\n\r\n                const chat1LastTimestamp = chat1Messages.length\r\n                    ? chat1Messages[chat1Messages.length - 1].sendTime\r\n                    : chat1.creationTimestamp ?? 0\r\n\r\n                const chat2LastTimestamp = chat2Messages.length\r\n                    ? chat2Messages[chat2Messages.length - 1].sendTime\r\n                    : chat2.creationTimestamp ?? 0\r\n\r\n                return chat2LastTimestamp - chat1LastTimestamp\r\n            })\r\n\r\n        const chats = sortedChats.reduce<Omit<DisplayChats, 'isLoading'>>(\r\n            (result, chat) => {\r\n                if (chat.type === 'TEAM') {\r\n                    result.teamChats.push(chat)\r\n                } else if (chat.pinned) {\r\n                    result.pinnedChats.push(chat)\r\n                } else {\r\n                    result.recentChats.push(chat)\r\n                }\r\n\r\n                return result\r\n            },\r\n            {\r\n                recentChats: [],\r\n                pinnedChats: [],\r\n                teamChats: [],\r\n            },\r\n        )\r\n\r\n        return {...chats, isLoading}\r\n\r\n    }, [chatListReceived, items])\r\n}\r\n","import React, {useEffect, useMemo, useRef} from 'react'\r\n\r\nimport {useLocalSettings} from '@bpinc/ad-local-settings-context'\r\nimport {ContactListPlaceholder} from '@bpinc/lib-contact-list-item-ui'\r\nimport {useAsRef} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {Button, SelectionContainer, SelectionItem} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatStateRef} from '@bpinc/state-group-chat-context'\r\nimport {useGroupChatUIParams, useSetupGroupChatById} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useAddNewTeamChatModal} from '../hooks/useAddNewTeamChatModal'\r\nimport {useChatListActionDispatcher} from '../hooks/useChatListActionDispatcher'\r\nimport {useSortedChats} from '../hooks/useSortedChats'\r\nimport {IconChatCenter} from '../images'\r\nimport {ChatListItem} from './ChatListItem'\r\n\r\n\r\nexport const ChatCenterLeftPanel: React.FC = React.memo(() => {\r\n    const {t} = useLocalizationState()\r\n    const localSettings = useLocalSettings()\r\n    const scrollContainerRef = useRef(null)\r\n\r\n    const setupGroupChatById = useSetupGroupChatById()\r\n    const {groupChatId} = useGroupChatUIParams()\r\n    const groupChatStateRef = useGroupChatStateRef()\r\n\r\n    const {recentChats, pinnedChats, teamChats, isLoading} = useSortedChats()\r\n\r\n    const recentItemActionDispatcher = useChatListActionDispatcher()\r\n    const openNewTeamChatModal = useAddNewTeamChatModal()\r\n\r\n    const recentItemsIds = useMemo(() => recentChats.filter(c => c.chatId).map(c => c.chatId), [recentChats])\r\n    const recentItemsIdsRef = useAsRef(recentItemsIds)\r\n\r\n    useEffect(function selectInitialChat() {\r\n        if (isLoading) {\r\n            return\r\n        }\r\n        localSettings.get('chatCenterSelectedChatId').then(chatId => {\r\n            const {items} = groupChatStateRef.current\r\n            const recentChatId = recentItemsIdsRef.current[recentItemsIdsRef.current.length - 1]\r\n\r\n            if (chatId && chatId in items) {\r\n                setupGroupChatById(chatId)\r\n            } else if (recentChatId) {\r\n                setupGroupChatById(recentChatId)\r\n            }\r\n        })\r\n    }, [groupChatStateRef, isLoading, recentItemsIdsRef, localSettings, setupGroupChatById])\r\n\r\n    const plusButtonClassName = tcn(`relative m-[3px] h-6.5 w-6.5 cursor-pointer rounded-[50%] border border-chat-title\r\n     before:absolute before:left-[calc(50%-7px)] before:top-1/2 before:h-px before:w-3.5 before:bg-chat-title after:absolute\r\n     after:left-1/2 after:top-[calc(50%-7px)] after:h-3.5 after:w-px after:bg-chat-title hover:border-primary-legacy hover:before:bg-primary-legacy\r\n     hover:after:bg-primary-legacy`)\r\n    const chatsCategoryHeaderClassName = tcn('mx-1.5 my-2.5 flex h-8')\r\n    const chatsCategoryTitleClassName = tcn('ml-2.5 mr-auto leading-[32px]')\r\n\r\n    return (\r\n        <div\r\n            className={tcn(\r\n                'w-[310px] overflow-y-auto border-r border-main-border bg-white', {\r\n                    'overflow-hidden': isLoading,\r\n                })}\r\n            data-testid=\"chat-center-left-panel\"\r\n            ref={scrollContainerRef}\r\n        >\r\n            {!!pinnedChats.length && (\r\n                <>\r\n                    <div className={chatsCategoryHeaderClassName}>\r\n                        <div className={chatsCategoryTitleClassName}>\r\n                            {t.CHAT_CENTER.pinned_chats_title()}\r\n                        </div>\r\n                    </div>\r\n                    <SelectionContainer>\r\n                        {pinnedChats.map(item => (\r\n                            <SelectionItem\r\n                                key={item.chatId}\r\n                                focusOnSelection\r\n                                touchedOnly\r\n                                itemId={item.chatId}\r\n                                tabIndex={0}\r\n                            >\r\n                                <ChatListItem\r\n                                    key={item.chatId}\r\n                                    item={item}\r\n                                    unreadCount={item.unreadCount}\r\n                                    selected={groupChatId === item.chatId}\r\n                                    scrollContainerRef={scrollContainerRef}\r\n                                    actionDispatcher={recentItemActionDispatcher}\r\n                                    onClick={setupGroupChatById}\r\n                                />\r\n                            </SelectionItem>\r\n                        ))}\r\n                    </SelectionContainer>\r\n                </>\r\n            )}\r\n            <div className={chatsCategoryHeaderClassName}>\r\n                <div className={chatsCategoryTitleClassName}>\r\n                    {t.CHAT_CENTER.team_chats_title()}\r\n                </div>\r\n                <Button\r\n                    enabledInOffline\r\n                    className={tcn(plusButtonClassName, {'before:bg-white after:bg-white hover:border-primary-legacy hover:!bg-primary-legacy': false})}\r\n                    tooltip={t.CHAT_CENTER.new_team_chat_button_tooltip()}\r\n                    data-testid=\"add-team-chat-button\"\r\n                    onClick={openNewTeamChatModal}\r\n                />\r\n            </div>\r\n            {\r\n                isLoading ? (\r\n                    <div className=\"px-2\">\r\n                        <ContactListPlaceholder amount={30} />\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <SelectionContainer>\r\n                            {teamChats.map(item => (\r\n                                <SelectionItem\r\n                                    key={item.chatId}\r\n                                    focusOnSelection\r\n                                    touchedOnly\r\n                                    itemId={item.chatId}\r\n                                    tabIndex={0}\r\n                                >\r\n                                    <ChatListItem\r\n                                        key={item.chatId}\r\n                                        item={item}\r\n                                        unreadCount={item.unreadCount}\r\n                                        selected={groupChatId === item.chatId}\r\n                                        scrollContainerRef={scrollContainerRef}\r\n                                        actionDispatcher={recentItemActionDispatcher}\r\n                                        onClick={setupGroupChatById}\r\n                                    />\r\n                                </SelectionItem>\r\n                            ))}\r\n                        </SelectionContainer>\r\n                        <div className={chatsCategoryHeaderClassName}>\r\n                            <div className={chatsCategoryTitleClassName}>\r\n                                {t.CHAT_CENTER.recent_chats_title()}\r\n                            </div>\r\n                        </div>\r\n                        <SelectionContainer>\r\n                            {recentChats.length\r\n                                ? recentChats.map(item => (\r\n                                    <SelectionItem\r\n                                        key={item.chatId}\r\n                                        focusOnSelection\r\n                                        touchedOnly\r\n                                        itemId={item.chatId}\r\n                                        tabIndex={0}\r\n                                    >\r\n                                        <ChatListItem\r\n                                            item={item}\r\n                                            unreadCount={item.unreadCount}\r\n                                            selected={groupChatId === item.chatId}\r\n                                            scrollContainerRef={scrollContainerRef}\r\n                                            actionDispatcher={recentItemActionDispatcher}\r\n                                            onClick={setupGroupChatById}\r\n                                        />\r\n                                    </SelectionItem>\r\n                                ))\r\n                                : (\r\n                                    <div className=\"flex flex-col flex-nowrap items-center\">\r\n                                        <IconChatCenter className=\"m-2 h-10 w-10 stroke-1\" />\r\n                                        <span>{t.CHAT_CENTER.no_recent_chats_message()}</span>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </SelectionContainer>\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n\r\n})\r\n","import {useCallback} from 'react'\r\n\r\nimport {useDirectoryState, useDirectoryStateMethods} from '@bpinc/ad-directory-state-context'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {NewTeamsChatModal} from '../components/NewTeamsChatModal/NewTeamsChatModal'\r\n\r\n\r\nexport const useAddNewTeamChatModal = () => {\r\n    const openNewTeamsChatModal = useModalComponentOpener(NewTeamsChatModal)\r\n    const teams = useDirectoryState('teams')\r\n    const {getAgentTeams} = useDirectoryStateMethods()\r\n    return useCallback(() => {\r\n        if (teams.length === 0) {\r\n            getAgentTeams()\r\n        }\r\n        openNewTeamsChatModal()\r\n    }, [getAgentTeams, openNewTeamsChatModal, teams.length])\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useGroupChatState, useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {RecentChatAction} from '../components/ChatListItem'\r\nimport {useLeaveChatHandler} from './useLeaveChatHandler'\r\n\r\n\r\nexport function useChatListActionDispatcher() {\r\n    const {userId: selfUserId} = useSessionState()\r\n    const {t} = useLocalizationState()\r\n    const {togglePinChat, toggleMuteChat, removeGroupChat, hideGroupChat} = useGroupChatStateMethods()\r\n    const items = useGroupChatState('items')\r\n    const {openModal} = useModalsStateMethods()\r\n    const leaveChat = useLeaveChatHandler()\r\n\r\n    const deleteChat = useCallback((chatId: string) => {\r\n        const chat = items[chatId]\r\n        if (!chat || !selfUserId) {\r\n            return\r\n        }\r\n        const isOwner = selfUserId === chat?.createdByUserId\r\n\r\n        openModal({\r\n            dataKey: 'delete-group-chat-confirmation-dialog',\r\n            title: t.CHAT_CENTER.delete_chat_confirmation_title(),\r\n            body: isOwner ? t.CHAT_CENTER.delete_chat_confirmation_owner_body() : t.CHAT_CENTER.delete_chat_confirmation_non_owner_body(),\r\n            actions: {\r\n                ok: {\r\n                    title: t.CHAT_CENTER.delete_chat_confirmation_positive_button_text(),\r\n                    action: () => isOwner ? removeGroupChat(chatId) : hideGroupChat(chatId),\r\n                },\r\n                cancel: {\r\n                    title: t.CHAT_CENTER.delete_chat_confirmation_negative_button_text(),\r\n                },\r\n            },\r\n        })\r\n    }, [items, selfUserId, openModal, t.CHAT_CENTER, hideGroupChat, removeGroupChat])\r\n\r\n    return useCallback((chatId: string, action: RecentChatAction) => {\r\n        // TODO: implement new recent chat actions\r\n        switch (action) {\r\n            case RecentChatAction.pin:\r\n                togglePinChat(chatId)\r\n                break\r\n            case RecentChatAction.mute:\r\n                toggleMuteChat(chatId)\r\n                break\r\n            case RecentChatAction.enable_alerts:\r\n                break\r\n            case RecentChatAction.delete:\r\n                deleteChat(chatId)\r\n                break\r\n            case RecentChatAction.leave:\r\n                leaveChat()\r\n                break\r\n\r\n        }\r\n    }, [togglePinChat, toggleMuteChat, deleteChat, leaveChat])\r\n}\r\n","\r\nimport {intersection, pick} from 'lodash-es'\r\n\r\nimport {isPotentialInteraction} from '@bpinc/ad-interaction-state-methods'\r\nimport type {GroupChatParams, Item} from '@bpinc/ad-interaction-state-types'\r\nimport {assertDefined, typedKeys} from '@bpinc/lib-types-helpers'\r\nimport type {GroupChatItem, GroupChatMember} from '@bpinc/state-group-chat-types'\r\n\r\nimport type {GroupChatUIState} from '../GroupChatUIState'\r\nimport type {GroupChatUIParams, GroupChatUIScope} from '../types'\r\n\r\n\r\nexport interface UtilsNS extends GroupChatUIState {}\r\nexport class UtilsNS {\r\n    /* Message params belong to the existing group chat and are identified by groupChatId.\r\n     * Or, regarding a potential chat, the params are identified by interactionId.\r\n     * If the interaction is absent, the params belong to the current UI scope. */\r\n    static getMessageParamsId(scope: GroupChatUIScope, params: GroupChatUIParams): string {\r\n        if (params.groupChatId) {\r\n            return params.groupChatId\r\n        }\r\n        return params.interactionId\r\n            ? `potential_${params.interactionId}`\r\n            : `potential_${scope}`\r\n    }\r\n\r\n    static isMembersMatch(a1: GroupChatMember[], a2: GroupChatMember[]) {\r\n        const matchedMembers = a1.length === a2.length\r\n            ? intersection(a1.map(i => i.id), a2.map(i => i.id))\r\n            : []\r\n        return matchedMembers.length === a1.length\r\n    }\r\n\r\n     /* The transport type contains extra keys, which we are going to exclude */\r\n    static clearExtraKeysInMembes(groupChatMembers: GroupChatMember[]): GroupChatMember[] {\r\n        return groupChatMembers.map(\r\n            member => pick(member, ['firstName', 'id', 'lastName']),\r\n        )\r\n    }\r\n\r\n    findGroupChatByInteraction(interaction: Item): GroupChatItem | undefined {\r\n        if (interaction.groupChatId) {\r\n            return this.groupChatConnector.getStateData().items[interaction.groupChatId]\r\n        }\r\n        const members = this.getMembersFromInteraction(interaction)\r\n        if (members) {\r\n            return this.findGroupChatItemByMembers(members)\r\n        }\r\n    }\r\n\r\n    findGroupChatItemByMembers(groupChatMembers: GroupChatMember[]): GroupChatItem | undefined {\r\n        const grupChatItems = this.groupChatConnector.getStateData().items\r\n\r\n        return Object.values(grupChatItems).find(chat => {\r\n            return UtilsNS.isMembersMatch(groupChatMembers, chat.members)\r\n        })\r\n    }\r\n\r\n    findInteraction(interactionId: string): Item {\r\n        const {items} = this.interactionStateConnector.getStateData()\r\n        const item = items.find(i => i.id === interactionId)\r\n        assertDefined(item)\r\n        return item\r\n    }\r\n\r\n    findInteractionByGroupChatParams(params: GroupChatParams): Item | undefined {\r\n        const {items} = this.interactionStateConnector.getStateData()\r\n\r\n        return items.find(item => {\r\n            if (params.groupChatId) {\r\n                return item.groupChatId === params.groupChatId\r\n            }\r\n            const groupChatMembers = this.utilsNS.getMembersFromInteraction(item)\r\n\r\n            if (params.groupChatMembers && groupChatMembers) {\r\n                return UtilsNS.isMembersMatch(params.groupChatMembers, groupChatMembers)\r\n            }\r\n        })\r\n    }\r\n\r\n    getMembersFromInteraction(interaction: Item): GroupChatMember[] | undefined {\r\n        if (interaction.groupChatMembers) {\r\n            return interaction.groupChatMembers\r\n        }\r\n        if (interaction.userId) {\r\n            const {userId, firstName, lastName} = this.sessionConnector.getStateData()\r\n            const self: GroupChatMember = {\r\n                id: userId!,\r\n                firstName: firstName!,\r\n                lastName: lastName!,\r\n            }\r\n            const recepient: GroupChatMember = {\r\n                id: interaction.userId,\r\n                firstName: interaction.displayData.firstName!,\r\n                lastName: interaction.displayData.lastName!,\r\n            }\r\n            return [self, recepient]\r\n        }\r\n    }\r\n\r\n    async replacePotentialInteraction(groupChatId: string) {\r\n        const groupChat = this.groupChatConnector.getStateData().items[groupChatId]\r\n        const groupChatMembers = groupChat.members\r\n        const interaction = this.utilsNS.findInteractionByGroupChatParams({\r\n            groupChatId,\r\n            groupChatMembers,\r\n        })\r\n\r\n        if (!isPotentialInteraction(interaction)) {\r\n            return\r\n        }\r\n        const newInteractionId = await this.interactionStateConnector.dispatch.openInternalChat({\r\n            direction: interaction.direction || 'outbound',\r\n            displayName: groupChat.title,\r\n            groupChatId: groupChat.chatId,\r\n        })\r\n\r\n        const oldInteractionId = interaction.id\r\n        this.interactionStateConnector.dispatch.completeItem(oldInteractionId)\r\n\r\n        return {newInteractionId, oldInteractionId}\r\n    }\r\n\r\n    setGroupChatParamsToInteraction(interactionId: string, params: GroupChatParams): void {\r\n        this.interactionStateConnector.dispatch.setGroupChat(interactionId, params)\r\n    }\r\n\r\n    updateGroupChatId(scope: GroupChatUIScope, groupChatId: string): void {\r\n        const groupChat = this.groupChatConnector.getStateData().items[groupChatId]\r\n\r\n        this.produceState(draft => {\r\n            draft.scopeMap[scope] = {\r\n                ...draft.scopeMap[scope],\r\n                groupChatId,\r\n                groupChatMembers: groupChat\r\n                    ? UtilsNS.clearExtraKeysInMembes(groupChat.members)\r\n                    : [],\r\n            }\r\n        })\r\n    }\r\n\r\n    updateInteractionId(scope: GroupChatUIScope, interactionId: string): void {\r\n        const interaction = this.utilsNS.findInteraction(interactionId)\r\n        const groupChatMembers = this.utilsNS.getMembersFromInteraction(interaction) || []\r\n\r\n        this.produceState(draft => {\r\n            draft.scopeMap[scope] = {\r\n                ...draft.scopeMap[scope],\r\n                interactionId,\r\n                groupChatMembers,\r\n            }\r\n            // Set interactionId to other scopes with the same members\r\n            for (const s of typedKeys(draft.scopeMap)) {\r\n                const params = draft.scopeMap[s]\r\n                if (s === scope || !params || !params.groupChatMembers) {\r\n                    return\r\n                }\r\n                if (UtilsNS.isMembersMatch(params.groupChatMembers, groupChatMembers)) {\r\n                    params.interactionId = interactionId\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    updateMembers(scope: GroupChatUIScope, groupChatMembers: GroupChatMember[]): void {\r\n        this.produceState(draft => {\r\n            draft.scopeMap[scope] = {\r\n                ...draft.scopeMap[scope],\r\n                groupChatMembers: UtilsNS.clearExtraKeysInMembes(groupChatMembers),\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\nimport {SmForm} from '@bpinc/lib-external-ui-elements'\r\nimport {Radio, SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {type SearchResultItem, isUserSearchResult, MultipleUserSearch} from '@bpinc/lib-user-search-components'\r\nimport {UtilsNS} from '@bpinc/state-group-chat-ui'\r\nimport {useGroupChatUIParams, useSetupGroupChatByMembers} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype Props = {\r\n    showMembersListUI: () => void\r\n    closePopup: () => void\r\n}\r\n\r\nexport const AddChatMembers: React.FC<Props> = props => {\r\n    const {showMembersListUI, closePopup} = props\r\n    const {t} = useLocalizationState()\r\n\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [selectedItems, setSelectedItems] = useState<SearchResultItem[]>([])\r\n    const [includeHistory, setIncludeHistory] = useState(false)\r\n\r\n    const isInitialState = searchValue === '' && !selectedItems.length\r\n\r\n    const setupGroupChatByMembers = useSetupGroupChatByMembers()\r\n    const {groupChatMembers} = useGroupChatUIParams()\r\n\r\n    const handleAddMemebers = () => {\r\n        const selectedUsers = selectedItems.filter(isUserSearchResult)\r\n\r\n        if (selectedUsers.length) {\r\n            setupGroupChatByMembers({\r\n                groupChatMembers: [\r\n                    ...groupChatMembers,\r\n                    ...UtilsNS.clearExtraKeysInMembes(selectedUsers),\r\n                ],\r\n                includeHistory,\r\n            })\r\n        }\r\n        if (groupChatMembers.length + selectedUsers.length > 2) {\r\n            showMembersListUI()\r\n        } else {\r\n            closePopup()\r\n        }\r\n    }\r\n\r\n    const handleIncludeHistory = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setIncludeHistory(e.currentTarget.value === 'include')\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        if (groupChatMembers.length > 2) {\r\n            showMembersListUI()\r\n        } else {\r\n            closePopup()\r\n        }\r\n    }\r\n\r\n    const addChatMembersPersonalChatNoteClassName = `mt-2 mx-2 rounded-[3px] border border-chat-center-personal-note-border bg-chat-center-personal-note-bg \r\n    px-6 py-3.5 leading-[20px] text-chat-center-personal-note-text`\r\n    const addChatMembersIncludeHistoryOptionClassName = '!my-2 !mx-4 last:!mb-0'\r\n    const addChatMembersControlButtonClassName = 'h-8 !px-6 !m-0 [&:not(:last-child)]:!mr-2 py-0 justify-center'\r\n\r\n    return (\r\n        <>\r\n            <MultipleUserSearch\r\n                inline\r\n                searchForUsers\r\n                searchForTeams\r\n                autoFocus\r\n                uniqueSearchId=\"chat-center\"\r\n                searchValue={searchValue}\r\n                setSearchValue={setSearchValue}\r\n                selectedItems={selectedItems}\r\n                setSelectedItems={setSelectedItems}\r\n                inputPlaceholder={t.CHAT_CENTER.chat_add_members_search_input_placeholder()}\r\n                loadingLabel={t.GLOBAL.loading()}\r\n            />\r\n            {isInitialState && groupChatMembers.length === 2 && (\r\n                <div className={addChatMembersPersonalChatNoteClassName}>\r\n                    {t.CHAT_CENTER.chat_add_members_to_personal_chat_note()}\r\n                </div>\r\n            )}\r\n            {isInitialState && groupChatMembers.length > 2 && (\r\n                <SmForm autoComplete=\"off\" noValidate role=\"radiogroup\">\r\n                    <SmForm.Field className={addChatMembersIncludeHistoryOptionClassName}>\r\n                        <Radio\r\n                            label={t.CHAT_CENTER.chat_add_members_dont_include_history_option()}\r\n                            name=\"group-chat-include-history-options\"\r\n                            value=\"not_include\"\r\n                            checked={!includeHistory}\r\n                            onChange={handleIncludeHistory}\r\n                        />\r\n                    </SmForm.Field>\r\n                    <SmForm.Field className={addChatMembersIncludeHistoryOptionClassName}>\r\n                        <Radio\r\n                            label={t.CHAT_CENTER.chat_add_members_include_history_option()}\r\n                            name=\"group-chat-include-history-options\"\r\n                            value=\"include\"\r\n                            checked={includeHistory}\r\n                            onChange={handleIncludeHistory}\r\n                        />\r\n                    </SmForm.Field>\r\n                </SmForm>\r\n            )}\r\n            <div className=\"flex justify-end px-4 pb-4 pt-2\">\r\n                <SemanticButton\r\n                    enabledInOffline\r\n                    onClick={handleCancel}\r\n                    className={addChatMembersControlButtonClassName}\r\n                >\r\n                    {t.CHAT_CENTER.chat_add_members_negative_button_text()}\r\n                </SemanticButton>\r\n                <SemanticButton\r\n                    primary\r\n                    onClick={handleAddMemebers}\r\n                    disabled={!selectedItems.length}\r\n                    className={addChatMembersControlButtonClassName}\r\n                >\r\n                    {t.CHAT_CENTER.chat_add_members_positive_button_text()}\r\n                </SemanticButton>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {getUserStatusIcon, useUserDetails} from '@bpinc/ad-user-details-state-context'\r\nimport type {PropsAvatar} from '@bpinc/lib-contact-list-item-ui'\r\nimport {useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\n\r\n\r\nexport type ChatMemberDisplayData = {\r\n    userId: string\r\n    displayName: string\r\n    avatarData: PropsAvatar\r\n    extension: string | undefined\r\n}\r\n\r\nexport function useMembersDisplayData(): ChatMemberDisplayData[] {\r\n    const {formatFullName} = useFormatting()\r\n    const userDetails = useUserDetails()\r\n    const {groupChatMembers} = useGroupChatUIParams()\r\n\r\n    return useMemo(() => {\r\n        return [...groupChatMembers]\r\n            .sort((m1, m2) => m1.firstName.toLowerCase().localeCompare(m2.firstName.toLowerCase()))\r\n            .map<ChatMemberDisplayData>(member => {\r\n                const memberDetails = userDetails[member.id]\r\n                const memberPresenceState = memberDetails?.data.presenceState\r\n                const memberPhoneExtension = memberDetails?.data.extension\r\n\r\n                return {\r\n                    userId: member.id,\r\n                    displayName: formatFullName(member.firstName, member.lastName),\r\n                    avatarData: {\r\n                        avatarType: 'user',\r\n                        firstName: member.firstName,\r\n                        lastName: member.lastName,\r\n                        isAgent: true,\r\n                        isOnline: memberPresenceState === 'available',\r\n                        onlineStatusIcon: getUserStatusIcon(memberDetails?.data),\r\n                    },\r\n                    extension: memberPhoneExtension,\r\n                }\r\n            })\r\n    }, [groupChatMembers, formatFullName, userDetails])\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useRemoveMemberFromGroupChat} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\n\r\nexport const useRemoveChatMemberHandler = (userId: string, displayName: string) => {\r\n    const {t} = useLocalizationState()\r\n    const {openModal} = useModalsStateMethods()\r\n    const removeMemberFromChat = useRemoveMemberFromGroupChat()\r\n\r\n    return useCallback(() => {\r\n        openModal({\r\n            dataKey: 'remove-chat-member-confirmation-dialog',\r\n            body: t.CHAT_CENTER.remove_member_confirmation_text(displayName),\r\n            actions: {\r\n                ok: {\r\n                    title: t.CHAT_CENTER.remove_member_positive_button_text(),\r\n                    action: () => { removeMemberFromChat(userId) },\r\n                },\r\n                cancel: {\r\n                    title: t.CHAT_CENTER.remove_member_negative_button_text(),\r\n                },\r\n            },\r\n        })\r\n    }, [displayName, t, openModal, removeMemberFromChat, userId])\r\n}\r\n","import React, {useCallback, useMemo, useRef} from 'react'\r\nimport {noop} from 'lodash-es'\r\n\r\nimport {useInteractionStateMethods} from '@bpinc/ad-interaction-state-context'\r\nimport {useCallHandler} from '@bpinc/ad-interaction-state-hooks'\r\nimport {useCommunicatorFloatingStateSetter} from '@bpinc/ad-main-page-ui-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {AppRoutes, useNavigationState} from '@bpinc/lib-communicator-navigation-state'\r\nimport {ContactListItem} from '@bpinc/lib-contact-list-item-ui'\r\nimport {useFocusElement} from '@bpinc/lib-helpers'\r\nimport {IconChat, IconPhone} from '@bpinc/lib-icons'\r\nimport {CircleButton, SelectionItem} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {ChatMemberDisplayData} from '../../hooks/useMembersDisplayData'\r\nimport {useRemoveChatMemberHandler} from '../../hooks/useRemoveChatMemberHandler'\r\nimport {IconRemoveMember} from '../../images'\r\n\r\n\r\ntype ChatMemberItemProps = {\r\n    onInteraction?: () => void\r\n    autoFocus?: boolean\r\n    member: ChatMemberDisplayData\r\n}\r\n\r\nexport const ChatMemberItem: React.FC<ChatMemberItemProps> = props => {\r\n    const {member, autoFocus, onInteraction = noop} = props\r\n    const {displayName, avatarData, userId, extension} = member\r\n\r\n    const setActivePage = useNavigationState('setActivePage')\r\n    const setCommunicatorFloatingState = useCommunicatorFloatingStateSetter()\r\n    const {agentChatOpen} = useInteractionStateMethods()\r\n    const {userId: selfUserId, phoneDeviceCapabilities: {canDial}} = useSessionState()\r\n    const {t} = useLocalizationState()\r\n    const dispatchCall = useCallHandler()\r\n    const removeChatMember = useRemoveChatMemberHandler(userId, displayName)\r\n\r\n    const isSelf = userId === selfUserId\r\n\r\n    const ref = useRef<HTMLDivElement>(null)\r\n    useFocusElement(ref, {condition: autoFocus})\r\n\r\n    const handleCall = useCallback(() => {\r\n        dispatchCall({\r\n            phone: extension,\r\n            firstName: avatarData.firstName,\r\n            lastName: avatarData.lastName,\r\n            userId,\r\n            origination: 'chat-center',\r\n            navigateToInteractionsPage: true,\r\n        })\r\n        onInteraction()\r\n        setCommunicatorFloatingState(state => state === 'closed' ? 'floating' : state)\r\n    }, [\r\n        extension,\r\n        avatarData.firstName,\r\n        avatarData.lastName,\r\n        userId,\r\n        dispatchCall,\r\n        setCommunicatorFloatingState,\r\n        onInteraction,\r\n    ])\r\n\r\n    const handleChat = useCallback(() => {\r\n        agentChatOpen({\r\n            userId,\r\n            firstName: avatarData.firstName ?? '',\r\n            lastName: avatarData.lastName ?? '',\r\n            origination: 'chat-center',\r\n            number: extension,\r\n        })\r\n        onInteraction()\r\n        setActivePage({name: AppRoutes.Interactions})\r\n        setCommunicatorFloatingState(state => state === 'closed' ? 'floating' : state)\r\n    }, [\r\n        extension,\r\n        avatarData.firstName,\r\n        avatarData.lastName,\r\n        userId,\r\n        agentChatOpen,\r\n        setActivePage,\r\n        setCommunicatorFloatingState,\r\n        onInteraction,\r\n    ])\r\n\r\n    const hoverControls = useMemo(\r\n        function memoizeControls() {\r\n            return (\r\n                <>\r\n                    {canDial && extension && !isSelf && (\r\n                        <CircleButton\r\n                            onClick={handleCall}\r\n                            tooltip={t.CONTACT.button_start_call_text()}\r\n                            noActiveState\r\n                            transparent\r\n                            clickThrottle={500}\r\n                            data-testid=\"call-button\"\r\n                        >\r\n                            <IconPhone />\r\n                        </CircleButton>\r\n                    )}\r\n                    <CircleButton\r\n                        onClick={handleChat}\r\n                        tooltip={t.CONTACT.button_initiate_chat_text()}\r\n                        noActiveState\r\n                        transparent\r\n                        clickThrottle={500}\r\n                        data-testid=\"chat-button\"\r\n                    >\r\n                        <IconChat />\r\n                    </CircleButton>\r\n                    {!isSelf && (\r\n                        <CircleButton\r\n                            className=\"!ml-3\"\r\n                            onClick={removeChatMember}\r\n                            tooltip={t.INTERNAL_CHAT.group_chat_remove_member_icon_tooltip(displayName)}\r\n                            noActiveState\r\n                            transparent\r\n                            clickThrottle={500}\r\n                            data-testid=\"remove-member-button\"\r\n                        >\r\n                            <IconRemoveMember />\r\n                        </CircleButton>\r\n                    )}\r\n                </>\r\n            )\r\n        },\r\n        [canDial, isSelf, displayName, extension, handleCall, handleChat, removeChatMember, t],\r\n    )\r\n\r\n    return (\r\n        <ContactListItem\r\n            containerProps={{\r\n                itemId: userId,\r\n                focusOnSelection: true,\r\n                touchedOnly: true,\r\n            }}\r\n            as={SelectionItem}\r\n            userId={userId}\r\n            avatarProps={avatarData}\r\n            title={displayName}\r\n            onClick={noop}\r\n            containerRef={ref}\r\n            contentClassName=\"!pt-1 !px-5\"\r\n            controls={hoverControls}\r\n        />\r\n    )\r\n}\r\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\r\nimport {noop} from 'lodash-es'\r\n\r\nimport {Modal, SearchInput, SemanticButton} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport {useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useMembersDisplayData} from '../../hooks/useMembersDisplayData'\r\nimport {ChatMemberItem} from './ChatMemberItem'\r\n\r\n\r\ntype Props = {\r\n    closeModal?: () => void\r\n}\r\n\r\nexport const FullChatMembersListModal: React.FC<Props> = props => {\r\n    const {closeModal = noop} = props\r\n\r\n    const {t} = useLocalizationState()\r\n    const {groupChatMembers} = useGroupChatUIParams()\r\n    const [filter, setFilter] = useState('')\r\n\r\n    const chatMembersDisplayData = useMembersDisplayData()\r\n\r\n    const onFilterChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilter(e.target.value)\r\n    }, [])\r\n    const onFilterClear = useCallback(() => setFilter(''), [])\r\n\r\n    const [chatDisplayName, setChatDisplayName] = useState('')\r\n    const {getChatDisplayName} = useGroupChatStateMethods()\r\n    useEffect(() => {\r\n        getChatDisplayName(groupChatMembers).then(setChatDisplayName)\r\n    }, [groupChatMembers, getChatDisplayName])\r\n\r\n    const membersListUI = useMemo(() => {\r\n        return chatMembersDisplayData\r\n            .filter(member => member.displayName.includes(filter))\r\n            .map(member => (\r\n                <ChatMemberItem\r\n                    key={member.userId}\r\n                    onInteraction={closeModal}\r\n                    member={member}\r\n                />\r\n            ))\r\n    }, [chatMembersDisplayData, filter, closeModal])\r\n\r\n    return (\r\n        <>\r\n            <Modal.Header role=\"heading\" id=\"activeDialogHeader\">\r\n                {chatDisplayName}\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <SearchInput\r\n                    onChange={onFilterChange}\r\n                    onClear={onFilterClear}\r\n                    value={filter}\r\n                    className=\"mb-2 w-full\"\r\n                    aria-label={t.CHAT_CENTER.full_members_list_search_input_placeholder()}\r\n                    placeholder={t.CHAT_CENTER.full_members_list_search_input_placeholder()}\r\n                    data-testid=\"search-input\"\r\n                    clearable\r\n                    fluid\r\n                />\r\n                <div className=\"max-h-[calc(min(672px,70vh))] min-h-[280px] overflow-y-auto overflow-x-hidden\">\r\n                    {membersListUI}\r\n                </div>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <SemanticButton\r\n                    onClick={closeModal}\r\n                    className=\"mx-1\"\r\n                >\r\n                    {t.CHAT_CENTER.full_members_list_close_button_text()}\r\n                </SemanticButton>\r\n            </Modal.Actions>\r\n        </>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {Button, SelectionContainer} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatItem} from '@bpinc/state-group-chat-ui-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useLeaveChatHandler} from '../../hooks/useLeaveChatHandler'\r\nimport {useMembersDisplayData} from '../../hooks/useMembersDisplayData'\r\nimport {useShowFullChatMembersListModal} from '../../hooks/useShowFullChatMembersListModal'\r\nimport {ChatMemberItem} from './ChatMemberItem'\r\n\r\n\r\ntype Props = {\r\n    showAddMembersUI: () => void\r\n}\r\n\r\nconst MAX_MEMBERS_DISPLAY_NUMBER = 7\r\nconst MEMBERS_DISPLAY_NUMBER_OVER_LIMIT = 5\r\n\r\n\r\nexport const ChatMembersList: React.FC<Props> = props => {\r\n    const {t} = useLocalizationState()\r\n    const {showAddMembersUI} = props\r\n    const chatData = useGroupChatItem()\r\n\r\n    const showFullChatMembersList = useShowFullChatMembersListModal()\r\n\r\n    const membersDisplayData = useMembersDisplayData()\r\n    const membersCount = membersDisplayData.length\r\n\r\n    const leaveChat = useLeaveChatHandler()\r\n\r\n    const limitedMembersList = useMemo(() => {\r\n        return membersDisplayData.slice(\r\n            0,\r\n            membersCount > MAX_MEMBERS_DISPLAY_NUMBER\r\n                ? MEMBERS_DISPLAY_NUMBER_OVER_LIMIT\r\n                : membersCount,\r\n        )\r\n    }, [membersCount, membersDisplayData])\r\n\r\n\r\n    const chatMembersPopupButtonClassName = `border-none bg-transparent m-0 cursor-pointer w-full text-base/[16px]\r\n    text-chat-center-message-text-color hover:bg-contact-list-bg-hover`\r\n\r\n    return (\r\n        <>\r\n            <SelectionContainer className=\"w-full\">\r\n                {limitedMembersList.map((member, idx) => (\r\n                    <ChatMemberItem\r\n                        autoFocus={idx === 0}\r\n                        key={member.userId}\r\n                        member={member}\r\n                    />\r\n                ))}\r\n            </SelectionContainer>\r\n\r\n            {membersCount > MAX_MEMBERS_DISPLAY_NUMBER && (\r\n                <Button\r\n                    enabledInOffline\r\n                    className={tcn(chatMembersPopupButtonClassName, 'px-4 py-3')}\r\n                    onClick={showFullChatMembersList}\r\n                >\r\n                    {t.CHAT_CENTER.show_all_participants_button_text(String(membersCount))}\r\n                </Button>\r\n            )}\r\n\r\n            {!chatData?.disabled && chatData?.type !== 'TEAM' && (\r\n                <>\r\n                    <Button\r\n                        className={tcn(chatMembersPopupButtonClassName, 'border-t !border-solid !border-chat-center-add-people-btn px-4 py-3')}\r\n                        onClick={showAddMembersUI}\r\n                    >\r\n                        {t.CHAT_CENTER.add_people_button_text()}\r\n                    </Button>\r\n\r\n                    <Button\r\n                        className={tcn(chatMembersPopupButtonClassName, 'px-4 py-3')}\r\n                        onClick={leaveChat}\r\n                    >\r\n                        {t.CHAT_CENTER.leave_chat_button_text()}\r\n                    </Button>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React, {useCallback} from 'react'\r\n\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {FullChatMembersListModal} from '../components/popups/FullChatMembersListModal'\r\n\r\n\r\nexport const useShowFullChatMembersListModal = () => {\r\n    const {openModal} = useModalsStateMethods()\r\n\r\n    return useCallback(() => {\r\n        openModal({\r\n            dataKey: 'full-chat-members-list-dialog',\r\n            content: <FullChatMembersListModal />,\r\n        })\r\n    }, [openModal])\r\n}\r\n","import React, {useCallback, useState} from 'react'\r\n\r\nimport {useEscapeManager} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {ClickOutsideWrapper} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport {AddChatMembers} from './AddChatMembers'\r\nimport {ChatMembersList} from './ChatMembersList'\r\n\r\n\r\ninterface Props {\r\n    closePopup: () => void\r\n    openerRef: React.RefObject<HTMLElement> | null\r\n    className: string\r\n}\r\n\r\ntype DisplayPhase = 'members-list' | 'add-member'\r\n\r\nconst clickOutsideExceptionSelectors = ['.ui.modals']\r\n\r\nexport const ChatMembersPopup: React.FC<Props> = props => {\r\n    const {openerRef, className, closePopup} = props\r\n    const {groupChatMembers} = useGroupChatUIParams()\r\n\r\n    const initialDisplayPhase = groupChatMembers.length > 2 ? 'members-list' : 'add-member'\r\n    const [displayPhase, setDisplayPhase] = useState<DisplayPhase>(initialDisplayPhase)\r\n\r\n    const showAddMembersUI = useCallback(() => setDisplayPhase('add-member'), [])\r\n    const showMembersListUI = useCallback(() => setDisplayPhase('members-list'), [])\r\n\r\n    const onClickOutside = useCallback(() => {\r\n        closePopup()\r\n        showMembersListUI()\r\n    }, [closePopup, showMembersListUI])\r\n\r\n    useEscapeManager(closePopup)\r\n\r\n    return (\r\n        <ClickOutsideWrapper\r\n            onClickOutside={onClickOutside}\r\n            openerRef={openerRef}\r\n            className={tcn('z-[6] flex w-[420px] flex-col overflow-hidden rounded border border-primary-legacy bg-white shadow', className)}\r\n            selectorExceptions={clickOutsideExceptionSelectors}\r\n        >\r\n            {displayPhase === 'members-list' && (\r\n                <ChatMembersList showAddMembersUI={showAddMembersUI} />\r\n            )}\r\n            {displayPhase === 'add-member' && (\r\n                <AddChatMembers showMembersListUI={showMembersListUI} closePopup={closePopup} />\r\n            )}\r\n        </ClickOutsideWrapper>\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useRef} from 'react'\r\n\r\nimport {useBoolean} from '@bpinc/lib-helpers'\r\nimport {ButtonIcon, IconProfile16, IconProfile24} from '@bpinc/lib-jskit-ui'\r\nimport type {GroupChatMember} from '@bpinc/state-group-chat-types'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {ChatMembersPopup} from '../popups/ChatMembersPopup'\r\n\r\n\r\ntype Props = {\r\n    size?: '16' | '24'\r\n}\r\nconst defaultMembers: GroupChatMember[] = []\r\nObject.freeze(defaultMembers)\r\n\r\nexport const ChatMembersButton: FC<Props> = ({size = '24'}) => {\r\n    const {t} = useLocalizationState()\r\n    const chatMembersPopupOpenerRef = useRef(null)\r\n    const {value: show, toggle: toggleShow, setFalse: handleClose} = useBoolean()\r\n\r\n    return (\r\n        <>\r\n            <ButtonIcon\r\n                active={show}\r\n                tooltip={t.CHAT_CENTER.chat_header_members_icon_tooltip()}\r\n                className=\"flex cursor-pointer items-center justify-center border-none bg-none p-0\"\r\n                ref={chatMembersPopupOpenerRef}\r\n                onClick={toggleShow}\r\n            >\r\n                {size === '24'\r\n                    ? <IconProfile24 />\r\n                    : <IconProfile16 />\r\n                }\r\n            </ButtonIcon>\r\n            {show && (\r\n                <ChatMembersPopup\r\n                    closePopup={handleClose}\r\n                    openerRef={chatMembersPopupOpenerRef}\r\n                    className=\"absolute right-0 top-10\"\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React, {useCallback} from 'react'\r\n\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useUserDetails} from '@bpinc/ad-user-details-state-context'\r\nimport {AvatarLegacy} from '@bpinc/lib-avatar-ui'\r\nimport {getGroupChatAvatar} from '@bpinc/lib-chat-ui/src/helpers'\r\nimport {InputOnClick} from '@bpinc/lib-ui-elements'\r\nimport {useGroupChatStateMethods} from '@bpinc/state-group-chat-context'\r\nimport {useGroupChatItem} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport {ChatMembersButton} from '../ChatMembersButton/ChatMembersButton'\r\n\r\n\r\nexport const ChatHeader: React.FC = () => {\r\n    const session = useSessionState()\r\n    const userDetails = useUserDetails()\r\n    const chatData = useGroupChatItem()\r\n    const {title, members, chatId} = chatData || {}\r\n\r\n    const otherParties = members?.filter(member => member.id !== session.userId) ?? []\r\n\r\n    const singleUserId = otherParties.length === 1 ? otherParties[0].id : undefined\r\n    const p2pUser = singleUserId ? userDetails[singleUserId]?.data : undefined\r\n\r\n    const avatar = getGroupChatAvatar({chatData, p2pUser, session})\r\n\r\n    const {renameGroupChat} = useGroupChatStateMethods()\r\n\r\n    const handleRename = useCallback(\r\n        function handleRenameCallback(newName: string) {\r\n            if (chatId) {\r\n                renameGroupChat(chatId, newName)\r\n            }\r\n        },\r\n        [chatId, renameGroupChat],\r\n    )\r\n\r\n    if (!members) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"p flex h-15 border-b border-main-border pl-6 pr-8\">\r\n            <div className=\"flex items-center overflow-hidden pl-2\">\r\n                <AvatarLegacy\r\n                    className=\"mr-5 inline-block\"\r\n                    firstName={avatar.firstName}\r\n                    lastName={avatar.lastName}\r\n                    url={avatar.url}\r\n                    size={32}\r\n                    icon={avatar.icon}\r\n                    online={avatar.isOnline}\r\n                    onlineStatus={avatar.onlineStatusIcon}\r\n                    headPhones={avatar.isAgent}\r\n                    type={avatar.avatarType}\r\n                />\r\n                <InputOnClick\r\n                    text={title!}\r\n                    className=\"truncate text-xl font-semibold text-main\"\r\n                    onBlur={handleRename}\r\n                />\r\n            </div>\r\n            <div className=\"relative ml-auto flex items-center\">\r\n                <ChatMembersButton />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {InputControlsArea} from './InputControlsArea'\r\n\r\n\r\nexport const PotentialChat: React.FC = () => {\r\n    const {t} = useLocalizationState()\r\n\r\n    return (\r\n        <div className=\"relative flex h-full w-[calc(100%-310px)] flex-auto flex-col justify-between overflow-hidden\">\r\n            <div className=\"ml-4 flex flex-[1_0_auto] items-center justify-center\">\r\n                <div className=\"leading-[23px] text-main\">\r\n                    <span className=\"block text-xl\">\r\n                        {t.CHAT_CENTER.potential_chat_message_main_text()}\r\n                    </span>\r\n                    <span className=\"block text-base\">\r\n                        {t.CHAT_CENTER.potential_chat_message_secondary_text()}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <InputControlsArea />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useGroupChatUIParams} from '@bpinc/state-group-chat-ui-context'\r\n\r\nimport {ChatContent} from './chat/ChatContent'\r\nimport {ChatHeader} from './chat/ChatHeader'\r\nimport {PotentialChat} from './chat/PotentialChat'\r\n\r\n\r\nexport const ChatCenterMainArea: React.FC = () => {\r\n    const {groupChatId, groupChatMembers} = useGroupChatUIParams()\r\n    const isPotentialChat = Boolean(!groupChatId && groupChatMembers.length)\r\n\r\n    return isPotentialChat\r\n        ? <PotentialChat />\r\n        : groupChatId\r\n            ? (\r\n                <div className=\"flex w-[calc(100%-310px)] flex-auto flex-col\">\r\n                    <ChatHeader />\r\n                    <ChatContent />\r\n                </div>\r\n            )\r\n            : null\r\n}\r\n","import React from 'react'\r\n\r\nimport {ChatCenterHeader} from './ChatCenterHeader'\r\nimport {ChatCenterLeftPanel} from './ChatCenterLeftPanel'\r\nimport {ChatCenterMainArea} from './ChatCenterMainArea'\r\nimport {ChatCenterScopeProvider} from './ChatCenterScopeProvider'\r\n\r\n\r\nexport const ChatCenterPage: React.FC = React.memo(() => {\r\n    return (\r\n        <ChatCenterScopeProvider scope=\"chatCenter\">\r\n            <div data-testid=\"chat-center-page\" className=\"flex h-full w-full flex-col flex-nowrap\">\r\n                <ChatCenterHeader />\r\n                <div className=\"flex h-[calc(100%-56px)] w-full flex-row flex-nowrap\">\r\n                    <ChatCenterLeftPanel />\r\n                    <ChatCenterMainArea />\r\n                </div>\r\n            </div>\r\n        </ChatCenterScopeProvider>\r\n    )\r\n})\r\n","import React, {memo} from 'react'\r\n\r\nimport type {ChatMembersButtonProviderProps} from '../../types'\r\nimport {ChatCenterScopeProvider} from '../ChatCenterScopeProvider'\r\nimport {ChatMembersButton} from './ChatMembersButton'\r\n\r\n/* Used as an exposed component, it allows defining scope when it is outside the ChatCenter tree */\r\nexport const ChatMembersButtonProvider = memo<ChatMembersButtonProviderProps>(\r\n    function ChatMembersButtonProvider({scope, size}) {\r\n        return (\r\n            <ChatCenterScopeProvider scope={scope}>\r\n                <ChatMembersButton size={size} />\r\n            </ChatCenterScopeProvider>\r\n        )\r\n    })\r\n","\r\nexport const DOMAIN_AUTH_URL = 'http://localhost:9897'\r\nconst DOMAIN_PARAM = 'domain'\r\n\r\nconst linkUrl = new URL(DOMAIN_AUTH_URL)\r\nlinkUrl.searchParams.append(DOMAIN_PARAM, location.hostname)\r\n\r\nexport const CURRENT_DOMAIN_AUTH_URL = linkUrl.toString()\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useBpClientStateConnector} from '@bpinc/ad-bpclient-state-context'\r\nimport {SmButton} from '@bpinc/lib-external-ui-elements'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {CURRENT_DOMAIN_AUTH_URL} from '../constants'\r\n\r\n\r\nconst DOMAIN_AUTHORIZATION_MODAL_ID = 'bpClient/onShowDomainAuthorizationDialog'\r\n\r\n\r\nexport const useDomainAuthorizationPopup = () => {\r\n    const bpClientConnector = useBpClientStateConnector()\r\n    const {openModal, closeModal} = useModalsStateMethods()\r\n    const t = useLocalizationState('t')\r\n\r\n    const onShowDomainAuthorizationDialog = useEvent(() => {\r\n        openModal({\r\n            id: DOMAIN_AUTHORIZATION_MODAL_ID,\r\n            title: t.INSTALLATION_PROCESS.bp_client_not_authorized_header(),\r\n            body: (\r\n                <>\r\n                    <span>\r\n                        {t.INSTALLATION_PROCESS.bp_client_not_authorized_message_part1()}\r\n                    </span>\r\n                    <a href={CURRENT_DOMAIN_AUTH_URL} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        {t.ERROR_MESSAGES.domainAuthentificationErrorAnchor()}\r\n                    </a>\r\n                    <span>\r\n                        {t.INSTALLATION_PROCESS.bp_client_not_authorized_message_part2()}\r\n                    </span>\r\n                </>\r\n            ),\r\n            actions: ({closeModal: closeThisModal}) => (\r\n                <SmButton onClick={closeThisModal}>\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk()}\r\n                </SmButton>\r\n            ),\r\n        })\r\n    })\r\n\r\n    const onHideDomainAuthorizationDialog = useEvent(() => {\r\n        closeModal(DOMAIN_AUTHORIZATION_MODAL_ID)\r\n    })\r\n\r\n    useEffect(() => {\r\n        const subscription = bpClientConnector.dispenser.subscribe({\r\n            onShowDomainAuthorizationDialog,\r\n            onHideDomainAuthorizationDialog,\r\n        })\r\n        return subscription.unsubscribe\r\n    }, [bpClientConnector, onShowDomainAuthorizationDialog, onHideDomainAuthorizationDialog])\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useBpClientState, useBpClientStateConnector} from '@bpinc/ad-bpclient-state-context'\r\nimport {platformInfo} from '@bpinc/ad-build-and-platform-info'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {useInstallationMethods} from '@bpinc/lib-helpers-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\n\r\nconst linkClass = 'cursor-pointer text-primary-legacy'\r\n\r\nconst EXTENSION_ID = 'ext-link'\r\nconst EXTENSION_ID_FF = 'ext-link-firefox'\r\nconst PLUGIN_ID = 'plugin-link'\r\n\r\ntype ModalContentProps = {\r\n    isExtAvailable: boolean\r\n    install: boolean\r\n}\r\n\r\nconst ModalContent: React.FC<ModalContentProps> = ({isExtAvailable, install}) => {\r\n    const {t: {INSTALLATION_PROCESS: i18n}} = useLocalizationState()\r\n    const {\r\n        installChromeExtension,\r\n        installFirefoxExtension,\r\n        installBPClientPlugin,\r\n    } = useInstallationMethods()\r\n\r\n    /* Set click handler after the modal is rendered or translations are changed */\r\n    useEffect(() => {\r\n        const chromeLink = document.getElementById(EXTENSION_ID)\r\n        const firefoxLink = document.getElementById(EXTENSION_ID_FF)\r\n        const pluginLink = document.getElementById(PLUGIN_ID)\r\n\r\n        chromeLink?.addEventListener('click', installChromeExtension)\r\n        firefoxLink?.addEventListener('click', installFirefoxExtension)\r\n        pluginLink?.addEventListener('click', installBPClientPlugin)\r\n\r\n        return () => {\r\n            chromeLink?.removeEventListener('click', installChromeExtension)\r\n            firefoxLink?.removeEventListener('click', installFirefoxExtension)\r\n            pluginLink?.removeEventListener('click', installBPClientPlugin)\r\n        }\r\n    }, [installChromeExtension, installFirefoxExtension, installBPClientPlugin])\r\n\r\n    let content: string = i18n.install_updateHeader(PLUGIN_ID, linkClass)\r\n\r\n    if (install) {\r\n        if (platformInfo.browser === 'chrome') {\r\n            content = isExtAvailable\r\n                ? i18n.install_installHeader(PLUGIN_ID, linkClass)\r\n                : i18n.install_installHeaderChrome(EXTENSION_ID, PLUGIN_ID, linkClass)\r\n\r\n        } else if (platformInfo.browser === 'firefox') {\r\n            content = isExtAvailable\r\n                ? i18n.install_installHeader(PLUGIN_ID, linkClass)\r\n                : i18n.install_installHeaderFirefox(EXTENSION_ID_FF, PLUGIN_ID, linkClass)\r\n\r\n        } else {\r\n            content = i18n.install_installHeader(PLUGIN_ID, linkClass)\r\n        }\r\n    }\r\n\r\n    return <div dangerouslySetInnerHTML={{__html: content}} />\r\n}\r\n\r\nexport const useInstallationRequiredPopup = () => {\r\n    const {WINDOW_POPUP_TITLES_AND_MESSAGES: i18n} = useLocalizationState('t')\r\n    const isExtensionAvailable = useBpClientState('isExtensionAvailable')\r\n    const bpClientConnector = useBpClientStateConnector()\r\n    const {openModal} = useModalsStateMethods()\r\n\r\n    const onInstallationRequired = useEvent((install: boolean) => {\r\n        openModal({\r\n            title: i18n.window_title_warning(),\r\n            body: (\r\n                <ModalContent\r\n                    install={install}\r\n                    isExtAvailable={isExtensionAvailable}\r\n                />\r\n            ),\r\n            actions: {\r\n                ok: {\r\n                    title: i18n.window_buttonOk(),\r\n                },\r\n            },\r\n        })\r\n    })\r\n\r\n    useEffect(() => {\r\n        const subscription = bpClientConnector.dispenser.subscribe({onInstallationRequired})\r\n        return subscription.unsubscribe\r\n    }, [bpClientConnector, onInstallationRequired])\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useBpClientStateConnector} from '@bpinc/ad-bpclient-state-context'\r\nimport {platformInfo} from '@bpinc/ad-build-and-platform-info'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {SmButton} from '@bpinc/lib-external-ui-elements'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {URL_EXTENSION_INSTALLER_CHROME, URL_EXTENSION_INSTALLER_FIREFOX, URL_MAC_PLUGIN} from '@bpinc/lib-helpers-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\n\r\ntype Props = {\r\n    browserName: string\r\n}\r\n\r\nconst ModalContent: React.FC<Props> = ({browserName}) => {\r\n    const {INSTALLATION_PROCESS: i18n} = useLocalizationState('t')\r\n    const serverOrigin = useSessionState('serverOrigin')\r\n\r\n    const isChrome = platformInfo.browser === 'chrome'\r\n    const isFirefox = platformInfo.browser === 'firefox'\r\n    const isSafari = platformInfo.browser === 'safari'\r\n    let linkHref = ''\r\n\r\n    if (isChrome) {\r\n        linkHref = URL_EXTENSION_INSTALLER_CHROME\r\n    } else if (isFirefox) {\r\n        linkHref = serverOrigin + URL_EXTENSION_INSTALLER_FIREFOX\r\n    } else if (isSafari) {\r\n        linkHref = serverOrigin + URL_MAC_PLUGIN\r\n    }\r\n    return (\r\n        <>\r\n            <span>\r\n                {i18n.bp_client_old_extension_version(browserName)}\r\n            </span>\r\n            {(isChrome || isFirefox || isSafari) && (\r\n                <>\r\n                    <br />\r\n                    <br />\r\n                    <span>\r\n                        {i18n.bp_client_update_extension_part1()}\r\n                    </span>\r\n                    <a href={linkHref} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        {i18n.bp_client_update_extension_text()}\r\n                    </a>\r\n                    <span>\r\n                        {i18n.bp_client_update_extension_part2()}\r\n                    </span>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const useOutdatedBrowserExtensionPopup = () => {\r\n    const bpClientConnector = useBpClientStateConnector()\r\n    const {WINDOW_POPUP_TITLES_AND_MESSAGES: i18n} = useLocalizationState('t')\r\n    const {openModal} = useModalsStateMethods()\r\n\r\n    const onShowExtensionIsOldDialog = useEvent((browserName: string) => {\r\n        openModal({\r\n            title: i18n.window_title_warning(),\r\n            body: (\r\n                <ModalContent browserName={browserName} />\r\n            ),\r\n            actions: ({closeModal}) => (\r\n                <SmButton onClick={closeModal}>\r\n                    {i18n.window_buttonOk()}\r\n                </SmButton>\r\n            ),\r\n        })\r\n    })\r\n\r\n    useEffect(() => {\r\n        const subscription = bpClientConnector.dispenser.subscribe({onShowExtensionIsOldDialog})\r\n        return subscription.unsubscribe\r\n    }, [bpClientConnector, onShowExtensionIsOldDialog])\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useAppConfigState} from '@bpinc/ad-app-config-state-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst reloadPage = () => location.reload()\r\n\r\nexport function useOutdatedClientNotification() {\r\n    const {showNotification, hideNotificationById} = useNotificationsState('methods')\r\n    const isClientOutdated = useAppConfigState('isClientOutdated')\r\n    const isLoggedIn = useSessionState('isLoggedIn')\r\n    const {GLOBAL: i18n} = useLocalizationState('t')\r\n\r\n    const updateNotification = useEvent(() => {\r\n        if (!isLoggedIn) {\r\n            return\r\n        }\r\n        if (isClientOutdated) {\r\n            showNotification({\r\n                type: 'error',\r\n                id: Notifications.OutdatedClientAppError,\r\n                message: (\r\n                    <>\r\n                        <span>{i18n.reload_confirm_new_msg_part1()}</span>\r\n                        <a href=\"#\" onClick={reloadPage}>\r\n                            {i18n.reload_confirm_action_button_text()}\r\n                        </a>\r\n                        <span>{i18n.reload_confirm_new_msg_part2()}</span>\r\n                    </>\r\n                ),\r\n            })\r\n        } else {\r\n            hideNotificationById(Notifications.OutdatedClientAppError)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        updateNotification()\r\n        // track only isClientOutdated\r\n    }, [isClientOutdated, updateNotification])\r\n}\r\n","import {useEffect} from 'react'\r\n\r\nimport {useBpClientState} from '@bpinc/ad-bpclient-state-context'\r\nimport {bpLogger} from '@bpinc/ad-persistent-logger'\r\nimport {useSessionState, useSessionStateConnector} from '@bpinc/ad-session-context'\r\nimport type {PhoneCapabilities, ServerErrorSource} from '@bpinc/ad-session-types'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst PHONE_OUT_OF_SERVICE_ERROR_DELAY = 5000\r\n\r\nexport const usePhoneOutOfServiceNotification = () => {\r\n    const sessionStateConnector = useSessionStateConnector()\r\n    const isHelperAppInstanceCreated = useBpClientState('isHelperAppInstanceCreated')\r\n    const {showNotification, hideNotificationById} = useNotificationsState('methods')\r\n    const phoneType = useSessionState('phoneType')\r\n    const t = useLocalizationState('t')\r\n\r\n    const onUpdateCapabilities = useEvent((caps: PhoneCapabilities) => {\r\n        if (!caps.canDial && phoneType !== 'phone_type_none') {\r\n            bpLogger.warn('SIP phone or external line is out of service')\r\n\r\n            let message: string | undefined\r\n            switch (phoneType) {\r\n                case 'phone_type_nailed':\r\n                    message = t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_messages_virtual_phone_not_available()\r\n                    break\r\n                case 'phone_type_soft_secure':\r\n                case 'phone_type_soft_unsecure':\r\n                    if (isHelperAppInstanceCreated) {\r\n                        message = t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_messages_phone_not_available()\r\n                    } else {\r\n                        message = t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_messages_helper_app_not_available()\r\n                    }\r\n                    break\r\n                default:\r\n                    message = t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_messages_phone_not_available()\r\n            }\r\n\r\n            showNotification({\r\n                type: 'error',\r\n                id: Notifications.PhoneOutOfServiceError,\r\n                message,\r\n                closable: false,\r\n                showDelay: PHONE_OUT_OF_SERVICE_ERROR_DELAY,\r\n            })\r\n        } else {\r\n            bpLogger.info('SIP phone or external line is in service')\r\n            hideNotificationById(Notifications.PhoneOutOfServiceError)\r\n        }\r\n    })\r\n\r\n    const onServerError = useEvent((source: ServerErrorSource, errorCode: number) => {\r\n        if (source === 'agentServer' && errorCode === 4) {\r\n            showNotification({\r\n                type: 'warning',\r\n                id: Notifications.PhoneOutOfServiceError,\r\n                message: t.ERROR_MESSAGES.phoneIsNotRegistered(),\r\n                closable: false,\r\n                showDelay: PHONE_OUT_OF_SERVICE_ERROR_DELAY,\r\n            })\r\n        }\r\n    })\r\n\r\n    const onThreePCCServerGone = useEvent(() => {\r\n        showNotification({\r\n            type: 'warning',\r\n            id: Notifications.PhoneOutOfServiceError,\r\n            message: t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_messages_3pcc_server_connectionLost(),\r\n            closable: false,\r\n            showDelay: PHONE_OUT_OF_SERVICE_ERROR_DELAY,\r\n        })\r\n    })\r\n\r\n    const onThreePCCServerReady = useEvent(() => {\r\n        hideNotificationById(Notifications.PhoneOutOfServiceError)\r\n    })\r\n\r\n    useEffect(() => {\r\n        const subscription = sessionStateConnector.dispenser.subscribe({\r\n            onUpdateCapabilities,\r\n            onServerError,\r\n            onThreePCCServerGone,\r\n            onThreePCCServerReady,\r\n        })\r\n        return subscription.unsubscribe\r\n    }, [\r\n        onUpdateCapabilities,\r\n        onServerError,\r\n        onThreePCCServerGone,\r\n        onThreePCCServerReady,\r\n        sessionStateConnector,\r\n    ])\r\n}\r\n","import {useEmiErrorsNotifications} from './interaction/useEmiErrorsNotifications'\r\nimport {useFailedCallNotification} from './interaction/useFailedCallNotification'\r\nimport {useFavoritesLimitReachedError} from './interaction/useFavoritesLimitReachedError'\r\nimport {useInteractionNotAcceptedNotification} from './interaction/useInteractionNotAcceptedNotification'\r\nimport {usePhoneDeviceNotDetectedNotification} from './interaction/usePhoneDeviceNotDetectedNotification'\r\nimport {usePhoneTypeErrorNotification} from './interaction/usePhoneTypeErrorNotification'\r\nimport {\r\n    useReservedForIncomingInteractionNotification,\r\n} from './interaction/useReservedForIncomingInteractionNotification'\r\nimport {useWebRtcCallInChatErrorNotifications} from './interaction/useWebRtcCallInChatErrorNotifications'\r\nimport {useDomainAuthorizationPopup} from './system/useDomainAuthorizationPopup'\r\nimport {useInstallationRequiredPopup} from './system/useInstallationRequiredPopup'\r\nimport {useOfflineNotification} from './system/useOfflineNotification'\r\nimport {useOutdatedBrowserExtensionPopup} from './system/useOutdatedBrowserExtensionPopup'\r\nimport {useOutdatedClientNotification} from './system/useOutdatedClientNotification'\r\nimport {usePhoneOutOfServiceNotification} from './system/usePhoneOutOfServiceNotification'\r\nimport {useSipServerDisconnectedNotification} from './system/useSipServerDisconnectedNotification'\r\nimport {useSlowNetworkNotification} from './system/useSlowNetworkNotification'\r\nimport {useUnauthorizedDomainNotification} from './system/useUnauthorizedDomainNotification'\r\n\r\n\r\n/**\r\n * Top-level notifications which should be shown for application WITH COMM.PANEL ONLY\r\n */\r\nexport function useInteractionNotifications() {\r\n    useEmiErrorsNotifications()\r\n    useFailedCallNotification()\r\n    useInteractionNotAcceptedNotification()\r\n    usePhoneDeviceNotDetectedNotification()\r\n    usePhoneTypeErrorNotification()\r\n    useReservedForIncomingInteractionNotification()\r\n    useWebRtcCallInChatErrorNotifications()\r\n    useFavoritesLimitReachedError()\r\n}\r\n\r\n/**\r\n * Top-level notifications which should be shown in ANY application of AD framework (standalone KB, for instance)\r\n */\r\nexport function useSystemNotifications() {\r\n    useDomainAuthorizationPopup()\r\n    useInstallationRequiredPopup()\r\n    useOfflineNotification()\r\n    useOutdatedBrowserExtensionPopup()\r\n    useOutdatedClientNotification()\r\n    usePhoneOutOfServiceNotification()\r\n    useSipServerDisconnectedNotification()\r\n    useSlowNetworkNotification()\r\n    useUnauthorizedDomainNotification()\r\n}\r\n","import {useEffect} from 'react'\r\n\r\nimport {\r\n    useIsOffline,\r\n    useOfflineErrorMessages,\r\n    useOfflineStateDataShowOfflineAlert,\r\n    useOfflineStateMethods,\r\n} from '@bpinc/ad-offline-state-context'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\n\r\n\r\nexport function useOfflineNotification() {\r\n    const {showNotification} = useNotificationsState('methods')\r\n    const {setShowOfflineAlert} = useOfflineStateMethods()\r\n    const showOfflineAlert = useOfflineStateDataShowOfflineAlert()\r\n    const offlineErrorMessages = useOfflineErrorMessages()\r\n    const isOffline = useIsOffline()\r\n\r\n    useEffect(() => {\r\n        if (showOfflineAlert) {\r\n            showNotification({\r\n                type: 'error',\r\n                id: Notifications.OfflineStateError,\r\n                content: offlineErrorMessages.isOffline,\r\n                closable: true,\r\n                duration: 5000,\r\n                onHide: () => setShowOfflineAlert(false),\r\n            })\r\n        }\r\n    }, [\r\n        offlineErrorMessages.isOffline,\r\n        setShowOfflineAlert,\r\n        showNotification,\r\n        showOfflineAlert,\r\n    ])\r\n\r\n    useEffect(() => {\r\n        if (!isOffline) {\r\n            setShowOfflineAlert(false)\r\n        }\r\n    }, [isOffline, setShowOfflineAlert])\r\n}\r\n","import {useEffect} from 'react'\r\n\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useEvent, usePreviousValueRef} from '@bpinc/lib-helpers'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport function useSipServerDisconnectedNotification() {\r\n    const {showNotification, hideNotificationById} = useNotificationsState('methods')\r\n    const {WINDOW_POPUP_TITLES_AND_MESSAGES: i18n} = useLocalizationState('t')\r\n    const sipServer = useSessionState('sipServer')\r\n    const prevSipServerRef = usePreviousValueRef(sipServer)\r\n\r\n    const updateNotification = useEvent(() => {\r\n        if (sipServer) {\r\n            hideNotificationById(Notifications.SipServerConnectionError)\r\n        } else if (prevSipServerRef.current) {\r\n            // we had SIP server, but not anymore\r\n            showNotification({\r\n                type: 'error',\r\n                id: Notifications.SipServerConnectionError,\r\n                message: i18n.window_messages_3pcc_server_connectionLost(),\r\n            })\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        updateNotification()\r\n        // track sipServer change only\r\n    }, [sipServer, updateNotification])\r\n}\r\n","import {useEffect, useRef} from 'react'\r\n\r\nimport {bpLogger} from '@bpinc/ad-persistent-logger'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst CHECK_INTERVAL = 5000\r\nconst SLOW_THRESHOLD = 800\r\n\r\n/**\r\n * This hook periodically checks the user's connection speed by fetching root of the current host.\r\n * and shows a notification if the connection is slow.\r\n * Connection is considered slow based on the predefined threshold (SLOW_THRESHOLD),\r\n * When the connection speed improves, it hides the notification.\r\n */\r\nexport function useSlowNetworkNotification() {\r\n    const {showNotification, hideNotificationById} = useNotificationsState('methods')\r\n    const {GLOBAL: i18n} = useLocalizationState('t')\r\n\r\n    const startTime = useRef(0)\r\n\r\n    const checkConnectionSpeed = useEvent(() => {\r\n        const isRequestAlreadyInProgress = startTime.current !== 0\r\n\r\n        if (isRequestAlreadyInProgress || process.env.NODE_ENV === 'development') {\r\n            return\r\n        }\r\n\r\n        startTime.current = new Date().getTime()\r\n\r\n        fetch('/', {\r\n            method: 'HEAD',\r\n            cache: 'no-store',\r\n        })\r\n            .catch(e => console.error(e))\r\n            .finally(() => {\r\n                const endTime = new Date().getTime()\r\n                const duration = endTime - startTime.current\r\n\r\n                startTime.current = 0\r\n\r\n                if (duration > SLOW_THRESHOLD) {\r\n                    const message = i18n.slow_connection()\r\n                    showNotification({\r\n                        type: 'error',\r\n                        id: Notifications.SlowNetworkConnectionError,\r\n                        message,\r\n                    })\r\n                    bpLogger.warn(`Slow connection detected`)\r\n                } else {\r\n                    hideNotificationById(Notifications.SlowNetworkConnectionError)\r\n                }\r\n            })\r\n    })\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(checkConnectionSpeed, CHECK_INTERVAL)\r\n        return () => clearInterval(interval)\r\n    }, [checkConnectionSpeed])\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useBpClientState} from '@bpinc/ad-bpclient-state-context'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {CURRENT_DOMAIN_AUTH_URL} from '../constants'\r\n\r\n\r\nexport function useUnauthorizedDomainNotification() {\r\n    const {showNotification, hideNotificationById} = useNotificationsState('methods')\r\n    const isDomainAuthorized = useBpClientState('isDomainAuthorized')\r\n    const {ERROR_MESSAGES: i18n} = useLocalizationState('t')\r\n\r\n    const updateNotification = useEvent(() => {\r\n        if (!isDomainAuthorized) {\r\n            showNotification({\r\n                type: 'error',\r\n                id: Notifications.DomainNotAuthorizedForBPClientError,\r\n                closable: false,\r\n                message: (\r\n                    <>\r\n                        <span>\r\n                            {i18n.domain_authentication_error_part1()}\r\n                        </span>\r\n                        <a href={CURRENT_DOMAIN_AUTH_URL} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                            {i18n.domainAuthentificationErrorAnchor()}\r\n                        </a>\r\n                        <span>\r\n                            {i18n.domain_authentication_error_part2()}\r\n                        </span>\r\n                    </>\r\n                ),\r\n            })\r\n        } else {\r\n            hideNotificationById(Notifications.DomainNotAuthorizedForBPClientError)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        updateNotification()\r\n        // track only isDomainAuthorized\r\n    }, [isDomainAuthorized, updateNotification])\r\n}\r\n","import type {ReactElement, ReactFragment} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {AuthorizedConnectors, BaseConnectors} from '@bpinc/ad-connected-state-types'\r\nimport {useSystemNotifications} from '@bpinc/lib-system-notifications'\r\n\r\n\r\ntype Props = {\r\n    baseConnectors: BaseConnectors\r\n    authorizedConnectors: AuthorizedConnectors\r\n    children: (\r\n        baseConnectors: BaseConnectors,\r\n        authorizedConnectors: AuthorizedConnectors,\r\n    ) => ReactElement | ReactFragment\r\n}\r\n\r\nexport const AuthorizedConnectorsConsumers: React.FC<Props> = ({baseConnectors, authorizedConnectors, children}) => {\r\n    useSystemNotifications()\r\n    return <>{children(baseConnectors, authorizedConnectors)}</>\r\n}\r\n","import React from 'react'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {formatDate} from '@bpinc/ad-formatting-helpers'\r\nimport {useSessionState, useSessionStateMethods} from '@bpinc/ad-session-context'\r\nimport {incomingErrorMessageCodes} from '@bpinc/ad-transport-types'\r\nimport {SmButton, SmSegment} from '@bpinc/lib-external-ui-elements'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport {Modal} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport const ForceLogout: React.FC = () => {\r\n    const forceLogoutInfo = useSessionState('forceLogoutInfo')\r\n    const {closeForceLogout} = useSessionStateMethods()\r\n    const {formatFullName} = useFormatting()\r\n    const {t} = useLocalizationState()\r\n\r\n    assertDefined(forceLogoutInfo)\r\n    const loggedOutBy = formatFullName(forceLogoutInfo.firstName, forceLogoutInfo.lastName)\r\n    const loggedOutTime = formatDate(forceLogoutInfo.timestamp)\r\n\r\n    const getContent = () => {\r\n        switch (forceLogoutInfo.errorCode) {\r\n            case incomingErrorMessageCodes.forced_logout_by_another_session: {\r\n                return t.ERROR_MESSAGES.sessionWasOverwritten()\r\n            }\r\n            case incomingErrorMessageCodes.forced_logout_by_supervisor: {\r\n                return t.ERROR_MESSAGES.forcedLogout(loggedOutBy, loggedOutTime)\r\n            }\r\n            case incomingErrorMessageCodes.forced_logout_by_disabling_tenant:\r\n            case incomingErrorMessageCodes.forced_logout_by_disabling_user: {\r\n                return t.ERROR_MESSAGES.account_has_been_disabled()\r\n            }\r\n        }\r\n        return forceLogoutInfo.forceLogoutReason\r\n    }\r\n\r\n    return (\r\n        <SmSegment\r\n            padded\r\n            className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\r\n                overflow-hidden rounded-none border-none bg-transparent shadow-none\"\r\n            id=\"login\"\r\n        >\r\n            <Modal\r\n                isOpen\r\n                size=\"small\"\r\n                className=\"max-w-[570px]\"\r\n                aria-describedby=\"forceLogoutDialogDescription\"\r\n                data-testid=\"forced-logout-modal\"\r\n            >\r\n                <Modal.Header>\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_title_information()}\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description id=\"forceLogoutDialogDescription\">\r\n                        <p>{getContent()}</p>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <SmButton onClick={closeForceLogout} primary data-testid=\"ok-button\">\r\n                        {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk()}\r\n                    </SmButton>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </SmSegment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useCurrentTabRole} from '@bpinc/ad-current-tab-data-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {ForceLogin, LoginPage} from '@bpinc/lib-login-ui'\r\nimport {ForceLogout} from '@bpinc/lib-login-ui/src/components/ForceLogout'\r\nimport {Loader} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport const UnauthorizedUI: React.FC = () => {\r\n    const tabRole = useCurrentTabRole()\r\n    const {\r\n        authChecked,\r\n        isLoggedIn,\r\n        showLoginDialog,\r\n        offerForceLogin,\r\n        forceLogoutInfo,\r\n    } = useSessionState(['authChecked', 'isLoggedIn', 'showLoginDialog', 'offerForceLogin', 'forceLogoutInfo'])\r\n    const language = useLocalizationState('language')\r\n\r\n    const showAppLoader = !language || (tabRole === 'undecided' && !authChecked)\r\n    const showLoginPage = !showAppLoader && (showLoginDialog || !isLoggedIn)\r\n    const showForceLogout = !!forceLogoutInfo && showLoginPage\r\n    const showForceLogin = offerForceLogin && !forceLogoutInfo && showLoginPage\r\n\r\n    return (\r\n        <div className=\"mx-auto h-full w-[496px]\">\r\n            {showAppLoader && <Loader active size=\"huge\" color=\"primary\" />}\r\n            {showLoginPage && <LoginPage />}\r\n            {showForceLogout && <ForceLogout />}\r\n            {showForceLogin && <ForceLogin />}\r\n        </div>\r\n    )\r\n}\r\n","import type {ReactElement, ReactFragment} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {AuthorizedConnectors, BaseConnectors} from '@bpinc/ad-connected-state-types'\r\nimport {AuthorizedProviders} from '@bpinc/ad-local-providers'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\n\r\nimport {AuthorizedConnectorsConsumers} from './AuthorizedConnectorsConsumers'\r\nimport {UnauthorizedUI} from './UnauthorizedUI'\r\n\r\n\r\ntype Props = {\r\n    baseConnectors: BaseConnectors\r\n    children: (\r\n        baseConnectors: BaseConnectors,\r\n        authorizedConnectors: AuthorizedConnectors,\r\n    ) => ReactElement | ReactFragment\r\n}\r\n\r\nexport const AuthorizationUIRouter: React.FC<Props> = React.memo(({\r\n    baseConnectors,\r\n    children,\r\n}) => {\r\n    const isLoggedIn = useSessionState('isLoggedIn')\r\n\r\n    if (isLoggedIn) {\r\n        return (\r\n            <AuthorizedProviders baseConnectors={baseConnectors}>\r\n                {authorizedConnectors => (\r\n                    <AuthorizedConnectorsConsumers\r\n                        baseConnectors={baseConnectors}\r\n                        authorizedConnectors={authorizedConnectors}\r\n                    >\r\n                        {children}\r\n                    </AuthorizedConnectorsConsumers>\r\n                )}\r\n            </AuthorizedProviders>\r\n        )\r\n    }\r\n    return <UnauthorizedUI />\r\n})\r\n","import type {ReactElement} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {BaseConnectors} from '@bpinc/ad-connected-state-types'\r\n\r\nimport type {BaseConnectorsConsumerComponent} from './AuthorizationModule'\r\n\r\n\r\ntype Props = {\r\n    baseConnectors: BaseConnectors\r\n    children: ReactElement\r\n    BaseConnectorsConsumer?: BaseConnectorsConsumerComponent\r\n}\r\n\r\nexport const BaseConnectorsConsumers: React.FC<Props> = ({\r\n    baseConnectors,\r\n    children,\r\n    BaseConnectorsConsumer,\r\n}) => {\r\n\r\n    if (BaseConnectorsConsumer) {\r\n        return (\r\n            <BaseConnectorsConsumer baseConnectors={baseConnectors}>\r\n                {children}\r\n            </BaseConnectorsConsumer>\r\n        )\r\n    }\r\n    return children\r\n}\r\n","import type {ReactElement} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {BaseConnectors} from '@bpinc/ad-connected-state-types'\r\nimport {BaseProviders} from '@bpinc/ad-local-providers'\r\nimport type {PlatformSpecific} from '@bpinc/ad-platform-specific-types'\r\nimport {Tooltip} from '@bpinc/lib-jskit-ui'\r\nimport {NotificationsStateProvider} from '@bpinc/lib-notifications-context'\r\nimport type {AppType} from '@bpinc/state-lookup'\r\n\r\nimport type {BaseConnectorsConsumerComponent} from './AuthorizationModule'\r\nimport {BaseConnectorsConsumers} from './BaseConnectorsConsumers'\r\n\r\n\r\ntype Props = {\r\n    app: AppType\r\n    platformSpecific: PlatformSpecific\r\n    children: (baseConnectors: BaseConnectors) => ReactElement\r\n    BaseConnectorsConsumer?: BaseConnectorsConsumerComponent\r\n}\r\n\r\nexport const TopLevelProviders: React.FC<Props> = ({\r\n    app,\r\n    platformSpecific,\r\n    BaseConnectorsConsumer,\r\n    children,\r\n}) => {\r\n    return (\r\n        <BaseProviders platformSpecific={platformSpecific} app={app}>\r\n            {baseConnectors => (\r\n                <BaseConnectorsConsumers\r\n                    baseConnectors={baseConnectors}\r\n                    BaseConnectorsConsumer={BaseConnectorsConsumer}\r\n                >\r\n                    <Tooltip.Provider>\r\n                        <NotificationsStateProvider>\r\n                            {children(baseConnectors)}\r\n                        </NotificationsStateProvider>\r\n                    </Tooltip.Provider>\r\n                </BaseConnectorsConsumers>\r\n            )}\r\n        </BaseProviders>\r\n    )\r\n}\r\n","import type {PropsWithChildren, ReactElement, ReactFragment} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {AuthorizedConnectors, BaseConnectors} from '@bpinc/ad-connected-state-types'\r\nimport type {PlatformSpecific} from '@bpinc/ad-platform-specific-types'\r\nimport type {RemoteName} from '@bpinc/lib-remotes-configs'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {AppStyleSelector} from '@bpinc/lib-ui-elements'\r\nimport type {AppType} from '@bpinc/state-lookup'\r\n\r\nimport {AuthorizationUIRouter} from './AuthorizationUIRouter'\r\nimport {TopLevelProviders} from './TopLevelProviders'\r\n\r\n\r\nexport type BaseConnectorsConsumerComponent = React.FC<PropsWithChildren<{baseConnectors: BaseConnectors}>>\r\n\r\ntype Props = {\r\n    app: AppType\r\n    platformSpecific: PlatformSpecific\r\n    children: (\r\n        baseConnectors: BaseConnectors,\r\n        authorizedConnectors: AuthorizedConnectors,\r\n    ) => ReactElement | ReactFragment\r\n    BaseConnectorsConsumer?: BaseConnectorsConsumerComponent\r\n    className?: string\r\n    appRemoteName: RemoteName\r\n}\r\n\r\nexport const AuthorizationModule: React.FC<Props> = ({\r\n    app,\r\n    platformSpecific,\r\n    children,\r\n    BaseConnectorsConsumer,\r\n    className,\r\n    appRemoteName,\r\n}) => {\r\n    return (\r\n        <AppStyleSelector app={appRemoteName}>\r\n            <div className={tcn('h-full', className)}>\r\n                <TopLevelProviders\r\n                    app={app}\r\n                    platformSpecific={platformSpecific}\r\n                    BaseConnectorsConsumer={BaseConnectorsConsumer}\r\n                >\r\n                    {baseConnectors => (\r\n                        <AuthorizationUIRouter baseConnectors={baseConnectors}>\r\n                            {children}\r\n                        </AuthorizationUIRouter>\r\n                    )}\r\n                </TopLevelProviders>\r\n            </div>\r\n        </AppStyleSelector>\r\n    )\r\n}\r\n","import type {ReactElement, ReactFragment} from 'react'\r\nimport React from 'react'\r\nimport {noop} from 'lodash-es'\r\n\r\nimport {type MainPageUIState, MainPageUIContext} from '@bpinc/ad-main-page-ui-context'\r\nimport type {FCWithChildren} from '@bpinc/lib-types-helpers'\r\n\r\n\r\nconst value: MainPageUIState = {\r\n    communicator: {\r\n        floatingState: 'closed',\r\n        openerRef: {current: null},\r\n        width: 0,\r\n        parallelInteractionsWidth: 0,\r\n        setParallelInteractionsWidth: noop,\r\n        setWidth: noop,\r\n        setFloatingState: noop,\r\n    },\r\n    statusesPanel: {\r\n        isVisible: false,\r\n        toggleVisibility: noop,\r\n    },\r\n    interactionUIState: {},\r\n    interactions: {\r\n        lastPlayedPrerecordedMessagesIds: new Set<string>(),\r\n        addLastPlayedPrerecordedMessagesIds: noop,\r\n    },\r\n    kbWidth: 0,\r\n    kbFloatingState: 'closed',\r\n    mainContentNode: null,\r\n    setMainContentNode: noop,\r\n    interactionWorkspace: {\r\n        shownWorkspaceTabs: undefined,\r\n        shownWorkspaceItem: undefined,\r\n        shownWorkspaceTabId: undefined,\r\n        activateItemTab: noop,\r\n        removeItemTab: noop,\r\n    },\r\n    setKBWidth: noop,\r\n    setKBFloatingState: noop,\r\n    settings: {\r\n        show: false,\r\n        toggleShow: noop,\r\n    },\r\n    setInteractionItemUIState: noop,\r\n}\r\n\r\n/**\r\n * Chat Center uses API from MainPageUIContext, but it isn't used in Standalone Chat Center app\r\n * So we need to mock its value in order to avoid errors\r\n */\r\nexport const MainPageUIMockProvider: FCWithChildren<ReactElement | ReactFragment> = ({children}) => {\r\n    return <MainPageUIContext.Provider value={value}>{children}</MainPageUIContext.Provider>\r\n}\r\n","import React from 'react'\r\n\r\nimport {createPlatformSpecific} from '@bpinc/ad-platform-specific-web-impl'\r\nimport {AuthorizationModule} from '@bpinc/lib-authorization-module'\r\nimport {createProviderWrapper} from '@bpinc/lib-helpers'\r\nimport {Modals} from '@bpinc/lib-modals-ui'\r\n\r\nimport {ChatCenterPage} from '../ChatCenterPage'\r\nimport {MainPageUIMockProvider} from './MainPageUIMockProvider'\r\n\r\n\r\nconst ACCProviders = createProviderWrapper([\r\n    MainPageUIMockProvider,\r\n])\r\n\r\n\r\nexport const FullscreenChatCenterApp: React.FC = () => {\r\n    return (\r\n        <AuthorizationModule platformSpecific={createPlatformSpecific('chat-center')} app=\"chat-center\" appRemoteName=\"chatCenter\">\r\n            {() => (\r\n                <ACCProviders>\r\n                    <ChatCenterPage />\r\n                    <Modals />\r\n                </ACCProviders>\r\n            )}\r\n        </AuthorizationModule>\r\n    )\r\n}\r\n"],"names":["UnreadBadge","useGroupChatItem","useLocalizationState","t","useState","showUnredBadge","setShowUnreadBadge","scrollerApi","useAtomValue","scrollerApiAtom","haveUnread","Boolean","unreadMessages","length","haveUnreadRef","useAsRef","showUnredBadgeDebounce","useMemo","debounce","current","useEffect","SemanticButton","enabledInOffline","basic","primary","onClick","scrollToBottom","className","CHAT_CENTER","unread_messages_button_text","SmIcon","name","useMessagesWithAuxilaryLabels","unreadMessage","unread_messages","chatItem","firstUnreadTimestampRef","useRef","firstUnreadTimestamp","nextMessages","messages","i","time1","sendTime","time2","areSameDays","splice","formatChatDate","insertDayLabels","message","Object","slice","concat","insertUnreadLabel","_path","_excluded","_extends","assign","bind","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAnnouncement","_ref","ref","title","titleId","props","xmlns","width","height","viewBox","id","d","ForwardRef","forwardRef","SvgCancel","fill","SvgChatCenterIcon","stroke","strokeWidth","SvgPin","SvgRemoveMember","SvgReply","SvgSave","_defs","_g","SvgThumbUp","xmlnsXlink","x1","y1","x2","y2","offset","stopColor","stopOpacity","cx","cy","r","xlinkHref","transform","opacity","rx","ry","_path2","SvgUnpin","MarkAsReadSensor","children","chatId","messageId","scrollerNode","useIntersectionObserver","root","isIntersecting","useGroupChatStateMethods","markMessageAsRead","div","AnnouncementMessage","React","direction","content","firstName","lastName","userId","useFormatting","formatFullName","userDetails","useUserDetailsById","getAvatarUrl","useGetAvatarUrl","useGroupChatUIParams","groupChatId","assertDefined","userDetailsData","data","messageFirstName","messageLastName","displayName","isUserOnline","presenceState","userOnlineStatusIcon","getUserStatusIcon","userPhotoUrl","sanitizedMessage","useChatMessageSanitizer","isUnread","some","m","messageContent","AvatarLegacy","type","size","headPhones","online","onlineStatus","url","IconAnnouncement","span","data-testid","formatDate","aria-live","role","aria-label","ACCESSIBILITY","chat_center_message_status_announcement","dangerouslySetInnerHTML","__html","internal_chat_message","data-message","data-announcement-message","data-incoming","undefined","data-outgoing","DateSeparator","tcn","classnames","twMerge","cn","DeletedMessage","memo","restoreDeletedMessage","restoreMessage","useCallback","chat_center_deleted_message","data-deleted","SelectionItem","focusOnSelection","touchedOnly","itemId","deleted_message_text","Button","tooltip","deleted_message_undo_button_text","initialOption","value","text","contextName","initialState","getSelectedChannel","getSelectedPhone","isTouched","channelOptions","setIsTouched","throwNoProviderError","setSelectedChannel","ChannelStateContext","getGroupChatAvatar","chatData","p2pUser","session","members","avatarType","isAgent","fullName","getTeamChatAvatar","avatar","member","find","constructUserPictureUrl","getP2PChatAvatar","isOnline","onlineStatusIcon","ChatMessagesContext","createContext","hasSelection","setHasSelection","noop","selectedMessages","getClipboardBuffer","setClipboardBuffer","scrollContainer","atom","defaultState","isAttachmentsListReady","getAttachmentsList","addAttachment","removeAttachment","clearAttachmentsList","initializeAttachmentsList","fileRejections","setFileRejections","ChatAttachmentsUIContext","createUIStateSelectorHook","useChatAttachmentsUIState","EmailAttachmentsUIContext","useEmailAttachmentsUIState","search","setSearch","searchResult","setSearchResult","showBotSuggestions","toggleBotSuggestions","showSMS","toggleSMS","showTranscript","toggleTranscript","VoiceTranscriptUIContext","InvisinbleAttachButtonUI","onFileInputClick","button","withFileInput","useMessageUpdater","setCurrentMessage","textAreaSelector","getMessage","e","textAreaNode","document","querySelector","flow","dataToAdd","offsetToFocus","nodeToFocus","currentMessage","selectionNodeInner","selectionOffset","textContent","selectionInner","differentNodesSelected","getFirstNode","getLastNode","textSelected","getSelectionStartIndex","getSelectionEndIndex","selection","Selection","selectionNode","selectionElement","nodeType","Node","TEXT_NODE","parentElement","textAreaSelected","closest","substring","setNodeAndOffsetToFocus","deleteSelected","innerHTML","HTMLElement","focus","requestAnimationFrame","setCursorPosition","keepCursorAtTheCurrentPosition","lastChild","setCursorToTheEnd","node","window","range","createRange","setStart","setEnd","getSelection","removeAllRanges","addRange","createComponentLoader","ChatCenterInteractionLoader","SystemMessageUI","rest","IconCogwheel","EmojiReactionPopupContent","users","showExtraUsers","setShowExtraUsers","toggleShowExtraUsers","state","numberToDisplay","displayedUsers","extraDisplayedUsers","extraUsersCount","String","titleClassName","h3","message_reactions_users_list_title","map","message_reactions_expand_users_button_text","EmojiReactionIndicator","emoji","userIds","useUserDetails","useSessionState","removeReactionOnMessage","selfUserId","reactedBySelf","includes","isSpecialLikeEmoji","allUsers","selfFirstName","selfLastName","userData","filter","isDefined","reactionButtonClickHandler","Popup","hoverable","mode","contentClassName","delay","IconThumbUp","MessageContentCard","isDelivered","isRead","attachments","reactions","replyOnMessage","ariaStatusLabel","showName","closable","nestingLayer","onClose","userDetailsFirstName","useUserDetailsSelector","userDetailsLastName","messageWithAttachments","useMsTeamsAttachmentsParser","textMessageNode","IconDelivered","IconRead","semanticIcon","iconClassName","selected_reply_message_close_button_tooltip","ReplyingMessagePreview","onRemoveReply","msg","assertGroupChatMessage","EDIT_MESSAGE_TEXT_AREA_DATA_KEY","EditMessage","editMessage","updateMessage","useModalsStateMethods","openModal","useMessageParams","setMessageParams","useSetMessageParams","textAreaRef","changedRef","editMessageId","editMessageContent","editReplyMessageId","replyOnMessageId","setMessageContent","draft","onSelectEmoji","updateMessageContent","removeReply","resetEditState","showDiscardChangesConfirmationDialog","dataKey","body","edit_message_discard_changes_confirmation_text","actions","ok","edit_message_discard_changes_positive_button_text","action","cancel","edit_message_discard_changes_negative_button_text","cancelEditing","saveEditing","handleTextareaChange","event","isHTMLDivElement","scrollTop","scrollHeight","buttonStyles","data-edit-message","ContentEditable","autoFocus","onChange","EmojiButton","INTERNAL_CHAT","chat_addEmoji_button_tooltip","transparent","edit_message_cancel_button_tooltip","IconCancel","edit_message_save_button_tooltip","IconSave","RegularMessageHoverControls","replyMessageId","style","setControlsFixation","useBoolean","toggle","reactOnMessage","pinMessage","deleteMessage","likeMessage","messageEmojiReact","replyCallback","pinMessageCallback","enterEditMode","deleteMessageCallback","options","message_enter_edit_mode_button_text","message_delete_button_text","messageHoverControlsClassName","message_like_button_tooltip","clickThrottle","closeOnSelect","onToggle","message_reactions_button_tooltip","message_reply_button_tooltip","IconReply","message_pin_button_tooltip","IconPin","PopupButton","custom","show","toggleShow","UserAvatar","Avatar","RegularMessage","disabled","messageBubbleRef","ariaStatus","chat_center_message_status_incoming_message","chat_center_message_status_outgoing_message","actionsPopupFixation","setActionsPopupFixation","showControls","controlsStyle","setControlsStyle","mouseEnterXRef","hoverControlsRefCallback","element","getBoundingClientRect","x","calculatedLeft","containerWidth","left","Math","max","calculatedRight","right","onMouseEnter","clientX","ShowOnHover","elementContainerRef","elementToShow","data-text-message","SystemMessage","addedUsers","creatorFirstName","creatorLastName","creatorDisplayName","firstUserDisplayName","otherUsersCount","sys_message_personal_chat_created_text","sys_message_group_chat_created_text","memberDisplayName","sys_message_member_left_text","newTitle","actorDisplayName","sys_message_chat_renamed","sys_message_one_member_added_no_history","sys_message_multiple_members_added_no_history","useSystemMessageContent","data-system","UnreadMessage","ChatMessage","ErrorBoundary","fallback","isDeleted","LAST_MESSAGE_LOCATION","index","computeItemKey","ChatMessagesVirtualization","setScrollerNode","messagesRef","setScrollerApi","useSetAtom","handleScrollToBottom","markChatAsRead","atBottom","Virtuoso","atBottomStateChange","atBottomThreshold","alignToBottom","followOutput","initialTopMostItemIndex","itemContent","_","virtuoso","scrollToMessage","findIndex","scrollToIndex","scrollerRef","tabIndex","increaseViewportBy","ChatMessagesArea","itemsProvider","SelectionContainer","startFrom","getAriaSRAlert","itemsListProvider","onItemSelect","selectionOrigin","isEmpty","replace","trim","ANNOUNCEMEN","MESSAGE","MessageTypeSelector","messageType","messageTypeOptions","message_type_selector_regular_message","message_type_selector_announcement","onChangeHandler","Dropdown","chat_center_message_type_selector_label","upward","TEXT_AREA_DATA_ID","TextArea","inputRef","handleKeyDown","handleChange","autoFocusInput","autoFocusAtom","useFocusElement","condition","dependencies","onKeyDown","placeholder","message_input_placeholder_disabled","message_input_placeholder","data-id","GroupChatControls","sendCurrentMessage","disableSendButton","groupChatMembers","attachButtonClickHandler","handlerUploadFiles","AttachButton","handleUploadFiles","chat_sendMessage_tooltip","IconChatSendMessage","InputControlsArea","sendMessage","useOfflineStateMethods","setShowOfflineAlert","isOffline","useIsOffline","messageText","isChatDisabled","setter","sendNewMessageOnEnter","shiftKey","ctrlKey","preventDefault","stopPropagation","PinnedMessageItem","unpinMessage","message_unpin_confirmation_text","message_unpin_positive_button_text","message_unpin_negative_button_text","message_unpin_button_tooltip","IconUnpin","align","PinnedMessagesStack","pinnedMessages","pinned","isSelf","formatHTMLAsOneLineString","ChatContent","privileges","CAN_START_INTERNAL_CHAT","ChatCenterScopeProvider","scope","useGroupChatUIStateMethods","resetGroupChat","storeWithScope","store","createStore","set","chatScopeAtom","Provider","ChatCenterInteraction","interactionId","setupComplete","setSetupComplete","setupGroupChatByInteraction","then","ChatCenterHeader","searchValue","setSearchValue","selectedItems","setSelectedItems","setupGroupChatById","useSetupGroupChatById","setupGroupChatByMembers","useSetupGroupChatByMembers","useResetGroupChat","setAutoFocus","useAtom","handleGroupChatSelect","selectedChatId","handleSelectedItems","itemsOrSetter","not","isUserSearchResult","console","error","onlyUsersGroupChatMembers","chat_center_header","MultipleUserSearch","inputClassName","inputPlaceholder","main_search_input_placeholder","loadingLabel","main_search_loader_text","noSearchValueLabel","onGroupChatSelect","searchForGroupChats","searchForTeamChats","searchForTeams","searchForUsers","showSearchIcon","uniqueSearchId","withSearchInChatsOption","NewTeamsChatModal","restProps","teamChatTitle","setTeamChatTitle","selectedTeams","setSelectedTeams","teams","useDirectoryState","saveNewChatTeamTitle","selectItem","item","items","produce","itemsDraft","push","foundTeams","team","toLowerCase","selectedTeam","removeSelectedTeam","removedTeam","Modal","aria-labelledby","chat_add_new_team_chat_title","chat_add_new_team_chat_text","SmInput","fluid","chat_add_new_team_chat_optional","SelectionInput","onItemRemoved","chat_add_new_team_chat_placeholder","SearchResultTeam","displayText","search_no_results","chat_add_new_team_chat_btn_cancel","chat_add_new_team_chat_btn_start_chat","GroupChatActionsButton","actionDispatcher","useRecentChatActions","show_actions_button_tooltip","dispatchAction","closePopup","isTeamChat","pin","RecentChatAction","mute","enableAlerts","enable_alerts","deleteChat","leaveChat","leave","recent_chat_action_unpin_text","recent_chat_action_pin_text","muted","recent_chat_action_mute_text","recent_chat_action_enable_alerts_text","recent_chat_action_leave_text","recent_chat_action_delete_text","GroupChatSubActions","unmuteHandler","LinkLikeButton","as","recent_chat_action_unmute_text","ChatListItem","useGroupChatUIState","selected","scrollContainerRef","unreadCount","elemRef","itemActionDispatcher","useMembersDetails","args","membersExceptSelf","isConference","p2pUserId","p2pUserDetails","enabled","usersToSubscribe","useSubscribeForUserDetails","lastChatMessage","useLastGroupChatMessage","lastMessage","userDetailsMap","memberItem","messageAuthorName","chat_last_message_your_author_name","useBody","hoverControls","subControls","itemClickHandler","showZero","showZeroUnreadBadge","titleElement","inline","showZerro","unreadAmount","ContactListItem","containerRef","avatarProps","controls","isSelected","useLeaveChatHandler","removeMemberFromChat","useRemoveMemberFromGroupChat","leave_chat_confirmation_warning","leave_chat_positive_button_text","leave_chat_negative_button_text","useSortedChats","useGroupChatState","chatListReceived","isLoading","recentChats","pinnedChats","teamChats","visibleChats","pickBy","hidden","values","chat","sort","chat1","chat2","chat1Messages","chat2Messages","chat1LastTimestamp","creationTimestamp","reduce","result","chats","ChatCenterLeftPanel","openNewTeamsChatModal","localSettings","useLocalSettings","groupChatStateRef","useGroupChatStateRef","recentItemActionDispatcher","togglePinChat","toggleMuteChat","removeGroupChat","hideGroupChat","isOwner","createdByUserId","delete_chat_confirmation_title","delete_chat_confirmation_owner_body","delete_chat_confirmation_non_owner_body","delete_chat_confirmation_positive_button_text","delete_chat_confirmation_negative_button_text","useChatListActionDispatcher","openNewTeamChatModal","useModalComponentOpener","useDirectoryStateMethods","getAgentTeams","recentItemsIds","c","recentItemsIdsRef","get","recentChatId","plusButtonClassName","chatsCategoryHeaderClassName","chatsCategoryTitleClassName","pinned_chats_title","team_chats_title","new_team_chat_button_tooltip","ContactListPlaceholder","amount","recent_chats_title","IconChatCenter","no_recent_chats_message","UtilsNS","findGroupChatByInteraction","interaction","groupChatConnector","getStateData","getMembersFromInteraction","findGroupChatItemByMembers","grupChatItems","isMembersMatch","findInteraction","interactionStateConnector","findInteractionByGroupChatParams","params","utilsNS","sessionConnector","displayData","replacePotentialInteraction","groupChat","newInteractionId","oldInteractionId","isPotentialInteraction","dispatch","openInternalChat","completeItem","setGroupChatParamsToInteraction","setGroupChat","updateGroupChatId","produceState","scopeMap","clearExtraKeysInMembes","updateInteractionId","typedKeys","s","updateMembers","getMessageParamsId","a1","a2","intersection","pick","AddChatMembers","showMembersListUI","includeHistory","setIncludeHistory","isInitialState","handleIncludeHistory","currentTarget","addChatMembersIncludeHistoryOptionClassName","addChatMembersControlButtonClassName","chat_add_members_search_input_placeholder","GLOBAL","loading","chat_add_members_to_personal_chat_note","SmForm","autoComplete","noValidate","Radio","label","chat_add_members_dont_include_history_option","checked","chat_add_members_include_history_option","chat_add_members_negative_button_text","selectedUsers","chat_add_members_positive_button_text","useMembersDisplayData","m1","m2","localeCompare","memberDetails","memberPresenceState","memberPhoneExtension","extension","avatarData","ChatMemberItem","onInteraction","setActivePage","useNavigationState","setCommunicatorFloatingState","useCommunicatorFloatingStateSetter","useInteractionStateMethods","agentChatOpen","phoneDeviceCapabilities","canDial","dispatchCall","useCallHandler","removeChatMember","remove_member_confirmation_text","remove_member_positive_button_text","remove_member_negative_button_text","useRemoveChatMemberHandler","handleCall","phone","origination","navigateToInteractionsPage","handleChat","number","AppRoutes","CircleButton","CONTACT","button_start_call_text","noActiveState","IconPhone","button_initiate_chat_text","IconChat","group_chat_remove_member_icon_tooltip","IconRemoveMember","containerProps","FullChatMembersListModal","closeModal","setFilter","chatMembersDisplayData","onFilterChange","onFilterClear","chatDisplayName","setChatDisplayName","getChatDisplayName","membersListUI","SearchInput","onClear","full_members_list_search_input_placeholder","clearable","full_members_list_close_button_text","ChatMembersList","showAddMembersUI","showFullChatMembersList","membersDisplayData","membersCount","limitedMembersList","chatMembersPopupButtonClassName","idx","show_all_participants_button_text","add_people_button_text","leave_chat_button_text","clickOutsideExceptionSelectors","ChatMembersPopup","openerRef","initialDisplayPhase","displayPhase","setDisplayPhase","onClickOutside","useEscapeManager","ClickOutsideWrapper","selectorExceptions","freeze","ChatMembersButton","chatMembersPopupOpenerRef","setFalse","ButtonIcon","active","chat_header_members_icon_tooltip","IconProfile24","IconProfile16","handleClose","ChatHeader","otherParties","singleUserId","renameGroupChat","handleRename","newName","icon","InputOnClick","onBlur","PotentialChat","potential_chat_message_main_text","potential_chat_message_secondary_text","ChatCenterMainArea","ChatCenterPage","ChatMembersButtonProvider","linkUrl","URL","searchParams","append","location","hostname","CURRENT_DOMAIN_AUTH_URL","toString","DOMAIN_AUTHORIZATION_MODAL_ID","linkClass","EXTENSION_ID","EXTENSION_ID_FF","PLUGIN_ID","ModalContent","isExtAvailable","install","INSTALLATION_PROCESS","useInstallationMethods","installChromeExtension","installFirefoxExtension","installBPClientPlugin","chromeLink","getElementById","firefoxLink","pluginLink","addEventListener","removeEventListener","i18n","install_updateHeader","platformInfo","install_installHeader","install_installHeaderChrome","install_installHeaderFirefox","browserName","serverOrigin","isChrome","isFirefox","isSafari","linkHref","URL_EXTENSION_INSTALLER_CHROME","URL_EXTENSION_INSTALLER_FIREFOX","URL_MAC_PLUGIN","bp_client_old_extension_version","br","bp_client_update_extension_part1","a","href","rel","bp_client_update_extension_text","bp_client_update_extension_part2","reloadPage","reload","PHONE_OUT_OF_SERVICE_ERROR_DELAY","useSystemNotifications","bpClientConnector","onShowDomainAuthorizationDialog","onHideDomainAuthorizationDialog","showOfflineAlert","offlineErrorMessages","useBpClientStateConnector","useEvent","bp_client_not_authorized_header","bp_client_not_authorized_message_part1","ERROR_MESSAGES","domainAuthentificationErrorAnchor","bp_client_not_authorized_message_part2","SmButton","closeThisModal","WINDOW_POPUP_TITLES_AND_MESSAGES","window_buttonOk","dispenser","subscribe","unsubscribe","isExtensionAvailable","useBpClientState","onInstallationRequired","window_title_warning","useInstallationRequiredPopup","useNotificationsState","showNotification","useOfflineStateDataShowOfflineAlert","useOfflineErrorMessages","Notifications","duration","onHide","onShowExtensionIsOldDialog","useOutdatedBrowserExtensionPopup","hideNotificationById","isClientOutdated","useAppConfigState","isLoggedIn","updateNotification","reload_confirm_new_msg_part1","reload_confirm_action_button_text","reload_confirm_new_msg_part2","useOutdatedClientNotification","sessionStateConnector","useSessionStateConnector","isHelperAppInstanceCreated","phoneType","onUpdateCapabilities","caps","bpLogger","window_messages_virtual_phone_not_available","window_messages_phone_not_available","window_messages_helper_app_not_available","showDelay","onServerError","errorCode","phoneIsNotRegistered","onThreePCCServerGone","window_messages_3pcc_server_connectionLost","onThreePCCServerReady","usePhoneOutOfServiceNotification","sipServer","prevSipServerRef","usePreviousValueRef","useSipServerDisconnectedNotification","startTime","checkConnectionSpeed","Date","getTime","fetch","method","cache","catch","finally","slow_connection","interval","setInterval","clearInterval","useSlowNetworkNotification","isDomainAuthorized","domain_authentication_error_part1","domain_authentication_error_part2","useUnauthorizedDomainNotification","AuthorizedConnectorsConsumers","baseConnectors","authorizedConnectors","ForceLogout","forceLogoutInfo","useSessionStateMethods","closeForceLogout","loggedOutBy","loggedOutTime","timestamp","SmSegment","padded","isOpen","aria-describedby","window_title_information","p","incomingErrorMessageCodes","sessionWasOverwritten","forcedLogout","account_has_been_disabled","forceLogoutReason","getContent","UnauthorizedUI","tabRole","useCurrentTabRole","authChecked","showLoginDialog","offerForceLogin","showAppLoader","showLoginPage","showForceLogout","showForceLogin","Loader","color","LoginPage","ForceLogin","AuthorizationUIRouter","AuthorizedProviders","BaseConnectorsConsumers","BaseConnectorsConsumer","TopLevelProviders","app","platformSpecific","BaseProviders","Tooltip","NotificationsStateProvider","AuthorizationModule","appRemoteName","AppStyleSelector","communicator","floatingState","parallelInteractionsWidth","setParallelInteractionsWidth","setWidth","setFloatingState","statusesPanel","isVisible","toggleVisibility","interactionUIState","interactions","lastPlayedPrerecordedMessagesIds","Set","addLastPlayedPrerecordedMessagesIds","kbWidth","kbFloatingState","mainContentNode","setMainContentNode","interactionWorkspace","shownWorkspaceTabs","shownWorkspaceItem","shownWorkspaceTabId","activateItemTab","removeItemTab","setKBWidth","setKBFloatingState","settings","setInteractionItemUIState","ACCProviders","createProviderWrapper","MainPageUIContext","FullscreenChatCenterApp","createPlatformSpecific","Modals"],"sourceRoot":""}