{"version":3,"file":"static/js/145.eb599a0f.chunk.js","mappings":";4OAIO,SAASA,IAAI,sDAAGC,EAAH,gBAChB,OAAOC,EAAAA,EAAAA,IAAQC,IAAGF,GACtB,qFCFMG,EAAU,IAAIC,IAHW,yBAI/BD,EAAQE,aAAaC,OAHA,SAGqBC,SAASC,UAE5C,IAAMC,EAA0BN,EAAQO,WCIzCC,EAAgC,+DCDhCC,EAAY,qCAEZC,EAAe,WACfC,EAAkB,mBAClBC,EAAY,cAOZC,EAA4C,gBAAEC,EAAAA,EAAAA,eAAgBC,EAAAA,EAAAA,QACrDC,GAA+BC,EAAAA,EAAAA,wBAAnCC,EAAIF,qBAKPG,GAAAA,EAAAA,EAAAA,0BAHAC,EAGAD,EAHAC,uBACAC,EAEAF,EAFAE,wBACAC,EACAH,EADAG,uBAIJC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAaC,SAASC,eAAehB,GACrCiB,EAAcF,SAASC,eAAef,GACtCiB,EAAaH,SAASC,eAAed,GAM3C,OAJAY,SAAAA,EAAYK,iBAAiB,QAAST,GACtCO,SAAAA,EAAaE,iBAAiB,QAASR,GACvCO,SAAAA,EAAYC,iBAAiB,QAASP,GAE/B,WACHE,SAAAA,EAAYM,oBAAoB,QAASV,GACzCO,SAAAA,EAAaG,oBAAoB,QAAST,GAC1CO,SAAAA,EAAYE,oBAAoB,QAASR,EAC7C,CACJ,GAAG,CAACF,EAAwBC,EAAyBC,IAErD,IAAIS,EAAkBC,EAAKC,qBAAqBrB,EAAWH,GAkB3D,OAhBIM,IAEIgB,EADyB,WAAzBG,EAAAA,aAAAA,QACUpB,EACJkB,EAAKG,sBAAsBvB,EAAWH,GACtCuB,EAAKI,4BAA4B1B,EAAcE,EAAWH,GAEhC,YAAzByB,EAAAA,aAAAA,QACGpB,EACJkB,EAAKG,sBAAsBvB,EAAWH,GACtCuB,EAAKK,6BAA6B1B,EAAiBC,EAAWH,GAG1DuB,EAAKG,sBAAsBvB,EAAWH,KAIjD,SAAC6B,MAAAA,CAAIC,wBAAyB,CAACC,OAAQT,IAClD,sBCjDA,IAAMlB,EAAgC,gBAAE4B,EAAAA,EAAAA,YAC7BzB,GAA8BC,EAAAA,EAAAA,sBAAqB,KAAnDD,qBACD0B,GAAeC,EAAAA,EAAAA,iBAAgB,gBAE/BC,EAAoC,WAAzBV,EAAAA,aAAAA,QACXW,EAAqC,YAAzBX,EAAAA,aAAAA,QACZY,EAAoC,WAAzBZ,EAAAA,aAAAA,QACba,EAAW,GASf,OAPIH,EACAG,EAAWC,EAAAA,+BACJH,EACPE,EAAWL,EAAeO,EAAAA,gCACnBH,IACPC,EAAWL,EAAeQ,EAAAA,iBAG1B,iCACI,SAACC,OAAAA,UACInB,EAAKoB,gCAAgCX,MAExCG,GAAYC,GAAaC,KACvB,iCACI,SAACO,KAAAA,CAAAA,IACD,SAACA,KAAAA,CAAAA,IACD,SAACF,OAAAA,UACInB,EAAKsB,sCAEV,SAACC,IAAAA,CAAEC,KAAMT,EAAUU,IAAI,sBAAsBC,OAAO,kBAC/C1B,EAAK2B,qCAEV,SAACR,OAAAA,UACInB,EAAK4B,0CAM9B,YC7CMC,EAAa,kBAAMzD,SAAS0D,wBCE5BC,EAAmC,IC2BlC,SAASC,ILxB2B,IACjCC,EAC0BC,EAAzBC,EAAWC,EACZlD,EAEAmD,EAyBAC,EMhCA,EACA,EACAC,EACAC,EACAC,ENDAR,GAAoBS,EAAAA,EAAAA,6BACMR,GAAAA,EAAAA,EAAAA,yBAAzBC,EAAyBD,EAAzBC,UAAWC,EAAcF,EAAdE,WACZlD,GAAID,EAAAA,EAAAA,sBAAqB,KAEzBoD,GAAkCM,EAAAA,EAAAA,WAAS,WAC7CR,EAAU,CACNS,GAAIpE,EACJqE,MAAO3D,EAAEF,qBAAqB8D,kCAC9BC,MACI,iCACI,SAAC5B,OAAAA,UACIjC,EAAEF,qBAAqBgE,4CAE5B,SAACzB,IAAAA,CAAEC,KAAMlD,EAAyBmD,IAAI,sBAAsBC,OAAO,kBAC9DxC,EAAE+D,eAAeC,uCAEtB,SAAC/B,OAAAA,UACIjC,EAAEF,qBAAqBmE,8CAIpCC,QAAS,gBAAEhB,EAAAA,EAAAA,kBACP,SAACiB,EAAAA,SAAQA,CAACC,QAASC,WACdrE,EAAEsE,iCAAiCC,sBAIpD,IAEMnB,GAAkCK,EAAAA,EAAAA,WAAS,WAC7CP,EAAW5D,EACf,KAEAe,EAAAA,EAAAA,YAAU,WAKN,OAJqB0C,EAAkByB,UAAUC,UAAU,CACvDtB,gCAAAA,EACAC,gCAAAA,IAEgBsB,WACxB,GAAG,CAAC3B,EAAmBI,EAAiCC,ICahB,WACxC,IAAOkB,GAA0CvE,EAAAA,EAAAA,sBAAqB,KAA/DuE,iCACDK,GAAuBC,EAAAA,EAAAA,kBAAiB,wBACxC7B,GAAoBS,EAAAA,EAAAA,6BACpB,GAAcR,EAAAA,EAAAA,yBAAbC,UAED4B,GAAyBpB,EAAAA,EAAAA,WAAS,SAAC5D,GACrCoD,EAAU,CACNU,MAAO7C,EAAKgE,uBACZjB,MACI,SAAClE,EAAAA,CACGE,QAASA,EACTD,eAAgB+E,IAGxBT,QAAS,CACLa,GAAI,CACApB,MAAO7C,EAAKyD,qBAI5B,KAEAlE,EAAAA,EAAAA,YAAU,WAEN,OADqB0C,EAAkByB,UAAUC,UAAU,CAACI,uBAAAA,IACxCH,WACxB,GAAG,CAAC3B,EAAmB8B,GAC3B,CItDIG,GC5BM,GAAqBC,EAAAA,EAAAA,uBAAsB,WAA1CC,iBACD,GAAwBC,EAAAA,EAAAA,0BAAvBC,oBACD/B,GAAmBgC,EAAAA,EAAAA,uCACnB/B,GAAuBgC,EAAAA,EAAAA,2BACvB/B,GAAYgC,EAAAA,EAAAA,iBAElBlF,EAAAA,EAAAA,YAAU,WACFgD,GACA6B,EAAiB,CACbM,KAAM,QACN9B,GAAI+B,EAAAA,cAAAA,kBACJ5E,QAASyC,EAAqBC,UAC9BmC,UAAU,EACVC,SAAU,IACVC,OAAQ,kBAAMR,GAAoB,KAG9C,GAAG,CACC9B,EAAqBC,UACrB6B,EACAF,EACA7B,KAGJhD,EAAAA,EAAAA,YAAU,WACDkD,GACD6B,GAAoB,EAE5B,GAAG,CAAC7B,EAAW6B,IJgB6B,WAC5C,IAAMrC,GAAoBS,EAAAA,EAAAA,6BACnBc,GAA0CvE,EAAAA,EAAAA,sBAAqB,KAA/DuE,iCACD,GAActB,EAAAA,EAAAA,yBAAbC,UAED4C,GAA6BpC,EAAAA,EAAAA,WAAS,SAAClC,GACzC0B,EAAU,CACNU,MAAO7C,EAAKgE,uBACZjB,MACI,SAAClE,EAAYA,CAAC4B,YAAaA,IAE/B2C,QAAS,gBAAEhB,EAAAA,EAAAA,kBACP,SAACiB,EAAAA,SAAQA,CAACC,QAASlB,WACdpC,EAAKyD,sBAItB,KAEAlE,EAAAA,EAAAA,YAAU,WAEN,OADqB0C,EAAkByB,UAAUC,UAAU,CAACoB,2BAAAA,IACxCnB,WACxB,GAAG,CAAC3B,EAAmB8C,GAC3B,CGrCIC,GF/BG,WACH,IAAiDb,GAAAA,EAAAA,EAAAA,uBAAsB,WAAhEC,EAA0CD,EAA1CC,iBAAkBa,EAAwBd,EAAxBc,qBACnBC,GAAmBC,EAAAA,EAAAA,mBAAkB,oBACrCC,GAAazE,EAAAA,EAAAA,iBAAgB,cAC5B0E,GAAgBpG,EAAAA,EAAAA,sBAAqB,KAArCoG,OAEDC,GAAqB3C,EAAAA,EAAAA,WAAS,WAC3ByC,IAGDF,EACAd,EAAiB,CACbM,KAAM,QACN9B,GAAI+B,EAAAA,cAAAA,uBACJY,SACI,iCACI,SAACpE,OAAAA,UAAMnB,EAAKwF,kCACZ,SAACjE,IAAAA,CAAEC,KAAK,IAAI8B,QAASzB,WAChB7B,EAAKyF,uCAEV,SAACtE,OAAAA,UAAMnB,EAAK0F,sCAKxBT,EAAqBN,EAAAA,cAAAA,wBAE7B,KAEApF,EAAAA,EAAAA,YAAU,WACN+F,GAEJ,GAAG,CAACJ,EAAkBI,GAC1B,CEDIK,GD9B4C,WAC5C,IAAMC,GAAwBC,EAAAA,EAAAA,4BACxBC,GAA6BhC,EAAAA,EAAAA,kBAAiB,8BACHK,GAAAA,EAAAA,EAAAA,uBAAsB,WAAhEC,EAA0CD,EAA1CC,iBAAkBa,EAAwBd,EAAxBc,qBACnBc,GAAYpF,EAAAA,EAAAA,iBAAgB,aAC5BzB,GAAID,EAAAA,EAAAA,sBAAqB,KAEzB+G,GAAuBrD,EAAAA,EAAAA,WAAS,SAACsD,GACnC,GAAKA,EAAKC,SAAyB,oBAAdH,EA4BjBI,EAAAA,SAAAA,KAAc,4CACdlB,EAAqBN,EAAAA,cAAAA,4BA7B6B,CAGlD,IAAIY,EACJ,OAHAY,EAAAA,SAAAA,KAAc,gDAGNJ,GACJ,IAAK,oBACDR,EAAUrG,EAAEsE,iCAAiC4C,8CAC7C,MACJ,IAAK,yBACL,IAAK,2BAEGb,EADAO,EACU5G,EAAEsE,iCAAiC6C,sCAEnCnH,EAAEsE,iCAAiC8C,2CAEjD,MACJ,QACIf,EAAUrG,EAAEsE,iCAAiC6C,sCAGrDjC,EAAiB,CACbM,KAAM,QACN9B,GAAI+B,EAAAA,cAAAA,uBACJY,QAAAA,EACAX,UAAU,EACV2B,UAAWxE,GAEnB,CAIJ,IAEMyE,GAAgB7D,EAAAA,EAAAA,WAAS,SAAC8D,EAA2BC,GACxC,gBAAXD,GAA0C,IAAdC,GAC5BtC,EAAiB,CACbM,KAAM,UACN9B,GAAI+B,EAAAA,cAAAA,uBACJY,QAASrG,EAAE+D,eAAe0D,uBAC1B/B,UAAU,EACV2B,UAAWxE,GAGvB,IAEM6E,GAAuBjE,EAAAA,EAAAA,WAAS,WAClCyB,EAAiB,CACbM,KAAM,UACN9B,GAAI+B,EAAAA,cAAAA,uBACJY,QAASrG,EAAEsE,iCAAiCqD,6CAC5CjC,UAAU,EACV2B,UAAWxE,GAEnB,IAEM+E,GAAwBnE,EAAAA,EAAAA,WAAS,WACnCsC,EAAqBN,EAAAA,cAAAA,uBACzB,KAEApF,EAAAA,EAAAA,YAAU,WAON,OANqBqG,EAAsBlC,UAAUC,UAAU,CAC3DqC,qBAAAA,EACAQ,cAAAA,EACAI,qBAAAA,EACAE,sBAAAA,IAEgBlD,WACxB,GAAG,CACCoC,EACAQ,EACAI,EACAE,EACAlB,GAER,CCnDImB,GEpCG,WACH,IAAiD5C,GAAAA,EAAAA,EAAAA,uBAAsB,WAAhEC,EAA0CD,EAA1CC,iBAAkBa,EAAwBd,EAAxBc,qBAClBzB,GAA0CvE,EAAAA,EAAAA,sBAAqB,KAA/DuE,iCACDwD,GAAYrG,EAAAA,EAAAA,iBAAgB,aAC5BsG,GAAmBC,EAAAA,EAAAA,qBAAoBF,GAEvC1B,GAAqB3C,EAAAA,EAAAA,WAAS,WAC5BqE,EACA/B,EAAqBN,EAAAA,cAAAA,0BACdsC,EAAiBE,SAExB/C,EAAiB,CACbM,KAAM,QACN9B,GAAI+B,EAAAA,cAAAA,yBACJY,QAASvF,EAAK6G,8CAG1B,KAEAtH,EAAAA,EAAAA,YAAU,WACN+F,GAEJ,GAAG,CAAC0B,EAAW1B,GACnB,CFcI8B,GG5BG,WACH,IAAiDjD,GAAAA,EAAAA,EAAAA,uBAAsB,WAAhEC,EAA0CD,EAA1CC,iBAAkBa,EAAwBd,EAAxBc,qBAClBI,GAAgBpG,EAAAA,EAAAA,sBAAqB,KAArCoG,OAEDgC,GAAYC,EAAAA,EAAAA,QAAO,GAEnBC,GAAuB5E,EAAAA,EAAAA,WAAS,WACuB,IAAtB0E,EAAUF,UAM7CE,EAAUF,SAAU,IAAIK,MAAOC,UAE/BC,MAAM,IAAK,CACPC,OAAQ,OACRC,MAAO,aAENC,OAAMC,SAAAA,UAAKC,QAAQC,MAAMF,MACzBG,SAAQ,WACL,IACMpD,GADU,IAAI2C,MAAOC,UACAJ,EAAUF,QAIrC,GAFAE,EAAUF,QAAU,EAEhBtC,EAlCG,IAkCwB,CAC3B,IAAMU,EAAUvF,EAAKkI,kBACrB9D,EAAiB,CACbM,KAAM,QACN9B,GAAI+B,EAAAA,cAAAA,2BACJY,QAAAA,IAEJY,EAAAA,SAAAA,KAAe,2BACnB,MACIlB,EAAqBN,EAAAA,cAAAA,2BAE7B,IACR,KAEApF,EAAAA,EAAAA,YAAU,WACN,IAAM4I,EAAWC,YAAYb,EAlDd,KAmDf,OAAO,kBAAMc,cAAcF,GAC/B,GAAG,CAACZ,GACR,CHfIe,GIpCG,WACH,IAAiDnE,GAAAA,EAAAA,EAAAA,uBAAsB,WAAhEC,EAA0CD,EAA1CC,iBAAkBa,EAAwBd,EAAxBc,qBACnBsD,GAAqBzE,EAAAA,EAAAA,kBAAiB,sBACrCb,GAAwBhE,EAAAA,EAAAA,sBAAqB,KAA7CgE,eAEDqC,GAAqB3C,EAAAA,EAAAA,WAAS,WAC3B4F,EAoBDtD,EAAqBN,EAAAA,cAAAA,qCAnBrBP,EAAiB,CACbM,KAAM,QACN9B,GAAI+B,EAAAA,cAAAA,oCACJC,UAAU,EACVW,SACI,iCACI,SAACpE,OAAAA,UACInB,EAAKwI,uCAEV,SAACjH,IAAAA,CAAEC,KAAMlD,EAAyBmD,IAAI,sBAAsBC,OAAO,kBAC9D1B,EAAKkD,uCAEV,SAAC/B,OAAAA,UACInB,EAAKyI,0CAQ9B,KAEAlJ,EAAAA,EAAAA,YAAU,WACN+F,GAEJ,GAAG,CAACiD,EAAoBjD,GAC5B,CJGIoD,EACJ,CKhCO,IAAMC,EAAiD,gBAAEC,EAAAA,EAAAA,eAAgBC,EAAAA,EAAAA,qBAAsBC,EAAAA,EAAAA,SAElG,OADA9G,KACO,8BAAG8G,EAASF,EAAgBC,IACvC,8DCPaE,EAAwB,WACjC,IAAMC,GAAkBrI,EAAAA,EAAAA,iBAAgB,mBAClC,GAAqBsI,EAAAA,EAAAA,0BAApBC,iBACD,GAAmBC,EAAAA,EAAAA,iBAAlBC,eACD,GAAMnK,EAAAA,EAAAA,wBAALC,GAEPmK,EAAAA,EAAAA,eAAcL,GACd,IAAMM,EAAcF,EAAeJ,EAAgBO,UAAWP,EAAgBQ,UACxEC,GAAgBC,EAAAA,EAAAA,YAAWV,EAAgBW,WAkBjD,OACI,SAACC,EAAAA,UAASA,CACNC,QAAM,EACNC,UAAU,oIAEVlH,GAAG,kBAEH,UAACmH,EAAAA,MAAKA,CACFC,QAAM,EACNC,KAAK,QACLH,UAAU,gBACVI,mBAAiB,+BACjBC,cAAY,iCAEZ,SAACJ,EAAAA,MAAAA,OAAY,UACR7K,EAAEsE,iCAAiC4G,8BAExC,SAACL,EAAAA,MAAAA,QAAa,WACV,SAACA,EAAAA,MAAAA,YAAiB,CAACnH,GAAG,yCAClB,SAACyH,IAAAA,UAnCF,WACf,OAAQrB,EAAgBtC,WACpB,KAAK4D,EAAAA,0BAAAA,iCACD,OAAOpL,EAAE+D,eAAesH,wBAE5B,KAAKD,EAAAA,0BAAAA,4BACD,OAAOpL,EAAE+D,eAAeuH,aAAalB,EAAaG,GAEtD,KAAKa,EAAAA,0BAAAA,kCACL,KAAKA,EAAAA,0BAAAA,gCACD,OAAOpL,EAAE+D,eAAewH,4BAGhC,OAAOzB,EAAgB0B,iBAC3B,CAqBwBC,UAGZ,SAACZ,EAAAA,MAAAA,QAAa,WACV,SAAC1G,EAAAA,SAAQA,CAACC,QAAS4F,EAAkB0B,SAAO,EAACT,cAAY,qBACpDjL,EAAEsE,iCAAiCC,0BAM5D,EC1DaoH,EAA2B,WACpC,IAAMC,GAAUC,EAAAA,EAAAA,qBAOZpK,GAAAA,EAAAA,EAAAA,iBAAgB,CAAC,cAAe,aAAc,kBAAmB,kBAAmB,oBALpFqK,EAKArK,EALAqK,YACA5F,EAIAzE,EAJAyE,WACA6F,EAGAtK,EAHAsK,gBACAC,EAEAvK,EAFAuK,gBACAlC,EACArI,EADAqI,gBAIEmC,IAFWlM,EAAAA,EAAAA,sBAAqB,aAEU,cAAZ6L,IAA4BE,EAC1DI,GAAiBD,IAAkBF,IAAoB7F,GACvDiG,IAAoBrC,GAAmBoC,EACvCE,EAAiBJ,IAAoBlC,GAAmBoC,EAE9D,OACI,UAAC9K,MAAAA,CAAIwJ,UAAU,qCACVqB,IAAiB,SAACI,EAAAA,OAAMA,CAACC,QAAM,EAACvB,KAAK,OAAOwB,MAAM,YAClDL,IAAiB,SAACM,EAAAA,UAASA,CAAAA,GAC3BL,IAAmB,SAACtC,EAAWA,CAAAA,GAC/BuC,IAAkB,SAACK,EAAAA,WAAUA,CAAAA,KAG1C,ECfaC,EAAyCC,IAAAA,MAAW,gBAC7DjD,EAAAA,EAAAA,eACAE,EAAAA,EAAAA,SAIA,OAFmBnI,EAAAA,EAAAA,iBAAgB,eAI3B,SAACmL,EAAAA,oBAAmBA,CAAClD,eAAgBA,WAChCC,SAAAA,UACG,SAACF,EAA6BA,CAC1BC,eAAgBA,EAChBC,qBAAsBA,WAErBC,QAMd,SAAC+B,EAAcA,CAAAA,EAC1B,cC1BakB,EAA2C,gBACpDnD,EAAAA,EAAAA,eACAE,EAAAA,EAAAA,SACAkD,EAAAA,EAAAA,uBAGA,OAAIA,GAEI,SAACA,EAAAA,CAAuBpD,eAAgBA,WACnCE,IAINA,CACX,ECPamD,EAAqC,gBAC9CC,EAAAA,EAAAA,IACAC,EAAAA,EAAAA,iBACAH,EAAAA,EAAAA,uBACAlD,EAAAA,EAAAA,SAEA,OACI,SAACsD,EAAAA,cAAaA,CAACD,iBAAkBA,EAAkBD,IAAKA,WACnDtD,SAAAA,UACG,SAACmD,EAAuBA,CACpBnD,eAAgBA,EAChBoD,uBAAwBA,YAExB,SAACK,EAAAA,QAAAA,SAAgB,WACb,SAACC,EAAAA,2BAA0BA,UACtBxD,EAASF,WAOtC,ECfa2D,EAAuC,gBAChDL,EAAAA,EAAAA,IACAC,EAAAA,EAAAA,iBACArD,EAAAA,EAAAA,SACAkD,EAAAA,EAAAA,uBACAlC,EAAAA,EAAAA,UACA0C,EAAAA,EAAAA,cAEA,OACI,SAACC,EAAAA,iBAAgBA,CAACP,IAAKM,YACnB,SAAClM,MAAAA,CAAIwJ,UAAWlM,EAAI,SAAUkM,aAC1B,SAACmC,EAAiBA,CACdC,IAAKA,EACLC,iBAAkBA,EAClBH,uBAAwBA,WAEvBpD,SAAAA,UACG,SAACgD,EAAqBA,CAAChD,eAAgBA,WAClCE,UAO7B,gCC7CM4D,GAAqB,EAAIC,EAAAA,WACzBC,GAAc,IAAIC,EAAAA,YAAY,CAChCC,eAAgB,CACZC,QAAS,CACLC,OAAQN,OAMPO,GAA2D,gBAAEnE,EAAAA,EAAAA,SACtE,OACI,UAACoE,EAAAA,oBAAmBA,CAACC,OAAQP,aACxB9D,GACD,SAACsE,GAAAA,EAAkBA,CAACC,eAAe,EAAOC,eAAe,kBAGrE,aCwBaC,GAAqB,CAC9B,CAAC,uBAAwB,4BACzB,CAAC,wBAAyB,6BAC1B,CAAC,yBAA0B,8BAC3B,CAAC,wBAAyB,6BAC1B,CAAC,iBAAkB,mBACnB,CAAC,YAAa,cACd,CAAC,uBAAwB,2BACzB,CAAC,0BAA2B,8BAC5B,CAAC,4BAA6B,iCAC9B,CAAC,wBAAyB,4BAC1B,CAAC,uBAAwB,2BAGzB,CAAC,4BAA6B,iCAC9B,CAAC,+BAAgC,qCACjC,CAAC,oCAAqC,0CACtC,CAAC,qBAAsB,yBACvB,CAAC,wBAAyB,6BAC1B,CAAC,uBAAwB,4BACzB,CAAC,sBAAuB,2BACxB,CAAC,gCAAiC,sCAClC,CAAC,gCAAiC,sCAClC,CAAC,iCAAkC,uCACnC,CAAC,gCAAiC,uCAClC,CAAC,0BAA2B,gCAC5B,CAAC,wBAAyB,6BAC1B,CAAC,8BAA+B,mCAChC,CAAC,kCAAmC,wCAEpC,CAAC,2BAA4B,gCAC7B,CAAC,gCAAiC,uCAClC,CAAC,4BAA6B,iCAC9B,CAAC,+BAAgC,qCACjC,CAAC,6BAA8B,mCAC/B,CAAC,iCAAkC,uCACnC,CAAC,4BAA6B,kCAC9B,CAAC,yBAA0B,gCAC3B,CAAC,kCAAmC,2CACpC,CAAC,WAAY,aACb,CAAC,WAAY,aACb,CAAC,YAAa,cACd,CAAC,WAAY,aACb,CAAC,WAAY,aACb,CAAC,sBAAuB,2BAKfC,GAA0DD,GAAmBE,KAAIC,SAAAA,UAAKA,EAAE,MA4BxFC,GAAuD,CAChE,OACA,WACA,SACA,gBACA,eACA,cAqBSC,GAA6B,CACtC,UACA,aACA,aAwBSC,GAA6E,CACtF,OACA,iBACA,gBACA,eACA,cACA,eACA,qBACA,uBACA,gCACA,QACA,yBACA,iCACA,wBACA,2BACA,iCAQEC,GAA4C,CAAC,WAAY,uBAAwB,UAAW,WAAY,eAEvG,SAASC,GAAcC,GAC1B,OAAOF,GAAmBG,SAASD,EAAOtJ,KAC9C,CAUO,SAASwJ,GAAsBC,GAClC,QAASA,KAAWA,aAAAA,EAAAA,EAAQC,aAAa,EAC7C,CCtNO,SAASC,GAAsB,OAClCC,EADkC,EAClCA,SACAC,EAFkC,EAElCA,OACAC,EAHkC,EAGlCA,OACAC,EAJkC,EAIlCA,KACA/N,EALkC,EAKlCA,aAQMgO,EAAM,IAAIzQ,IAfY,kBAeiByC,GAM7C,OALAgO,EAAIxQ,aAAayQ,IAAI,WAAYL,QAAAA,EAAY,IAC7CI,EAAIxQ,aAAayQ,IAAI,SAAUJ,GAC/BG,EAAIxQ,aAAayQ,IAAI,SAAUH,QAAAA,EAAU,IACzCE,EAAIxQ,aAAayQ,IAAI,OAAQC,OAAOH,IAE7BC,EAAInQ,UACf,CAEO,SAASsQ,GAAiBb,GAC7B,MAAuB,aAAhBA,EAAOtJ,IAClB,2qGCzBO,IAAMoK,IAAeC,EAAAA,GAAAA,IAAG,CAC3BC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,SAIGC,IAAaH,EAAAA,GAAAA,IAAG,CACzBC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNC,aAAc,CACVC,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,QAGVK,WAAY,CACRD,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,WAMLM,IAAiBR,EAAAA,GAAAA,IAAG,CAC7BC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,SAIGO,IAAoBT,EAAAA,GAAAA,IAAG,CAChCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNG,WAAY,CACRD,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,WAMLQ,IAAqBV,EAAAA,GAAAA,IAAG,CACjCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNO,SAAU,CACNL,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,QAGVU,UAAW,CACPN,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,QAGVW,UAAW,CACPP,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,WAOLY,IAAwBd,EAAAA,GAAAA,IAAG,CACpCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,SAUGa,KANsBf,EAAAA,GAAAA,IAAG,CAClCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,UAIwBF,EAAAA,GAAAA,IAAG,CACjCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNY,QAAS,CACLV,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,QAGVe,SAAU,CACNC,KAAM,EACFhB,EAAAA,GAAAA,IAAEA,OAENiB,MAAO,EACHjB,EAAAA,GAAAA,IAAEA,OAENkB,IAAK,EACDlB,EAAAA,GAAAA,IAAEA,OAENmB,OAAQ,EACJnB,EAAAA,GAAAA,IAAEA,OAENoB,SAAU,EACNpB,EAAAA,GAAAA,IAAEA,OAENqB,YAAa,EACTrB,EAAAA,GAAAA,IAAEA,OAENsB,WAAY,EACRtB,EAAAA,GAAAA,IAAEA,OAENuB,QAAS,EACLvB,EAAAA,GAAAA,IAAEA,YCvHLwB,GAAiB5E,IAAAA,MAAW,SAAwB,WAAC/C,SAC9D,OAAO,SAAC4H,SAAAA,CAAO5G,UAAWgF,cAAiBhG,GAC/C,ICAO,SAAS6H,GAAgB,OAACC,EAAD,EAACA,SAAUZ,EAAX,EAAWA,SACvC,GAAKY,EAIL,MAAO,CACHC,EAAGb,EAASa,EAAID,EAASE,MClBN,EDmBnBC,EAAGf,EAASe,EAAIH,EAASI,OCnBN,EDqB3B,CAEO,SAASC,GAA0D,OACtEL,EADsE,EACtEA,SACAzC,EAFsE,EAEtEA,OACA+C,EAHsE,EAGtEA,YAEMlB,EAAWnE,IAAAA,SAAc,WAC3B,OAAO8E,GAAgB,CACnBC,SAAAA,EACAZ,SAAU7B,GAElB,GAAG,CAACyC,EAAUzC,IAed,MAAO,CACHlE,KAdS4B,IAAAA,SAAc,WACvB,GAAK+E,EAIL,MAAO,CACHO,SAAUC,GAAcR,EAASE,MAAOI,EAAYJ,OACpDO,UAAWD,GAAcR,EAASI,OAAQE,EAAYF,QACtDF,MAAOM,GAAcR,EAASE,MAAO3C,EAAO2C,OAC5CE,OAAQI,GAAcR,EAASI,OAAQ7C,EAAO6C,QAEtD,GAAG,CAACJ,EAAUzC,EAAO6C,OAAQ7C,EAAO2C,MAAOI,EAAYF,OAAQE,EAAYJ,QAIvEd,SAAAA,EAER,CAEA,SAASoB,GAAcR,EAAkBU,GAGrC,OAFkBV,EAAWU,EAEV,EACvB,iSEnDA,SAASC,GAAoBC,GACzB,MAAO,CAACX,EAAG,OAAQE,EAAG,OAAQf,SAAUwB,QAAAA,EAAmB,CAACX,EAAG,EAAGE,EAAG,GACzE,CAkBA,IAkKaU,GAAc,IAlKtB,oBAACC,uGAAAA,GACFC,GAAAA,KAAAA,YAAuBJ,QAAoBK,IAC3CC,GAAAA,KAAAA,uBAAAA,GACAC,GAAAA,KAAAA,oBAAAA,GACAC,GAAAA,KAAAA,wBAAAA,GACAC,GAAAA,KAAAA,oBAAAA,GACAC,GAAAA,KAAAA,mBAAAA,GACAC,GAAAA,KAAAA,mBAAkB,sBAPhBR,KAAAA,EAaKS,IAAAA,qBAAP,WACI,OAAOC,KAAKT,SAChB,IAMOU,IAAAA,qBAAP,SAAoBV,GAChBS,KAAKT,UAAYA,CACrB,IAMOW,IAAAA,uBAAP,SAAsBC,GAClBH,KAAKT,UAAYJ,GAAoBgB,EACzC,IAMOC,IAAAA,wBAAP,WACI,OAAOJ,KAAKN,YAChB,IAMOW,IAAAA,4BAAP,WACI,OAAOL,KAAKL,gBAChB,IAMOW,IAAAA,wBAAP,SAAuB1C,GACnBoC,KAAKL,iBAAmBK,KAAKN,cAAgB9B,EAC7CoC,KAAKN,aAAe9B,CACxB,IAKO2C,IAAAA,0BAAP,WACIP,KAAKL,iBAAmBK,KAAKN,aAC7BM,KAAKN,kBAAeF,CACxB,IAMOgB,IAAAA,0BAAP,SAAyB,OAAC9B,EAAD,EAACA,MAAOE,EAAR,EAAQA,OAAQH,EAAhB,EAAgBA,EAAGE,EAAnB,EAAmBA,EACpCqB,KAAKF,gBACLE,KAAKS,uBAAuB,CAAChC,EAAAA,EAAGE,EAAAA,IAEhCqB,KAAKU,aAAa,CAACjC,EAAAA,EAAGE,EAAAA,EAAGD,MAAAA,EAAOE,OAAAA,GAExC,IAEQ8B,IAAAA,qBAAR,SAAqB,OAAC9B,EAAD,EAACA,OAAQF,EAAT,EAASA,MAAOD,EAAhB,EAAgBA,EAAGE,EAAnB,EAAmBA,EAC9Bc,EAAkBO,KAAKW,qBACxBlB,IAGLO,KAAKF,iBAAkB,EACvBL,EAAgBmB,MAAMhC,OAAS,GAAU,OAAPA,EAAO,MACzCa,EAAgBmB,MAAMlC,MAAQ,GAAS,OAANA,EAAM,MACvCe,EAAgBmB,MAAMC,UAAY,aAAqBlC,OAARF,EAAE,QAAQ,OAAFE,EAAE,OAC7D,IAEQ8B,IAAAA,+BAAR,SAA+B,OAAChC,EAAD,EAACA,EAAGE,EAAJ,EAAIA,EACzBc,EAAkBO,KAAKW,qBACxBlB,IAGLA,EAAgBmB,MAAMC,UAAY,aAAqBlC,OAARF,EAAE,QAAQ,OAAFE,EAAE,OACzDc,EAAgBmB,MAAME,WAAa,8BACvC,IAKOC,IAAAA,qBAAP,WACIf,KAAKF,iBAAkB,EACvB,IAAML,EAAkBO,KAAKW,qBACxBlB,IAILA,EAAgBmB,MAAMhC,OAAS,IAC/Ba,EAAgBmB,MAAMlC,MAAQ,IAC9Be,EAAgBmB,MAAME,WAAa,OACvC,IAEQH,IAAAA,2BAAR,WACI,IAAMK,EAAShB,KAAKP,gBAEpB,GAAIuB,EACA,OAAOA,EAGX,QACMvB,EADcO,KAAKiB,iBACWC,cAAc,wBAMlD,SAJIzB,YAA2B0B,2GAC3BnB,KAAKP,gBAAkBA,GAGpBO,KAAKP,eAChB,IAMO2B,IAAAA,wBAAP,WACI,IAAMJ,EAAShB,KAAKJ,aAEpB,GAAIoB,EACA,OAAOA,EAGX,IAAMnB,EAAcG,KAAKiB,iBAMzB,OAJAjB,KAAKqB,mBAAmBxB,EAAYyB,0BAEpCrK,EAAAA,EAAAA,eAAc+I,KAAKJ,cAEZI,KAAKJ,YAChB,IAEQqB,IAAAA,uBAAR,WACI,IAAMD,EAAS3T,SAAS6T,cAAc,eAGtC,OAFAjK,EAAAA,EAAAA,eAAc+J,GAEPA,CACX,IAEQK,IAAAA,2BAAR,SAA2BzD,GACvBoC,KAAKJ,aAAehC,CACxB,mCA/JE0B,EAAD,4ICdE,IAAMiC,IAA0BC,EAAAA,GAAAA,SAAQC,GAAsBC,KAQ7BF,EAAAA,GAAAA,SAAQC,IAuBhD,SAAgBE,GACZ,OAAOA,GAAAA,EAAmBR,gBAAiBQ,EAAQC,QAAQC,IAC/D,IAjBA,SAASJ,GACLK,EACAlE,GAEA,IAAMoD,EAAS3T,SAAS0U,kBAAkBnE,EAASa,EAAGb,EAASe,GAAGqD,KAAKF,GAEvE,GAAId,GAAAA,EAAkBG,aAClB,OAAOH,CAEf,CAeO,SAASU,GAAOC,GACnB,OAAOA,GAAAA,EAAmBR,gBAAiBQ,EAAQC,QAAQK,IAC/D,CAeA,IAAMC,GAAoB,CAAC,WAAY,YAAa,YAC9CC,GAAqB,CAAC,YAAa,cACnCC,GAAuB,CAAC,cAAe,eACvCC,GAAwB,CAAC,gBA4DxB,SAASC,GAAgBX,GAC5B,GAAKD,GAAOC,GAAZ,CAIA,IAAMlD,EAAI8D,OAAOZ,aAAAA,EAAAA,EAASC,QAAQnD,GAC5BE,EAAI4D,OAAOZ,aAAAA,EAAAA,EAASC,QAAQjD,GAElC,IAAI6D,MAAM/D,KAAM+D,MAAM7D,GAItB,MAAO,CAACF,EAAAA,EAAGE,EAAAA,EATX,CAUJ,CCrIO,SAAS8D,GAAqB,OAACC,EAAD,EAACA,QAASC,EAAV,EAAUA,SAC3C,OAAOlJ,IAAAA,aAMH,SAACmJ,EAAiBC,GAEd,IAAMC,EAAcF,EAAQnE,EACtBsE,EAAeH,EAAQnE,EAAImE,EAAQlE,MACnCsE,EAAaJ,EAAQjE,EACrBsE,EAAgBL,EAAQjE,EAAIiE,EAAQhE,OAG1C,GAAIkE,EAAc,GAAKC,EAAeJ,EAASjE,OAASsE,EAAa,GAAKC,EAAgBN,EAAS/D,OAC/F,OAAO,EAKX,IAFA,IAAMsE,EAAgBR,EAEbS,EAAI,EAAGA,EAAID,EAAcE,OAAQD,IAAK,CAC3C,IAAME,EAAeH,EAAcC,GAGnC,IAAIN,GAAmBQ,EAAa7S,KAAOqS,EAA3C,CAKA,IAAMS,EAAmBD,EAAa5E,EAChC8E,EAAoBF,EAAa5E,EAAI4E,EAAa3E,MAClD8E,EAAkBH,EAAa1E,EAC/B8E,EAAqBJ,EAAa1E,EAAI0E,EAAazE,OAGzD,GACIkE,EAAcS,GACdR,EAAeO,GACfN,EAAaS,GACbR,EAAgBO,EAEhB,OAAO,CAfX,CAiBJ,CAEA,OAAO,CACX,GACA,CAACb,EAAS/D,OAAQ+D,EAASjE,MAAOgE,GAE1C,CClDA,IACMgB,GAA6B,GAQ5B,SAASC,GAAgD,OAC5DvE,EAD4D,EAC5DA,gBACAsD,EAF4D,EAE5DA,QACAC,EAH4D,EAG5DA,SACA5G,EAJ4D,EAI5DA,OACA6H,EAL4D,EAK5DA,YAEMC,EAAgBpB,GAAqB,CAACC,QAAAA,EAASC,SAAAA,IACrD,OAAOlJ,IAAAA,aACH,SAACqK,EAAuBC,IAmDpB,YACI9M,EAAAA,EAAAA,eAAcmI,GAEd,IAAM4E,EAASC,KAAKC,IAAI9E,EAAgBX,EAAIsF,EAAStF,GAC/C0F,EAASF,KAAKC,IAAI9E,EAAgBT,EAAIoF,EAASpF,IAEjDqF,EA3EU,IA2EwBG,EA3ExB,KA4EVP,GAAY,EAEpB,CA3DAQ,GA6DA,WACI,IAAMC,EAAgBhF,GAAYU,gBAElC9I,EAAAA,EAAAA,eAAcoN,GAEd,IAAML,EAASD,EAAStF,EAAI4F,EAAczG,SAASa,EAC7C0F,EAASJ,EAASpF,EAAI0F,EAAczG,SAASe,EAC7C2F,EAA4BL,KAAKC,IAAIC,GAAUT,GAC/Ca,EAA8BN,KAAKC,IAAIF,GAAUN,IAC7BY,GAA6BC,IAMvDlF,GAAYY,aAAa,CACrBxB,EACIuF,EAASN,GACH,QACAM,GAAS,GACL,OACAK,EAAc5F,EAC5BE,EACIwF,EAAST,GACH,SACAS,GAAS,GACL,MACAE,EAAc1F,EAC5Bf,SAAU,CACNa,EAAGsF,EAAStF,EACZE,EAAGoF,EAASpF,IAGxB,CA7FA6F,GAGA,WACI,IAAMC,EFoHf,SAAgCrF,EAA2B2E,GAC9D,MAAO,CACH3F,QAAS,CACLK,EAAGW,EAAgBX,EAAIsF,EAASW,MAChC/F,EAAGS,EAAgBT,EAAIoF,EAASY,OAEpC1G,SAAU,CACNQ,EAAGW,EAAgBX,EAAIsF,EAASW,MAAQX,EAASa,KAAKC,YACtDlG,EAAGS,EAAgBT,EAAIoF,EAASY,OAEpCxG,WAAY,CACRM,EAAGW,EAAgBX,EAAIsF,EAASW,MAChC/F,EAAGS,EAAgBT,EAAIoF,EAASY,MAAQZ,EAASa,KAAKE,cAE1D5G,YAAa,CACTO,EAAGW,EAAgBX,EAAIsF,EAASW,MAAQX,EAASa,KAAKC,YACtDlG,EAAGS,EAAgBT,EAAIoF,EAASY,MAAQZ,EAASa,KAAKE,cAGlE,CEvIwCC,CAAuB1F,GAAY+B,kBAAmB2C,GACxEiB,EFgDf,SAA6B,OAChCC,EADgC,EAChCA,YACAC,EAFgC,EAEhCA,SACA3F,EAHgC,EAGhCA,UACA4F,EAJgC,EAIhCA,OACAC,EALgC,EAKhCA,gBACAC,EANgC,EAMhCA,aACAxB,EAPgC,EAOhCA,cAEIpF,EAAI6G,IACJ3G,EAAI2G,IACFC,EAAkB,GAAkBhG,OAAfA,EAAUd,EAAE,KAAe,OAAZc,EAAUZ,GAqBpD,GApBKY,IAAa2C,GAAkBrG,SAAS0J,KACzC9G,EAAI8D,OAAO0C,aAAAA,EAAAA,EAAarD,QAAQnD,GAChCE,EAAI4D,OAAO0C,aAAAA,EAAAA,EAAarD,QAAQjD,IAGhCwD,GAAmBtG,SAAS0J,KAC5B9G,EAAI8D,OAAO6C,aAAAA,EAAAA,EAAiBxD,QAAQnD,GAAKyG,EAASxG,MAAQ,EAC1DC,EAAI4D,OAAO0C,aAAAA,EAAAA,EAAarD,QAAQjD,IAGhCyD,GAAqBvG,SAAS0J,KAC9B9G,EAAI8D,OAAO0C,aAAAA,EAAAA,EAAarD,QAAQnD,GAChCE,EAAI4D,OAAO6C,aAAAA,EAAAA,EAAiBxD,QAAQjD,GAAKuG,EAAStG,OAAS,GAG3DyD,GAAsBxG,SAAS0J,KAC/B9G,EAAI8D,OAAO6C,aAAAA,EAAAA,EAAiBxD,QAAQnD,GAAKyG,EAASxG,MAAQ,EAC1DC,EAAI4D,OAAO6C,aAAAA,EAAAA,EAAiBxD,QAAQjD,GAAKuG,EAAStG,OAAS,IAG3D4D,MAAM/D,KAAM+D,MAAM7D,GAGtB,OAAKkF,EAAc,CAACpF,EAAAA,EAAGE,EAAAA,EAAGD,MAAOwG,EAASxG,MAAOE,OAAQsG,EAAStG,QAASuG,GAIpE,CAAC1G,EAAAA,EAAGE,EAAAA,GAHA0G,CAIf,CExFqCG,CAAoB,CACrCP,YAAa1D,GAAwBkD,EAAgBrG,SACrDgH,gBAAiB7D,GAAwBkD,EAAgBvG,aACzDgH,SAAUnJ,EACVoJ,OAAQpJ,EAAOvL,GACfqT,cAAAA,EACAtE,UAAWF,GAAYU,eACvBsF,aAAchG,GAAYgB,wBAG9B,GAAK2E,EAAL,CAIA3F,GAAYiB,gBAAgB0E,GAa5B,IAAMS,EAAkB1B,EAASa,KAC3Bc,EAZN,SAAyBC,GACrB,QAAM1D,EAAO5U,SAAS6T,cAClB,uBAAsDyE,OAA/BA,EAAgBlH,EAAE,eAA+B,OAAlBkH,EAAgBhH,EAAE,OAG5E,KAAMsD,WAAgBd,wGAGtB,OAAOc,CACX,CAGqB2D,CAAgBZ,GAEhCU,GAILrG,GAAYmB,kBAAkB,CAC1B/B,EAAGiH,EAAaG,WJzET,EI0EPlH,EAAG+G,EAAaI,UJ1ET,EI2EPlH,OAAQ6G,EAAgBX,aACxBpG,MAAO+G,EAAgBZ,aA1B3B,CA8BJ,CA9CAkB,EA6FJ,GACA,CAAC3G,EAAiBwE,EAAaC,EAAe9H,EAAQ4G,EAAUD,GAExE,0HC9GO,SAASsD,GAAoD,OAChEjK,EADgE,EAChEA,OACA2G,EAFgE,EAEhEA,QACAC,EAHgE,EAGhEA,SACAnE,EAJgE,EAIhEA,SACAyH,EALgE,EAKhEA,aACArC,EANgE,EAMhEA,YAEMC,EAAgBpB,GAAqB,CAACC,QAAAA,EAASC,SAAAA,IAErD,OAAOlJ,IAAAA,aACH,SAACyM,EAAmBC,GAChBvC,GAAY,GACZvE,GAAY0B,eAEZ,IAAMqF,EAAc/G,GAAYe,kBAChCf,GAAYkB,oBAEZ,IAAM8F,yUAAwB,IACvBtK,EACAqK,GAGP,GAAKA,GAAgBvC,EAAcwC,EAAuBtK,EAAOvL,IAAjE,CAIA,IAAM8V,EAAkB/H,GAAgB,CACpCX,SAAUwI,EACV5H,SAAAA,KAGJvH,EAAAA,EAAAA,eAAcqP,GACdjH,GAAYa,eAAeoG,GAE3BL,EAAaI,EAVb,CAWJ,GACA,CAACtK,EAAQ8H,EAAeoC,EAAcvD,EAASlE,EAAUoF,GAEjE,CC1DA,SAA6B,iCAA7B,GAAyE,+BCIlE,SAAS2C,KACZ,OAAO9M,IAAAA,aAAkB,SAAC/D,OAElBA,SADAA,EAAEpG,gBAAkB6R,2GACH,QAAjBzL,EAAAA,EAAEpG,OAAOkX,QAAQ,sBAAjB9Q,IAAAA,GAAAA,EAAiC+Q,UAAUC,IAAIC,IAEvD,GAAG,GACP,mkBCYO,SAASC,GAAsD,OAClElE,EADkE,EAClEA,QACA3G,EAFkE,EAElEA,OACA4G,EAHkE,EAGlEA,SACAkE,EAJkE,EAIlEA,OACAC,EALkE,EAKlEA,gBACAb,EANkE,EAMlEA,aAEMpC,EAAgBpB,GAAqB,CAACC,QAAAA,EAASC,SAAAA,IAErD,OAAOlJ,IAAAA,aACH,SAACsN,EAAKxH,EAAWsC,OAoEJmF,EAAT,eAEIH,GADA5P,EAAAA,EAAAA,eAAc6P,GACA,QAAdD,EAAAA,EAAO9R,eAAP8R,IAAAA,GAAAA,EAAgBI,eAAe,CAC3BxI,EAAGqI,EAAgBrI,EACnBE,EAAGmI,EAAgBnI,GAE3B,EAZIuI,YAAW,eAEHH,8HADAA,CAAAA,EAAIzX,OAAkB6R,eACH,QAAnB4F,EAAAA,EAAIzX,OAAOkX,QAAQ,sBAAnBO,IAAAA,GAAAA,EAAmCN,UAAUU,OAAOR,IAE5D,GAAG,GA/DP,IAAmC9E,EAAAA,EAAKP,wBAAjCvD,EAA4B8D,EAA5B9D,IAAKF,EAAuBgE,EAAvBhE,KAAMC,EAAiB+D,EAAjB/D,MAAOE,EAAU6D,EAAV7D,OACnBoJ,GAAqBC,EAAAA,GAAAA,MAAK9F,GAAyBe,IAEnD2C,EAAcmC,EAAmB,CACnC3I,EAAGZ,EACHc,EAAGZ,IAGDqH,EAAkBgC,EAAmB,CACvC3I,EAAGX,EACHa,EAAGX,IAGP,IAAKiH,IAAgBG,EACjB,OAAO4B,IAGX,IAAMM,EAAWlC,EAAgB3G,EAAIwG,EAAYxG,EAAI,EAC/C8I,EAAYnC,EAAgBzG,EAAIsG,EAAYtG,EAAI,EAEhDyH,EAkBN,YACInP,EAAAA,EAAAA,eAAc6P,GAad,MAAO,CACHrI,EAXmC,CAAC,OAAQ,UAAW,cAElB5C,SAAS0D,GAC5CxD,EAAO0C,GAAK6I,EAAWvL,EAAO2C,OAC9B3C,EAAO0C,EAQTE,EAbmC,CAAC,MAAO,UAAW,YAOjB9C,SAAS0D,GAC5CxD,EAAO4C,GAAK4I,EAAYxL,EAAO6C,QAC/B7C,EAAO4C,EAMjB,CApCoB6I,GAEdC,EAAsB,8UACrB1L,GAAAA,CACH0C,EAAG2H,EAAY3H,EACfE,EAAGyH,EAAYzH,EACfD,MAAO4I,EACP1I,OAAQ2I,IAKZ,KAFsBD,IAAavL,EAAO2C,OAAS6I,IAAcxL,EAAO6C,UAEjDiF,EAAc4D,EAAqB1L,EAAOvL,IAC7D,OAAOwW,IAGXf,EAAawB,EAoCjB,GACA,CAAC1L,EAAQ2G,EAASmB,EAAeoC,EAAca,EAAiBD,GAExE,61DC7EO,IAAMa,GAAW,SACpBC,GAEA,IACIjR,EAUAiR,EAVAjR,SACAqF,EASA4L,EATA5L,OACAyC,EAQAmJ,EARAnJ,SACAmE,EAOAgF,EAPAhF,SACA/B,EAMA+G,EANA/G,MACAqF,EAKA0B,EALA1B,aACA3H,EAIAqJ,EAJArJ,OACAsJ,EAGAD,EAHAC,SACAlF,EAEAiF,EAFAjF,QACAhL,EACAiQ,EADAjQ,UAGEmP,EAASpN,IAAAA,OAAkB,MACRoF,EAAAA,GAAc8I,GAAhC/J,EAAkBiB,EAAlBjB,SAAU/F,EAAQgH,EAARhH,KACe4B,EAAAA,GAAAA,IAAAA,UAAe,MAAxCoO,EAAyBpO,EAAAA,GAAfmK,EAAenK,EAAAA,GAE2CqO,GAAAA,EAAAA,EAAAA,aAAW,GAA/EC,EAAoED,EAApEC,MAAmBC,EAAiDF,EAAjDE,QAAwBC,EAAyBH,EAAzBG,SAC5CC,EAASvE,GAAU,CACrBC,YAAAA,EACAlB,QAAAA,EACAC,SAAAA,EACA5G,OAAAA,EACAqD,gBAAiBxB,IAGfuK,EAAanC,GAAc,CAC7BjK,OAAAA,EACA4G,SAAAA,EACAnE,SAAAA,EACAyH,aAAAA,EACAvD,QAAAA,EACAkB,YAAAA,IAGEwE,EAAgB7B,KAOhB8B,EAAezB,GAAgB,CACjC7K,OAAAA,EACA8K,OAAAA,EACAC,gBAAiBlJ,EACjB+E,SAAAA,EACAsD,aAAAA,EACAvD,QAAAA,IAQE4F,GAAgBC,EAAAA,EAAAA,UAAQ,WAC1B,OAAO,IACH3K,SAAU,WACViD,UAAW,oBAAajD,aAAAA,EAAAA,EAAUa,EAAE,QAAkB,OAAZb,aAAAA,EAAAA,EAAUe,EAAE,QACnD9G,EAEX,GAAG,CAAC+F,EAAU/F,IAGRyF,EAAW,EAAUsB,QAAU7C,EAAO4C,EAAI5C,EAAO6C,SAAa,EAE9D4J,GAA0BD,EAAAA,EAAAA,UAAQ,iBAAO,CAC3CxK,KAAK,SAAC7P,MAAAA,CAAIwJ,UAAWgG,GAAmB,CAACC,UAAW8K,GAAcZ,GAAWjK,SAAU,UACvFE,OAAO,SAAC5P,MAAAA,CAAIwJ,UAAWgG,GAAmB,CAACC,UAAW8K,GAAcZ,GAAWjK,SAAU,YACzFI,QAAQ,SAAC9P,MAAAA,CAAIwJ,UAAWgG,GAAmB,CAACC,UAAW8K,GAAcZ,GAAWjK,SAAU,aAC1FC,MAAM,SAAC3P,MAAAA,CAAIwJ,UAAWgG,GAAmB,CAACC,UAAW8K,GAAcZ,GAAWjK,SAAU,WAExFK,UAAU,SAAC/P,MAAAA,CAAIwJ,UAAWgG,GAAmB,CAACC,UAAW8K,GAAcZ,GAAWjK,SAAU,eAC5FM,aAAa,SAAChQ,MAAAA,CAAIwJ,UAAWgG,GAAmB,CAACC,UAAW8K,GAAcZ,GAAWjK,SAAU,kBAC/FO,YAAY,SAACjQ,MAAAA,CAAIwJ,UAAWgG,GAAmB,CAACC,UAAW8K,GAAcZ,GAAWjK,SAAU,iBAC9FQ,SAAS,SAAClQ,MAAAA,CAAIwJ,UAAWgG,GAAmB,CAACC,UAAW8K,GAAcZ,GAAWjK,SAAU,iBAC3F,CAAC6K,EAAYZ,IAGjB,KAAKjK,GAAa/F,GAAS2G,EAASE,OAAUF,EAASI,QACnD,OAAO,KAKX,IAAM8J,EAAa,GAAeb,EAAY,IAAO,IAAM9L,EAAO4C,EAElE,OACI,gCACK8J,IACG,SAACva,MAAAA,CAAIwJ,UAAW+F,KAAyBmD,MAAO,SAAI0H,GAAAA,CAAeK,OAAQD,EAAa,cACpF,SAACxa,MAAAA,CAAIwJ,UAAW2F,GAAmB,CAACE,WAAW,EAAMD,SAAAA,aAChDsK,OAIb,SAACgB,GAAAA,IAAGA,CACAC,IAAKhC,EACLiC,gBAAc,EACdC,sBAAuBP,EACvB5K,SAAUA,EACVmB,SAAUlH,EAAKkH,SACfE,UAAWpH,EAAKoH,UAChBpH,KAAMA,EACNmR,SAAU,EACVtR,UAAWjM,IAAWiM,EAAWiP,GAAmBvJ,MACpDwD,MAAO,SAAIA,GAAAA,CAAO+H,OAAQD,IAC1BR,OAAQA,EACRC,WAAYA,EACZC,cAzE+B1S,SAAAA,GACvC0S,EAAc1S,GACduT,GACJ,EAuEYZ,aA5DyB,SAAC3S,EAAGwT,EAAKC,EAAYC,EAAOC,GAC7DhB,EAAa3S,EAAGwT,EAAKC,EAAYC,EAAOC,GACxCC,GACJ,EA0DYC,SAAQxN,EAAO0C,EACf+K,SAAQzN,EAAO4C,EACf8K,aAAS,EACTC,eAAc3N,EAAOvL,aAErB,UAACtC,MAAAA,CAAIwJ,UAAWoF,GAAW,CAACE,cAAeyL,EAAYvL,WAAY2K,eAC/D,SAACxJ,GAAcA,UAAEC,KACjB,SAACpQ,MAAAA,CAAIwJ,UAAWyF,cAAmBzG,KACnC,SAACxI,MAAAA,CAAIwJ,UAAW2F,GAAmB,CAACC,SAAAA,EAAUC,UAAWsK,EAAUrK,UAAWiL,aACzEb,WAMzB,EC3Ja+B,GAAgDlQ,IAAAA,MAAW,SAAwB,WAAC/C,SAC7F,OAAO,SAAC4H,SAAAA,CAAO5G,UAAWgF,cAAiBhG,GAC/C,g5BCEO,SAASkT,GAAmDjC,GAC/D,IAAOjR,EAAwDiR,EAAxDjR,SAAUqF,EAA8C4L,EAA9C5L,OAAQyC,EAAsCmJ,EAAtCnJ,SAAUoC,EAA4B+G,EAA5B/G,MAAOlJ,EAAqBiQ,EAArBjQ,UAAW4G,EAAUqJ,EAAVrJ,OAE5BO,EAAAA,GAAc8I,GAAhC/J,EAAkBiB,EAAlBjB,SAAU/F,EAAQgH,EAARhH,KAEjB,OAAK+F,GAAa/F,GAAS2G,EAASE,OAAUF,EAASI,QAKnD,SAAC1Q,MAAAA,CACG0S,MAAO,YACAA,GAAAA,CACH7C,IAAKH,EAASe,EACdd,KAAMD,EAASa,IACZ5G,GAEPH,UAAWlM,EAAI4R,KAAqB1F,EAAWiP,IAC/C4C,SAAQxN,EAAO0C,EACf+K,SAAQzN,EAAO4C,EACf8K,aAAS,EACTC,eAAc3N,EAAOvL,aAErB,UAACtC,MAAAA,CAAIwJ,UAAWoF,gBACZ,SAAC6M,GAAcA,UAAErL,KACjB,SAACpQ,MAAAA,CAAIwJ,UAAWyF,cAAmBzG,SAnBpC,IAuBf,CCLO,SAASmT,GACZC,GAEA,OAA+B,OAAxBA,EAAcC,OAAwC,OAAtBD,EAAcE,GACzD,qmDCtCO,IAAMC,IAAatN,EAAAA,GAAAA,IAAG,CACzBC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNmN,cAAe,CACXjN,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,QAGVsN,WAAY,CACRlN,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,QAGVuN,OAAQ,CACJnN,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,QAGVwN,kBAAmB,CACfpN,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,QAGVyN,qBAAsB,CAClBrN,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,QAGV0N,iBAAkB,CACdtN,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,QAGV2N,oBAAqB,CACjBvN,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,WAML4N,IAAgB9N,EAAAA,GAAAA,IAAG,CAC5BC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,SAIG6N,IAAwB/N,EAAAA,GAAAA,IAAG,CACpCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,SChDG8N,GAA4BlR,IAAAA,MAAW,SAAc,OAACgF,EAAD,EAACA,EAAGE,EAAJ,EAAIA,EAAGiM,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,sBACzEC,GAAW5V,EAAAA,EAAAA,QAA8B,MACzC6V,ECXuB,SAACC,EAA+BH,GAO7D,IAAKA,IAA0BhB,GAAwBgB,GACnD,MAAO,CACHI,UAAU,EACVC,UAAU,EACVC,aAAa,EACbC,SAAS,EACTC,YAAY,GAGpB,IAAIC,GAAY,EACZC,GAAY,EACZL,GAAW,EACXC,GAAc,EACdC,GAAU,EACVC,GAAa,EAEV5M,EAAQuM,EAARvM,EAAGE,EAAKqM,EAALrM,EACHoL,EAAcc,EAAdd,MAAOC,EAAOa,EAAPb,IAqBd,OApBID,EAAMpL,GAAKA,GAAKqL,EAAIrL,GAAKA,IACzB2M,GAAY,EACR3M,IAAMoL,EAAMpL,IACZuM,GAAW,GAEXvM,IAAMqL,EAAIrL,IACVyM,GAAU,IAIdrB,EAAMtL,GAAKA,GAAKuL,EAAIvL,GAAKA,IACzB8M,GAAY,EACR9M,IAAMsL,EAAMtL,IACZ0M,GAAc,GAEd1M,IAAMuL,EAAIvL,IACV4M,GAAa,IAId,CACHJ,SAAUK,GAAaC,EACvBL,SAAUK,GAAaL,EACvBC,YAAaG,GAAaH,EAC1BC,QAASG,GAAaH,EACtBC,WAAYC,GAAaD,EAEjC,CDzC4BG,CAAkB,CAAC/M,EAAAA,EAAGE,EAAAA,GAAIkM,GAClD,OACI,SAAC3c,MAAAA,CACG2a,IAAKiC,EAELpT,UAAWuS,GACP,CACIE,WAAkB,IAANxL,EACZuL,cAAqB,IAANzL,EACf2L,OAAQQ,EACRP,kBAAmBU,EAAgBG,SACnCZ,qBAAsBS,EAAgBI,YACtCX,oBAAqBO,EAAgBM,WACrCd,iBAAkBQ,EAAgBK,UAE1CK,aAAS,EACTlC,SAAQ9K,EACR+K,SAAQ7K,WAEPiM,IACG,gCACKG,EAAgBE,WAAY,SAAC/c,MAAAA,CAAIwJ,UAAWgT,QAC7C,SAACxc,MAAAA,CACGwJ,UAAY+S,WAnBnB,GAAQ9L,OAALF,EAAE,KAAK,OAAFE,GAyBzB,i9BExCO,IAAM+M,IAAa/O,EAAAA,GAAAA,IAAG,CACzBC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,SAIG8O,IAAchP,EAAAA,GAAAA,IAAG,CAC1BC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,SAIG+O,IAA0BjP,EAAAA,GAAAA,IAAG,CACtCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,SCRGgP,GAAsB,gBAAEC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,QAASrU,EAAAA,EAAAA,UAAWhB,EAAAA,EAAAA,SAAUkU,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,sBACzEmB,EAAWC,MAAMC,KAAKD,MAAMH,GAAMK,QAClCC,EAAcH,MAAMC,KAAKD,MAAMF,GAASI,QAExCE,EAAY,CACdC,oBAAqB,UAAkB,OAARP,EAAQ,UACvCQ,iBAAkB,UAAe,OAALT,EAAK,WAGrC,OACI,SAAC5d,MAAAA,CAAIwJ,UAAWiU,eACZ,UAACzd,MAAAA,CACGwJ,UAAWlM,EAAIkM,EAAWgU,MAC1Bc,aAAS,EACT5L,MAAOyL,EACPtU,cAAa,2BAEZiU,EAAS3Q,KAAIsD,SAAAA,UACVyN,EAAY/Q,KAAIoD,SAAAA,UACZ,SAACkM,GAAIA,CACDE,sBAAuBA,EACvBD,SAAUA,EAEVnM,EAAGA,EACHE,EAAGA,GAFEF,EAAIE,UAMrB,SAACzQ,MAAAA,CACGue,sBAAkB,EAClB/U,UAAWkU,OAEdlV,MAIjB,kSCjDO,OAAK,oBAACgW,EAGGC,sGAHHD,GACTC,GAAAA,KAAAA,eAAAA,GAMA7C,GAAAA,KAAAA,gBAA+B,CAACC,MAAO,KAAMC,IAAK,OAH9ChK,KAAK2M,QAAUA,qBAJVD,MAkCFE,IAAAA,kBAAP,SAAiB7C,EAAqBC,GAClC,MAAO,CACHD,MAAO,CACHtL,EAAGwF,KAAK4I,IAAI9C,EAAMtL,EAAGuL,EAAIvL,GACzBE,EAAGsF,KAAK4I,IAAI9C,EAAMpL,EAAGqL,EAAIrL,IAE7BqL,IAAK,CACDvL,EAAGwF,KAAK6I,IAAI/C,EAAMtL,EAAGuL,EAAIvL,GACzBE,EAAGsF,KAAK6I,IAAI/C,EAAMpL,EAAGqL,EAAIrL,IAGrC,OA7CS+N,EASTK,IAAAA,yBAAAA,SAAiBC,GACbhN,KAAK8J,cAAgBkD,CACzB,IAEAC,IAAAA,wBAAAA,SAAgBhL,GACZjC,KAAK8J,cAAcE,IAAM/H,CAC7B,IAEAiL,IAAAA,2BAAAA,WACIlN,KAAK8J,cAAgB,CAACC,MAAO,KAAMC,IAAK,KAC5C,IAEAmD,IAAAA,yBAAAA,WACI,OAAOnN,KAAK8J,aAChB,IAEAsD,IAAAA,+BAAAA,WACI,IAAqB,EAAApN,KAAK8J,cAAnBC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IACd,OAAKD,GAAUC,EAIR0C,EAAqBE,UAAU7C,EAAOC,GAHlC,CAACD,MAAAA,EAAOC,IAAAA,EAIvB,IAeAqD,IAAAA,gBAAAA,WACI,IAAqB,EAAArN,KAAK8J,cAAnBC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAEd,SAAKD,IAAUC,QAIXsD,EAAAA,GAAAA,SAAQvD,EAAOC,IAKf/F,KAAKC,IAAI8F,EAAIvL,EAAIsL,EAAMtL,IAAMuB,KAAK2M,QAAQjO,MAAQ,GAAKuF,KAAKC,IAAI8F,EAAIrL,EAAIoL,EAAMpL,IAAMqB,KAAK2M,QAAQ/N,OAAS,EAGlH,mCA9DS8N,EAAD,0KCLL,OAAK,oBAACa,EAGGtL,gHAHHsL,UACTtL,KAAAA,YAAAA,4FAGSsL,EAAYC,mBAAmBvL,GAKpCjC,KAAKiC,KAAOA,EAJRjC,KAAKiC,KAAO,wBALXsL,MAYFC,IAAAA,2BAAP,SAA0BvL,GACtB,SAAOA,eAAgBd,0GAAiBc,EAAKL,QAAQK,MAAUA,EAAKL,QAAQnD,GAAOwD,EAAKL,QAAQjD,UACpG,IAEO2D,IAAAA,wBAAP,SAAuBL,GACnB,IAAKsL,EAAYC,mBAAmBvL,GAChC,OAAO,KAGX,IAAeA,EAAAA,EAAKL,QAAbnD,EAAQwD,EAARxD,EAAGE,EAAKsD,EAALtD,EACV,MAAO,CAACF,EAAG8D,OAAO9D,GAAIE,EAAG4D,OAAO5D,GACpC,OAvBS4O,EAyBTE,IAAAA,oBAAAA,WACI,OAAOF,EAAYjL,gBAAgBtC,KAAKiC,KAC5C,IAEAyL,IAAAA,uBAAAA,WACI,OAAO1N,KAAKiC,IAChB,mCA/BSsL,EAAD,GCACI,GAA6B,iqFCc1C,IAAMC,GAAkB,ICTZ,oBAACC,iHAAAA,KACT,OAAQC,qBAAmB,IAAIC,oHADtBF,KAAAA,EAGFG,IAAAA,uBAAP,SAAsBjE,EAAiBC,GACnC,IAAK,IAAIvL,EAAIsL,EAAMtL,EAAGA,GAAKuL,EAAIvL,EAAGA,IAC9B,IAAK,IAAIE,EAAIoL,EAAMpL,EAAGA,GAAKqL,EAAIrL,EAAGA,IAAK,CACnC,IAAMsP,EAAS,GAAQtP,OAALF,EAAE,KAAK,OAAFE,GACvB,IAAKqB,KAAK8N,iBAAiBI,IAAID,GAAS,CACpC,IAAME,EAAkB9gB,SAAS6T,cAAc,uBAAsCvC,OAAfF,EAAE,eAAe,OAAFE,EAAE,OACnFwP,IACAA,EAAgBC,aAAaT,GAA4B,IACzD3N,KAAK8N,iBAAiBpH,IAAIuH,GAElC,CACJ,CAER,IACOI,IAAAA,sBAAP,SAAqBpM,EAAmB,OAACxD,EAAD,EAACA,EAAGE,EAAJ,EAAIA,EACxCsD,EAAKmM,aAAaT,GAA4B,IAC9C3N,KAAK8N,iBAAiBpH,IAAI,GAAQ/H,OAALF,EAAE,KAAK,OAAFE,GACtC,IAEO2P,IAAAA,8BAAP,WACItO,KAAK8N,iBAAiBS,SAAQN,SAAAA,GAC1B,IAAqCA,EAAAA,GAAAA,EAAOO,MAAM,QAA3CC,EAA8BR,EAAAA,GAAhBS,EAAgBT,EAAAA,GAC/BU,EAAoBthB,SAAS6T,cAC/B,uBAAiDwN,OAA1BD,EAAa,eAA0B,OAAbC,EAAa,OAE9DC,GACAA,EAAkBC,gBAAgBjB,GAE1C,IACA3N,KAAK8N,iBAAiBe,OAC1B,IAEOC,IAAAA,4BAAP,WACI,OAAO9O,KAAK8N,gBAChB,mCArCSD,EAAD,IDUNkB,GAAgB,IAAIrC,GAAqB,CAAC9N,OAAQ,EAAGF,MAAO,IAE5DsQ,GAAkB,CAACjF,MAAO,KAAMC,IAAK,MAC9BiF,GAAuB,SAChCC,EACArL,EACA/E,GAGA,IAAoDqQ,EAAAA,IAAAA,EAAAA,EAAAA,UAAwBH,IAAAA,GAArEI,EAA6CD,EAAAA,GAAzBE,EAAyBF,EAAAA,GAC9CG,EAAkB7V,IAAAA,aAAkB,SAACqK,GACvC,IAAM7B,EAAO,IAAIsL,GAAYzJ,EAAMxU,QAE7BigB,EAActN,EAAKyL,iBACnB1I,EAAe/C,EAAKwL,cAE1B,GAAK8B,GAAgBvK,EAArB,CAIA,IAAOvG,EAAQuG,EAARvG,EAAGE,EAAKqG,EAALrG,EAEVoQ,GAAchC,iBAAiB,CAC3BhD,MAAO,CAACtL,EAAAA,EAAGE,EAAAA,GACXqL,IAAK,CAACvL,EAAAA,EAAGE,EAAAA,KAGbiP,GAAgBU,wBAChBV,GAAgBS,cAAckB,EAAavK,GAC3CqK,EAAsBN,GAAc3B,yBAXpC,CAYJ,GAAG,IAEGoC,EAAkB/V,IAAAA,aAAkB,SAACqK,GACvC,IAAM,EAAUiL,GAAc5B,mBAAvBpD,MAED0F,EADO,IAAIlC,GAAYzJ,EAAMxU,QACfme,cAEpB,GAAK1D,GAAU0F,EAAf,CAIAV,GAAc9B,gBAAgBwC,GAC9B7B,GAAgBU,wBAEhB,IAAMoB,EAAchD,GAAqBE,UAAU7C,EAAO0F,GAC1D7B,GAAgBI,eAAe0B,EAAY3F,MAAO2F,EAAY1F,KAC9DqF,EAAsBN,GAAc3B,yBAPpC,CAQJ,GAAG,IAEGuC,EAAgBlW,IAAAA,aAAkB,eAwB3BmW,EAAT,WACIhC,GAAgBU,wBAChBS,GAAc7B,qBACdmC,EAAsBN,GAAc3B,yBACxC,EA3BMtD,EAAgBiF,GAAc3B,yBAEpC,GAAIvD,GAAwBC,IAAkBiF,GAAc1B,UAAW,CACnE,IAAMwC,EAAmB,CACrBpR,EAAGwF,KAAK6I,IAAIhD,EAAcE,IAAIvL,EAAGqL,EAAcC,MAAMtL,EAAIK,EAAYJ,MAAQ,GAC7EC,EAAGsF,KAAK6I,IAAIhD,EAAcE,IAAIrL,EAAGmL,EAAcC,MAAMpL,EAAIG,EAAYF,OAAS,IAGlF,IACKiF,EAAc,CACXpF,EAAGqL,EAAcC,MAAMtL,EACvBE,EAAGmL,EAAcC,MAAMpL,EACvBD,MAAOmR,EAAiBpR,EAAIqL,EAAcC,MAAMtL,EAAI,EACpDG,OAAQiR,EAAiBlR,EAAImL,EAAcC,MAAMpL,EAAI,IAGzD,OAAOiR,IAGXV,EAAS,8UAAIpF,GAAAA,CAAeE,IAAK6F,IACrC,CACAD,GAOJ,GAAG,CAAC9Q,EAAYJ,MAAOI,EAAYF,OAAQiF,EAAeqL,IAgB1D,OAdAzV,IAAAA,WAAgB,WAIZ,OAHApM,SAASI,iBAAiB,YAAa6hB,GACvCjiB,SAASI,iBAAiB,YAAa+hB,GACvCniB,SAASI,iBAAiB,UAAWkiB,GAGrC,WACItiB,SAASK,oBAAoB,YAAa4hB,GAC1CjiB,SAASK,oBAAoB,YAAa8hB,GAC1CniB,SAASK,oBAAoB,UAAWiiB,EAC5C,CACJ,GAAG,CAACL,EAAiBE,EAAiBG,IAG/BP,CACX,k9BEvGO,IAAMU,GAAsB,SAC/BC,OACAC,EAAe,UAAfA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAe,cAEuBvW,EAAAA,GAAAA,IAAAA,SAAmC,SAAlE8V,EAA+B9V,EAAAA,GAAlBwW,EAAkBxW,EAAAA,IAEtCtM,EAAAA,EAAAA,YAAU,WACN,IAAM8U,EAAO5U,SAAS6T,cAA2B8O,GACjDC,EAAehO,EACnB,GAAG,CAAC+N,IAEJ,IAAME,GAAiBC,EAAAA,EAAAA,mBAAkBZ,IAEzCpiB,EAAAA,EAAAA,YAAU,eACS+iB,EACDA,EADRtR,EAASsR,SAAgC,QAAhCA,EAAAA,EAAgBE,cAAc,UAA9BF,IAAAA,OAAAA,EAAAA,EAAkCG,UAC3C3R,EAAQwR,SAAgC,QAAhCA,EAAAA,EAAgBE,cAAc,UAA9BF,IAAAA,OAAAA,EAAAA,EAAkCI,WAE5C1R,GAAUF,GACVqR,EAAY,CAACrR,MAAAA,EAAOE,OAAAA,GAE5B,GAAG,CAACsR,aAAAA,EAAAA,EAAgBE,cAAeL,GACvC,gfCHO,SAASQ,GAGd,OACEC,EADF,EACEA,kBACA7N,EAFF,EAEEA,SACAjL,EAHF,EAGEA,UACAgL,EAJF,EAIEA,QACA+N,EALF,EAKEA,iBACAC,EANF,EAMEA,eACAX,EAPF,EAOEA,YACAY,EARF,EAQEA,mBACGC,EAAAA,GATL,GACEJ,oBACA7N,WACAjL,YACAgL,UACA+N,mBACAC,iBACAX,cACAY,uBAGM9M,EAAgBpB,GAAqB,CAACC,QAAAA,EAASC,SAAAA,IAC/CkI,EAAwBoE,GAAqBuB,EAAmB3M,EAAe+M,EAAoB9R,aAGzG,OAFAgR,GAAoBC,IAGhB,SAAClE,GAAIA,CACDjB,UAAQ,EACRkB,KAAMnJ,EAASjE,MACfqN,QAASpJ,EAAS/D,OAClBlH,UAAWA,EACXmT,sBAAuBA,WAEtBnI,EAAQrH,KAAIwV,SAAAA,GACT,IAAMC,IAAeH,aAAAA,EAAAA,EAAqBE,IAE1C,OACI,SAACH,yUAAAA,CAAAA,CACGK,KAAMrJ,GACNoJ,YAAaA,EACbpO,QAASA,EACTC,SAAUA,EAEV8N,iBAAkBA,aAAAA,EAAAA,EAAmBI,EAAargB,IAClDuL,OAAQ8U,GACJD,GAHCC,EAAargB,GAM9B,KAGZ,+eCxDO,SAASwgB,GAGd,OACErO,EADF,EACEA,SACAjL,EAFF,EAEEA,UACAgL,EAHF,EAGEA,QACA+N,EAJF,EAIEA,iBACAC,EALF,EAKEA,eACAX,EANF,EAMEA,YACGa,EAAAA,GAPL,GACEjO,WACAjL,YACAgL,UACA+N,mBACAC,iBACAX,gBAKA,OAFAD,GAAoBC,IAGhB,SAAClE,GAAIA,CACDC,KAAMnJ,EAASjE,MACfqN,QAASpJ,EAAS/D,OAClBlH,UAAWA,WAEVgL,EAAQrH,KAAIwV,SAAAA,GACT,OACI,SAACH,yUAAAA,CAAAA,CACGK,KAAMnH,GAEN6G,iBAAkBA,aAAAA,EAAAA,EAAmBI,EAAargB,IAClDuL,OAAQ8U,GACJD,GAHCC,EAAargB,GAM9B,KAGZ,kwCCjCA,IAAMygB,GAAcC,OAAOC,QCUpB,SAGL,OAACC,EAAD,EAACA,mBAAoBC,EAArB,EAAqBA,mBAAuB1J,EAAAA,GAA5C,GAACyJ,qBAAoBC,uBAGnB,OAFmB1J,EAAZiD,UAIC,SAAC2F,GAAeA,GAAAA,GAAAA,CAAAA,EACR5I,GAAAA,CACJ+I,eAAgBW,MAMxB,SAACL,GAAeA,GAAAA,GAAAA,CAAAA,EACRrJ,GAAAA,CACJ+I,eAAgBU,IAG5B,GD/BsD,CAACE,KAAMf,GAAiBgB,KAAMP,8zCET7E,ICJHQ,GAAOC,GAAQC,GAAOC,GDIbC,IAAwBjV,EAAAA,GAAAA,IAAG,CACpCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNkO,SAAU,CACNhO,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,WAMLgV,IAAoBlV,EAAAA,GAAAA,IAAG,CAChCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNkO,SAAU,CACNhO,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,WC5BdiV,GAAY,CAAC,QAAS,WAC1B,SAASC,KAAiS,OAApRA,GAAWb,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAUyiB,GAASO,MAAMtS,KAAMiS,UAAY,CAClV,SAASM,GAAyBle,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhNqjB,CAA8Bte,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAIyjB,GAAe,SAAsBC,EAAMnK,GAC7C,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ4K,GAAyBS,EAAMlB,IACzC,OAAoB,gBAAoB,MAAOC,GAAS,CACtDrT,MAAO,GACPE,OAAQ,GACRsU,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPvK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM+gB,KAAUA,GAAqB,gBAAoB,OAAQ,CAC3E6B,EAAG,4FACHF,KAAM,+BACNG,OAAQ,kCACL7B,KAAWA,GAAsB,gBAAoB,OAAQ,CAChE4B,EAAG,0GACHF,KAAM,yCACNG,OAAQ,4CACL5B,KAAUA,GAAqB,gBAAoB,OAAQ,CAC9DjT,EAAG,OACHE,EAAG,OACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,4CACHxB,KAAWA,GAAsB,gBAAoB,OAAQ,CAChElT,EAAG,OACHE,EAAG,OACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CAEZ,EACIE,IAA0B,IAAAC,YAAWV,IAE1B,IChDf,IAAI,GAAO,GAAQW,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,GAC/I,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAWvD,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAIolB,GAAgB,SAAuB1B,EAAMnK,GAC/C,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDtU,MAAO,GACPE,OAAQ,GACRsU,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPvK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EgO,EAAG,IACHE,EAAG,IACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,+BACNG,OAAQ,4CACL,KAAW,GAAsB,gBAAoB,OAAQ,CAChE7U,EAAG,IACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLI,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEjV,EAAG,IACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLK,KAAWA,GAAsB,gBAAoB,OAAQ,CAChElV,EAAG,IACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLM,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEnV,EAAG,IACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLO,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEpV,EAAG,IACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLQ,KAAWA,GAAsB,gBAAoB,OAAQ,CAChErV,EAAG,KACHE,EAAG,IACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,+BACNG,OAAQ,4CACLS,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEtV,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLU,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEvV,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLW,KAAYA,GAAuB,gBAAoB,OAAQ,CAClExV,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLY,KAAYA,GAAuB,gBAAoB,OAAQ,CAClEzV,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLa,KAAYA,GAAuB,gBAAoB,OAAQ,CAClE1V,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLc,KAAYA,GAAuB,gBAAoB,OAAQ,CAClE3V,EAAG,KACHE,EAAG,IACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,+BACNG,OAAQ,4CACLe,KAAYA,GAAuB,gBAAoB,OAAQ,CAClE5V,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLgB,KAAYA,GAAuB,gBAAoB,OAAQ,CAClE7V,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLiB,KAAYA,GAAuB,gBAAoB,OAAQ,CAClE9V,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLkB,KAAYA,GAAuB,gBAAoB,OAAQ,CAClE/V,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLmB,KAAYA,GAAuB,gBAAoB,OAAQ,CAClEhW,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CAEZ,EACI,IAA0B,IAAAG,YAAWiB,IAE1B,ICzKf,IAAI,GAAO,GAAQ,GAAQ,GAAQ,GAAQ,GAAQ,GAAQ,GAAQ,GAAQ,GAAS,GAAS,GACzF,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAWxD,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAIqlB,GAAa,SAAoB3B,EAAMnK,GACzC,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDtU,MAAO,GACPE,OAAQ,GACRsU,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPvK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EgO,EAAG,EACHE,EAAG,EACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAW,GAAsB,gBAAoB,OAAQ,CAChE1U,EAAG,EACHE,EAAG,OACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAW,GAAsB,gBAAoB,OAAQ,CAChE1U,EAAG,KACHE,EAAG,EACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAW,GAAsB,gBAAoB,OAAQ,CAChE1U,EAAG,KACHE,EAAG,OACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAW,GAAsB,gBAAoB,OAAQ,CAChE1U,EAAG,EACHE,EAAG,GACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAW,GAAsB,gBAAoB,OAAQ,CAChE1U,EAAG,EACHE,EAAG,OACHD,MAAO,KACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAW,GAAsB,gBAAoB,OAAQ,CAChE1U,EAAG,KACHE,EAAG,GACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAW,GAAsB,gBAAoB,OAAQ,CAChE1U,EAAG,KACHE,EAAG,OACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAW,GAAsB,gBAAoB,OAAQ,CAChE1U,EAAG,EACHE,EAAG,GACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAY,GAAuB,gBAAoB,OAAQ,CAClE1U,EAAG,EACHE,EAAG,OACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAY,GAAuB,gBAAoB,OAAQ,CAClE1U,EAAG,KACHE,EAAG,GACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCACH,KAAY,GAAuB,gBAAoB,OAAQ,CAClE1U,EAAG,KACHE,EAAG,OACHD,MAAO,KACPE,OAAQ,EACR2U,GAAI,EACJJ,KAAM,kCAEV,EACI,IAA0B,IAAAM,YAAWkB,IAE1B,IC7Gf,IAAI,GAAO,GAAQ,GAAQ,GAAQ,GAAQ,GAAQ,GAAQ,GAAQ,GAAQ,GAAS,GAAS,GAAS,GAAS,GAAS,GAAS,GAAS,GAAS,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,GACrM,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAW/D,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAI4lB,GAAY,SAAmBlC,EAAMnK,GACvC,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDtU,MAAO,GACPE,OAAQ,GACRsU,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPvK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3EgO,EAAG,IACHE,EAAG,IACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,+BACNG,OAAQ,4CACL,KAAW,GAAsB,gBAAoB,OAAQ,CAChE7U,EAAG,IACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAW,GAAsB,gBAAoB,OAAQ,CAChE7U,EAAG,IACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAW,GAAsB,gBAAoB,OAAQ,CAChE7U,EAAG,IACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAW,GAAsB,gBAAoB,OAAQ,CAChE7U,EAAG,IACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAW,GAAsB,gBAAoB,OAAQ,CAChE7U,EAAG,IACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAW,GAAsB,gBAAoB,OAAQ,CAChE7U,EAAG,KACHE,EAAG,IACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,+BACNG,OAAQ,4CACL,KAAW,GAAsB,gBAAoB,OAAQ,CAChE7U,EAAG,KACHE,EAAG,KACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAW,GAAsB,gBAAoB,OAAQ,CAChE7U,EAAG,KACHE,EAAG,KACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAY,GAAuB,gBAAoB,OAAQ,CAClE7U,EAAG,KACHE,EAAG,KACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAY,GAAuB,gBAAoB,OAAQ,CAClE7U,EAAG,KACHE,EAAG,KACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAY,GAAuB,gBAAoB,OAAQ,CAClE7U,EAAG,KACHE,EAAG,KACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAY,GAAuB,gBAAoB,OAAQ,CAClE7U,EAAG,KACHE,EAAG,IACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,+BACNG,OAAQ,4CACL,KAAY,GAAuB,gBAAoB,OAAQ,CAClE7U,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAY,GAAuB,gBAAoB,OAAQ,CAClE7U,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAY,GAAuB,gBAAoB,OAAQ,CAClE7U,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAY,GAAuB,gBAAoB,OAAQ,CAClE7U,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACL,KAAY,GAAuB,gBAAoB,OAAQ,CAClE7U,EAAG,KACHE,EAAG,KACHD,MAAO,GACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,yCACNG,OAAQ,4CACLsB,KAAYA,GAAuB,gBAAoB,OAAQ,CAClEnW,EAAG,KACHE,EAAG,IACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,GACJJ,KAAM,+BACNG,OAAQ,4CACLuB,KAAYA,GAAuB,gBAAoB,OAAQ,CAClEpW,EAAG,KACHE,EAAG,KACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CACLwB,KAAYA,GAAuB,gBAAoB,OAAQ,CAClErW,EAAG,KACHE,EAAG,KACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CACLyB,KAAYA,GAAuB,gBAAoB,OAAQ,CAClEtW,EAAG,KACHE,EAAG,KACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CACL0B,KAAYA,GAAuB,gBAAoB,OAAQ,CAClEvW,EAAG,KACHE,EAAG,KACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CACL2B,KAAYA,GAAuB,gBAAoB,OAAQ,CAClExW,EAAG,KACHE,EAAG,KACHD,MAAO,EACPE,OAAQ,EACR2U,GAAI,IACJJ,KAAM,yCACNG,OAAQ,4CAEZ,EACI,IAA0B,IAAAG,YAAWyB,IAE1B,ICzMR,IAAMC,GAAyC,gBAAE7iB,EAAAA,EAAAA,KAAM7B,EAAAA,EAAAA,MAAOwa,EAAAA,EAAAA,SAAUiE,EAAAA,EAAAA,SAAU1e,EAAAA,EAAAA,GAC/E4kB,GAAeC,EAAAA,EAAAA,cAAY,WAC7BnG,EAAS1e,EACb,GAAG,CAAC0e,EAAU1e,IACd,OACI,UAAC8kB,SAAAA,CAAO5d,UAAWka,GAAsB,CAAC3G,SAAAA,IAAY/Z,QAASkkB,aAC3D,SAAClnB,MAAAA,CAAIwJ,UAAWma,GAAkB,CAAC5G,SAAAA,cAC/B,SAACsK,GAAAA,CAAcjjB,KAAMA,OAEzB,SAACpE,MAAAA,CAAIwJ,UAAU,wDACVjH,MAIjB,EAGa8kB,GAA6D,YACtE,OADwEjjB,EAAAA,MAEpE,IAAK,uBACD,OAAO,SAACkjB,GAAgBA,CAAAA,GAC5B,IAAK,UACD,OAAO,SAACC,GAAaA,CAAAA,GACzB,IAAK,cACD,OAAO,SAACC,GAAiBA,CAAAA,GAC7B,IAAK,WACD,OAAO,SAACC,GAAcA,CAAAA,GAC1B,QACI,OAAO,SAACznB,MAAAA,CAAAA,GAEpB,mtECzBO,IAAM0nB,GAAgD,gBACzDC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,UACAhM,EAAAA,EAAAA,cACGiM,EAAAA,GAAAA,EAAAA,CAHHF,UACAC,YACAhM,kBAGMhd,GAAID,EAAAA,EAAAA,sBAAqB,KACzBmpB,ECfH,WACH,IAAMlpB,GAAID,EAAAA,EAAAA,sBAAqB,KACzBopB,GAAeC,EAAAA,EAAAA,mBAErB,OAAOb,EAAAA,EAAAA,cAAY,iBAAM,CACrB,CACI7kB,IAAI2lB,EAAAA,GAAAA,QACJ1X,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRtM,KAAM,uBACN7B,MAAO3D,EAAEspB,wBAAwBC,iBAErC,CACI7lB,IAAI2lB,EAAAA,GAAAA,QACJ1X,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRtM,KAAM,WACN7B,MAAO3D,EAAEspB,wBAAwBE,WACjCC,OAAQ,CACJ,CACI/lB,GAAI,IACJgmB,KAAM,uBACN/lB,MAAOwlB,EAAuC,yBAAEQ,SACjD,CACCjmB,GAAI,IACJgmB,KAAM,wBACN/lB,MAAOwlB,EAAwC,0BAAEQ,SAClD,CACCjmB,GAAI,IACJgmB,KAAM,wBACN/lB,MAAOwlB,EAAwC,0BAAEQ,SAClD,CACCjmB,GAAI,IACJgmB,KAAM,iCACN/lB,MAAOwlB,EAAkD,oCAAEQ,SAC5D,CACCjmB,GAAI,IACJgmB,KAAM,+BACN/lB,MAAOwlB,EAAgD,kCAAEQ,WAIrE,CACIjmB,IAAI2lB,EAAAA,GAAAA,QACJ1X,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRtM,KAAM,cACN7B,MAAO3D,EAAEspB,wBAAwBM,cACjCC,eAAgB,EAChBC,oBAAoB,EACpBL,OAAQ,CACJ,CACI/lB,GAAI,IACJgmB,KAAM,OACN/lB,MAAOwlB,EAAmB,KAAEQ,QAC5BI,KAAM,OACP,CACCrmB,GAAI,IACJgmB,KAAM,gBACN/lB,MAAOwlB,EAA+B,iBAAEQ,SACzC,CACCjmB,GAAI,IACJgmB,KAAM,iBACN/lB,MAAOwlB,EAA+B,iBAAEQ,SACzC,CACCjmB,GAAI,IACJgmB,KAAM,cACN/lB,MAAOwlB,EAA2B,aAAEQ,SACrC,CACCjmB,GAAI,IACJgmB,KAAM,eACN/lB,MAAOwlB,EAA4B,cAAEQ,WAIjD,CACIjmB,IAAI2lB,EAAAA,GAAAA,QACJ1X,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,GACRtM,KAAM,UACN7B,MAAO3D,EAAEspB,wBAAwBU,UACjCH,eAAgB,EAChBC,oBAAoB,EACpBG,gBAAgB,EAChBR,OAAQ,CACJ,CACI/lB,GAAI,IACJgmB,KAAM,OACN/lB,MAAOwlB,EAAmB,KAAEQ,QAC5BI,KAAM,OACP,CACCrmB,GAAI,IACJgmB,KAAM,WACN/lB,MAAOwlB,EAAwB,UAAEQ,SAClC,CACCjmB,GAAI,IACJgmB,KAAM,SACN/lB,MAAOwlB,EAAqB,OAAEQ,SAC/B,CACCjmB,GAAI,IACJgmB,KAAM,gBACN/lB,MAAOwlB,EAA6B,eAAEQ,SACvC,CACCjmB,GAAI,IACJgmB,KAAM,eACN/lB,MAAOwlB,EAA6B,eAAEQ,SACvC,CACCjmB,GAAI,IACJgmB,KAAM,aACN/lB,MAAOwlB,EAA0B,YAAEQ,cAIhD,CAACR,EAAcnpB,EAAEspB,yBACxB,CD3GoCY,GAC1BC,GAAkB1O,EAAAA,EAAAA,UAAQ,kBAAMyN,MAA2B,CAACA,IAE5DkB,GAAU3O,EAAAA,EAAAA,UAAQ,WACpB,OAAO0O,EAAgB5b,KAAIO,SAAAA,SAAW,CAClCub,KAAMvb,EAAOnL,MACbsX,MAAOnM,EAAOpL,MAEtB,GAAG,CAACymB,IAE4C9H,EAAAA,IAAAA,EAAAA,EAAAA,UAAS+H,EAAQ,GAAGnP,OAAK,GAAlEqP,EAAyCjI,EAAAA,GAAvBkI,EAAuBlI,EAAAA,GAgBhD,OACI,UAACxX,EAAAA,MAAKA,GAAAA,GAAAA,CAACD,UAAU,gBAAgBme,QAASA,GAAaE,GAAAA,YACnD,SAACpe,EAAAA,MAAAA,OAAY,CAACD,UAAU,qBAAa5K,EAAEwqB,YAAYC,gBACnD,SAAC5f,EAAAA,MAAAA,QAAa,WACV,SAACzJ,MAAAA,CAAIwJ,UAAU,2BAEPuf,EAAgB5b,KAAI,gBAAE7K,EAAAA,EAAAA,GAAIC,EAAAA,EAAAA,MAAO6B,EAAAA,EAAAA,KAC7B,OACI,SAAC6iB,GAAeA,CACZlK,SAAUza,IAAO4mB,EACjBlI,SAAUmI,EACV7mB,GAAIA,EAEJC,MAAOA,EACP6B,KAAMA,GAFD9B,EAKjB,SAIZ,UAACmH,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAAS,kBAAM2kB,KAAW4B,QAAQ,mBACrC3qB,EAAEsE,iCAAiCsmB,yBAExC,SAACF,GAAAA,OAAMA,CAACtmB,QAvCD,WACf,IAAMymB,EAAiBV,EAAgBjV,MAAKpG,SAAAA,UAAUA,EAAOpL,KAAO4mB,MACpEngB,EAAAA,EAAAA,eAAc0gB,GACd7B,EAAU,SACH6B,GAAAA,CACHlZ,EAAGqL,EAAcC,MAAMtL,EACvBE,EAAGmL,EAAcC,MAAMpL,EACvBD,MAAOoL,EAAcE,IAAIvL,EAAIqL,EAAcC,MAAMtL,EAAI,EACrDG,OAAQkL,EAAcE,IAAIrL,EAAImL,EAAcC,MAAMpL,EAAI,EACtDnO,GAAI2lB,UAERN,GACJ,EA2ByC4B,QAAQ,mBAChC3qB,EAAEsE,iCAAiCwmB,sBAKxD,gvEEnEO,IAAMC,GAAoD,gBAC7DhC,EAAAA,EAAAA,QACAja,EAAAA,EAAAA,OACAkc,EAAAA,EAAAA,WACAC,EAAAA,EAAAA,OACGC,EAAAA,GAAAA,EAAAA,CAJHnC,UACAja,SACAkc,aACAC,WAGME,EAAaxb,GAAiBb,GAC9Bsc,GAAyB3P,EAAAA,EAAAA,UAAQ,kBAAM0P,EAAarc,EAAO8G,QAAU,CAAC9G,KAAS,CAACqc,EAAYrc,IAEtDuT,EAAAA,IAAAA,EAAAA,EAAAA,UAAmB+I,EAAuB7c,KAAI,mBAAE7K,EAAAA,UAArF2nB,EAAqChJ,EAAAA,GAArBiJ,EAAqBjJ,EAAAA,GAEtC,GAAMtiB,EAAAA,EAAAA,wBAALC,EAEDurB,GAAahD,EAAAA,EAAAA,cAAY,WAC3B0C,EAAOnc,EAAQuc,GACftC,GACJ,GAAG,CAACkC,EAAQnc,EAAQuc,EAAgBtC,IAE9ByC,GAAmB/P,EAAAA,EAAAA,UAAQ,WAI7B,OAAO,GAFwBuP,EAC1BS,QAAO,gBAAEjmB,EAAAA,EAAAA,KAAM9B,EAAAA,EAAAA,SAAiB,aAAT8B,GAAuB9B,IAAOoL,EAAOpL,OACtDgoB,OAAwB,GAAGN,GAC1C,GAAG,CAACJ,EAAYI,EAAwBtc,EAAOpL,KAE/C,OACI,UAACmH,EAAAA,MAAKA,0UAAAA,CAAAA,CAACD,UAAU,aAAame,QAASA,GAAamC,GAAAA,YAChD,SAACrgB,EAAAA,MAAAA,OAAY,UAAE7K,EAAEwqB,YAAYmB,qBAC7B,UAAC9gB,EAAAA,MAAAA,QAAa,YACV,SAACM,IAAAA,CAAEP,UAAU,qBACR5K,EAAEwqB,YAAYoB,4BAElBJ,EAAiBjd,KAAIsd,SAAAA,GAClB,OACI,UAACzqB,MAAAA,CAAIwJ,UAAU,kBACX,SAACkhB,EAAAA,kBAAiBA,CACd/gB,KAAK,KACLghB,gBAAiBC,SAAAA,GACb,IAAMC,EAAoBD,EACpB,GAAIX,GAAAA,OAAJ,CAAoBQ,EAAWnoB,KAC/B2nB,EAAeI,QACb/nB,SAAAA,UAAMA,IAAOmoB,EAAWnoB,MAEhC4nB,EAAkBW,EACtB,EACAD,QAASX,EAAetc,SAAS8c,EAAWnoB,IAC5CgmB,KAAMmC,EAAWnoB,GACjBwoB,MAAOL,EAAWloB,MAClBwoB,eAAe,kBAEjBd,EAAetc,SAAS8c,EAAWnoB,KAAO0nB,EAAuBgB,MAAKC,SAAAA,UAAKA,EAAE3oB,KAAOmoB,EAAWnoB,QAC/F,SAACtC,MAAAA,CAAIwJ,UAAU,mCAA2B5K,EAAEwqB,YAAY8B,6BAjBnCT,EAAWnoB,GAqB9C,QAEJ,UAACmH,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAAS,kBAAM2kB,KAAW4B,QAAQ,mBACrC3qB,EAAEsE,iCAAiCioB,wBAExC,SAAC7B,GAAAA,OAAMA,CAACtmB,QAASmnB,EAAYZ,QAAQ,mBAChC3qB,EAAEsE,iCAAiCwmB,sBAKxD,4+BChFO,IAAM0B,IAAiBC,EAAAA,GAAAA,OAAK,cCF7BC,GAAa,CACfC,KDG0C,gBAAE/iB,EAAAA,EAAAA,SACrCgjB,EAASvK,IAAAA,EAAAA,EAAAA,WAAS,WACrB,IAAMwK,GAAIC,EAAAA,GAAAA,eAEV,OADAD,EAAEpd,IAAI+c,IAAgB,GACfK,CACX,OAJgBxK,GAMhB,OACI,SAAC0K,GAAAA,SAAQA,CAACH,MAAOA,WACZhjB,GAGb,ECdIojB,OCG4C,gBAAEpjB,EAAAA,EAAAA,SACxCqjB,GAASC,EAAAA,GAAAA,cAAaV,IAE5B,OACI,SAACW,GAAAA,gBAAeA,CAACC,SAAS,YACpBH,IACE,SAACI,GAAAA,OAAAA,IAAU,CAEPD,QAAS,CACLtb,OAAQ,EACRwb,QAAS,GAEbC,QAAS,CACLzb,OAAQ,OACRwb,QAAS,EACTtZ,WAAY,CACRlC,OAAQ,CACJnM,SAAU,IAEd2nB,QAAS,CACL3nB,SAAU,IACV6nB,MAAO,OAInBC,KAAM,CACF3b,OAAQ,EACRwb,QAAS,EACTtZ,WAAY,CACRlC,OAAQ,CACJnM,SAAU,IAEd2nB,QAAS,CACL3nB,SAAU,gBAKrBiE,GA/BG,YAoCxB,ED7CIqjB,OAAQT,2xCESL,IAAMkB,GAAa/gB,IAAAA,YAAqD,WAO5EoP,OANC4R,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,cACAxd,EAAAA,EAAAA,WACA+N,EAAAA,EAAAA,SACAkM,EAAAA,EAAAA,KACGa,EAAAA,GAAAA,EAAAA,CALHyC,cACAC,gBACAxd,aACA+N,WACAkM,SAIA,OACI,UAACjpB,MAAAA,GAAAA,GAAAA,CACG2a,IAAKA,EACLnR,UAAWlM,EACP,qGAAsG,CAClG,YAAa0R,IAGrByd,aAAYxD,GACRa,GAAAA,YAEJ,SAAC9pB,MAAAA,GAAAA,GAAAA,CACG2a,IAAK4R,GACDC,GAAAA,WAEJ,SAACE,EAAAA,WAAUA,CAAAA,OAEf,SAACC,EAAAA,SAAQA,CAAC/B,QAAS7N,EAAUjC,UAAW,KACxC,SAAC/Q,IAAAA,CAAEP,UAAU,qBAAayf,OAGtC,ilBChCO,IAAM2D,GAAqB,gBAAoBtqB,EAAAA,EAAAA,GAAIya,EAAAA,EAAAA,SAAUiE,EAAAA,EAAAA,SAAUiI,EAAAA,EAAAA,KAStE4D,GAAAA,EAAAA,GAAAA,IAAY,CACZvqB,GAAAA,EACAwqB,qBAAsBC,GAAAA,KATtBC,EAOAH,EAPAG,WACAC,EAMAJ,EANAI,UACAC,EAKAL,EALAK,WACAva,EAIAka,EAJAla,UACAC,EAGAia,EAHAja,WACAua,EAEAN,EAFAM,oBACAne,EACA6d,EADA7d,WAME0D,EAAQ,CACVC,UAAWya,GAAAA,GAAAA,UAAAA,SAAuBza,GAClCC,WAAAA,GAGJ,OACI,SAAC0Z,GAAUA,0UAAAA,CAAAA,CACP3R,IAAKuS,EACLxa,MAAOA,EACPqK,SAAUA,EACV/Z,QAAS,kBAAMge,EAAS1e,IACxB+qB,UAAW7lB,SAAAA,GACH,CAAC,IAAK,SAASmG,SAASnG,EAAEwc,OAC1Bxc,EAAE8lB,iBACFtM,EAAS1e,GAEjB,EACA2mB,KAAMA,GACF+D,GAAAA,CACJT,YAAaY,EACbX,cAAeS,EACfje,WAAYA,IAGxB,23DCxBO,IAAMue,GAAkB,gBAC3BvE,EAAAA,EAAAA,QACAjM,EAAAA,EAAAA,SACAyQ,EAAAA,EAAAA,SACAhkB,EAAAA,EAAAA,UACAikB,EAAAA,EAAAA,SAEM,GAAgB9uB,EAAAA,EAAAA,sBAAqB,KAApCyqB,YACmCnI,EAAAA,IAAAA,EAAAA,EAAAA,WAAS,kBAAM+H,EACpD0E,UAAS,SAACzsB,EAAG0sB,GACV,IAAMC,EAAS7Q,EAASyH,QAAQvjB,EAAE4Y,OAC5BgU,EAAS9Q,EAASyH,QAAQmJ,EAAE9T,OAClC,OAAgB,IAAZ+T,IAA6B,IAAZC,EACV,GAEM,IAAbA,IAA8B,IAAZD,GACV,EAELA,EAASC,CACpB,IACC1gB,KAAI2gB,SAAAA,SAAM,CACPxrB,GAAIwrB,EAAEjU,MACNoP,KAAM6E,EAAE7E,eAdT8E,EAAmC9M,EAAAA,GAApB+M,EAAoB/M,EAAAA,GAkBNgN,EAAAA,IAAAA,EAAAA,GAAAA,SAAQR,GAAAA,GAArCS,EAA6BD,EAAAA,GAAjBE,EAAiBF,EAAAA,GACYhN,EAAAA,IAAAA,EAAAA,EAAAA,WAAS,MAAlDmN,EAAyCnN,EAAAA,GAAvBoN,EAAuBpN,EAAAA,GACpBA,EAAAA,IAAAA,EAAAA,EAAAA,UAAS,OAA9BqN,EAAqBrN,EAAAA,GAAbsN,EAAatN,EAAAA,GACtBuN,GAAiBC,EAAAA,EAAAA,kBAAiBH,GACRrN,EAAAA,IAAAA,EAAAA,EAAAA,UAAkC,SAA3DyN,EAAyBzN,EAAAA,GAAf0N,EAAe1N,EAAAA,GAE1B2N,GAAevU,EAAAA,EAAAA,UAAQ,kBACzB0T,EACK1D,QAAOyD,SAAAA,UAAKA,EAAE7E,KAAK4F,cAAclhB,SAAS6gB,EAAeK,kBACzDxE,QAAOyD,SAAAA,UAAKM,GAAmBrR,EAASpP,SAASmgB,EAAExrB,OACnD6K,KAAI2gB,SAAAA,UAAM,8UACJA,GAAAA,CACH/Q,SAAUA,EAASpP,SAASmgB,EAAExrB,WAExC,CAACksB,EAAgBT,EAAehR,EAAUqR,IACtCU,GAAazU,EAAAA,EAAAA,UAAQ,kBAAMuU,EAAa9a,MAAKmB,SAAAA,UAAKA,EAAE3S,KAAOosB,OAAW,CAACA,EAAUE,IAEjFG,GAAc1U,EAAAA,EAAAA,UAAQ,kBAAM2O,EAAQgG,OAAMlB,SAAAA,UAAK/Q,EAASpP,SAASmgB,EAAEjU,YAAS,CAACmP,EAASjM,IAEtFkS,EAAiB,SAACpV,GAChBkD,EAASpP,SAASkM,GAClB2T,EAASzQ,EAASsN,QAAOoB,SAAAA,UAAKA,IAAM5R,MAEpC2T,EAAS,GAAIzQ,GAAAA,OAAJ,CAAclD,IAE/B,EAEA,OACI,UAAC7Z,MAAAA,CACGwJ,UAAWlM,EAAI,kFAAmFkM,GAClG0lB,gBAAehB,aAEf,UAACluB,MAAAA,CAAIwJ,UAAU,qCACX,SAAC2lB,EAAAA,YAAWA,CACRC,gBAAgB,SAChBC,YAAajG,EAAYkG,qBACzBzV,MAAOyU,EACPd,SAAUhmB,SAAAA,UAAK+mB,EAAU/mB,EAAEpG,OAAOyY,WAEtC,SAACyP,GAAAA,OAAMA,CACHC,QAAQ,QACRvmB,QAAS,kBAAMmrB,GAAc3mB,SAAAA,UAAMA,MACnCgC,UAAWlM,EAAI,mDAAoD,CAC/D,8DAA+D4wB,EAC/D,gCAAiCA,IAErCqB,MAAM,SAACC,EAAAA,aAAYA,CAAAA,SAG3B,UAACxvB,MAAAA,CAAIwJ,UAAU,iDACX,UAACxJ,MAAAA,CAAIwJ,UAAU,qDACX,SAAC8f,GAAAA,OAAMA,CACHC,QAAQ,QACR5f,KAAK,KACL3G,QAAS,WACLwqB,EAASuB,EAAc,GAAK/F,EAAQ7b,KAAI2gB,SAAAA,UAAKA,EAAEjU,SACnD,WAECkV,EAAc3F,EAAYqG,eAAiBrG,EAAYsG,gBAE5D,SAACC,EAAAA,gBAAeA,CACZ/E,QAASwD,EACTrD,eAAe,wBACfJ,gBAAiB,kBAAM0D,GAAoB5C,SAAAA,UAAMA,MACjDX,MAAO1B,EAAYwG,2BAG3B,SAAC5vB,MAAAA,CAAIwJ,UAAU,+CACX,SAACxJ,MAAAA,CAAIwJ,UAAU,gCACX,UAACqmB,GAAAA,WAAUA,CACPC,YAAa,gBAAE5kB,EAAAA,EAAAA,OACNA,GAILyjB,EAAYzjB,EAAO5I,GACvB,EACAytB,UAAW,gBAAE7kB,EAAAA,EAAAA,OAAQ8kB,EAAAA,EAAAA,KAEjB,GADArB,EAAY,MACPqB,EAAL,CAGA,IAAMC,EAAclC,EAAcmC,WAAUpC,SAAAA,UAAKA,EAAExrB,KAAO4I,EAAO5I,MAC3D6tB,EAAYpC,EAAcmC,WAAUpC,SAAAA,UAAKA,EAAExrB,KAAO0tB,EAAK1tB,MAC7D,GAAI2tB,IAAgBE,EAApB,CAIA,IAAMC,GAAmBC,EAAAA,GAAAA,IAAUtC,EAAekC,EAAaE,GAC/DnC,EAAiBoC,GAEjB5C,EACI4C,EACK/F,QAAOyD,SAAAA,UAAK/Q,EAASpP,SAASmgB,EAAExrB,OAChC6K,KAAI2gB,SAAAA,UAAKA,EAAExrB,MARpB,CALA,CAeJ,EACAguB,aAAc,kBAAM3B,EAAY,kBAEhC,SAAC4B,GAAAA,GAAeA,CAACC,MAAOzC,EAAezrB,GAAG,KAAKmuB,SAAUC,GAAAA,YACpD9B,EAAazhB,KAAIwjB,SAAAA,UACd,SAAC/D,GAAkBA,CAEftqB,GAAIquB,EAAKruB,GACTya,SAAU4T,EAAK5T,SACfkM,KAAM0H,EAAK1H,KACXjI,SAAUiO,GAJL0B,EAAKruB,UAQtB,SAACsuB,GAAAA,YAAWA,UACP9B,GAAa,SAACxC,GAAUA,CAACrD,KAAM6F,EAAW7F,KAAMlM,SAAU+R,EAAW/R,WAAe,mBAQrH,uBCtKa8T,GAA6B,CACtCC,gBAAgBlb,EAAAA,GAAAA,SAChB4X,UAAU5X,EAAAA,GAAAA,UAGDmb,GAA6B,CACtCC,YAAYC,EAAAA,GAAAA,cACZC,cAAcD,EAAAA,GAAAA,cACdE,iBAAiBF,EAAAA,GAAAA,cACjBG,cAAcH,EAAAA,GAAAA,cACdI,cAAcJ,EAAAA,GAAAA,cAIdK,uBAAuBL,EAAAA,GAAAA,cACvBM,sBAAsBN,EAAAA,GAAAA,cAEtBO,wBAAwB5b,EAAAA,GAAAA,SACxB6b,2BAA2B7b,EAAAA,GAAAA,SAE3B8b,0BAA0B9b,EAAAA,GAAAA,SAC1B+b,8BAA8B/b,EAAAA,GAAAA,SAE9Bgc,uBAAuBhc,EAAAA,GAAAA,SACvBic,0BAA0Bjc,EAAAA,GAAAA,UCnBjBkc,GAA8B,CACvCC,KAAM,CACFzvB,QAAIgP,EACJ0gB,uBAAuB,EACvB3J,OAAQ,IAEZ4J,KAAM,CACF3vB,QAAIgP,EACJ+W,OAAQ,IAEZ6J,QAAS,CACLhkB,YAAQoD,EACR+W,OAAQ,gBCtBE,2iDAIX,OAAK,iPAAC8J,EAAAA,gBAAAA,kKAAAA,EAOGC,EAA4BC,EAAqBptB,kHAPpDktB,GACT,oBAOUltB,IAPMmJ,WAAhB,GACA,SAAgBkkB,cAAhB,GACA,SAAgBC,kBAAhB,GACA,SAAgB9vB,YAAhB,GACA,SAAgB2vB,eAAhB,GAKI,EAAK9J,KAAO,WACZ,EAAKla,IAAMikB,EAASjkB,IACpB,EAAKkkB,OAASD,EAASC,OACvB,EAAKC,WAAaF,EAASE,WAC3B,EAAK9vB,KAAO4vB,EAAS5vB,KACrB,EAAK2vB,QAAUA,WAfVD,EAAD,IAAkBK,g5BCJZ,g+BACX,OAAK,iPAACC,EAAAA,gBAAAA,kKAAAA,EAEGxtB,wBAFHwtB,kBAGCxtB,IACDqjB,KAAO,0BAJPmK,EAAAA,EAOEC,IAAAA,kBAAX,WACI,OAAO,CACX,KATSD,EAAD,IAAqBD,WAqBnBG,OAAOC,YADd,GAAK,oBAACC,EAYLC,sBAZKD,GACT,mBAEA,QAAQE,mBAAR,GACA,QAAQC,mBAAR,GACA,QAAQC,oBAAR,GACA,QAAiBC,uBAAjB,GACA,QAAiBC,gBAAjB,GACA,QAAQC,gBAAR,GACA,QAAQC,eAAR,GASIvhB,KAAKihB,aAAc,EACnBjhB,KAAKkhB,aAAc,EACnBlhB,KAAKmhB,cAAe,EACpBnhB,KAAKohB,gBAAkB,GACvBphB,KAAKqhB,SAAW,IAAIG,SAAW,SAACC,EAASC,GACrC,EAAKJ,SAAWG,EAChB,EAAKF,QAAUG,EAEf,IAgBMC,EAAW,SAACC,GACV,EAAKX,aAAe,EAAKC,aAAe,EAAKC,cAGjD,EAAKC,gBAAgBS,KAAKD,EAC9B,EAcA,OAZA1Q,OAAO4Q,eAAeH,EAAU,aAAc,CAC1CI,IAAK,kBAAe,EAAKd,eAG7B/P,OAAO4Q,eAAeH,EAAU,aAAc,CAC1CI,IAAK,kBAAe,EAAKb,eAG7BhQ,OAAO4Q,eAAeH,EAAU,cAAe,CAC3CI,IAAK,kBAAe,EAAKZ,gBAGtBH,GAnCW,SAACjZ,OAKf,IAJI,EAAKkZ,aAAe,EAAKC,aAAe,EAAKC,eAGjD,EAAKF,aAAc,EACN,QAAb,QAAKK,gBAAL,gBAAgBvZ,GACpB,IAEiB,SAACia,OAKd,IAJI,EAAKf,aAAe,EAAKC,aAAe,EAAKC,eAGjD,EAAKD,aAAc,EACP,QAAZ,QAAKK,eAAL,gBAAeS,GACnB,GAqBqCL,EACzC,cA9DKZ,EAAAA,EAiEFkB,IAAAA,aAAP,SACIC,EACAC,GAEA,OAAOniB,KAAKqhB,SAASY,KAAKC,EAAaC,EAC3C,IAEO1sB,IAAAA,cAAP,SACI0sB,GAEA,OAAOniB,KAAKqhB,SAAS5rB,MAAM0sB,EAC/B,IAEOtsB,IAAAA,gBAAP,SAAeusB,GACX,OAAOpiB,KAAKqhB,SAASxrB,QAAQusB,EACjC,IAEOC,IAAAA,eAAP,eAgBI,EAfA,KAAIriB,KAAKihB,aAAejhB,KAAKkhB,aAAelhB,KAAKmhB,cAAjD,CAIA,GADAnhB,KAAKmhB,cAAe,EAChBnhB,KAAKohB,gBAAgBhe,OACrB,QACS,uBAAL,QAAK,IAAuBpD,KAAKohB,gBAAe,qBAA3C,0BAA6C,EAC9CQ,EADC,UAEL,WAFK,yEAMT,CAHE,MAAOhsB,GAEL,YADAD,QAAQ2sB,KAAK,8BAA+B1sB,EAEhD,CAEJoK,KAAKohB,gBAAgBhe,OAAS,EAClB,QAAZ,EAAApD,KAAKuhB,eAAL,cAAAvhB,KAAe,IAAI2gB,GAAY,mBAb/B,CAcJ,IAEWC,IAAAA,kBAAX,WACI,OAAO5gB,KAAKmhB,YAChB,KAvGSJ,EAAD,GCHCwB,GAAyB,CAClCC,KAAM,GACNC,QAAS,QACTC,kBAAkB,EAClBC,YAAa,UACbC,WAAOpjB,EACPqjB,cAAUrjB,EACVsjB,cAAUtjB,EACVujB,aAASvjB,EACTwjB,iBAAaxjB,GC3BC,msGAQlB,OAAMyjB,GAAY,SAAIlb,GAClB,OAAOA,OACX,EAEMmb,GAAW,SAACnb,GACd,MAAwB,iBAAVA,CAClB,EAEMob,GAAoB,SAACpb,GACvB,OAAOmb,GAASnb,IAAoB,KAAVA,CAC9B,EAEMqb,GAAS,SAACrb,GACZ,MACqB,iBAAVA,GACe,iBAAfA,EAAMzV,MACW,mBAAjByV,EAAMsb,QACgB,mBAAtBtb,EAAMub,aACgB,mBAAtBvb,EAAMwb,aACqB,iBAA3Bxb,EAAMwb,YAAY/M,MACzB,gBAAgBgN,KAAKzb,EAAMwb,YAAY/M,OACvC,gBAAgBgN,KAAKzb,EAAM8Y,OAAOC,aAE1C,EAEM2C,GAAa,SAAC1b,GAChB,SAAOA,WAAiB2b,8GAC5B,EAWMC,GAAiB,SAACC,GACpB,IAAMC,EAAe,GAMfC,EAAU,SAAC5R,EAAanK,GACtBkb,GAAUlb,KACNkE,MAAM8X,QAAQhc,GACdA,EAAMwG,SAAQyV,SAAAA,GACVF,EAAQ5R,EAAK8R,EACjB,IACwB,iBAAVjc,EACdmJ,OAAO+S,QAAQlc,GAAOwG,SAAQ,0BAAE2V,EAAAA,EAAAA,GAAGF,EAAAA,EAAAA,GAC/BF,EAAQ,GAAUI,OAAPhS,EAAI,KAAK,OAAFgS,EAAE,KAAIF,EAC5B,IAbG,SAAC9R,EAAanK,GACzB8b,EAAGhC,KAAK,GAA8BsC,OAA3BA,mBAAmBjS,GAAK,KAAqC,OAAlCiS,mBAAmB3nB,OAAOuL,KACpE,CAaYhc,CAAOmmB,EAAKnK,GAGxB,EAMA,OAJAmJ,OAAO+S,QAAQL,GAAQrV,SAAQ,0BAAE2D,EAAAA,EAAAA,GAAKnK,EAAAA,EAAAA,GAClC+b,EAAQ5R,EAAKnK,EACjB,IAEI8b,EAAGzgB,OAAS,EACL,IAAiB,OAAbygB,EAAGO,KAAK,MAGhB,EACX,EAkDM3C,OAAU,aAAUvK,EAA4BmN,+BAClD,MAAwB,mBAAbA,EACA,GAACA,EAAyBnN,IAE9B,GAAAmN,KACX,aAL0BnN,EAA4BmN,qCAOhDC,GAAa,8BAAOvoB,EAAuBmb,OACvCqN,EACAC,EACAC,EACAC,EAEAC,EAgBIC,qDArBI,SAAMnD,GAAQvK,EAASnb,EAAO6mB,eAC3B,OADX2B,EAAQ,SACG,GAAM9C,GAAQvK,EAASnb,EAAO8mB,kBAC9B,OADX2B,EAAW,SACA,GAAM/C,GAAQvK,EAASnb,EAAO+mB,kBACrB,OADpB2B,EAAW,SACS,GAAMhD,GAAQvK,EAASnb,EAAOgnB,iBAkCxD,OAlCM2B,EAAoB,SAEpBC,EAAUzT,OAAO+S,QAAQ,IAC3BY,OAAQ,oBACLH,EACAxN,EAAQyN,UAEVpM,QAAO,0BAAKxQ,GAAH7B,EAAAA,GAAG6B,EAAAA,WAAWkb,GAAUlb,MACjC+c,QAAO,SAACH,EAAS,iBAACzS,EAAAA,EAAAA,GAAKnK,EAAAA,EAAAA,UAAY,SAC7B4c,GACH,MAACzS,EAAM1V,OAAOuL,OACd,CAAC,GAELob,GAAkBoB,KAClBI,EAAuB,cAAI,UAAgB,OAANJ,IAGrCpB,GAAkBqB,IAAarB,GAAkBsB,KAC3CG,EAxHC,SAACG,GACZ,IACI,OAAOC,KAAKD,EAIhB,CAHE,MAAOE,GAEL,OAAOC,OAAOhZ,KAAK6Y,GAAK54B,SAAS,SACrC,CACJ,CAiH4Bg5B,CAAO,GAAeV,OAAZD,EAAS,KAAY,OAATC,IAC1CE,EAAuB,cAAI,SAAqB,OAAZC,IAGpC1N,EAAQvmB,OACJumB,EAAQkO,UACRT,EAAQ,gBAAkBzN,EAAQkO,UAC3BhC,GAAOlM,EAAQvmB,MACtBg0B,EAAQ,gBAAkBzN,EAAQvmB,KAAK2B,MAAQ,2BACxC4wB,GAAShM,EAAQvmB,MACxBg0B,EAAQ,gBAAkB,aAClBlB,GAAWvM,EAAQvmB,QAC3Bg0B,EAAQ,gBAAkB,qBAI3B,OAAIU,QAAQV,OACvB,oBAvC0B5oB,EAAuBmb,mCAA9B,GAsDNoO,GAAc,8BACvBvpB,EACAmb,EACA5a,EACA3L,EACA40B,EACAZ,EACAhD,OAEM6D,EAEAlF,qDAaC,OAfDkF,EAAa,IAAIC,gBAEjBnF,EAAuB,CACzBqE,QAAAA,EACAh0B,KAAMA,QAAAA,EAAQ40B,EACdhwB,OAAQ2hB,EAAQ3hB,OAChBmwB,OAAQF,EAAWE,QAGnB3pB,EAAO2mB,mBACPpC,EAAQsE,YAAc7oB,EAAO4mB,aAGjChB,GAAS,kBAAM6D,EAAWG,WAEnB,GAAMrwB,MAAMgH,EAAKgkB,WAAxB,MAAO,gBACX,oBAxBIvkB,EACAmb,EACA5a,EACA3L,EACA40B,EACAZ,EACAhD,mCAPuB,GAqCrBiE,GAAkB,8BAAOrF,OAGbsF,EASDjwB,wDAXW,MAApB2qB,EAASC,OAATD,MAAAA,qDAEUsF,EAActF,EAASoE,QAAQ5C,IAAI,iBAEtB8D,EAAY9I,cAAc+I,WAAW,oBAEzC,GAAMvF,EAASwF,QADtBC,MAFJH,aAGI,MAAO,oBAEA,SAAMtF,EAASpJ,eAAtB,MAAO,8CAGVvhB,EAAAA,EAAAA,OACLD,QAAQC,MAAMA,gBAGtB,MAAO,QAAA4J,MACX,oBAjB+B+gB,mCAAP,GAgDXD,GAAU,SAAIvkB,EAAuBmb,GAC9C,OAAO,IAAI6J,GAAkB,8BAAOU,EAASC,EAAQC,OAEvCrlB,EACAipB,EACA50B,EACAg0B,EAGIpE,EACA0F,EACAC,EAEAllB,EAYLpL,qDAnBW,6BAHV0G,EArMH,SAACP,EAAuBmb,GACnC,IAAMiP,EAAUpqB,EAAOinB,aAAeoD,UAEhCC,EAAOnP,EAAQ5a,IAChBgqB,QAAQ,gBAAiBvqB,EAAO0mB,SAChC6D,QAAQ,YAAY,SAACC,EAAmBC,OACjCtP,EAAJ,OAAgB,QAAZA,EAAAA,EAAQmP,YAARnP,IAAAA,OAAAA,EAAAA,EAAc9E,eAAeoU,IACtBL,EAAQ3pB,OAAO0a,EAAQmP,KAAKG,KAEhCD,CACX,IAEEjqB,EAAM,GAAiB+pB,OAAdtqB,EAAOymB,MAAY,OAAL6D,GAC7B,OAAInP,EAAQuP,MACD,GAAS9C,OAANrnB,GAAoC,OAA9BqnB,GAAezM,EAAQuP,QAEpCnqB,CACX,CAoLwBoqB,CAAO3qB,EAAQmb,GACrBqO,EAnLE,SAACrO,GACjB,GAAIA,EAAQqO,SAAU,CAClB,IAAMA,EAAW,IAAI7B,SAEfI,EAAU,SAAC5R,EAAanK,GACtBmb,GAASnb,IAAUqb,GAAOrb,GAC1Bwd,EAASx5B,OAAOmmB,EAAKnK,GAErBwd,EAASx5B,OAAOmmB,EAAKyU,KAAKC,UAAU7e,GAE5C,EAYA,OAVAmJ,OAAO+S,QAAQ/M,EAAQqO,UAClBhN,QAAO,0BAAKxQ,GAAH7B,EAAAA,GAAG6B,EAAAA,WAAWkb,GAAUlb,MACjCwG,SAAQ,0BAAE2D,EAAAA,EAAAA,GAAKnK,EAAAA,EAAAA,GACRkE,MAAM8X,QAAQhc,GACdA,EAAMwG,SAAQyV,SAAAA,UAAKF,EAAQ5R,EAAK8R,MAEhCF,EAAQ5R,EAAKnK,EAErB,IAEGwd,CACX,CAEJ,CA0J6BsB,CAAY3P,GACvBvmB,EAvGK,SAACumB,OAEZA,EADR,GAAIA,EAAQvmB,KACR,OAAqB,QAAjBumB,EAAAA,EAAQkO,iBAARlO,IAAAA,OAAAA,EAAAA,EAAmBrb,SAAS,UACrB8qB,KAAKC,UAAU1P,EAAQvmB,MACvBuyB,GAAShM,EAAQvmB,OAASyyB,GAAOlM,EAAQvmB,OAAS8yB,GAAWvM,EAAQvmB,MACrEumB,EAAQvmB,KAERg2B,KAAKC,UAAU1P,EAAQvmB,KAI1C,CA4FyBm2B,CAAe5P,GACZ,GAAMoN,GAAWvoB,EAAQmb,kBAAnCyN,EAAU,SAEXhD,EAASf,YAAV,MACiB,GAAM0E,GAAYvpB,EAAQmb,EAAS5a,EAAK3L,EAAM40B,EAAUZ,EAAShD,WAC7D,OADfpB,EAAW,SACI,GAAMqF,GAAgBrF,WAArC0F,EAAe,SACfC,EArEI,SAAC3F,EAAoB2F,GAC3C,GAAIA,EAAgB,CAChB,IAAMv4B,EAAU4yB,EAASoE,QAAQ5C,IAAImE,GACrC,GAAIhD,GAASv1B,GACT,OAAOA,CAEf,CAEJ,CA6DuCo5B,CAAkBxG,EAAUrJ,EAAQgP,gBAErDllB,EAAoB,CACtB1E,IAAAA,EACAzK,GAAI0uB,EAAS1uB,GACb2uB,OAAQD,EAASC,OACjBC,WAAYF,EAASE,WACrB9vB,KAAMu1B,QAAAA,EAAkBD,GA/CpB,SAAC/O,EAA4BlW,GACjD,IAWMpL,EAXiC,IACnC,IAAK,cACL,IAAK,eACL,IAAK,YACL,IAAK,YACL,IAAK,wBACL,IAAK,cACL,IAAK,uBACFshB,EAAQ8P,QAGMhmB,EAAOwf,QAC5B,GAAI5qB,EACA,MAAM,IAAIyqB,GAASnJ,EAASlW,EAAQpL,GAGxC,IAAKoL,EAAOnP,GACR,MAAM,IAAIwuB,GAASnJ,EAASlW,EAAQ,gBAE5C,CA8BgBimB,CAAgB/P,EAASlW,GAEzBygB,EAAQzgB,EAAOrQ,iDAEdiF,EAAAA,EAAAA,OACL8rB,EAAO9rB,6BAEf,oBA3BoC6rB,EAASC,EAAQC,mCAAxB,GA4BjC,yKCvSO,OAAK,oBAACuF,KARK,kGAQLA,sBAAAA,IAAAA,EAQKhI,IAAAA,mBAAd,WACI,OAAOiI,GAAU5E,GAAS,CACtBhtB,OAAQ,MACR+G,IAAK,iCAEb,IAQc8iB,IAAAA,qBAAd,SAA2B,WAC/BgI,YAIQ,OAAOD,GAAU5E,GAAS,CACtBhtB,OAAQ,OACR+G,IAAK,+BACL3L,KAAMy2B,EACNhC,UAAW,oBAEnB,IAQc7F,IAAAA,qBAAd,SAA2B,WAC/B6H,YAIQ,OAAOD,GAAU5E,GAAS,CACtBhtB,OAAQ,MACR+G,IAAK,kCACL3L,KAAMy2B,EACNhC,UAAW,oBAEnB,IAQc9F,IAAAA,qBAAd,SAA2B,WAC/BpjB,SAOQ,OAAOirB,GAAU5E,GAAS,CACtBhtB,OAAQ,SACR+G,IAAK,6CACL+pB,KAAM,CACF,SAAYnqB,IAGxB,OA1ESgrB,oCAAAA,EAAD,0KCML,OAAK,oBAACG,KAdK,kGAcLA,sBAAAA,IAAAA,EAQKC,IAAAA,iBAAd,WACI,OAAOH,GAAU5E,GAAS,CACtBhtB,OAAQ,MACR+G,IAAK,uBAEb,IAMcirB,IAAAA,4CAAd,WACI,OAAOJ,GAAU5E,GAAS,CACtBhtB,OAAQ,SACR+G,IAAK,iCAEb,IAOckrB,IAAAA,kBAAd,SAAwB,WAC5BJ,YAOQ,OAAOD,GAAU5E,GAAS,CACtBhtB,OAAQ,OACR+G,IAAK,gCACL3L,KAAMy2B,EACNhC,UAAW,oBAEnB,IAMcqC,IAAAA,4CAAd,SAAkD,WACtDL,YAIQ,OAAOD,GAAU5E,GAAS,CACtBhtB,OAAQ,OACR+G,IAAK,yBACL3L,KAAMy2B,EACNhC,UAAW,oBAEnB,IAOcsC,IAAAA,6CAAd,WACI,OAAOP,GAAU5E,GAAS,CACtBhtB,OAAQ,MACR+G,IAAK,+BAEb,IAMcqrB,IAAAA,+BAAd,WAGI,OAAOR,GAAU5E,GAAS,CACtBhtB,OAAQ,MACR+G,IAAK,sCAEb,IAMcsrB,IAAAA,kBAAd,WACI,OAAOT,GAAU5E,GAAS,CACtBhtB,OAAQ,MACR+G,IAAK,wBAEb,IAMcurB,IAAAA,oBAAd,WACI,OAAOV,GAAU5E,GAAS,CACtBhtB,OAAQ,MACR+G,IAAK,0BAEb,IAMcwrB,IAAAA,0BAAd,SAAgC,OACpCC,EADoC,EACpCA,YACAC,EAFoC,EAEpCA,UACAje,EAHoC,EAGpCA,MACAC,EAJoC,EAIpCA,IACAie,EALoC,EAKpCA,aAQQ,OAAOd,GAAU5E,GAAS,CACtBhtB,OAAQ,MACR+G,IAAK,2GACL+pB,KAAM,CACF,YAAe0B,EACf,UAAaC,EACb,MAASje,EACT,IAAOC,EACP,aAAgBie,IAG5B,OA3ISZ,oCAAAA,EAAD,GCJL,wvBCIA,OAAK,oBAACa,uGAAAA,GACTC,GAAAA,KAAAA,gBAII,CAAC,sBALID,IAAAA,EAOTE,IAAAA,wBAAAA,SAAgBC,EAAeC,GAC3BtoB,KAAKmoB,cAAcE,GAAS,8UACrBroB,KAAKmoB,cAAcE,IACtB,MAACC,GAAiB,GAE1B,IAEAC,IAAAA,wBAAAA,SAAgBF,EAAeC,OACZ,EAAf,OAAOE,QAAiC,QAAzB,EAAAxoB,KAAKmoB,cAAcE,UAAnB,eAA4BC,GAC/C,IAEAG,IAAAA,2BAAAA,SAAmBJ,UACRroB,KAAKmoB,cAAcE,EAC9B,IAEAK,IAAAA,cAAAA,WACI1oB,KAAKmoB,cAAgB,CAAC,CAC1B,oCAxBSD,EAAD,w5DCUL,OAAK,oBAACS,eAIGC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAgD,CAAC,EAAGC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAA6B,CAAC,UAJrFF,GACTE,GAAAA,KAAAA,WAA6B,CAAC,GAC9BD,GAAAA,KAAAA,qBAAgD,CAAC,GAgBjDE,GAAAA,KAAAA,0BAAyB,WACrB,IAAMC,EAAU7X,OAAO8X,OAAO,EAAKJ,oBAAoB9D,QAAoB,SAACmE,EAAKjF,OACzEA,EAGJ,OAHU,QAANA,EAAAA,EAAE7D,YAAF6D,IAAAA,OAAAA,EAAAA,EAAQxzB,KACRy4B,EAAIviB,IAAIsd,EAAE7D,KAAK3vB,IAEZy4B,CACX,GAAG,IAAIlb,KAEP,OAAO9B,MAAMC,KAAK6c,GAAS1tB,KAAI7K,SAAAA,SAAM,SAAY,OAAHA,KAClD,IAEA04B,GAAAA,KAAAA,0BAAyB,WACrB,IAAMC,EAAUjY,OAAO8X,OAAO,EAAKJ,oBAAoB9D,QAAoB,SAACmE,EAAKjF,OACzEA,EAGJ,OAHU,QAANA,EAAAA,EAAE/D,YAAF+D,IAAAA,OAAAA,EAAAA,EAAQxzB,KACRy4B,EAAIviB,IAAIsd,EAAE/D,KAAKzvB,IAEZy4B,CACX,GAAG,IAAIlb,KAEP,OAAO9B,MAAMC,KAAKid,GAAS9tB,KAAI7K,SAAAA,SAAM,wBAA2B,OAAHA,KACjE,IAEAq3B,GAAAA,KAAAA,eAAc,kBAAM,EAAKgB,YAEzBO,GAAAA,KAAAA,gBAA6D,SAAChtB,EAAQysB,GAClE,EAAKA,SAASzsB,GAAUysB,CAC5B,IA+GA,QAAQQ,sBAAqB,SAAChB,GACrB,EAAKO,mBAAmBP,KACzB,EAAKO,mBAAmBP,GAASrI,KAErC/oB,EAAAA,EAAAA,eAAc,EAAK2xB,mBAAmBP,GAC1C,IA3JIroB,KAAK4oB,mBAAqBA,EAC1B5oB,KAAK6oB,SAAWA,qBANXF,KAAAA,EASTD,IAAAA,cAAAA,WACI1oB,KAAK6oB,SAAW,CAAC,EACjB7oB,KAAK4oB,mBAAqB,CAAC,CAC/B,IAEAU,IAAAA,aAAAA,WACI,OAAO,IAfFX,EAe0B3oB,KAAK4oB,mBACxC,IA8BAW,IAAAA,4BAAAA,SAAoBntB,GAChB,OAAO4D,KAAK6oB,SAASzsB,EACzB,IAEAotB,IAAAA,8BAAAA,SAAsBnB,GAClB,OAAOroB,KAAK4oB,mBAAmBP,EACnC,IAEAoB,IAAAA,sBAAAA,SAAcrtB,EAAgBisB,EAAe9R,GACzCvW,KAAKqpB,mBAAmBhB,GACxBroB,KAAK4oB,mBAAmBP,GAAS,SAC1BroB,KAAK4oB,mBAAmBP,IAAM,CACjClI,KAAM,CACF3vB,GAAI4L,EACJma,OAAAA,IAGZ,IAEAmT,IAAAA,yBAAAA,SAAiBrB,GACbroB,KAAK4oB,mBAAmBP,GAAS,SAC1BroB,KAAK4oB,mBAAmBP,IAAM,CACjClI,KAAMH,GAA4BG,MAE1C,IAEAwJ,IAAAA,yBAAAA,SAAiBvtB,EAAgBisB,EAAe9R,GAC5CvW,KAAKqpB,mBAAmBhB,GACxBroB,KAAK4oB,mBAAmBP,GAAS,SAC1BroB,KAAK4oB,mBAAmBP,IAAM,CACjCjI,QAAS,CACLhkB,OAAAA,EACAma,OAAAA,IAGZ,IAEAqT,IAAAA,4BAAAA,SAAoBvB,GAChBroB,KAAK4oB,mBAAmBP,GAAS,SAC1BroB,KAAK4oB,mBAAmBP,IAAM,CACjCjI,QAASJ,GAA4BI,SAE7C,IAEAyJ,IAAAA,sBAAAA,SAAcztB,EAAgBisB,EAAe9R,GACzCvW,KAAKqpB,mBAAmBhB,GACxBroB,KAAK4oB,mBAAmBP,GAAS,SAC1BroB,KAAK4oB,mBAAmBP,IAAM,CACjCpI,KAAM,CACFzvB,GAAI4L,EACJ8jB,uBAAuB,EACvB3J,OAAAA,IAGZ,IAEAuT,IAAAA,yBAAAA,SAAiBzB,GACbroB,KAAK4oB,mBAAmBP,GAAS,SAC1BroB,KAAK4oB,mBAAmBP,IAAM,CACjCpI,KAAMD,GAA4BC,MAE1C,IAEA8J,IAAAA,0BAAAA,WACI,OAAO7Y,OAAO8X,OAAOhpB,KAAK4oB,oBAAoB9D,QAAgD,SAACmE,EAAKjF,OAC5FA,EAOJ,OAPU,QAANA,EAAAA,EAAE7D,YAAF6D,IAAAA,OAAAA,EAAAA,EAAQxzB,KAAMwzB,EAAE7D,KAAK5J,SAChB0S,EAAIjF,EAAE7D,KAAK3vB,MACZy4B,EAAIjF,EAAE7D,KAAK3vB,IAAM,IAErBy4B,EAAIjF,EAAE7D,KAAK3vB,IAAMyb,MAAMC,KAAK,IAAI6B,IAAI,GAAIkb,EAAIjF,EAAE7D,KAAK3vB,KAAG,OAAE,GAAGwzB,EAAE7D,KAAK5J,YAG/D0S,CACX,GAAG,CAAC,EACR,IAEAe,IAAAA,iCAAAA,WACI,OAAO9Y,OAAO8X,OAAOhpB,KAAK4oB,oBAAoB9D,QAAmD,SAACmE,EAAKjF,GAQnG,OAPIA,EAAE5D,QAAQhkB,QAAU4nB,EAAE5D,QAAQ7J,SACzB0S,EAAIjF,EAAE5D,QAAQhkB,UACf6sB,EAAIjF,EAAE5D,QAAQhkB,QAAU,IAE5B6sB,EAAIjF,EAAE5D,QAAQhkB,QAAU6P,MAAMC,KAAK,IAAI6B,IAAI,GAAIkb,EAAIjF,EAAE5D,QAAQhkB,SAAO,OAAE,GAAG4nB,EAAE5D,QAAQ7J,YAGhF0S,CACX,GAAG,CAAC,EACR,IAEAgB,IAAAA,0BAAAA,WACI,OAAO/Y,OAAO8X,OAAOhpB,KAAK4oB,oBAAoB9D,QAA+C,SAACmE,EAAKjF,OAC3FA,EAAJ,IAAU,QAANA,EAAAA,EAAE/D,YAAF+D,IAAAA,OAAAA,EAAAA,EAAQxzB,KAAMwzB,EAAE/D,KAAK1J,OAAQ,CACxB0S,EAAIjF,EAAE/D,KAAKzvB,MACZy4B,EAAIjF,EAAE/D,KAAKzvB,IAAM,CACbA,GAAIwzB,EAAE/D,KAAKzvB,GACX+lB,OAAQ,GACR2J,sBAAuB8D,EAAE/D,KAAKC,wBAGtC,IAAMgK,EAAcjB,EAAIjF,EAAE/D,KAAKzvB,IAE/B05B,EAAY3T,OAAStK,MAAMC,KAAK,IAAI6B,IAAI,GAAImc,EAAY3T,QAAM,OAAE,GAAGyN,EAAE/D,KAAK1J,WAC1E2T,EAAYhK,sBAAwB8D,EAAE/D,KAAKC,uBAAyBgK,EAAYhK,qBACpF,CAEA,OAAO+I,CACX,GAAG,CAAC,EACR,mCAzJSN,EAAD,m9BCdL,SAASwB,GAAmCC,GAC/C,OAAOjvB,GAAmB2pB,QAAuB,SAACuF,EAAK,iBAACC,EAAAA,EAAAA,GAAWC,EAAAA,EAAAA,GAE/D,OADAF,EAAIC,QAA0C9qB,IAA7B4qB,EAAYG,IAA6BC,EAAAA,EAAAA,mBAAkBJ,EAAYG,KAAiB,EAClGF,CACX,GAAG,CAAC,EACR,CAEO,SAASI,GACZC,GAEA,IAAMC,EAAQxvB,GAAmB6G,MAAK1G,SAAAA,UAAKA,EAAE,KAAOovB,KAGpD,OAFAzzB,EAAAA,EAAAA,eAAc0zB,GAEPA,EAAM,EACjB,CAGO,SAASC,GACZ7e,GAEA,IAAM/K,EAAS,IAAI+M,IAAiD,CAAC,YAuCrE,OArCA/M,EAAO0F,IAAI,aAEXqF,EAAQwC,SAAQsc,SAAAA,GACZ,OAAQA,EAAOrU,MACX,IAAK,OACDxV,EAAO0F,IAAI,aACX1F,EAAO0F,IAAI,YACX,MACJ,IAAK,gBACD1F,EAAO0F,IAAI,kBACX,MAEJ,IAAK,SACD1F,EAAO0F,IAAI,UACX,MAEJ,IAAK,aACD1F,EAAO0F,IAAI,eACX,MAEJ,IAAK,WACD1F,EAAO0F,IAAI,aACX1F,EAAO0F,IAAI,SACX1F,EAAO0F,IAAI,kBACX1F,EAAO0F,IAAI,YACX1F,EAAO0F,IAAI,aACX,MAEJ,IAAK,eACD1F,EAAO0F,IAAI,kBACX1F,EAAO0F,IAAI,YACX1F,EAAO0F,IAAI,aAIvB,IAEOuF,MAAMC,KAAKlL,EACtB,CAGO,SAAS8pB,GACZJ,GAoBA,MAlBmF,CAC/El6B,GAAI,aACJgmB,KAAM,OACNuU,eAAgB,mBAChBC,cAAe,mBACfC,aAAc,gBACdC,YAAa,eACbC,aAAc,gBACdC,mBAAoB,wBACpBC,qBAAsB,2BACtBC,8BAA+B,sCAC/BC,MAAO,SACPC,uBAAwB,6BACxBC,+BAAgC,sCAChCC,sBAAuB,4BACvBC,yBAA0B,+BAC1BC,8BAA+B,sCAEpBlB,EACnB,w3KCnDuCmB,GAAAA,aAAAA,qBAAkC,CACrErV,KAAM,gBACNsV,cAAe7M,GACf8M,cAAehN,GACf7H,QAAS,CAAC8U,YAAY,EAAMC,cAAc,GAC1CC,gBXhDmC,iBAA0B,CAC7Dzb,iBAAkB,CACd2P,QAAS,CAAC,EACVD,KAAM,CAAC,EACPF,KAAM,CAAC,GAEXkM,QAAS,KW2CTC,aAAc,CACV,YACA,mBACA,+6BCpCD,IAAMC,GAAqE,gBCVxEpW,EDWNzlB,EAAAA,EAAAA,GACA87B,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,QAEMz/B,GAAID,EAAAA,EAAAA,sBAAqB,KACzBqqB,GChBAjB,GAAeC,EAAAA,EAAAA,oBAEd3N,EAAAA,EAAAA,UAAQ,WACX,OAAOikB,EAAAA,EAAAA,QAAO/wB,GAAwCJ,KAAImb,SAAAA,GACtD,IAAMiW,EAAgB3B,GAAoCtU,GAC1D,GAAsB,eAAlBiW,EAIJ,MAAO,CAAC1kB,MAAOyO,EAAMW,KADNlB,EAAawW,GAAehW,QAE/C,IACJ,GAAG,CAACR,KDMEM,GAASmW,EAAAA,GAAAA,UAAS,CACpBlW,KAAM,GAAM,OAAHhmB,EAAG,WACZ+7B,QAAAA,IAEEthB,GAAW1C,EAAAA,EAAAA,UAAQ,kBAAMgO,EAAOlb,KAAIsxB,SAAAA,UAAKA,EAAEnW,UAAO,CAACD,IAElDmU,GAAqBkC,EAAAA,GAAAA,eAAc,CACtCpW,KAAM,GAAM,OAAHhmB,EAAG,UACZ+7B,QAAAA,IAFG7B,MAKAA,GAAyBkC,EAAAA,GAAAA,eAAc,CAC1CpW,KAAM,GAAM,OAAHhmB,EAAG,mBACZ+7B,QAAAA,IAFG7B,MAKAA,GAA6BkC,EAAAA,GAAAA,eAAc,CAC9CpW,KAAM,GAAM,OAAHhmB,EAAG,uBACZ+7B,QAAAA,IAFG7B,MAKP,OACI,SAAC/yB,EAAAA,MAAAA,QAAa,CAACD,UAAU,0CACrB,UAAC8hB,GAAWC,KAAI,YACZ,UAACD,GAAWM,OAAM,YACd,UAAC5rB,MAAAA,CAAIwJ,UAAU,+BACX,SAACm1B,EAAAA,WAAUA,GAAAA,CACP7T,MAAOlsB,EAAEmG,OAAOxC,QAChB8sB,YAAazwB,EAAEmG,OAAOxC,QACtB6sB,gBAAgB,UACZwP,KAER,SAACC,EAAAA,YAAWA,GAAAA,GAAAA,CACR/T,MAAOlsB,EAAEwqB,YAAY0V,oBACrBzP,YAAazwB,EAAEwqB,YAAY0V,oBAC3BC,eAAe,YACXtW,GAAAA,CACJ+E,SAAUhmB,SAAAA,UAAKihB,EAAe+E,SAASnZ,OAAO7M,EAAEpG,OAAOyY,gBAG/D,SAAC8V,EAAAA,gBAAeA,CACZ7E,MAAOlsB,EAAEwqB,YAAY4V,mBACrBpU,QAASlC,EAAmB7O,MAC5B8Q,gBAAiBjC,EAAmB8E,SACpCzC,eAAe,wBACfkU,mBAAmB,aAG3B,SAAC1R,GAAeA,CACZvE,QAASA,EACTjM,SAAUA,EACVyQ,SAAUsN,SAAAA,GACNsD,EAAS,GAAM,OAAH97B,EAAG,WAAUw4B,EAAO3tB,KAAI2oB,SAAAA,OAGzB9M,QAH+B,CACtCV,KAAMwN,EACNxzB,GAAI2lB,OACJ1lB,cAAOymB,EAAAA,EAAQlV,MAAKga,SAAAA,UAAKA,EAAEjU,QAAUic,YAA9B9M,IAAAA,OAAAA,EAAAA,EAAkCC,SAEjD,EACAwE,SAAUnC,GAAWO,aAKzC,qcErEO,IAAMqT,GAA+D,gBCZlEnX,EDaNzlB,EAAAA,EAAAA,GACA+7B,EAAAA,EAAAA,QACAD,EAAAA,EAAAA,SAEMx/B,GAAID,EAAAA,EAAAA,sBAAqB,KACzBqqB,GClBAjB,GAAeC,EAAAA,EAAAA,oBAEd3N,EAAAA,EAAAA,UAAQ,WACX,OAAOnN,GAAwBC,KAAImb,SAAAA,OACZP,EAEnB,MAAO,CAAClO,MAAOyO,EAAMW,MAFkD,QAApDlB,EAAAA,EAAawU,GAAiCjU,WAA9CP,IAAAA,OAAAA,EAAAA,EAAsDQ,UAAW,GAGxF,GACJ,GAAG,CAACR,KDWEM,GAASmW,EAAAA,GAAAA,UAAS,CACpBlW,KAAM,GAAM,OAAHhmB,EAAG,WACZ+7B,QAAAA,IAEEthB,GAAW1C,EAAAA,EAAAA,UAAQ,kBAAMgO,EAAOlb,KAAIsxB,SAAAA,UAAKA,EAAEnW,UAAO,CAACD,IAElDmU,GAAqBkC,EAAAA,GAAAA,eAAc,CACtCpW,KAAM,GAAM,OAAHhmB,EAAG,UACZ+7B,QAAAA,IAFG7B,MAKP,OACI,SAAC/yB,EAAAA,MAAAA,QAAa,CAACD,UAAU,0CACrB,UAAC8hB,GAAWC,KAAI,YACZ,SAACD,GAAWM,OAAM,WACd,SAAC+S,EAAAA,WAAUA,GAAAA,CACP7T,MAAOlsB,EAAEmG,OAAOxC,QAChB8sB,YAAazwB,EAAEmG,OAAOxC,QACtB6sB,gBAAgB,QACZwP,OAGZ,SAACrR,GAAeA,CACZvE,QAASA,EACTjM,SAAUA,EACVyQ,SAAUsN,SAAAA,GACNsD,EAAS,GAAM,OAAH97B,EAAG,WAAUw4B,EAAO3tB,KAAI2oB,SAAAA,OAGzB9M,QAH+B,CACtCV,KAAMwN,EACNxzB,GAAI2lB,OACJ1lB,cAAOymB,EAAAA,EAAQlV,MAAKga,SAAAA,UAAKA,EAAEjU,QAAUic,YAA9B9M,IAAAA,OAAAA,EAAAA,EAAkCC,SAEjD,EACAwE,SAAUnC,GAAWO,aAKzC,84BE7CO,IAAMsT,GAA6D,gBCXhEpX,EAEAqX,EDUN98B,EAAAA,EAAAA,GACA87B,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,QAEMz/B,GAAID,EAAAA,EAAAA,sBAAqB,KACzBqqB,GCjBAjB,GAAeC,EAAAA,EAAAA,mBAEfoX,GAAqBjY,EAAAA,EAAAA,cAAY,SAACkY,GACpC,MAAO,CACH/W,KAAMP,EAAauX,UAAU/W,QAC7BgX,SAAUxX,EAAayX,UAAUjX,QACjCuL,OAAQ/L,EAAa+L,OAAOvL,QAC5BkX,cAAe1X,EAAa2X,eAAenX,QAC3CoX,aAAc5X,EAAa6X,eAAerX,QAC1CsX,WAAY9X,EAAa+X,YAAYvX,SACvC8W,EACN,GAAG,CACCtX,EAAa6X,eAAerX,QAC5BR,EAAayX,UAAUjX,QACvBR,EAAa+X,YAAYvX,QACzBR,EAAa+L,OAAOvL,QACpBR,EAAa2X,eAAenX,QAC5BR,EAAauX,UAAU/W,WAGpBlO,EAAAA,EAAAA,UAAQ,WACX,OAAOhN,GAA6BF,KAAI0M,SAAAA,GAGpC,MAAO,CAACA,MAAOA,EAAOoP,KAFTmW,EAAmBvlB,GAGpC,GACJ,GAAG,CAACulB,KDRE/W,GAASmW,EAAAA,GAAAA,UAAS,CACpBlW,KAAM,GAAM,OAAHhmB,EAAG,WACZ+7B,QAAAA,IAEEthB,GAAW1C,EAAAA,EAAAA,UAAQ,kBAAMgO,EAAOlb,KAAIsxB,SAAAA,UAAKA,EAAEnW,UAAO,CAACD,IAElDmU,GAAqBkC,EAAAA,GAAAA,eAAc,CACtCpW,KAAM,GAAM,OAAHhmB,EAAG,UACZ+7B,QAAAA,IAFG7B,MAKAA,GAAyBkC,EAAAA,GAAAA,eAAc,CAC1CpW,KAAM,GAAM,OAAHhmB,EAAG,mBACZ+7B,QAAAA,IAFG7B,MAKAA,GAAyBkC,EAAAA,GAAAA,eAAc,CAC1CpW,KAAM,GAAM,OAAHhmB,EAAG,mBACZ+7B,QAAAA,IAFG7B,MAKAA,GAA6BkC,EAAAA,GAAAA,eAAc,CAC9CpW,KAAM,GAAM,OAAHhmB,EAAG,uBACZ+7B,QAAAA,IAFG7B,MAKP,OACI,SAAC/yB,EAAAA,MAAAA,QAAa,CAACD,UAAU,0CACrB,UAAC8hB,GAAWC,KAAI,YACZ,UAACD,GAAWM,OAAM,YACd,UAAC5rB,MAAAA,CAAIwJ,UAAU,+BACX,SAACm1B,EAAAA,WAAUA,GAAAA,CACP7T,MAAOlsB,EAAEmG,OAAOxC,QAChB8sB,YAAazwB,EAAEmG,OAAOxC,QACtB6sB,gBAAgB,UACZwP,KAER,SAACC,EAAAA,YAAWA,GAAAA,GAAAA,CACR/T,MAAOlsB,EAAEwqB,YAAY0V,oBACrBzP,YAAazwB,EAAEwqB,YAAY0V,oBAC3BC,eAAe,YACXtW,GAAAA,CACJ+E,SAAUhmB,SAAAA,UAAKihB,EAAe+E,SAASnZ,OAAO7M,EAAEpG,OAAOyY,gBAG/D,UAAC7Z,MAAAA,CAAIwJ,UAAU,6BACX,SAACmmB,EAAAA,gBAAeA,CACZ7E,MAAOlsB,EAAEwqB,YAAY2W,uBACrBnV,QAAS/B,EAAehP,MACxB8Q,gBAAiB9B,EAAe2E,SAChCzC,eAAe,2BAEnB,SAAC4E,EAAAA,gBAAeA,CACZ7E,MAAOlsB,EAAEwqB,YAAY4V,mBACrBpU,QAASlC,EAAmB7O,MAC5B8Q,gBAAiBjC,EAAmB8E,SACpCzC,eAAe,iCAI3B,SAACwC,GAAeA,CACZvE,QAASA,EACTjM,SAAUA,EACVyQ,SAAUsN,SAAAA,GACNsD,EAAS,GAAM,OAAH97B,EAAG,WAAUw4B,EAAO3tB,KAAI2oB,SAAAA,OAGzB9M,QAH+B,CACtCV,KAAMwN,EACNxzB,GAAI2lB,OACJ1lB,cAAOymB,EAAAA,EAAQlV,MAAKga,SAAAA,UAAKA,EAAEjU,QAAUic,YAA9B9M,IAAAA,OAAAA,EAAAA,EAAkCC,SAEjD,EACAwE,SAAUnC,GAAWO,aAKzC,EErFamU,GAA8C,gBACvDC,EAAAA,EAAAA,0BACAC,EAAAA,EAAAA,eACAC,EAAAA,EAAAA,kBAEM,GAAMxhC,EAAAA,EAAAA,wBAALC,EACDwhC,GAAcjZ,EAAAA,EAAAA,cAChB,SAAC9V,OAEO4uB,EAEEI,IAFgCH,QAAlCD,EAAAA,EAA0Bzb,QAAQ0b,UAAlCD,IAAAA,EAAAA,EAAqD,IAGV,UAAd5uB,EAAwB,GAAK,IAC1D4uB,EAA0B/qB,OAExBorB,EACFL,GAC+B,IAA3BI,EACMJ,EAA0B/qB,OAAS,EACnCmrB,GAGdF,EAAkBG,EACtB,GACA,CAACJ,EAAgBD,EAA2BE,IAGhD,OACI,UAACngC,MAAAA,CAAIwJ,UAAU,+BACX,SAAC+2B,EAAAA,WAAUA,CACP52B,KAAK,KACL62B,QAAS5hC,EAAEmG,OAAO07B,WAClBz9B,SAASsQ,EAAAA,GAAAA,SAAQ8sB,EAAa,kBAE9B,SAACM,EAAAA,gBAAeA,CAAAA,MAEpB,SAACH,EAAAA,WAAUA,CACP52B,KAAK,KACL62B,QAAS5hC,EAAEmG,OAAO47B,OAClB39B,SAASsQ,EAAAA,GAAAA,SAAQ8sB,EAAa,mBAE9B,SAACQ,EAAAA,iBAAgBA,CAAAA,OAIjC,84BChBO,SAASC,GAAoBnzB,GAChC,IAgGM9O,EAhGAmrB,EAAaxb,GAAiBb,GAC9BozB,GA+FAliC,GAAID,EAAAA,EAAAA,sBAAqB,MAExBwoB,EAAAA,EAAAA,cAAY,SAACzZ,GAChB,MAAO,CACHpL,GAAIoL,EAAOpL,GACX8B,KAAMsJ,EAAOtJ,KACb7B,MAAOmL,EAAOnL,OAAS3D,EAAEspB,wBAAwBM,cACjDH,OAAQ3a,EAAO2a,OACfK,mBAAoBhb,EAAOgb,mBAC3BD,eAAgB/a,EAAO+a,eAE/B,GAAG,CAAC7pB,EAAEwqB,eAzGA2X,EA4GV,WACI,IAAMniC,GAAID,EAAAA,EAAAA,sBAAqB,KAE/B,OAAOwoB,EAAAA,EAAAA,cAAY,SAACzZ,GAChB,MAAO,CACHpL,GAAIoL,EAAOpL,GACX8B,KAAMsJ,EAAOtJ,KACb7B,MAAOmL,EAAOnL,OAAS3D,EAAEspB,wBAAwBE,WACjDC,OAAQ3a,EAAO2a,OAEvB,GAAG,CAACzpB,EAAEwqB,aACV,CAvHkC4X,GACxBC,EAwHV,WACI,IAAMriC,GAAID,EAAAA,EAAAA,sBAAqB,KAE/B,OAAOwoB,EAAAA,EAAAA,cAAY,SAACzZ,GAChB,MAAO,CACHpL,GAAIoL,EAAOpL,GACX8B,KAAMsJ,EAAOtJ,KACb7B,MAAOmL,EAAOnL,OAAS3D,EAAEspB,wBAAwBU,UACjDC,eAAgBnb,EAAOmb,eACvBH,mBAAoBhb,EAAOgb,mBAC3BD,eAAgB/a,EAAO+a,eACvBJ,OAAQ3a,EAAO2a,OAEvB,GAAG,CAACzpB,EAAEwqB,aACV,CAtIiC8X,GAEvB1sB,GAAU6F,EAAAA,EAAAA,UAAQ,kBAAM0P,EAAarc,EAAO8G,QAAU,CAAC9G,KAAS,CAACqc,EAAYrc,IAC7EyzB,GAAkB9mB,EAAAA,EAAAA,UAAQ,WAC5B,OAAO7F,EAAQoiB,QAAyB,SAACmE,EAAK9P,GAC1C,OAAQA,EAAE7mB,MACN,IAAK,cACD22B,EAAI9P,EAAE3oB,IAAMw+B,EAAyB7V,GACrC,MACJ,IAAK,WACD8P,EAAI9P,EAAE3oB,IAAMy+B,EAAsB9V,GAClC,MACJ,IAAK,UACD8P,EAAI9P,EAAE3oB,IAAM2+B,EAAqBhW,GAGzC,OAAO8P,CACX,GAAG,CAAC,EACR,GAAG,CAAC+F,EAA0BC,EAAuBE,EAAsBzsB,IAErE4sB,GAAOC,EAAAA,GAAAA,SAA0B,CACnCC,cAAeH,IAGbtX,GAAS1C,EAAAA,EAAAA,cAAY,SAACoa,UACxBH,EAAKI,cAAaC,SAAAA,OAwCLC,EAAT,SACIzW,EACA0W,GAEA,IAAMC,EAAiBptB,EAAQV,MAC3B,mBAAExR,EAAAA,KAAe2oB,EAAE3oB,OAEvByG,EAAAA,EAAAA,eAAc64B,GACd,IAAMvZ,EAAS4C,EAAE5C,OAAOgC,QAAO,gBAAE/B,EAAAA,EAAAA,YAC7BqZ,EAAmB3W,MAAK6W,SAAAA,UAAQA,IAASvZ,QAE7C,OAAO,SACAsZ,EACA3W,GAAAA,CACH5C,OAAAA,GAER,EAvDMyZ,EAAgB9e,OAAO8X,OAAO2G,GAAMt0B,KAAI8d,SAAAA,GAC1C,OAAQA,EAAE7mB,MACN,IAAK,UACD,OAAOs9B,EACHzW,EACA5d,IAER,IAAK,WACD,OAAOq0B,EACHzW,EACA/d,IAER,IAAK,cACD,OAAOw0B,EACHzW,EACA1d,IAER,QACI,MAAM,IAAIilB,MACN,uCAAkE,OAA3BiG,KAAKC,UAAUzN,EAAG,KAAM,KAG/E,IAEIlB,EACAwX,EAAW,SACJ7zB,GAAAA,CACH8G,QAASA,EAAQrH,KAAIsd,SAAAA,GAIjB,OAHsBqX,EAAchuB,MAChC,mBAAExR,EAAAA,KAAemoB,EAAWnoB,OAERmoB,CAC5B,SAGJ1hB,EAAAA,EAAAA,eAAc+4B,EAAc,IAC5BP,EAAWO,EAAc,IAoBjC,MACJ,CAACV,EAAMrX,EAAYrc,EAAQ8G,IAG3B,OAAO6F,EAAAA,EAAAA,UAAQ,iBAAO,CAClB+mB,KAAAA,EACAvX,OAAAA,KACA,CAACuX,EAAMvX,GACf,w4DCpHO,IAAMkY,GAAwC,gBAAEr0B,EAAAA,EAAAA,OAAQqK,EAAAA,EAAAA,aAAc4P,EAAAA,EAAAA,QAAYmC,EAAAA,GAAAA,EAAAA,CAAlCpc,SAAQqK,eAAc4P,YACnE/oB,GAAID,EAAAA,EAAAA,sBAAqB,KAQ3BkiC,EAAAA,GAAoBnzB,GAAAA,EAApBmzB,EANAO,KACI/C,EAAAA,EAAAA,QACAD,EAAAA,EAAAA,SACA4D,EAAAA,EAAAA,UAEJnY,EACAgX,EADAhX,OAGEiR,EAASkH,IACT/B,GAA4B5lB,EAAAA,EAAAA,UAAQ,kBAAM2I,OAAO/E,KAAK6c,KAAS,CAACA,IAC1B7Z,EAAAA,IAAAA,EAAAA,EAAAA,WAAS,kBAAM1S,GAAiBb,IAAWuyB,EAA0BtyB,SAASD,EAAOwyB,gBAC3HxyB,EAAOwyB,eACPD,EAA0B,SAFzBC,EAAqCjf,EAAAA,GAArBkf,EAAqBlf,EAAAA,GAItCghB,GAAe5nB,EAAAA,EAAAA,UAAQ,kBAAMygB,EAAOoF,KAAiB,CAACA,EAAgBpF,IAEtE0G,GAAennB,EAAAA,EAAAA,UAAQ,kBAAMwP,GAAO/W,SAAAA,GACtCiF,EAAajF,GACb6U,GACJ,MAAI,CAACA,EAASkC,EAAQ9R,IAEhBmqB,EAAc,CAChBC,SAAUvjC,EAAEspB,wBAAwBE,WACpCga,QAASxjC,EAAEspB,wBAAwBU,UACnCyZ,YAAazjC,EAAEspB,wBAAwBM,cACvC8Z,qBAAsB1jC,EAAEspB,wBAAwBC,gBAChDoa,SAAU,IAGR9iC,GAAU4a,EAAAA,EAAAA,UAAQ,WACpB,OAAQ4nB,aAAAA,EAAAA,EAAc79B,MAClB,IAAK,UACD,OAAO,SAAC+6B,GAAwBA,CAAC78B,GAAI49B,EAAgB7B,QAASA,EAASD,SAAUA,IACrF,IAAK,WACD,OAAO,SAACc,GAAyBA,CAAC58B,GAAI49B,EAAgB7B,QAASA,EAASD,SAAUA,IACtF,IAAK,cACD,OAAO,SAACD,GAA4BA,CAAC77B,GAAI49B,EAAgB7B,QAASA,EAASD,SAAUA,IAEjG,GAAG,CAAC6D,EAAc/B,EAAgB7B,EAASD,IAE3C,OACI,UAAC30B,EAAAA,MAAKA,0UAAAA,CAAAA,CAAAA,EAAKqgB,GAAAA,CAAWnC,QAASA,EAASne,UAAU,uBAC9C,UAACC,EAAAA,MAAAA,OAAY,CAAC+4B,iBAAiB,4DAC3B,SAAC3hC,OAAAA,UAAMqhC,EAAYD,EAAa79B,SAC/B67B,aAAAA,EAAAA,EAA2B/qB,QAAS,IACjC,SAAC8qB,GAAgBA,CACbC,0BAA2BA,EAC3BC,eAAgBA,EAChBC,kBAAmBA,OAI9B1gC,GACD,UAACgK,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAAS,kBAAM2kB,KAAW4B,QAAQ,mBACrC3qB,EAAEmG,OAAOovB,YAEd,SAAC7K,GAAAA,OAAMA,CAACtmB,QAASw+B,EAAcjY,QAAQ,mBAClC3qB,EAAEmG,OAAOpB,WAGjBiyB,KAKb,ECvFO,SAAS6M,KACZ,ICCM,EDDAxE,GCCA,GAAMt/B,EAAAA,EAAAA,wBAALC,GACAyb,EAAAA,EAAAA,UAA6B,iBAAM,CACtC,CACIqoB,UAAU,EACV50B,WAAW,EACXwa,KAAM1pB,EAAE+jC,+BAA+BC,iBACvCpuB,QAAS,IAEb,CACIkuB,UAAU,EACV50B,WAAW,EACXwa,KAAM1pB,EAAE+jC,+BAA+BE,sBACvCruB,QAAS,CACL,CACIlS,GAAI,IACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BG,oBACxCvyB,EAAG,EACHE,EAAG,EACHD,MAAO,GACPE,OAAQ,GACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,aAEd,CACI5gC,GAAI,IACJ4gC,SAAU,kBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,0BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,4BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,0BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,6BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,yBAEd,CACI5gC,GAAI,KACJ4gC,SAAU,0BAEd,CACI5gC,GAAI,KACJ4gC,SAAU,6BAEd,CACI5gC,GAAI,KACJ4gC,SAAU,qBAEd,CACI5gC,GAAI,KACJ4gC,SAAU,kCAEd,CACI5gC,GAAI,KACJ4gC,SAAU,4BAEd,CACI5gC,GAAI,KACJ4gC,SAAU,6BAEd,CACI5gC,GAAI,KACJ4gC,SAAU,6BAEd,CACI5gC,GAAI,KACJ4gC,SAAU,kBAEd,CACI5gC,GAAI,KACJ4gC,SAAU,cAGlBC,SAAU,GACVC,MAAO,IACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,UAKrBuoB,YAAY,EACZC,YAAa,CACTC,MAAM,EACNC,OAAO,EACPC,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,MAKhC,CACIpB,UAAU,EACV50B,WAAW,EACXwa,KAAM1pB,EAAE+jC,+BAA+BoB,mCACvCvvB,QAAS,CACL,CACIlS,GAAI,IACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BqB,iCACxCzzB,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,eACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,QAEd,CACI5gC,GAAI,IACJ4gC,SAAU,gCAEd,CACI5gC,GAAI,IACJ4gC,SAAU,uCAEd,CACI5gC,GAAI,IACJ4gC,SAAU,oBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,oBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,iBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,8BAGlBe,YAAa,GACbb,MAAO,EACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBuoB,YAAY,EACZC,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,IAGxB,CACI1/B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BuB,wCACxC3zB,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,mBAGlBC,SAAU,GACVC,MAAO,EACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIn/B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BwB,4CACxC5zB,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,kBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,WAGlBC,SAAU,GACVC,MAAO,EACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIn/B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+ByB,uCACxC7zB,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,8BAGlBC,SAAU,GACVC,MAAO,EACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIn/B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+B0B,qCACxC9zB,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,GACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,aAEd,CACI5gC,GAAI,IACJ4gC,SAAU,6BAGlBC,SAAU,GACVC,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIn/B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+B2B,gDACxC/zB,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,mBACA,qBAGRppB,MAAO,mBACP0qB,SAAU,iCACVC,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIvgC,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BiC,sDACxCr0B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,+BAGlBC,SAAU,GACVC,MAAO,EACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIn/B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+BkC,oCACxCt0B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,sCACA,oDAGRppB,MAAO,sCACP0qB,SAAU,+DACVC,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIvgC,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+BmC,iCACxCv0B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,KACJ0gC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,0BACA,8CAGRppB,MAAO,0BACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBH,SAAU,yDACVI,eAAe,GAEnB,CACIvgC,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BoC,sCACxCx0B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,KACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,mBAGlBC,SAAU,GACVC,MAAO,EACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,UAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIn/B,KAAM,UACN7B,MAAO3D,EAAE+jC,+BAA+BqC,8CACxCz0B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,KACJ0gC,aAAc,CACV5+B,KAAM,UACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,cAGlBE,MAAO,IACP6B,SAAU,IACVC,UAAW,MACXC,UAAW,IACXC,aAAc,GACdC,iBAAkB,KAClBlC,SAAU,QAM9B,CACIT,UAAU,EACV50B,WAAW,EACXwa,KAAM1pB,EAAE+jC,+BAA+B2C,2BACvC9wB,QAAS,CACL,CACIlS,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+B4C,4BACxCh1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,iCAEJgB,YAAa,IAEjBpqB,MAAO,gCACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+B6C,qCACxCj1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,yBAEJgB,YAAa,IAEjBpqB,MAAO,wBACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+B8C,gCACxCl1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,gCAEJgB,YAAa,IAEjBpqB,MAAO,+BACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+B+C,gCACxCn1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,sCAEJgB,YAAa,IAEjBpqB,MAAO,qCACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BgD,sCACxCp1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,wCAGlBC,SAAU,GACVC,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIjhC,GAAI,IACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BiD,8CACxCr1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,iCAGlBC,SAAU,GACVC,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIjhC,GAAI,IACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BkD,iCACxCt1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,eACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,QAEd,CACI5gC,GAAI,IACJ4gC,SAAU,gCAEd,CACI5gC,GAAI,IACJ4gC,SAAU,wBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,yBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,iCAEd,CACI5gC,GAAI,IACJ4gC,SAAU,yBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,uCAEd,CACI5gC,GAAI,IACJ4gC,SAAU,sCAEd,CACI5gC,GAAI,IACJ4gC,SAAU,uCAGlBe,YAAa,GACbb,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIn/B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+BmD,+CACxCv1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,sCAEJgB,YAAa,IAEjBpqB,MAAO,qCACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIvgC,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+BoD,2CACxCx1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,uCAEJgB,YAAa,IAEjBpqB,MAAO,sCACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIvgC,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BqD,iDACxCz1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,KACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,iCAGlBC,SAAU,GACVC,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,UAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIn/B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BsD,iCACxC11B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,KACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,2BAGlBC,SAAU,GACVC,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,KAIxB,CACIb,UAAU,EACV50B,WAAW,EACXwa,KAAM1pB,EAAE+jC,+BAA+BuD,6BACvC1xB,QAAS,CACL,CACIlS,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+BwD,sCACxC51B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,mBACA,oBAEJgB,YAAa,IAEjBpqB,MAAO,mBACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBH,SAAU,iCACVI,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+ByD,2BACxC71B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,mBAEJgB,YAAa,IAEjBpqB,MAAO,kBACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+B0D,uCACxC91B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,wBAEJgB,YAAa,IAEjBpqB,MAAO,uBACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,EAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+B2D,8BACxC/1B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,6CAEJgB,YAAa,IAEjBpqB,MAAO,yDACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+B4D,mCACxCh2B,EAAG,EACHE,EAAG,EACHD,MAAO,GACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,eACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,QAEd,CACI5gC,GAAI,IACJ4gC,SAAU,6BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,iCAEd,CACI5gC,GAAI,IACJ4gC,SAAU,2BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,wBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,sCAEd,CACI5gC,GAAI,IACJ4gC,SAAU,mDAEd,CACI5gC,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,oBAEd,CACI5gC,GAAI,KACJ4gC,SAAU,oBAEd,CACI5gC,GAAI,KACJ4gC,SAAU,qCAEd,CACI5gC,GAAI,KACJ4gC,SAAU,4BAEd,CACI5gC,GAAI,KACJ4gC,SAAU,yBAEd,CACI5gC,GAAI,KACJ4gC,SAAU,8BAEd,CACI5gC,GAAI,KACJ4gC,SAAU,kCAEd,CACI5gC,GAAI,KACJ4gC,SAAU,WAGlBe,YAAa,GACbb,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBuoB,YAAY,EACZC,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,IAGxB,CACIxhC,GAAI,IACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+B6D,gCACxCj2B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,4BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,kBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,kBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,6BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,8BAGlBC,SAAU,GACVC,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBuoB,YAAY,EACZC,YAAa,CACTC,MAAM,GAEVL,MAAO,CACHS,SAAS,EACTC,gBAAgB,IAGxB,CACI1/B,KAAM,QACN7B,MAAO3D,EAAE+jC,+BAA+B8D,wCACxCl2B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,UAEJgB,YAAa,IAEjBpqB,MAAO,uBACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIvgC,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+B+D,wBACxCn2B,EAAG,GACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,8BAEJgB,YAAa,IAEjBpqB,MAAO,2CACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIvgC,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BgE,yCACxCp2B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,IACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,kBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,WAGlBC,SAAU,GACVC,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBuoB,YAAY,EACZC,YAAa,CACTI,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,IAGxB,CACI1/B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BiE,wCACxCr2B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,KACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,mBAGlBC,SAAU,GACVC,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTG,iBAAiB,GAErBJ,YAAY,EACZH,MAAO,CACHS,SAAS,EACTC,gBAAgB,IAGxB,CACI1/B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BkE,yCACxCt2B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,KACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,oBAGlBC,SAAU,GACVC,MAAO,EACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,GAEXH,YAAY,EACZH,MAAO,CACHS,SAAS,EACTC,gBAAgB,IAGxB,CACI1/B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+BmE,iCACxCv2B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfzgC,GAAI,KACJ0gC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,8BAGlBC,SAAU,GACVC,MAAO,EACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBuoB,YAAY,EACZC,YAAa,CACTC,MAAM,GAEVL,MAAO,CACHS,SAAS,EACTC,gBAAgB,MAKhC,CACIpB,UAAU,EACV50B,WAAW,EACXwa,KAAM1pB,EAAE+jC,+BAA+BoE,8BACvCvyB,QAAS,CACL,CACIlS,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+BqE,+BACxCz2B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,mBAEJgB,YAAa,IAEjBpqB,MAAO,+BACP2qB,aAAc,IACdC,iBAAkB,GAClBC,eAAgB,GAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+BsE,2CACxC12B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,+BAEJgB,YAAa,IAEjBpqB,MAAO,8BACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+BuE,+BACxC32B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,qCAEJgB,YAAa,IAEjBpqB,MAAO,iDACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+BwE,mCACxC52B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,qBAEJgB,YAAa,IAEjBpqB,MAAO,oBACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,IACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+ByE,+BACxC72B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,eACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,QAEd,CACI5gC,GAAI,IACJ4gC,SAAU,qBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,+BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,yBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,sCAEd,CACI5gC,GAAI,IACJ4gC,SAAU,oCAEd,CACI5gC,GAAI,IACJ4gC,SAAU,oBAGlBe,YAAa,GACbb,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIjhC,GAAI,IACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+B0E,2CACxC92B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,qCAGlBC,SAAU,GACVC,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIjhC,GAAI,IACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+B2E,qDACxC/2B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,uCAGlBC,SAAU,GACVC,MAAO,GACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,GAEhB,CACIjhC,GAAI,IACJ8B,KAAM,UACN7B,MAAO3D,EAAE+jC,+BAA+B4E,yCACxCh3B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,UACN6+B,IAAK,CACD3gC,GAAI,IACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,cAGlBE,MAAO,IACP6B,SAAU,IACVC,UAAW,MACXC,UAAW,IACXC,aAAc,GACdC,iBAAkB,KAClBlC,SAAU,MAItB,CACI7gC,GAAI,IACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+B6E,8CACxCj3B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,8BAEJgB,YAAa,IAEjBpqB,MAAO,6BACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,KACJ8B,KAAM,SACN7B,MAAO3D,EAAE+jC,+BAA+B8E,6CACxCl3B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,cACN6+B,IAAK,CACD,6BAEJgB,YAAa,IAEjBpqB,MAAO,4BACP2qB,aAAc,IACdC,iBAAkB,IAClBC,eAAgB,IAChBC,eAAe,GAEnB,CACIriC,GAAI,KACJ8B,KAAM,OACN7B,MAAO3D,EAAE+jC,+BAA+B+E,oCACxCn3B,EAAG,EACHE,EAAG,EACHD,MAAO,EACPE,OAAQ,EACRqyB,eAAe,EACfC,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAI,KACJub,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,mBAEd,CACI5gC,GAAI,IACJ4gC,SAAU,2BAGlBC,SAAU,GACVC,MAAO,EACPC,MAAO,CACH,CACIC,GAAI,IACJtoB,IAAK,WAKrBwoB,YAAa,CACTE,OAAO,EACPD,MAAM,EACNE,iBAAiB,EACjBC,WAAW,GAEfR,MAAO,CACHS,SAAS,EACTC,gBAAgB,GAEpBP,YAAY,QAIzB,CAAC3kC,EAAE+jC,kCD3wDA3Z,GAAU3O,EAAAA,EAAAA,UAAQ,WACpB,OAAO4jB,EAAQ9wB,KAAI,SAACw6B,EAAUC,SAAW,CACrC/tB,MAAO+tB,EAAM3pC,WACbwB,QAASkoC,EAASrf,UACf,EACX,GAAG,CAAC2V,IAEJ,OAAO5jB,EAAAA,EAAAA,UAAQ,iBAAO,CAClB2O,QAAAA,EACAiV,QAAAA,KACA,CAACA,EAASjV,GAClB,+uGEHO,IAAM6e,GAAoD,gBAC7DlgB,EAAAA,EAAAA,QACAmgB,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,WACGtuB,EAAAA,GAAAA,EAAAA,CAHHkO,UACAmgB,YACAC,eAGM,GAAMppC,EAAAA,EAAAA,wBAALC,EACD,GAAiBopC,EAAAA,GAAAA,2BAAhB9W,aAC2BjQ,EAAAA,IAAAA,EAAAA,EAAAA,WAAS,MAApCgnB,EAA2BhnB,EAAAA,GAAhBinB,EAAgBjnB,EAAAA,GACwBA,EAAAA,IAAAA,EAAAA,EAAAA,eAA6B3P,GAAAA,GAAhF62B,EAAmDlnB,EAAAA,GAA5BmnB,EAA4BnnB,EAAAA,GAE/BwhB,EAAAA,KAApBzZ,EAAoByZ,EAApBzZ,QAASiV,EAAWwE,EAAXxE,QAEVoK,GAAcF,EAEdG,GAAqBnhB,EAAAA,EAAAA,cAAY,SAACtN,GACpCuuB,EAAyBvuB,EAC7B,GAAG,IAEG0uB,GAAwBphB,EAAAA,EAAAA,aAAY,mBAI5BqhB,qDAHVN,GAAa,GACbH,EAAWjuB,2BAEW,gCAAMoX,EAAa+M,EAAQ5pB,OAAO8zB,oBAA9CK,EAAY,SAClBV,EAAUU,GACVC,wBAEKjhC,EAAAA,OACL0gC,GAAa,uBAEjBH,EAAWhuB,kBACf,IAAG,CAAC0uB,EAAwBxK,EAAS/M,EAAc4W,EAAWC,EAAYI,IAE1E,OACI,UAAC1+B,EAAAA,MAAKA,0UAAAA,CAAAA,CAAAA,EACEgQ,GAAAA,CACJkO,QAAS8gB,aAET,SAACh/B,EAAAA,MAAAA,OAAY,UACR7K,EAAEwqB,YAAYsf,yBAEnB,UAACj/B,EAAAA,MAAAA,QAAa,CAACD,UAAU,gCAEjBy+B,IACI,SAACU,EAAAA,YAAWA,CACRpf,QAAQ,QACRhnB,MAAO3D,EAAEwqB,YAAYwf,qBACrB3f,KAAMrqB,EAAEwqB,YAAYyf,0BAIhC,SAACC,EAAAA,YAAWA,CACRhe,MAAOlsB,EAAEwqB,YAAY2f,qBACrB1Z,YAAazwB,EAAEwqB,YAAY4f,mCAC3BhgB,QAASA,EACTnP,MAAOsuB,EACP3a,SAAU8a,QAGlB,UAAC7+B,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAAS,kBAAMylC,KAA0BQ,SAAUlB,EAAWluB,MAAO0P,QAAQ,mBAChF3qB,EAAEmG,OAAOovB,YAEd,SAAC7K,GAAAA,OAAMA,CACHtmB,QAASulC,EACTW,MACIb,EACM,WACAN,EAAWluB,MACP,eACAvI,EAEdiY,QAAQ,mBAEP3qB,EAAEmG,OAAOokC,iBAK9B,s2GCpBA,IAAMC,IAAoBC,EAAAA,GAAAA,eAAsC,CAC5DC,kBAAch4B,EACdi4B,gBAAiBC,GAAAA,KACjBzxB,aAAcyxB,GAAAA,KACd5hB,UAAW4hB,GAAAA,KACXC,iBAAkBD,GAAAA,KAClBE,wBAAyBF,GAAAA,KACzBG,4BAA6BH,GAAAA,KAC7BI,aAAc,CAACtnC,GAAI,IACnBunC,gBAAiBL,GAAAA,KACjBM,KAAM,aACNC,QAASP,GAAAA,KACTQ,SAAS,EACTC,QAAS,GACTC,WAAW,EACXC,aAAcX,GAAAA,KACdY,iBAAa94B,EACb+4B,kBAAkB,IAGtBjB,GAAkBkB,YAAc,oBAEzB,IAAMC,GAET,gBAAE/hC,EAAAA,EAAAA,SACI,GAAM7J,EAAAA,EAAAA,wBAALC,EAKHyB,GAAAA,EAAAA,EAAAA,iBAAgB,CAAC,SAAU,eAAgB,WAH3C4N,EAGA5N,EAHA4N,OACAC,EAEA7N,EAFA6N,OACA9N,EACAC,EADAD,aAEE,GAAkBoqC,EAAAA,GAAAA,4BAAjBC,cAEqCpqC,GAAAA,EAAAA,EAAAA,mBAArCqqC,EAAqCrqC,EAArCqqC,WAAYC,EAAyBtqC,EAAzBsqC,QAASC,EAAgBvqC,EAAhBuqC,aAC0EhxB,GAAAA,EAAAA,EAAAA,aAAW,GAA1GC,EAA+FD,EAA/FC,MAAyBC,EAAsEF,EAAtEE,QAAiCC,EAAqCH,EAArCG,SAC3D8wB,GAAkBF,IAAYC,EAE9BE,GAAgBzwB,EAAAA,EAAAA,UAAQ,kBAAMqwB,EAAWK,2BAA6BL,EAAWM,mCAAkC,CAACN,KAE1H3hC,EAAAA,EAAAA,eAAckiC,GACd,IAAwCC,EAAAA,IAAAA,EAAAA,GAAAA,mBAAeA,GAAhDttC,EAAiCstC,EAAAA,GAAnBC,EAAmBD,EAAAA,GAClCE,GAAa/wB,EAAAA,EAAAA,UAAQ,eACoBgxB,EACJA,EACAA,EACJA,EAHzBztC,EACFA,EACAA,EACDA,QAJuB,CAC9BoQ,SAA2B,QAAjBpQ,EAAAA,EAAai2B,IAAI,mBAAjBj2B,IAAAA,EAAAA,EAAqD,QAApBytC,EAAAA,OAAOC,QAAQpC,aAAfmC,IAAAA,OAAAA,EAAAA,EAAsBr9B,SACjEC,OAAyB,QAAjBrQ,EAAAA,EAAai2B,IAAI,iBAAjBj2B,IAAAA,EAAAA,EAAmD,QAApBytC,EAAAA,OAAOC,QAAQpC,aAAfmC,IAAAA,OAAAA,EAAAA,EAAsBp9B,OAC7DC,OAAyB,QAAjBtQ,EAAAA,EAAai2B,IAAI,iBAAjBj2B,IAAAA,EAAAA,EAAmD,QAApBytC,EAAAA,OAAOC,QAAQpC,aAAfmC,IAAAA,OAAAA,EAAAA,EAAsBn9B,OAC7DC,KAAmE,UAA3C,QAAjBvQ,EAAAA,EAAai2B,IAAI,eAAjBj2B,IAAAA,EAAAA,EAAgD,QAApBytC,EAAAA,OAAOC,QAAQpC,aAAfmC,IAAAA,OAAAA,EAAAA,EAAsBl9B,MAC7D,GAAI,CAACvQ,IAEC2tC,GAAaC,EAAAA,GAAAA,kBAAiB,WACIvqB,EAAAA,IAAAA,EAAAA,EAAAA,WACpC,kBAAMsqB,EAAWz3B,MAAK23B,SAAAA,UAAKA,EAAEnpC,KAAO8oC,EAAWp9B,kBAD5Cs7B,EAAiCroB,EAAAA,GAAnBsoB,EAAmBtoB,EAAAA,IAGxChiB,EAAAA,EAAAA,YAAU,WACAqqC,IAAiBoC,EAAAA,EAAAA,OAAMpC,EAAahnC,MAAQuoC,EAIlDc,IAHIC,GAIR,GAAG,CAACtC,EAAcuB,EAAgBU,EAAYhC,EAAiBqC,EAAwBD,IAEvF,IAAkC1qB,EAAAA,IAAAA,EAAAA,EAAAA,WAAS,MAApCipB,EAA2BjpB,EAAAA,GAAhBkpB,EAAgBlpB,EAAAA,GACMA,EAAAA,IAAAA,EAAAA,EAAAA,UAAe,CACnD3e,GAAI8oC,EAAWn9B,QAAUg9B,EACzB/8B,OAAQk9B,EAAWl9B,QAAU29B,IACjC,GAHOjC,EAAiC3oB,EAAAA,GAAnB4oB,EAAmB5oB,EAAAA,GAIhBA,EAAAA,IAAAA,EAAAA,EAAAA,UACpB,EAAY9S,MAAQ28B,EAAiB,OAAS,iBAD3ChB,EAAiB7oB,EAAAA,GAAX8oB,EAAW9oB,EAAAA,GAIlB6qB,GAAgB3kB,EAAAA,EAAAA,cAAY,SAAC4kB,IACf,SAAZA,GAAuBjB,IAG3Bf,EAAQgC,EACZ,GAAG,CAAChC,EAASe,IAEPV,GAAc/vB,EAAAA,EAAAA,UAAQ,kBAAM,IAAI2xB,EAAAA,YAAY,eAAc,IAE1DC,GAAc5xB,EAAAA,EAAAA,UAChB,kBAAMivB,EAAeiC,EAAWz3B,MAAK,mBAAExR,EAAAA,MAAegnC,aAAAA,EAAAA,EAAchnC,YAAMgP,IAC1E,CAACg4B,EAAciC,IAEbvB,GAAU3vB,EAAAA,EAAAA,UACZ,mBAAO+E,EAAAA,GAAAA,SAAQkqB,aAAAA,EAAAA,EAAc90B,QAASy3B,aAAAA,EAAAA,EAAaz3B,WAAY80B,aAAAA,EAAAA,EAAchhB,SAAS2jB,aAAAA,EAAAA,EAAa3jB,QACnG,CAACghB,aAAAA,EAAAA,EAAchhB,KAAMghB,aAAAA,EAAAA,EAAc90B,QAASy3B,aAAAA,EAAAA,EAAa3jB,KAAM2jB,aAAAA,EAAAA,EAAaz3B,UAG1Ey1B,GAAU5vB,EAAAA,EAAAA,UACZ,kBACItM,GAAsB,CAClB3N,aAAAA,EACA4N,SAAUs7B,aAAAA,EAAAA,EAAchnC,GACxB2L,OAAQ27B,EAAatnC,GACrB4L,OAAQ07B,EAAa17B,OACrBC,KAAe,SAAT27B,MAEd,CAACR,aAAAA,EAAAA,EAAchnC,GAAIwnC,EAAMF,EAAatnC,GAAIsnC,EAAa17B,OAAQ9N,IAW/D4nC,GAAAA,EAAAA,GAAAA,2BAPAxW,EAOAwW,EAPAxW,uBACAI,EAMAoW,EANApW,sBACAC,EAKAmW,EALAnW,yBACAH,EAIAsW,EAJAtW,yBACAD,GAGAuW,EAHAvW,0BACAE,GAEAqW,EAFArW,6BACAX,GACAgX,EADAhX,YAIJ/xB,EAAAA,EAAAA,YAAU,WAEF2qC,EAAatnC,KAAO2oC,GACpBY,IACCjC,EAAa17B,QAEd27B,GAAgBqC,SAAAA,UAAS,SAClBA,GAAAA,CACHh+B,OAAQ29B,MAGpB,GAAG,CAACjC,EAAatnC,GAAIsnC,EAAa17B,OAAQ29B,EAAYZ,KAEtDhsC,EAAAA,EAAAA,YAAU,WACN,IAAMktC,EAAU,oEACZhC,GAAa,GACb7W,QAAQ8Y,WAAW,CAACpb,KAAcyZ,MAClCN,GAAa,SACjB,qOAJgB,GAKhBgC,GACJ,GAAG,CAAC1B,EAAezZ,KAEnB,IAAMqb,IAAkBC,EAAAA,EAAAA,UAAShD,IAEjCrqC,EAAAA,EAAAA,YAAU,WACN,IAAMstC,EAAehB,EAAWz3B,MAAK23B,SAAAA,OAAcY,SAATZ,EAAEnpC,MAA8B,QAAvB+pC,EAAAA,GAAgBxlC,eAAhBwlC,IAAAA,OAAAA,EAAAA,EAAyB/pC,QACxE8c,EAAAA,GAAAA,SAAQitB,GAAgBxlC,QAAS0lC,IAGrChD,EAAgBgD,EACpB,GAAG,CAACF,GAAiBd,KAGrBiB,EAAAA,EAAAA,kBAAgB,WACR5uC,EAAa+L,OACbwhC,OAAgB75B,GAChB+5B,OAAOC,QAAQmB,aAAazpB,OAAO0pB,YAAY9uC,GAAe,IAEtE,GAAG,CAACssC,EAAWtsC,EAAcutC,IAE7B,IAAyBwB,IAAAA,EAAAA,EAAAA,yBAAlBrqC,GAAkBqqC,GAAlBrqC,GAAWsJ,GAAO+gC,GAAP/gC,KAIlB3M,EAAAA,EAAAA,YAAU,WACO,eAAT6qC,GAAyBuB,OAAO/iB,OAChC+iB,OAAO/iB,KAAO,GAEtB,GAAG,CAACwhB,IAEJ,IAAM8C,IAAWtD,aAAAA,EAAAA,EAAcx7B,WAAYlP,EAAEwqB,YAAYyjB,YAAavD,aAAAA,EAAAA,EAAchhB,OAAQ,IAE5FrpB,EAAAA,EAAAA,YAAU,WACM,cAAR2M,KACAy/B,OAAOlsC,SAASoD,MAAQqqC,GAEhC,GAAG,CAAChhC,GAAKghC,MAGT3tC,EAAAA,EAAAA,YAAU,WACDqqC,GAAiBA,EAAa90B,QAAQU,UAG3CnM,EAAAA,EAAAA,eAAc6gC,EAAa17B,QACvBN,GAAsB07B,KACtB9X,EAAuB8X,EAAcM,EAAatnC,GAAI63B,IACtDvI,EAAsB0X,EAAcM,EAAa17B,OAAQisB,IACzDzI,EAAyB4X,EAAcM,EAAa17B,OAAQisB,KAEpE,GAAG,CACCmP,EACAM,EAAatnC,GACbsnC,EAAa17B,OACbsjB,EACAE,EACAE,EACAuI,MAGJ2S,EAAAA,EAAAA,gBAAc,WACVrb,GAA0B0I,IAC1BxI,GAA6BwI,IAC7BtI,EAAyBsI,GAC7B,IAEA,ICtQM,GACwBx7B,GAAvByqB,GAAarkB,GDqQd6iB,IAAYT,EAAAA,EAAAA,cAAY,SAAC4lB,GAC3BxD,EAAgByD,MAAQC,SAAAA,GACfA,GAGLA,EAAMz4B,QAAQmf,KAAKoZ,EACvB,IACJ,GAAG,IAEGh1B,IAAeoP,EAAAA,EAAAA,cACjB,SAAC+lB,GACG3D,EACIyD,MAAQC,SAAAA,OAGAA,GAFJlkC,EAAAA,EAAAA,eAAckkC,GACd,IAAME,UACFF,EAAAA,EAAMz4B,QAAQ0b,WACVjF,SAAAA,UAAKA,EAAE3oB,KAAO4qC,EAAoB5qC,aADtC2qC,IAAAA,EAAAA,GAEM,GAEW,IAAjBE,IAIJF,EAAMz4B,QAAQ24B,GAAeD,EACjC,IAER,GACA,IAGEE,GAAsB7hC,IAAAA,aACxB,SAACmC,EAAqB2/B,GAClB9D,EAAgByD,MAAQC,SAAAA,OAmBXK,EAAT,YACIvkC,EAAAA,EAAAA,eAAckkC,GACd,IAAMM,EAAgBN,EAAMz4B,QAAQ0b,WAAUjF,SAAAA,UAAKA,EAAE3oB,KAAOoL,EAAOpL,MACnE2qC,EAAMz4B,QAAQg5B,OAAOD,EAAe,EACxC,EAtBKh/B,GAAiBb,GASe,IAA7B2/B,EAAkBn4B,OAuD1B,WAEI,IADAnM,EAAAA,EAAAA,eAAckkC,GACT1+B,GAAiBb,GAAtB,CAGA,IAAM+/B,EAAe//B,EAAO8G,QAAQV,MAAK,gBAAExR,EAAAA,EAAAA,UAAQ+qC,EAAkB,KAAO/qC,KAC5E,GAAKmrC,EAAL,CAGA,IAAMC,EAA+B,SAC9BD,GAAAA,CACHj9B,MAAO9C,EAAO8C,MACdE,OAAQhD,EAAOgD,OACfH,EAAG7C,EAAO6C,EACVE,EAAG/C,EAAO+C,IAEd68B,IACAL,EAAMz4B,QAAQmf,KAAK+Z,EATnB,CAJA,CAcJ,CAxEQC,GACoC,IAA7BN,EAAkBn4B,OACzBo4B,IAwER,YACIvkC,EAAAA,EAAAA,eAAckkC,GACd,IAAMW,EAAeX,EAAMz4B,QAAQV,MAAK,mBAAExR,EAAAA,KAAeoL,EAAOpL,MAC3DsrC,GAAiBr/B,GAAiBq/B,KAIlCP,EAAkB1/B,SAASigC,EAAa1N,kBACzC0N,EAAa1N,eAAiBmN,EAAkB,IAGpDO,EAAap5B,QAAUo5B,EAAap5B,QAAQ6V,QAAO,gBAAE/nB,EAAAA,EAAAA,UAAQ+qC,EAAkB1/B,SAASrL,MAExF+qC,EAAkBhtB,SAAQ/d,SAAAA,GACtB,IAAM6qC,EAAcF,EAAMz4B,QAAQ0b,WAAUjF,SAAAA,UAAKA,EAAE3oB,KAAOA,KAC1D,IAAqB,IAAjB6qC,EAAJ,CAGA,IAAMO,EAAYT,EAAMz4B,QAAQ24B,IAC5B5+B,GAAiBm/B,IAAejgC,GAAcigC,KAGlDE,EAAap5B,QAAQmf,KAAK+Z,GAC1BT,EAAMz4B,QAAQg5B,OAAOL,EAAa,GANlC,CAOJ,IACJ,CA/FQU,GAb6B,IAA7BR,EAAkBn4B,OAwB1B,YACInM,EAAAA,EAAAA,eAAckkC,GACd,IAAMW,EAAeX,EAAMz4B,QAAQV,MAAK,gBAAExR,EAAAA,EAAAA,UAAQ+qC,EAAkB,KAAO/qC,KACtEsrC,IAGLA,EAAar9B,EAAI7C,EAAO6C,EACxBq9B,EAAan9B,EAAI/C,EAAO+C,EACxBm9B,EAAap9B,MAAQ9C,EAAO8C,MAC5Bo9B,EAAal9B,OAAShD,EAAOgD,OAE7B48B,IACJ,CAnCQQ,GACoC,IAA7BT,EAAkBn4B,OACzBo4B,IAmCR,YACIvkC,EAAAA,EAAAA,eAAckkC,GACd,IAAMc,EAAyC,SACxCrgC,GAAAA,CACHpL,IAAI2lB,EAAAA,GAAAA,QACJ7jB,KAAM,WACN87B,eAAgBxyB,EAAOpL,GACvBC,MAAO,GACPiS,QAASy4B,EAAMz4B,QAAQ6V,QAAO,gBAAE/nB,EAAAA,EAAAA,SACnB,aADuB8B,EAAAA,OACRipC,EAAkB1/B,SAASrL,IAAOA,IAAOoL,EAAOpL,SAIxD,GAAI+qC,GAAAA,OAAJ,CAAuB3/B,EAAOpL,KACtC+d,SAAQ/d,SAAAA,GACpB,IAAMirC,EAAgBN,EAAMz4B,QAAQ0b,WAAUjF,SAAAA,UAAKA,EAAE3oB,KAAOA,MACrC,IAAnBirC,GAGJN,EAAMz4B,QAAQg5B,OAAOD,EAAe,EACxC,IAEAN,EAAMz4B,QAAQmf,KAAKoa,EACvB,CAxDQC,EAwGZ,IACJ,GACA,IAEEC,ICzZA,IAAcrsC,EAAAA,EAAAA,yBAAbC,UACuBlD,IAAAA,EAAAA,EAAAA,sBAAqB,KAA5CyqB,GAAuBzqB,GAAvByqB,YAAarkB,GAAUpG,GAAVoG,QAEboiB,EAAAA,EAAAA,cAAY,SAACzZ,EAAwCwgC,GACxDrsC,GAAU,CACNU,MAAO6mB,GAAY+kB,sBACnB1rC,KAAM2mB,GAAYglB,sBAAsB1gC,EAAOnL,OAAS,IACxDO,QAAS,CACLa,GAAI,CACApB,MAAOwC,GAAOspC,SACdC,OAAQJ,GAEZ/Z,OAAQ,CACJ5xB,MAAOwC,GAAOovB,YAI9B,GAAG,CAACpvB,GAAQqkB,GAAavnB,MDyYnB0sC,IAAepnB,EAAAA,EAAAA,cACjB,SAACzZ,IACG3E,EAAAA,EAAAA,eAAcugC,GACd,IAAMkF,EAAuBlF,EAAa90B,QAAQV,MAAKmX,SAAAA,UAAK1c,GAAiB0c,IAAMA,EAAEzW,QAAQwW,MAAK,mBAAE1oB,EAAAA,KAAeoL,EAAOpL,SAErHksC,EAQAjgC,GAAiBigC,IAGtBpB,GAAoBoB,EAAsBA,EAAqBh6B,QAAQ6V,QAAO,mBAAE/nB,EAAAA,KAAeoL,EAAOpL,MAAI6K,KAAI,mBAAE7K,EAAAA,OAV5GinC,EAAgByD,MAAQC,SAAAA,IACpBlkC,EAAAA,EAAAA,eAAckkC,GACd,IAAMwB,EAAoBxB,EAAMz4B,QAAQ0b,WAAU,mBAAE5tB,EAAAA,KAAeoL,EAAOpL,MAC1E2qC,EAAMz4B,QAAQg5B,OAAOiB,EAAmB,EAC5C,IAOR,GACA,CAACnF,EAAc8D,KAEb3D,IAAmBtiB,EAAAA,EAAAA,cAAY,SAACzZ,GAClCugC,GAAsBvgC,GAAQ,kBAAM6gC,GAAa7gC,KACrD,GAAG,CAACugC,GAAuBM,KAErBG,IEpbCC,EAAAA,EAAAA,yBAAwBhlB,IFsbzBggB,IAA8BxiB,EAAAA,EAAAA,cAChC,SAACzZ,GACQD,GAAcC,IAAY47B,GAAgCA,EAAa90B,QzE5OrEwa,MAAMvhB,KyE+ObihC,GAAyB,CACrB7kB,OAAQujB,GACRxjB,WAAY0f,EAAa90B,QACzB9G,OAAAA,GAER,GACA,CAAC47B,EAAcoF,GAA0BtB,KAEvC1D,IAA0BviB,EAAAA,EAAAA,cAC5B,SAACynB,EAAkBC,GACftF,EAAgByD,MAAQC,SAAAA,IACpBlkC,EAAAA,EAAAA,eAAckkC,GACd,IAAMv/B,EAASu/B,EAAMz4B,QAAQV,MAAK,mBAAExR,EAAAA,KAAessC,KAC9ClhC,GAAWa,GAAiBb,IAG5BA,EAAO8G,QAAQwW,MAAK,mBAAE1oB,EAAAA,KAAeusC,OAG1CnhC,EAAOwyB,eAAiB2O,EAC5B,IAEJ,GACA,IAGEC,IAAez0B,EAAAA,EAAAA,UACjB,iBAAO,CACHkvB,gBAAAA,EACAD,aAAAA,EACAvxB,aAAAA,GACA6P,UAAAA,GACA6hB,iBAAAA,GACAG,aAAAA,EACAC,gBAAAA,EACAF,4BAAAA,GACAD,wBAAAA,GACAI,KAAAA,EACAC,QAAS+B,EACT9B,QAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAC,YAAAA,EACAC,iBAAAA,KAEJ,CACIf,EACA1hB,GACAqiB,EACAD,EACAE,EACAJ,EACAH,GACAF,GACAG,EACAF,GACA3xB,GACAqyB,EACA0B,EACAzB,IAIR,OACI,SAACjB,GAAkBzd,SAAQ,CAAC9R,MAAOi1B,YAC9BtmC,GAGb,EAEa,IAAuBumC,EAAAA,GAAAA,2BAChC3F,GACA,mBAFU4F,mBGhgBP,SAASC,KACZ,IAAMC,GCHCP,EAAAA,EAAAA,yBAAwB5M,IDIzBhqB,EAAei3B,GAAmB,gBAExC,OAAO7nB,EAAAA,EAAAA,cAAY,SAACzZ,GAChBwhC,EAAkB,CACdxhC,OAAAA,EACAqK,aAAAA,GAER,GAAG,CAACm3B,EAAmBn3B,GAC3B,qPEdO,IAAMo3B,IAAqB1gC,EAAAA,GAAAA,IAAG,CACjCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,SCOH,SAASygC,GAAc,OAAC5mC,EAAD,EAACA,SAAUxF,EAAX,EAAWA,QAASw9B,EAApB,EAAoBA,QAM9C,OACI,SAACz0B,EAAAA,QAAOA,CAACtM,QAAS+gC,YACd,SAACpZ,SAAAA,CACGhjB,KAAK,SACLoF,UAAW2lC,KACXnsC,QAV8CwE,SAAAA,GACtDA,EAAE6nC,kBACFrsC,SAAAA,GACJ,WASawF,KAIjB,0nCCfA8mC,GAAAA,EAAY,CACRC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,ICFG,IAAMC,GAA8B,gBAAEpnB,EAAAA,EAAAA,QAASxf,EAAAA,EAAAA,UAAW6mC,EAAAA,EAAAA,OACnBpvB,EAAAA,IAAAA,EAAAA,EAAAA,UAAgC,SAAnEqvB,EAAmCrvB,EAAAA,GAApBsvB,EAAoBtvB,EAAAA,GACpCuvB,GAAWxpC,EAAAA,EAAAA,QAA2B,MACtCypC,GAAYnE,EAAAA,EAAAA,UAAS+D,GAErBK,GAAcvpB,EAAAA,EAAAA,cAChB,SAACwpB,OAMGF,EALKH,IAGLE,EAAS3pC,SAAU+pC,EAAAA,GAAAA,IAAKN,GACxBE,EAAS3pC,QAAQgqC,UAAUF,GACV,QAAjBF,EAAAA,EAAU5pC,eAAV4pC,IAAAA,GAAAA,EAAAA,KAAAA,EAAoBD,EAAS3pC,SACjC,GACA,CAACypC,EAAeG,IAGdK,GAAc3pB,EAAAA,EAAAA,cAChB,SAACwpB,OACGH,EAAgB,QAAhBA,EAAAA,EAAS3pC,eAAT2pC,IAAAA,GAAAA,EAAkBK,UAAUF,EAChC,GAAG,KAGP1xC,EAAAA,EAAAA,YAAU,WACDuxC,EAAS3pC,QAGViqC,EAAY9nB,GAFZ0nB,EAAY1nB,EAIpB,GAAG,CAAC0nB,EAAa1nB,EAAS8nB,IAE1B,IAAMC,GAAc9uB,EAAAA,EAAAA,mBAAkBquB,GAChCU,GAAe32B,EAAAA,EAAAA,UAAQ,WAEzB,OAAO42B,EAAAA,GAAAA,WAAS,SAACC,OACbV,EAAgB,QAAhBA,EAAAA,EAAS3pC,eAAT2pC,IAAAA,GAAAA,EAAkBW,OAAO,CACrB3gC,MAAO0gC,EAAiBE,YAAY5gC,MACpCE,OAAQwgC,EAAiBE,YAAY1gC,QAG7C,GAAG,IACP,GAAG,CAAC8/B,IAuBJ,OApBAvxC,EAAAA,EAAAA,YAAU,WAMN,OALI8xC,GACAC,EAAaD,GAIV,WACHC,EAAa7c,QACjB,CACJ,GAAG,CAAC4c,EAAaC,KAGjB/xC,EAAAA,EAAAA,YAAU,WACN,OAAO,WACCuxC,EAAS3pC,SACT2pC,EAAS3pC,QAAQwqC,SAEzB,CACJ,GAAG,KAEI,SAACrxC,MAAAA,CAAI2a,IAAK41B,EAAkB/mC,UAAWlM,EAAI,gCAAiCkM,IACvF,k9BC7EO,IAAM8nC,GAA0C,gBACnDC,EAAAA,EAAAA,MACA1qC,EAAAA,EAAAA,QAEM,GAAMlI,EAAAA,EAAAA,wBAALC,EACyCqiB,EAAAA,IAAAA,EAAAA,EAAAA,UAAiB,MAA1DuwB,EAAyCvwB,EAAAA,GAAvBwwB,EAAuBxwB,EAAAA,GAE1CywB,EAAa7qC,EAAU0qC,EACvBI,EAAWD,EACX7qC,EAAU0qC,EACV,EACAK,EAAYF,EACZ,EACAH,EAAQ1qC,EAER8pC,GAAet2B,EAAAA,EAAAA,UAAQ,WACzB,IAAM3H,EAAQm/B,iBAAiB1yC,SAASsD,MAClCg/B,EAAOiQ,EACP,CAAC,CACCppB,KAAM1pB,EAAEwqB,YAAY0oB,qBACpBj4B,MAAO83B,EACPI,UAAW,CACP5mC,MAAOuH,EAAMs/B,iBAAiB,sBAEnC,CACC1pB,KAAM1pB,EAAEwqB,YAAY6oB,sBACpBp4B,MAAO03B,EACPQ,UAAW,CACP5mC,MAAOuH,EAAMs/B,iBAAiB,oBAGpC,CAAC,CACC1pB,KAAM1pB,EAAEwqB,YAAY8oB,uBACpBr4B,MAAO+3B,EACPG,UAAW,CACP5mC,MAAOuH,EAAMs/B,iBAAiB,mBAEnC,CACC1pB,KAAM1pB,EAAEwqB,YAAY+oB,iBACpBt4B,MAAOhT,EACPkrC,UAAW,CACP5mC,MAAOuH,EAAMs/B,iBAAiB,kBAElCI,SAAU,CACNL,UAAW,CACP5mC,MAAOuH,EAAMs/B,iBAAiB,qBAK9C,MAAO,CACHK,OAAQ,CACJviC,OAAQ,EACRwiC,OAAQ,aACR3iC,KAAM,EACNe,OAAQ,GACRtM,KAAM,SACNmuC,QAAS,GACTC,UAAW,GACXC,WAAY,IAEhBlwC,MAAO,CACH0mB,KAAM,CACD,UAAsH,OAA7GrqB,EAAEwqB,YAAYspB,eAAe38B,KAAK48B,MAAMt+B,OAAOotB,EAAK+P,GAAkB33B,OAAS+4B,EAAAA,aAAeC,EAAAA,eAAe,KACtH,SAAoC,OAA5BpR,EAAK+P,GAAkBlpB,KAAK,MACvC4N,KAAK,MACPvmB,KAAM,SACNG,OAAQ,MACRgjC,QAAS,CAAC,EAAG,GAAI,GAAI,GACrBC,UAAW,CACPC,KAAM,CACFn5B,MAAO,CACHo5B,SAAU,OACVC,WAAY,IACZC,WAAY,GACZC,YAAa,EACbC,gBAAiB,EACjBC,gBAAiB5gC,EAAMs/B,iBAAiB,gBAE5C1pB,KAAM,CACF2qB,SAAU,OACVC,WAAY,IACZC,WAAY,GACZE,gBAAiB,EACjBC,gBAAiB5gC,EAAMs/B,iBAAiB,mBAKxDuB,OAAQ,CACJ,CACInvC,KAAM,MACNuL,KAAM,SACNE,IAAK,GACLC,OAAQ,GACRU,MAAO,OACPgjC,OAAQ,CAAC,MAAO,OAChBC,mBAAmB,EACnB3oB,MAAO,CACH4oB,UAAW,IAEfC,UAAW,CACPC,WAAW,GAEfC,YAAa,CACTC,YAAa,UAEjB/B,UAAW,CACPgC,YAAarhC,EAAMs/B,iBAAiB,eACpCoB,YAAa,GAEjB3R,KAAAA,IAGRsR,UAAW,CACPiB,WAAY,oDACZf,SAAU,OACVC,WAAY,IACZC,WAAY,IAGxB,GAAG,CAACzB,EAAY9yC,EAAEwqB,YAAauoB,EAAUJ,EAAOK,EAAW/qC,EAAS2qC,IAEpE,OACI,SAACpB,GAAKA,CACFpnB,QAAS2nB,EACTN,OAAQ4D,SAAAA,OACKC,EAAT,SAAuBC,GACnB,IAAMC,EAAY,EAAMC,YAAoCd,OAAO,GAAG9R,KAAKt0B,KAAYgY,SAAAA,UAAKA,EAAEmD,QAC9FmpB,EAAoB2C,EAAU5vB,QAAQ2vB,GAC1C,EAEAF,EAAKK,GAAG,aAAa7S,SAAAA,GACG,iBAATA,GAAqBA,GAAQ,SAAUA,GAA6B,iBAAdA,EAAKnZ,MAClE4rB,EAAczS,EAAKnZ,KAE3B,IACA2rB,EAAKK,GAAG,YAAY,WAChB7C,EAAoB,EACxB,IACAwC,EAAKK,GAAG,aAAa7S,SAAAA,GACjByS,EAAczS,EAAKnZ,KACvB,IACA2rB,EAAKK,GAAG,YAAY,WAChB7C,EAAoB,EACxB,GACJ,GAGZ,wBCxJa8C,GAAwC,gBACjD16B,EAAAA,EAAAA,MAEM26B,GAAYC,EAAAA,EAAAA,kBAAiB56B,GAEnC,OACI,+BAAG66B,EAAAA,EAAAA,qBAAoBF,IAE/B,ECVMG,IAAeC,EAAAA,GAAAA,MAGfC,GAAiD,CACnD,iCACA,yBACA,QACA,gBACA,iBACA,iBAIEC,GAAoD,CACtD,eACA,wBACA,qBACA,i/BCXG,ICSDD,GAA8C,CAChD,YACA,uBACA,0BACA,iCACA,4BACA,sBACA,+BACA,mECrBJ,IAAMF,IAAeC,EAAAA,GAAAA,MAGd,SAASG,GAAiB1sB,GAC7B,ICLM2sB,EACAC,ECJAC,EACAC,EFOAC,GCLAJ,GAAoBK,EAAAA,GAAAA,wBACpBJ,GAAyB56B,EAAAA,EAAAA,UAC3B,kBAAMi7B,EAAAA,GAAAA,oCACN,KAGGnuB,EAAAA,EAAAA,cACH,SAAC8K,EAAyBsjB,OAC4BtjB,EAA5CujB,EAAoBD,GAAkC,QAAVtjB,EAAAA,EAAKzB,aAALyB,IAAAA,OAAZ3gB,EAAY2gB,EAAYne,MAC1DmB,SAAAA,UAAKA,EAAE3S,KAAO2vB,EAAKwjB,gBAEjBpkC,EAAYkkC,GAEZC,aADAlkC,EACAkkC,EAAmBnkC,UAEnBqkC,GAAgBC,EAAAA,EAAAA,aAAYH,aAAAA,EAAAA,EAAmBte,WAC/Cse,aAAAA,EAAAA,EAAmBte,eACnB5lB,EAEN,OAAO2gB,EAAK0Y,QAoBZ,WACI,IACMzB,EAAQjX,EADKsjB,EAAY,eAAiB,YAEhD,KAAKK,EAAAA,GAAAA,YAAW1M,GACZ,OAAO,KAGX,GAAIqM,GAAkC,UAAnBtjB,aAAAA,EAAAA,EAAMsN,WAA0C,qBAAnBtN,aAAAA,EAAAA,EAAMsN,UAClD,OAAO,KAGX,IAAMp9B,EAAmC,YAAvB8vB,EAAK4jB,cAEvB,OACI,SAAC71C,MAAAA,CAAIwJ,UAAU,gCACX,SAACssC,GAAAA,gBAAeA,CACZC,kBAAmBd,EACf,CACI/L,MAAAA,EACA8M,eAAgB/jB,EAAK6B,QAEzBkhB,GAEJiB,aAAchkB,EAAKikB,SACnBR,cACIH,OAAYjkC,EAAYokC,EAE5BvzC,UAAWA,EACXkP,UAAWA,EACX7H,UAAU,eAI1B,CArDsB2sC,GAGdZ,IAActjB,EAAK4jB,cACZ,MAIP,SAAC71C,MAAAA,CAAIwJ,UAAU,gCACX,SAAC4sC,GAAAA,iBAAgBA,CACbV,cAAeA,EACfrkC,UAAWA,EACXglC,UAAWb,aAAAA,EAAAA,EAAmBtM,MAC9BoN,eAAgBrkB,EAAK4jB,cACrBrsC,UAAU,eAwC9B,GACA,CAACwrC,EAAmBC,KDpElBsB,GETArB,GAAuBsB,EAAAA,GAAAA,8BACvBrB,GAAyBsB,EAAAA,GAAAA,iCAExBtvB,EAAAA,EAAAA,cAAY,SAACuvB,EAAuBC,GACvC,GAAID,EAAG/L,UAAYgM,EAAGhM,QAClB,OAAQ,EAGZ,IAAK+L,EAAG/L,SAAWgM,EAAGhM,QAClB,OAAO,EAGX,GAAI+L,EAAG/L,SAAWgM,EAAGhM,QAAS,KAE9BuK,EAOAA,EARU0B,EAMV,QALA1B,EAAAA,EAAqB,CACjB/yC,UAAgC,YAArBu0C,EAAGb,cACdK,SAAUQ,EAAGR,SACbhN,MAAOwN,EAAGnX,SACVzL,OAAQ4iB,EAAG5iB,gBAJfohB,IAAAA,EAAAA,EAKM,GACI2B,EAMV,QALA3B,EAAAA,EAAqB,CACjB/yC,UAAgC,YAArBw0C,EAAGd,cACdK,SAAUS,EAAGT,SACbhN,MAAOyN,EAAGpX,SACVzL,OAAQ6iB,EAAG7iB,gBAJfohB,IAAAA,EAAAA,EAKM,GAEF,OAAO0B,EAAUE,cAAcD,OAAWvlC,EAAW,CACjDylC,SAAS,EACTC,YAAa,QAErB,CAEA,IAAMJ,EAAYzB,EAAuB,CAACmB,eAAgBI,EAAGb,gBACvDgB,EAAY1B,EAAuB,CAACmB,eAAgBK,EAAGd,gBAE7D,OAAOe,EAAUE,cAAcD,OAAWvlC,EAAW,CACjDylC,SAAS,EACTC,YAAa,QAGrB,GAAG,CAAC9B,EAAsBC,KF/B1B,OAAO96B,EAAAA,EAAAA,UAAQ,kBAAMgO,EAAOlb,KAAIqvB,SAAAA,UAC5BmY,GAAasC,SAASza,EAAMlU,KAAM,CAC9BhmB,GAAIk6B,EAAMlU,KACVlY,OAAQosB,EAAMj6B,MACdwR,KAAM,gBAAEmjC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,IACd,OAAQ3a,EAAMlU,MACV,IAAK,gBACD,OAAO,SAACisB,GAAaA,CAAC16B,MAAOq9B,MAEjC,IAAK,WACL,IAAK,SACD,IAAMhO,EAAQkM,EAAqB+B,EAAIC,UACvC,MAAmB,aAAf5a,EAAMlU,KACC4gB,EAGQA,GAAmC,cAA1BiO,EAAIC,SAAS7X,SAKlC2X,IAHI,KAKf,IAAK,eACL,IAAK,aACD,IAAM3B,EAAYH,EAAqB+B,EAAIC,UAAU,GACrD,MAAmB,iBAAf5a,EAAMlU,KACCitB,EAGYA,GAA2C,cAA9B4B,EAAIC,SAASzX,aAK1CuX,IAHI,KAOnB,OAAOA,GACX,EACAG,UAAW,CAAC,WAAY,gBAAgB1pC,SAAS6uB,EAAMlU,MAAQ,SAACgvB,EAAMC,UAAShB,EAAUe,EAAKF,SAAUG,EAAKH,WAAY,cAE7H,CAACb,EAAWluB,EAAQ+sB,GAC5B,mhDGpDA,IAAMoC,GAA8C,CAAC,SAAU,OAAQ,gBAAiB,YAClFC,GAAgBD,IAAeE,EAAAA,GAAAA,QAAO,EAAGF,GAAetiC,OAAS,IACjEyiC,GAAgBrd,SAAQod,EAAAA,GAAAA,QAAO,EAAG,IAExC,SAASE,GAAoB32C,EAAsB0sB,GAC/C,IAAMkqB,EAAS52C,EAAEw2C,KAAkB,GAC7BK,EAASnqB,EAAE8pB,KAAkB,GACFE,EAAAA,GAAAA,GAAgB,CAACE,EAAQC,GAAU,CAACA,EAAQD,GAAO,GAA7EE,EAA0BJ,EAAAA,GAAdK,EAAcL,EAAAA,GAEjC,OAAOI,EAAW95C,WAAW64C,cAAckB,EAAW/5C,WAC1D,CAEO,SAASg6C,GAAepvB,EAAyBqvB,GACpD,IAEetO,EAFRxgB,GAAyBzqB,EAAAA,EAAAA,sBAAqB,KAA9CyqB,YACDwgB,EAAeoF,GAAmB,gBAClC9gC,EAA4B,QAAnB07B,EAAAA,EAAa17B,cAAb07B,IAAAA,EAAAA,EAAuB,GAChC37B,EAAS27B,EAAatnC,GAEtByvB,GAAOyZ,EAAAA,GAAAA,mBACT/f,SAAAA,UAAKA,EAAElJ,iBAAiBwP,KAAK7jB,MAG3BiqC,GAAQ99B,EAAAA,EAAAA,UAAQ,eAII0X,EAHtB,KAAKA,aAAAA,EAAAA,EAAMqmB,mBACP,MAAO,GAEX,IAAMC,GAAgBtmB,SAAuB,QAAvBA,EAAAA,EAAMqmB,yBAANrmB,IAAAA,OAAAA,EAAAA,EAAyB1H,QAAOiuB,SAAAA,UAAKA,EAAEpC,UAAYoC,EAAErqC,SAAWA,OAAW,GACjG,OAAK4a,EAIEwvB,EACF1vB,KAAKivB,IACLW,MAAM,EAAGL,GACT/qC,KAAI,SAACmrC,EAAGrjC,GACL,OAAO,8UACAqjC,GAAAA,CACHhwB,KAAMkwB,EAASC,mBAAmBxjC,EAAI,IAE9C,IAXOojC,CAYf,GAAG,CAACtmB,aAAAA,EAAAA,EAAMqmB,kBAAmBvvB,EAAgBqvB,EAAejqC,EAAQuqC,IAEpE,MAAO,CAACL,MAAAA,EAAOjO,WAAWnY,aAAAA,EAAAA,EAAMmY,aAAa,EACjD,i9BC5CO,SAASwO,GAAgB7qC,GAC5B,IAAM67B,EAA0BsF,GAAmB,2BAC7CjlB,EAAaxb,GAAiBV,GAC9By7B,GAAejvB,EAAAA,EAAAA,UAA2B,WAC5C,GAAI0P,EAAY,CACZ,IAAMjX,EAASjF,EAAO2G,QAAQV,MAAK,mBAAExR,EAAAA,KAAeuL,EAAOqyB,kBAE3D,OADAn3B,EAAAA,EAAAA,eAAc+J,GACPA,CACX,CACA,OAAOjF,CACX,GAAG,CAACA,EAAQkc,IAEN4uB,GAAkBxxB,EAAAA,EAAAA,cAAY,SAAC9V,GACjC,GAAK0Y,EAAL,CAGA,IACI6uB,EADEC,EAAqBhrC,EAAO2G,QAAQ0b,WAAU,mBAAE5tB,EAAAA,KAAeuL,EAAOqyB,kBAGxE0Y,EADc,SAAdvnC,EACkBwnC,IAAuBhrC,EAAO2G,QAAQU,OAAS,EAAI,EAAI2jC,EAAqB,EAErD,IAAvBA,EAA2BhrC,EAAO2G,QAAQU,OAAS,EAAI2jC,EAAqB,EAElG,IAAMC,EAAajrC,EAAO2G,QAAQokC,IAClC7vC,EAAAA,EAAAA,eAAc+vC,GACdpP,EAAwB77B,EAAOvL,GAAIw2C,EAAWx2C,GAV9C,CAWJ,GAAG,CAACuL,EAAQkc,EAAY2f,IAExB,OAAOrvB,EAAAA,EAAAA,UAAQ,iBAAO,CAClBivB,aAAAA,EACAqP,gBAAiB5uB,EAAa4uB,OAAkBrnC,KAChD,CAACg4B,EAAcvf,EAAY4uB,GACnC,64BCdA,IAAMI,GAAwF,CAC1FzW,qBChBiF,WACjF,IAEyBkJ,EAFnBwN,GAAiBn0C,EAAAA,EAAAA,mBAAkB,uBAAyBguC,EAAAA,aAAeD,EAAAA,aAC3EhJ,EAAeoF,GAAmB,gBAClCiK,UAAmBzN,GAAAA,EAAAA,GAAAA,mBACrB/f,SAAAA,OAAKA,SAAAA,SAAyC,QAAzCA,EAAAA,EAAGlJ,iBAAiB0P,KAAK2X,EAAatnC,WAAtCmpB,IAAAA,OAAAA,EAAAA,EAA2CytB,8BAD3B1N,IAAAA,EAAAA,EAEpB,EAEL,OACI,SAAC8F,GAAcA,CAACC,MAAOyH,EAAgBnyC,QAASoyC,GAExD,EDOI5W,YPdyE,gBAsCpD9f,EDxBY8F,ECbjCxa,EAAAA,EAAAA,OAyBSsrC,EAAT,SAAsBC,GAClB,IAAM/V,EAAQgW,EAAQvlC,MAAK23B,SAAAA,UAAKA,EAAEnpC,KAAO82C,KACzC,GAAK/V,EAIL,OAAOA,EAAMiW,KAAO,OAAS,KACjC,EA9BM1P,EAAeoF,GAAmB,gBAClCzsB,GAAmBipB,EAAAA,GAAAA,mBAAiB/f,SAAAA,UACtCme,EAAa17B,OACPud,EAAElJ,iBAAiB2P,QAAQ0X,EAAa17B,aACxCoD,KAEJioC,GAAYl/B,EAAAA,EAAAA,UAAQ,eACtBkI,SAAAA,SAAmC,QAAnCA,EAAAA,EAAkBi3B,yBAAlBj3B,IAAAA,OAAAA,EAAAA,EAAqCg2B,MAAM,EAAG1qC,EAAO4a,kBAAmB,KAC5E,CAAC5a,EAAO4a,eAAgBlG,aAAAA,EAAAA,EAAkBi3B,oBACZv4B,EAAAA,IAAAA,EAAAA,EAAAA,UAAuB,IAAE,GAAhDo4B,EAAuBp4B,EAAAA,GAAdw4B,EAAcx4B,EAAAA,GAExBy4B,GAAQC,EAAAA,GAAAA,IAAc,CACxB97B,SDD6BwK,ECCCxa,EAAOwa,QDAlChO,EAAAA,EAAAA,UAAQ,kBAAMgO,EAAOlb,KAAIqvB,SAAAA,UAC5BmY,GAAasC,SAASza,EAAMlU,KAAM,CAC9BhmB,GAAIk6B,EAAMlU,KACVlY,OAAQosB,EAAMj6B,MACdwR,KAAM,gBAAEmjC,EAAAA,EAAAA,gBACJ,8BACKrC,GAAYlnC,SAAS6uB,EAAMlU,OACtB,SAACisB,GAAaA,CAAC16B,MAAOq9B,MACtBpC,GAAennC,SAAS6uB,EAAMlU,MAC1B,GAAmB,OAAhB4uB,KAAc,EAAE,KACnBA,cAItB,CAAC7uB,KCbDoZ,KAAM8X,EACNK,SAAUzC,SAAAA,UAAOA,EAAI70C,IACrBu3C,iBAAiBA,EAAAA,GAAAA,MACjBC,mBAAmBA,EAAAA,GAAAA,MACnB5Q,MAAO,CACHmQ,QAAAA,GAEJU,gBAAiBN,IAYrB,OACI,SAACz5C,MAAAA,CAAIwJ,UAAU,kEACX,SAACwwC,EAAAA,WAAUA,CACPC,SAAS13B,SAAmC,QAAnCA,EAAAA,EAAkBi3B,yBAAlBj3B,IAAAA,OAAAA,EAAAA,EAAqCrN,WAAWqN,aAAAA,EAAAA,EAAkB2nB,WAC3EA,UAAW3nB,aAAAA,EAAAA,EAAkB2nB,UAC7B1gC,UAAU,4BAEV,SAACxJ,MAAAA,CAAIwJ,UAAU,iDACX,SAACxJ,MAAAA,CAAIwJ,UAAU,0BACX,UAAC0wC,EAAAA,MAAKA,CAACvwC,KAAK,KAAKH,UAAU,mBACtBqE,EAAO6a,qBACJ,SAACwxB,EAAAA,MAAAA,OAAY,CAACC,QAAM,WACfT,EAAMU,kBAAkBjtC,KAAIktC,SAAAA,UACzB,SAACH,EAAAA,MAAAA,IAAS,UACLG,EAAY5jB,QAAQtpB,KAAIiD,SAAAA,UACrB,SAAC8pC,EAAAA,MAAAA,WAAgB,CAEbl3C,QAASoN,EAAOusB,OAAO2d,0BACvBjX,MAAO8V,EAAa/oC,EAAO9N,IAC3Bi4C,MAAM,iBAELC,EAAAA,GAAAA,IACGpqC,EAAOusB,OAAO8d,UAAUrqC,OACxBA,EAAOsqC,eAPNtqC,EAAO9N,QAHR+3C,EAAY/3C,UAkBxC,SAAC43C,EAAAA,MAAAA,KAAU,UACNR,EAAMiB,cAAc/8B,KAChBzQ,KAAIgqC,SAAAA,UACD,SAAC+C,EAAAA,MAAAA,IAAS,UACL/C,EAAIyD,kBAAkBztC,KAAI4G,SAAAA,UACvB,SAACmmC,EAAAA,MAAAA,KAAU,CAAeK,MAAM,iBAC3BC,EAAAA,GAAAA,IACGzmC,EAAK4oB,OAAO8d,UAAU1mC,KACtBA,EAAK2mC,eAHI3mC,EAAKzR,QAFd60C,EAAI70C,mBAkB5D,EOxEI6/B,SNKoE,gBACpEt0B,EAAAA,EAAAA,OAEM+7B,EAAeoF,GAAmB,gBAClC6L,GAAiBrP,EAAAA,GAAAA,mBACnB/f,SAAAA,OAAKA,SAAAA,SAAyC,QAAzCA,EAAAA,EAAGlJ,iBAAiB0P,KAAK2X,EAAatnC,WAAtCmpB,IAAAA,OAAAA,EAAAA,EAA2CovB,kBAG9CC,GAAWzgC,EAAAA,EAAAA,UACb,kBACIxM,EAAOwa,OAAOlb,KAAyBqvB,SAAAA,GACnC,IAAM3iB,EAAQghC,aAAAA,EAAAA,EAAiBre,EAAMlU,MACrC,OAAIusB,GAAYlnC,SAAS6uB,EAAMlU,MACpB,CACHkU,MAAAA,EACA3iB,OAAO,SAAC06B,GAAaA,CAAC16B,MAAOA,KAG9B,CACH2iB,MAAAA,EACA3iB,MAAOA,aAAAA,EAAAA,EAAO5b,WAEtB,MACJ,CAAC4P,EAAOwa,OAAQwyB,IAGpB,OACI,SAAC76C,MAAAA,CAAIwJ,UAAU,qDACX,SAACxJ,MAAAA,CAAIwJ,UA/CM,sPAgDNsxC,EAAS3tC,KAAI,gBAAE0M,EAAAA,EAAAA,MAAO2iB,EAAAA,EAAAA,aACnB,UAACx8B,MAAAA,CAAmBwJ,UAAU,uCAC1B,SAACxJ,MAAAA,CAAIwJ,UAAU,2CAAmCgzB,EAAMj6B,SACxD,SAACvC,MAAAA,CAAIwJ,UAAU,uBAAeqQ,MAFxB2iB,EAAMl6B,UAQpC,EM1CI8/B,QEhBiE72B,IAAAA,MACjE,gBAAEsC,EAAAA,EAAAA,OAgBWsrC,EAAT,SAAsBC,GAClB,IAAM/V,EAAQgW,EAAQvlC,MAAK23B,SAAAA,UAAKA,EAAEnpC,KAAO82C,KACzC,GAAK/V,EAIL,OAAOA,EAAMiW,KAAO,OAAS,KACjC,EAtB2BrB,EAAAA,GAAepqC,EAAOgb,eAAgBhb,EAAO4a,gBAAjE0vB,EAAoBF,EAApBE,MAAOjO,EAAa+N,EAAb/N,UACgBjpB,EAAAA,IAAAA,EAAAA,EAAAA,UAAuB,IAAE,GAAhDo4B,EAAuBp4B,EAAAA,GAAdw4B,EAAcx4B,EAAAA,GAExBy4B,GAAQC,EAAAA,GAAAA,IAAc,CACxB97B,QAASk3B,GAAiBlnC,EAAOwa,QACjCoZ,KAAM0W,EACNyB,SAAUzC,SAAAA,UAAOA,EAAIlpC,QACrB4rC,iBAAiBA,EAAAA,GAAAA,MACjBC,mBAAmBA,EAAAA,GAAAA,MACnB5Q,MAAO,CACHmQ,QAAAA,GAEJU,gBAAiBN,IAYrB,OACI,SAACz5C,MAAAA,CAAIwJ,UAAU,kEACX,SAACwwC,EAAAA,WAAUA,CACPC,QAAS9B,EACTjO,UAAWA,EACX1gC,UAAU,4BAEV,SAACxJ,MAAAA,CAAIwJ,UAAU,iDACX,SAACxJ,MAAAA,CAAIwJ,UAAU,0BACX,UAAC0wC,EAAAA,MAAKA,CAACvwC,KAAK,KAAKH,UAAU,mBACtBqE,EAAO6a,qBACJ,SAACwxB,EAAAA,MAAAA,OAAY,CAACC,QAAM,WACfT,EAAMU,kBAAkBjtC,KAAIktC,SAAAA,UACzB,SAACH,EAAAA,MAAAA,IAAS,UACLG,EAAY5jB,QAAQtpB,KAAIiD,SAAAA,UACrB,SAAC8pC,EAAAA,MAAAA,WAAgB,CAEbl3C,QAASoN,EAAOusB,OAAO2d,0BACvBjX,MAAO8V,EAAa/oC,EAAO9N,IAC3Bi4C,MAAM,iBAELC,EAAAA,GAAAA,IACGpqC,EAAOusB,OAAO8d,UAAUrqC,OACxBA,EAAOsqC,eAPNtqC,EAAO9N,QAHR+3C,EAAY/3C,UAkBxC,SAAC43C,EAAAA,MAAAA,KAAU,UACNR,EAAMiB,cAAc/8B,KAChBzQ,KAAIgqC,SAAAA,UACD,SAAC+C,EAAAA,MAAAA,IAAS,UACL/C,EAAIyD,kBAAkBztC,KAAI4G,SAAAA,UACvB,SAACmmC,EAAAA,MAAAA,KAAU,CAAeK,MAAM,iBAC3BC,EAAAA,GAAAA,IACGzmC,EAAK4oB,OAAO8d,UAAU1mC,KACtBA,EAAK2mC,eAHI3mC,EAAKzR,QAFd60C,EAAI70C,mBAkB5D,KFvDG,SAAS6gB,GACZ1J,GAEA,IAAO5L,EAAgE4L,EAAhE5L,OAAQyC,EAAwDmJ,EAAxDnJ,SAAUuS,EAA8CpJ,EAA9CoJ,KAAMrZ,EAAwCiQ,EAAxCjQ,UAAW+kC,EAA6B90B,EAA7B80B,aAAc3rB,EAAenJ,EAAfmJ,YAChB81B,EAAAA,GAAgB7qC,GAAjDy7B,EAAiCoP,EAAjCpP,aAAcqP,EAAmBD,EAAnBC,gBACfoC,EAAShC,GAAezP,EAAallC,MAC3C,OACI,SAACye,EAAAA,GAAAA,GAAAA,CAAAA,EACOpJ,GAAAA,CACJrJ,QAAQ,SAAC4qC,GAAAA,CAAiB/Y,aAAcqH,EAAcqP,gBAAiBA,IACvEj/B,UAAU,SAACuhC,GAAAA,CACPhZ,aAAcqH,EACdz7B,OAAQA,EACR8qC,gBAAiBA,EACjBpK,aAAcA,EACd3rB,YAAaA,IAEjBpZ,UAAWlM,EAAIkM,EAAW,mBAE1B,SAACuxC,EAAAA,CAAOltC,OAAQy7B,EAAch5B,SAAUA,EAAUoM,UAAQ,MAGtE,CAEO,SAASwG,GACZzJ,GAEA,IAAO5L,EAAqC4L,EAArC5L,OAAQyC,EAA6BmJ,EAA7BnJ,SAAUuS,EAAmBpJ,EAAnBoJ,KAAMrZ,EAAaiQ,EAAbjQ,UACSkvC,EAAAA,GAAgB7qC,GAAjDy7B,EAAiCoP,EAAjCpP,aAAcqP,EAAmBD,EAAnBC,gBACfoC,EAAShC,GAAezP,EAAallC,MAC3C,OACI,SAACye,EAAAA,GAAAA,GAAAA,CAAAA,EACOpJ,GAAAA,CACJrJ,QAAQ,SAAC4qC,GAAAA,CAAiB/Y,aAAcqH,EAAcqP,gBAAiBA,IACvEnvC,UAAWlM,EAAIkM,EAAW,mBAE1B,SAACuxC,EAAAA,CAAOltC,OAAQy7B,EAAch5B,SAAUA,MAGpD,CAEA,SAAS0qC,GAAiB,OACtB/Y,EADsB,EACtBA,aACA0W,EAFsB,EAEtBA,gBAKM,GAAMh6C,EAAAA,EAAAA,wBAALC,EACDsjC,EAAc,CAChBC,SAAUvjC,EAAEspB,wBAAwBE,WACpCga,QAASxjC,EAAEspB,wBAAwBU,UACnCyZ,YAAazjC,EAAEspB,wBAAwBM,cACvC8Z,qBAAsB1jC,EAAEspB,wBAAwBC,iBAGpD,OACI,UAACnoB,MAAAA,CAAIwJ,UAAU,4DACX,SAACxJ,MAAAA,CAAIwJ,UAAU,4CAAoCy4B,EAAa1/B,OAAS2/B,EAAYD,EAAa79B,QAE9Fu0C,IACI,UAAC34C,MAAAA,CAAIwJ,UAAU,+BACX,SAAC+2B,EAAAA,WAAUA,CACP52B,KAAK,KACL62B,QAAS5hC,EAAEmG,OAAO07B,WAClBz9B,QAAS,kBAAM21C,EAAgB,mBAE/B,SAACjY,EAAAA,gBAAeA,CAAAA,MAEpB,SAACH,EAAAA,WAAUA,CACP52B,KAAK,KACL62B,QAAS5hC,EAAEmG,OAAO47B,OAClB39B,QAAS,kBAAM21C,EAAgB,mBAE/B,SAAC/X,EAAAA,iBAAgBA,CAAAA,UAO7C,CAWA,SAASqa,GAAmB,OACxB1M,EADwB,EACxBA,aACA1gC,EAFwB,EAExBA,OACAo0B,EAHwB,EAGxBA,aACArf,EAJwB,EAIxBA,YAEM,GAAMjkB,EAAAA,EAAAA,wBAALC,EACDs8C,EAAejM,KACf,EAAgCD,GAAmB,CAAC,gCAAnDrF,4BACP,OACI,UAAC3pC,MAAAA,CAAIwJ,UAAU,kBACX,SAAC4lC,GAAaA,CACVpsC,QAAS,kBAAM2mC,EAA4B97B,IAC3C2yB,QAAS5hC,EAAEwqB,YAAY+xB,wBAEvB,SAACC,EAAAA,YAAWA,CAAC5xC,UAAU,4BAE1BoZ,IACG,SAACwsB,GAAaA,CACV5O,QAAS5hC,EAAEwqB,YAAYiyB,mBACvBr4C,SAASsQ,EAAAA,GAAAA,SAAQ4nC,EAAcrtC,aAE/B,SAACytC,EAAAA,gBAAeA,CAAC9xC,UAAU,6BAGnC,SAAC4lC,GAAaA,CACVpsC,QAAS,kBAAMurC,aAAAA,EAAAA,EAAetM,IAC9BzB,QAAS5hC,EAAEwqB,YAAY+kB,gCAEvB,SAACoN,EAAAA,aAAYA,CAAC/xC,UAAU,8BAIxC,i9BGvJA,IAAMgyC,GAAkD,CAAC,wBAW5CC,GAAiD,gBAC1DjnC,EAAAA,EAAAA,QACA5D,EAAAA,EAAAA,YACA6D,EAAAA,EAAAA,SACA85B,EAAAA,EAAAA,aACAx2B,EAAAA,EAAAA,aACA2E,EAAAA,EAAAA,SACgCuE,EAAAA,IAAAA,EAAAA,EAAAA,UAAS,CAACzQ,MAAO,EAAGE,OAAQ,IAAC,GAAtDJ,EAAyB2Q,EAAAA,GAAfY,EAAeZ,EAAAA,GAC1Bi6B,EAAejM,KACfyM,ECvBH,WACH,IAAMA,GAAwB/M,EAAAA,EAAAA,yBAAwBjnB,IAChDE,EAAYonB,GAAmB,aAErC,OAAO7nB,EAAAA,EAAAA,cACH,SAACvL,UACG8/B,EAAsB,CAAC9/B,cAAAA,EAAegM,UAAAA,MAC1C,CAACA,EAAW8zB,GAEpB,CDckCC,GACxBl5B,GAAqB0E,EAAAA,EAAAA,cAAY,SAACzZ,GACpC,GAAIa,GAAiBb,GAAS,CAC1B,IAAMu0B,EAAev0B,EAAO8G,QAAQV,MAAKmX,SAAAA,UAAKA,EAAE3oB,KAAOoL,EAAOwyB,kBAE9D,QAAK+B,GAIEuZ,GAAyB7tC,SAASs0B,EAAa79B,KAC1D,CAEA,OAAOo3C,GAAyB7tC,SAASD,EAAOtJ,KACpD,GAAG,IAEH,OACI,SAAC2e,GAAWA,CACRvO,QAASA,EACTlE,SAAUA,EACVuR,YAAaA,EACbpN,SAAUA,EACV7D,YAAaA,EACb8L,SAAUA,EACVyG,mBAAoBA,GACpBV,mBAAoBA,EACpBS,mBAAoBA,GACpBZ,kBAAmBo5B,EACnBnN,aAAcA,EACd2M,aAAcA,EACdnjC,aAAcA,GAG1B,gwEE1DO,SAAS6jC,KACZ,IAAMC,GAAgBC,EAAAA,GAAAA,oBAEhBC,GAAmB50B,EAAAA,EAAAA,cAAY,kBAAM00B,EAAchoB,IAAI,4BAA2B,CAACgoB,IAEnFG,GAAqB70B,EAAAA,EAAAA,aAAY,8BAAOmiB,OACpCrL,qDAAU,SAAM4d,EAAchoB,IAAI,kCACxC,OADMoK,EAAU,SAChB,GAAM4d,EAAcxtC,IAAI,yBAA0B,SAAK4vB,GAAW,CAAC,GAAI,MAACqL,EAAahnC,GAAKgnC,oBAA1F,gBACJ,oBAH8CA,mCAAP,GAGpC,CAACuS,IAGEI,GAAsB90B,EAAAA,EAAAA,aAAY,8BAAOmiB,OACrC4S,qDAAiB,SAAML,EAAchoB,IAAI,kCAC/C,OADMqoB,EAAiB,kBAIhBA,EAAe5S,EAAahnC,IACnC,GAAMu5C,EAAcxtC,IAAI,yBAA0B6tC,KAH9C,kBAGJ,gBACJ,oBAP+C5S,mCAAP,GAOrC,CAACuS,IAEJ,MAAO,CACHE,iBAAAA,EACAE,oBAAAA,EACAD,mBAAAA,EAER,6jGC3BO,IAAMxtC,IAAeC,EAAAA,GAAAA,IAAG,CAC3BC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,SAIGwtC,IAAyB1tC,EAAAA,GAAAA,IAAG,CACrCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,SAIGytC,IAAoB3tC,EAAAA,GAAAA,IAAG,CAChCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNnF,OAAQ,CACJqF,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,WAML0tC,IAAyB5tC,EAAAA,GAAAA,IAAG,CACrCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNnF,OAAQ,CACJ4yC,MAAO,EACH3tC,EAAAA,GAAAA,IAAEA,o4FCpBX,IAAM4tC,GAAmB,WAC5B,IAAM,GAAM59C,EAAAA,EAAAA,wBAALC,EACD,GAAcgD,EAAAA,EAAAA,yBAAbC,UAC2C+5C,EAAAA,KAA3CI,EAA2CJ,EAA3CI,mBAAoBC,EAAuBL,EAAvBK,oBACKh7B,EAAAA,IAAAA,EAAAA,EAAAA,WAAS,MAAlCu7B,EAAyBv7B,EAAAA,GAAfw7B,EAAex7B,EAAAA,GAEhC+tB,EAAAA,GAAmB,CACf,eACA,kBACA,OACA,UACA,YANGjF,EACPiF,EADOjF,QAASD,EAChBkF,EADgBlF,KAAME,EACtBgF,EADsBhF,QAASV,EAC/B0F,EAD+B1F,aAAcC,EAC7CyF,EAD6CzF,iBCZ1C,WACH,IAAM,GAAc3nC,EAAAA,EAAAA,yBAAbC,UACuBlD,GAAAA,EAAAA,EAAAA,sBAAqB,KAA5CyqB,EAAuBzqB,EAAvByqB,YAAarkB,EAAUpG,EAAVoG,OACsBkc,EAAAA,IAAAA,EAAAA,EAAAA,eAAqC3P,GAAAA,GAAxEorC,EAAmCz7B,EAAAA,GAApB07B,EAAoB17B,EAAAA,GACM26B,EAAAA,KAAzCG,EAAyCH,EAAzCG,iBAAkBE,EAAuBL,EAAvBK,oBACejN,EAAAA,GAAmB,CAAC,eAAgB,oBAArE1F,EAAiC0F,EAAjC1F,aAAcC,EAAmByF,EAAnBzF,gBACfqT,EAAiBtT,aAAAA,EAAAA,EAAchnC,IAErCrD,EAAAA,EAAAA,YAAU,WACN,IAAMktC,EAAU,oCAINlO,qDAHN,OAAK2e,EAGW,GAAMb,KAFlB,kBAEE9d,EAAU,WACDA,EAAQ2e,IACnBD,EAAiB1e,EAAQ2e,WAEjC,sDARgB,GAShBzQ,GACJ,GAAG,CAACyQ,EAAgBb,KAEpB98C,EAAAA,EAAAA,YAAU,WACDy9C,GAGL76C,EAAU,CACNU,MAAO6mB,EAAYyzB,+BACnBp6C,KAAM2mB,EAAY0zB,iCAClBh6C,QAAS,CACLa,GAAI,CACApB,MAAOwC,EAAOg4C,UACdzO,OAAQ,kDACJqO,OAAiBrrC,GACjBi4B,EAAgBmT,SACpB,KAEJvoB,OAAQ,CACJ5xB,MAAOwC,EAAOovB,SACdma,OAAQ,kEACJ,SAAM2N,EAAoBS,kBAA1B,SACAC,OAAiBrrC,UACrB,OAIhB,GAAG,CAACvM,EAAQqkB,EAAavnB,EAAWo6C,EAAqB1S,EAAiBmT,GAC9E,CDzBIM,IAGA/9C,EAAAA,EAAAA,YAAU,WACN,SAASg+C,EAAsBz1C,GACtBwiC,GAAYV,IAGjB0S,EAAmB1S,GACnB9hC,EAAE8lB,iBACF9lB,EAAE01C,YAAc,GACpB,CAGA,OADA7R,OAAO9rC,iBAAiB,eAAgB09C,GACjC,WACH5R,OAAO7rC,oBAAoB,eAAgBy9C,EAC/C,CACJ,GAAG,CAAC3T,EAAcU,EAASgS,KAE3BlP,EAAAA,EAAAA,gBAAc,WACL9C,GAAYV,GAGjB0S,EAAmB1S,EACvB,IAEA,IAAM6T,EAA8B,YAATrT,EAAqBlrC,EAAEwqB,YAAYg0B,2BAA6Bx+C,EAAEwqB,YAAYi0B,qBACnG,GAAiBrV,EAAAA,GAAAA,2BAAhB3W,aACDisB,GAAqBn2B,EAAAA,EAAAA,cAAY,SAAC3f,GACpC,IAAMqS,EAAQrS,EAAEpG,OAAOyY,OACvB9Q,EAAAA,EAAAA,eAAcugC,GACdC,EAAgB,8UAAID,GAAAA,CAAchhB,KAAMzO,IAC5C,GAAG,CAACyvB,EAAcC,IAEZgU,GAAqBp2B,EAAAA,EAAAA,aAAY,kEAI/B,8BAFApe,EAAAA,EAAAA,eAAcugC,GACdmT,GAAY,GACZ,GAAMprB,EAAa,CACf/uB,GAAIgnC,EAAahnC,GACjBkS,QAAS80B,EAAa90B,QACtB8T,KAAMghB,EAAahhB,KACnBxa,UAAWw7B,EAAax7B,2BAJ5B,SAOAmuC,EAAoB3S,uBACf9hC,EAAAA,OACL3F,EAAU,CACN27C,MAAO,QACPj7C,MAAO3D,EAAEwqB,YAAYq0B,qBACrBh7C,KAAM7D,EAAEwqB,YAAYs0B,sBAAqBpU,aAAAA,EAAAA,EAAchhB,OAAQ1pB,EAAEmG,OAAO44C,WACxE76C,QAAS,CACLa,GAAI,CACApB,MAAO3D,EAAEsE,iCAAiCC,0CAK1Ds5C,GAAY,UAChB,IAAG,CAACnT,EAAcznC,EAAWo6C,EAAqBr9C,EAAEmG,OAAQnG,EAAEwqB,YAAaxqB,EAAEsE,iCAAkCmuB,IAEzGusB,GAAoBz2B,EAAAA,EAAAA,cAAY,WAClC4iB,EAAQ,UACZ,GAAG,CAACA,IAEE8T,GAAS12B,EAAAA,EAAAA,cAAY,WACvB4iB,EAAQ,OACZ,GAAG,CAACA,IAEE6C,GAAWtD,aAAAA,EAAAA,EAAcx7B,WAAYlP,EAAEwqB,YAAYyjB,YAAavD,aAAAA,EAAAA,EAAchhB,OAAQ,GAE5F,OACI,UAAClY,SAAAA,CAAO5G,UAAWgF,eACL,YAATs7B,GACK,SAACgU,KAAAA,CAAGt0C,UAAU,yCAAiCojC,KAE7C,SAACjO,EAAAA,WAAUA,CACPvP,gBAAgB,uBAChBvV,MAAO+yB,EACPpf,SAAU8vB,EACVrU,SAAUuT,IAAYlT,aAAAA,EAAAA,EAAcx7B,WACpCxL,GAAG,0BAIf,UAACtC,MAAAA,CAAIwJ,UAAW2yC,gBACZ,SAAC7yB,GAAAA,OAAMA,CACHtmB,QAAkB,YAAT8mC,EAAqB+T,EAASD,EACvCr0B,QAAQ,YACR0f,SAAUuT,EACVtT,MACKsT,OAEKlrC,EADA,oBAIT6rC,KAEL,SAAC7zB,GAAAA,OAAMA,CACHtmB,QAASu6C,EACTh0B,QAAQ,UACR2f,MACKc,EAEKwS,EACI,eACAlrC,EAHJ,oBAMT1S,EAAEwqB,YAAY20B,yBAKnC,yzEEtIA,IAAMC,GAA4B,6BAAoC,OAAP/1B,s8CCSxD,IAAMg2B,GAAgD,gBAAEpkC,EAAAA,EAAAA,MAAO2T,EAAAA,EAAAA,SAAU0wB,EAAAA,EAAAA,KAASp0B,EAAAA,GAAAA,EAAAA,CAA1BjQ,QAAO2T,WAAU0wB,SACtE,GAAgBv/C,EAAAA,EAAAA,sBAAqB,KAApCyqB,YACqBnI,EAAAA,IAAAA,EAAAA,EAAAA,UAAS,OAA9BqN,EAAqBrN,EAAAA,GAAbsN,EAAatN,EAAAA,GAC0BrH,GAAAA,EAAAA,EAAAA,aAAW,GAA1DC,EAA+CD,EAA/CC,MAAsBskC,EAAyBvkC,EAAzBukC,OACUC,EDXpC,SAA0B9vB,EAAgB+vB,OAsEzCC,EArEE,GAAM3/C,EAAAA,EAAAA,wBAALC,EAC0CyB,GAAAA,EAAAA,EAAAA,iBAAgB,CAAC,SAAU,WAArE4N,EAA0C5N,EAA1C4N,OAAoBC,EAAsB7N,EAAtB6N,OAC6Bs8B,GAAAA,EAAAA,GAAAA,4BAAjD+T,EAAiD/T,EAAjD+T,aAAcC,EAAmChU,EAAnCgU,iBAAkB/T,EAAiBD,EAAjBC,cACjC6T,GAAeG,EAAAA,GAAAA,mBAAkB,iBAAiBT,IACZ/8B,EAAAA,IAAAA,EAAAA,EAAAA,WAAS,MAA9Cy9B,EAAqCz9B,EAAAA,GAArB09B,EAAqB19B,EAAAA,GACZA,EAAAA,IAAAA,EAAAA,EAAAA,UAAqC,IAAE,GAAhE29B,EAAyB39B,EAAAA,GAAf49B,EAAe59B,EAAAA,GAC1B,GAAmBpY,EAAAA,EAAAA,iBAAlBC,eAEDg2C,GAAczkC,EAAAA,EAAAA,UAAQ,WACxB,OAAOukC,EAAShoB,QAAiB,SAAC9jB,EAAQmf,GAItC,OAHIA,EAAK/jB,SAAW29B,GAChB/4B,EAAO6gB,KAAK1B,EAAKhkB,QAEd6E,CACX,GAAG,GACP,GAAG,CAAC8rC,EAAU/S,KAEd5sC,EAAAA,EAAAA,YAAU,oBACS8/C,WAAAA,EAAf,mBACUC,EACAC,EACA9G,qDAFgB,SAAM1N,YAEd,OAFRuU,EAAgB,SAChBC,EAAQD,EAAc7xC,KAAIoD,SAAAA,UAAKA,EAAEjO,MACzB,GAAMk8C,EAAiBS,kBAA/B9G,EAAQ,SACd0G,EAAY1G,GACZwG,GAAkB,UACtB,KANeI,MAAAA,KAAAA,YAAAA,WAAAA,EAAAA,MAAAA,KAAAA,WAOfA,EACJ,GAAG,CAACtU,EAAe+T,IAEnB,IAAMU,GAAwB7kC,EAAAA,EAAAA,UAAQ,kBAAM8kC,EAAAA,GAAAA,WAAS,SAAC5mB,UAAkBgmB,EAAahmB,EAAOylB,MAA4B,OAAM,IAK9H,OAJA/+C,EAAAA,EAAAA,YAAU,WACNigD,EAAsB5wB,EAC1B,GAAG,CAACA,EAAQ4wB,KAEL7kC,EAAAA,EAAAA,UAAQ,WACX,IAAM2O,EAAU41B,EACXzxC,KAAImrC,SAAAA,GACD,IAAM8G,EAAWt2C,EAAewvC,EAAErvC,UAAWqvC,EAAEpvC,UAC/C,MAAO,CACH2Q,MAAOy+B,EAAErqC,OACTxO,QAAS64C,EAAErqC,SAAWg9B,EAAarsC,EAAEwqB,YAAYi2B,GAAGD,GAAYA,EAExE,IAEC/0B,QAAOi1B,SAAAA,OACWhB,EAAf,QAAIhwB,KAAWgwB,SAAkB,QAAlBA,EAAAA,EAAc7c,YAAd6c,IAAAA,OAAAA,EAAAA,EAAoBnG,MAAMntB,MAAK,mBAAE/c,EAAAA,SAAuBqxC,EAAOzlC,WAG1EwkC,IAAkBS,EAAYnxC,SAAS2xC,EAAOzlC,OAKtD,IAEC8O,MAAK,SAAC+tB,EAAIC,UAAOtiC,OAAOsiC,EAAG98B,QAAUoxB,GAAc52B,OAAOqiC,EAAG78B,QAAUoxB,MAE5E,MAAO,CACHjiB,QAAAA,EACA41B,SAAAA,EACA1U,WAAWoU,aAAAA,EAAAA,EAAcpU,YAAawU,IAAkB,EAEhE,GAAG,CACC9/C,EAAEwqB,YACFw1B,EACA91C,EACA41C,EACAL,EACAS,EACAxwB,EACAgwB,SAAkB,QAAlBA,EAAAA,EAAc7c,YAAd6c,IAAAA,OAAAA,EAAAA,EAAoBnG,MACpBmG,aAAAA,EAAAA,EAAcpU,UACde,GAER,CC/D2CmT,CAAiB9vB,EAAQ+vB,GAAzDr1B,EAAgCo1B,EAAhCp1B,QAAS41B,EAAuBR,EAAvBQ,SAAU1U,EAAakU,EAAblU,UAEpBqV,GACF,SAACv/C,MAAAA,WACG,SAAC2vB,EAAAA,gBAAeA,CACZsP,mBAAmB,WACnBnU,MAAO1B,EAAYo2B,wBACnBC,cAAc,QACd90B,gBAAiB+0B,EACjB/1C,KAAK,SAoBjB,OACI,SAACm/B,EAAAA,mVAAWA,CAAAA,CACRjvB,MAAOA,EACP8lC,eAAgBpxB,EAChBf,SAnBa,SAACvf,GAClB,GAAsB,iBAAXA,EACP,MAAM,IAAIukB,MAAM,yBAGpB,IAAMP,EAAO2sB,EAAS9qC,MAAKwkC,SAAAA,UAAKA,EAAErqC,SAAWA,MAC7ClF,EAAAA,EAAAA,eAAckpB,GACdzE,EAAS,CACLlrB,GAAI2vB,EAAKhkB,OACTC,OAAQ+jB,EAAK/jB,OACbjF,UAAWgpB,EAAKhpB,UAChBC,SAAU+oB,EAAK/oB,UAEvB,EAOQ02C,YAAU,EACV52B,QAASA,EACT62B,cAAeN,EACfrB,KAAMA,EACN4B,UAASC,EAAAA,GAAAA,aAAY7B,IAAqBA,IAAbhU,GACzBpgB,GAGhB,k9BC3DO,IAAMk2B,GAA2B,WACpC,IAA4B/+B,EAAAA,IAAAA,EAAAA,EAAAA,WAAkB,MAAvCvX,EAAqBuX,EAAAA,GAAbg/B,EAAah/B,EAAAA,GACY+tB,EAAAA,GAAmB,CAAC,eAAgB,oBAArEpF,EAAiCoF,EAAjCpF,aAAcC,EAAmBmF,EAAnBnF,gBAErB,OACI,SAACoU,GAAcA,CACX7uB,gBAAiBgtB,GAAkB,CAAC1yC,OAAAA,IACpCw2C,eAAgB7D,GAAuB,CAAC3yC,OAAAA,IACxCmQ,MAAO+vB,EAAatnC,GACpBkrB,SAAUyE,SAAAA,UAAQ4X,EAAgB,CAACvnC,GAAI2vB,EAAK3vB,GAAI4L,OAAQ+jB,EAAK/jB,UAC7DgwC,KAAMx0C,EACNy2C,aAAcF,GAG1B,qkGCAO,SAASG,GAAe,WAC3BC,gBAEM,GAAehgD,EAAAA,EAAAA,mBAAdqqC,WACDtqC,GAAeC,EAAAA,EAAAA,iBAAgB,gBACyB2nC,GAAAA,EAAAA,GAAAA,2BAAvD9W,EAAuD8W,EAAvD9W,aAAcC,EAAyC6W,EAAzC7W,gBAAiBI,EAAwByW,EAAxBzW,qBASlCyd,EAAAA,GAAmB,CACnB,eACA,UACA,kBACA,eACA,OACA,eACA,gBAdA1F,EAOA0F,EAPA1F,aACAS,EAMAiF,EANAjF,QACAR,EAKAyF,EALAzF,gBACAK,EAIAoF,EAJApF,aACAE,EAGAkF,EAHAlF,KACAK,EAEA6E,EAFA7E,aACAC,EACA4E,EADA5E,YAWE,GAAcxoC,EAAAA,EAAAA,yBAAbC,UACDy+C,GCxCC3R,EAAAA,EAAAA,yBAAwB9G,IDyCzB0Y,EEpCH,WACH,IAAM,GAAc3+C,EAAAA,EAAAA,yBAAbC,UACyDlD,GAAAA,EAAAA,EAAAA,sBAAqB,KAA9EyqB,EAAyDzqB,EAAzDyqB,YAAarkB,EAA4CpG,EAA5CoG,OAAQ7B,EAAoCvE,EAApCuE,iCACtB,GAAiB8kC,EAAAA,GAAAA,2BAAhB5W,aACDmY,EAAkByF,GAAmB,mBAG3C,OAAO7nB,EAAAA,EAAAA,cAAY,SAACtZ,GAChBhM,EAAU,CACN27C,MAAO,UACPj7C,MAAO6mB,EAAYo3B,wBACnB/9C,KAAM2mB,EAAYq3B,wBAAwB5yC,EAAOya,MACjDxlB,QAAS,CACLa,GAAI,CACApB,MAAOwC,EAAOspC,SACdC,OAAQ,mEACJvlC,EAAAA,EAAAA,eAAc8E,EAAOvL,qBAEjB,gCAAM8uB,EAAavjB,EAAOvL,mBAA1B,SACAinC,OAAgBj4B,uBACXylB,EAAAA,OACLl1B,EAAU,CACN27C,MAAO,QACPj7C,MAAOwC,EAAOspC,SACd5rC,KAAM2mB,EAAYs3B,aAAa7yC,EAAOya,MACtCxlB,QAAS,CACLa,GAAI,CACApB,MAAOW,EAAiCC,gDAK5D,KAEJgxB,OAAQ,CACJ5xB,MAAOwC,EAAOovB,YAI9B,GAAG,CAACpvB,EAAQqkB,EAAalmB,EAAkCkuB,EAAcvvB,EAAW0nC,GACxF,CFJoCoX,GAE1BC,GAA2Bz5B,EAAAA,EAAAA,cAAY,WACzCm5B,EAAqB,CACjBxY,UAAW,SAACU,GACR,IAAMqY,EAAkB9yC,GAAsB,CAC1C3N,aAAAA,EACA4N,SAAUw6B,EAAUlmC,GACpB2L,OAAQ27B,EAAatnC,GACrB4L,OAAQ07B,EAAa17B,OACrBC,MAAM,IAEVi8B,SAAAA,EAAa0W,YAAYD,EAAiBrY,EAAUlmC,GACxD,GAER,GAAG,CAACg+C,EAAsB1W,EAAatnC,GAAIsnC,EAAa17B,OAAQ9N,EAAcgqC,IAGxE2W,GAAa55B,EAAAA,EAAAA,cAAY,YAC3Bpe,EAAAA,EAAAA,eAAcugC,GAEd,IAAM0X,EAAWjzC,GAAsB,CACnC3N,aAAAA,EACA4N,SAAUs7B,EAAahnC,GACvB2L,OAAQ27B,EAAatnC,GACrB4L,OAAQ07B,EAAa17B,OACrBC,MAAM,IAGVi8B,SAAAA,EAAa0W,YAAYE,EAAU1X,EAAahnC,IAChD+9C,EAAgBtmC,UACpB,GAAG,CAACuvB,EAAcM,EAAatnC,GAAIsnC,EAAa17B,OAAQ9N,EAAcigD,EAAiBjW,IAEjF,GAAMzrC,EAAAA,EAAAA,wBAALC,EAEDqiD,GAAkB95B,EAAAA,EAAAA,aAAY,mBAItB+5B,EAEAC,sDALVp4C,EAAAA,EAAAA,eAAcugC,aAAAA,EAAAA,EAAchnC,IAC5B6nC,GAAa,oBAEY,gCAAMhZ,EAAgBmY,EAAahnC,mBAAlD4+C,EAAe,SAEfC,EAAmBpzC,GAAsB,CAC3C3N,aAAAA,EACA4N,SAAUkzC,EAAa5+C,GACvB2L,OAAQ27B,EAAatnC,GACrB4L,OAAQ07B,EAAa17B,OACrBC,KAAe,SAAT27B,IAGVM,SAAAA,EAAa0W,YAAYK,EAAkBD,EAAa5+C,wBACnDoF,EAAAA,OACL7F,EAAU,CACN27C,MAAO,QACPj7C,MAAO3D,EAAEwqB,YAAYg4B,iBACrB3+C,KAAM7D,EAAEwqB,YAAYi4B,gBAAgB/X,EAAahhB,MACjDxlB,QAAS,CACLa,GAAI,CACApB,MAAO3D,EAAEsE,iCAAiCC,0CAK1DgnC,GAAa,GACbkW,EAAgBtmC,kBACpB,IAAG,CACCuvB,EACAnY,EACA2Y,EACAjoC,EACA+nC,EAAatnC,GACbsnC,EAAa17B,OACb9N,EACA+pC,EACAkW,EACAzhD,EAAEwqB,YACFxqB,EAAEsE,iCACFknC,IAGEkX,GAAen6B,EAAAA,EAAAA,aAAY,kDAC7Bpe,EAAAA,EAAAA,eAAcugC,GACd+W,EAAgBtmC,WAChBwmC,EAAwBjX,SAC5B,IAAG,CAACA,EAAciX,EAAyBF,IAGrCkB,GAAuBp6B,EAAAA,EAAAA,aAAY,mEACrCpe,EAAAA,EAAAA,eAAcugC,IACdvgC,EAAAA,EAAAA,eAAcugC,EAAahnC,IAC3B+9C,EAAgBtmC,WAChBowB,GAAa,oBAET,gCAAM5Y,EAAqB+X,EAAahnC,mBAAxC,6BACKkF,EAAAA,OACL3F,EAAU,CACN27C,MAAO,QACPj7C,OAAO+mC,aAAAA,EAAAA,EAAc5G,UACf9jC,EAAEwqB,YAAYo4B,wBACd5iD,EAAEwqB,YAAYq4B,sBACpBh/C,MAAM6mC,aAAAA,EAAAA,EAAc5G,UACd9jC,EAAEwqB,YAAYs4B,uBAAuBpY,EAAahhB,MAClD1pB,EAAEwqB,YAAYu4B,qBAAqBrY,EAAahhB,MACtDxlB,QAAS,CACLa,GAAI,CACApB,MAAO3D,EAAEsE,iCAAiCC,0CAK1DgnC,GAAa,UACjB,IAAG,CAACb,EAAc+W,EAAiBlW,EAAc5Y,EAAsB1vB,EAAWjD,EAAEwqB,YAAaxqB,EAAEsE,mCAE7F0+C,GAAez6B,EAAAA,EAAAA,cAAY,YAC7Bpe,EAAAA,EAAAA,eAAcugC,GACd+W,EAAgBtmC,YAEhB8nC,EAAAA,EAAAA,kBAAiBvY,EAAc,eAC/B+W,EAAgBtmC,UACpB,GAAG,CAACsmC,EAAiB/W,IAEfwY,GAAe36B,EAAAA,EAAAA,aAAY,mBAInB46B,EAEWvZ,EACXwZ,qDANV7X,GAAa,GACbkW,EAAgBtmC,4BAES,iCAAMkoC,EAAAA,EAAAA,4BAGJ,OAHjBF,EAAe,UACrBh5C,EAAAA,EAAAA,eAAcg5C,GACgBA,EAAvBz/C,GAAUkmC,EAAAA,GAAauZ,EAAAA,CAAvBz/C,OACgB,GAAM4uB,EAAasX,kBAApCwZ,EAAiB,SACvBzY,EAAgByY,GAChBjY,EAAQ,4BACHviC,EAAAA,OACL3F,EAAU,CACN27C,MAAO,QACPj7C,MAAO3D,EAAEwqB,YAAY84B,cACrBz/C,KAAM7D,EAAEwqB,YAAY+4B,eACpBr/C,QAAS,CACLa,GAAI,CACApB,MAAO3D,EAAEsE,iCAAiCC,0CAK1DgnC,GAAa,UACjB,IAAG,CAACA,EAAckW,EAAiBnvB,EAAcqY,EAAiBQ,EAASloC,EAAWjD,EAAEwqB,YAAaxqB,EAAEsE,mCAEjG4K,EAAYw7B,aAAAA,EAAAA,EAAcx7B,UAEhC,OAAOuM,EAAAA,EAAAA,UAAQ,WACX,IAAM2O,EAAwB,GAgB9B,OAfI0hB,EAAWK,2BACX/hB,EAAQ2K,KACJ,CACIl0B,QAASb,EAAEwqB,YAAYg5B,WACvBp+B,IAAKplB,EAAEwqB,YAAYg5B,WACnBphC,SAAU4/B,GAEd,CACInhD,QAASb,EAAEwqB,YAAYi5B,YACvBr+B,IAAKplB,EAAEwqB,YAAYi5B,YACnBrhC,SAAU+/B,IAKlBjzC,IAGA48B,EAAWK,2BACX/hB,EAAQ2K,KACJ,CACIl0B,QAASb,EAAEwqB,YAAYg4B,iBACvBp9B,IAAKplB,EAAEwqB,YAAYg4B,iBACnBpgC,SAAUigC,GAEd,CACIxhD,QAASb,EAAEwqB,YAAYk5B,cACvBt+B,IAAKplB,EAAEwqB,YAAYk5B,cACnBthC,SAAUsgC,GAEd,CACI7hD,QAASb,EAAEwqB,YAAYm5B,cACvBv+B,IAAKplB,EAAEwqB,YAAYm5B,cACnBvhC,SAAU4gC,GAEd,CACIniD,QAASb,EAAEwqB,YAAY84B,cACvBl+B,IAAKplB,EAAEwqB,YAAY84B,cACnBlhC,SAAU8gC,IAKlBpX,EAAWM,kCACXhiB,EAAQ2K,KACJ,CACIl0B,SAAS6pC,aAAAA,EAAAA,EAAc5G,UACjB9jC,EAAEwqB,YAAYo4B,wBACd5iD,EAAEwqB,YAAYq4B,sBACpBz9B,KAAKslB,aAAAA,EAAAA,EAAc5G,UACb9jC,EAAEwqB,YAAYo4B,wBACd5iD,EAAEwqB,YAAYq4B,sBACpBzgC,SAAUugC,KApCXv4B,CAyCf,GAAG,CACCpqB,EAAEwqB,YACFw3B,EACAG,EACAjzC,EACA48B,EAAWK,0BACXL,EAAWM,iCACXiW,EACAK,EACAM,EACAE,EACAxY,aAAAA,EAAAA,EAAc5G,SACd6e,GAER,CG/PO,IAAMiB,GAAuB,WAChC,IAAM,GAAM7jD,EAAAA,EAAAA,wBAALC,EACDyhD,GAAkBzmC,EAAAA,EAAAA,cAClB0vB,EAAe0F,GAAmB,gBAClCyT,EAAcrC,GAAe,CAACC,gBAAAA,IAE9BvyC,EAAYw7B,aAAAA,EAAAA,EAAcx7B,UAEhC,OACI,UAACsC,SAAAA,CAAO5G,UAAU,mGACd,UAACxJ,MAAAA,CAAIwJ,UAAU,+BACX,SAACs0C,KAAAA,CAAGt0C,UAAU,6CAAqCsE,EAAYlP,EAAEwqB,YAAYyjB,WAAavD,aAAAA,EAAAA,EAAchhB,QACvGghB,aAAAA,EAAAA,EAAc5G,YAAa50B,IAAa,SAAC40C,EAAAA,UAASA,CAACl5C,UAAU,SAC7DsE,IAAa,SAACkyC,GAAcA,CAAAA,OAEjC,SAAChgD,MAAAA,CAAIwJ,UAAU,gBACV,EAAa0L,OAAS,IACnB,SAACytC,EAAAA,YAAWA,CACRC,YAAa,CACTpiB,QAAS5hC,EAAEwqB,YAAYy5B,QAE3BtI,MAAM,MACNvxB,QAASy5B,QAMjC,EC5BaK,GAA6C,YAGtD,MAAa,eAFbhZ,EAAAA,MAGW,SAAC0Y,GAAgBA,CAAAA,IAGrB,SAACjG,GAAYA,CAAAA,EACxB,ECVawG,IAAkB13B,EAAAA,GAAAA,MAA6B,MAC/C23B,IAAyB33B,EAAAA,GAAAA,MAGnC,CACS3d,OAAQ,KACRqK,aAAcyxB,GAAAA,6GCPnB,IAAMyZ,GAAa,WACtB,IAAMC,GAAWl8C,EAAAA,EAAAA,QAAyB,MAEpCm8C,GAAS9oC,EAAAA,EAAAA,UAAQ,kBAAM8kC,EAAAA,GAAAA,WAAS,eAClC+D,EAAgB,QAAhBA,EAAAA,EAASr8C,eAATq8C,IAAAA,GAAAA,EAAkBE,MACtB,GAAG,IAAO,CAACC,SAAS,MAAQ,IACtBC,GAAiBC,EAAAA,GAAAA,YAAWR,IAelC,OAbA9jD,EAAAA,EAAAA,YAAU,WACNqkD,EAAe,CACXznC,MAAO,WACHsnC,IACA,IAAM7gD,EAAKwF,aAAY,kBAAMq7C,MAAU,KAEvC,MAAO,CACHK,KAAM,kBAAMz7C,cAAczF,IAElC,GAER,GAAG,CAAC6gD,EAAQG,KAGR,UAACG,QAAAA,CAAM9oC,IAAKuoC,aACR,SAAC/8C,SAAAA,CAAOu9C,IAAKC,MACb,SAACx9C,SAAAA,CAAOu9C,IAAKE,OAGzB,EC9BaC,IAA6BC,UAAAA,iBACtC,SAACtvC,UAAgCA,KACjCA,SAAAA,UAAWA,EAAQoiB,QAA6D,SAAC9jB,EAAQpF,GACrF,IAAMs1B,EASd,SAAmCn1B,GAC/B,KAAM,iBAAkBA,KAAYA,EAAOm1B,eAAiBn1B,EAAOm1B,aAAa5+B,KAC5E,OAGJ,IAAM2/C,EAA2D,CAAC,EAElE,OAAQl2C,EAAOm1B,aAAa5+B,MACxB,IAAK,cACD2/C,EAAmBC,cAAeC,EAAAA,GAAAA,MAAKp2C,EAAOm1B,aAAaC,KAC3D8gB,EAAmBG,yBAA2Br2C,EAAOm1B,aAAaiB,YAClE8f,EAAmBI,0BAA4Bt2C,EAAOm1B,aAAaohB,aACnE,MAEJ,IAAK,aACL,IAAK,aACL,IAAK,eACL,IAAK,WACL,IAAK,eACL,IAAK,UACDL,EAAmBM,YAAc,GAEjC,IAAMC,GAAYC,EAAAA,GAAAA,WAAU12C,EAAOm1B,aAAaC,KAChDqhB,EAAUlhB,MAAQ,IAElB,IAcgCv1B,EACMA,EAflC22C,GAAsB,EAa1B,GAZAF,EAAUzmC,QAAQwC,SAAQ,SAACsc,EAAQ1nB,GAC/BwvC,GAAoB9nB,GAEG,QAAnBA,EAAOuG,WACPvG,EAAOuG,SAAW,mBAEC,kBAAnBvG,EAAOuG,WACPvG,EAAOuG,SAAW,2BAClBshB,EAAqBvvC,EAE7B,IAEoB,SAAhBpH,EAAOzJ,KACPkgD,EAAUI,gBAA8B,QAAZ72C,EAAAA,EAAOu1B,aAAPv1B,IAAAA,OAAAA,EAAAA,EAAcg2B,QAC1CygB,EAAUK,sBAAoC,QAAZ92C,EAAAA,EAAOu1B,aAAPv1B,IAAAA,OAAAA,EAAAA,EAAci2B,gBAEzB,GAAvB0gB,GACAI,GACIN,EAAUzmC,QACV2mC,EAAqB,EACrB,CACIliD,IAAKkiD,EAAqB,GAAGvmD,WAC7BilC,SAAU,8BAKtB0hB,GACIN,EAAUzmC,QACVymC,EAAUzmC,QAAQ3I,OAAS,EAC3B,CACI5S,IAAKgiD,EAAUzmC,QAAQ3I,OAAS,GAAGjX,WACnCilC,SAAU,cAIlB6gB,EAAmBM,YAAY1wB,KAAK2wB,GAEH,aAA7Bz2C,EAAOm1B,aAAa5+B,OACpB2/C,EAAgC,YAAI,CAChC,6BACA,2BACA,4BACA,wCAIR,MAEJ,IAAK,eACDA,EAAmBc,cAAgB,GAEnC,IAAMC,GAAcP,EAAAA,GAAAA,WAAU12C,EAAOm1B,aAAaC,KAClD6hB,EAAY1hB,MAAQ,IAEpB,IAAI2hB,GAA2B,EAC/BD,EAAYjnC,QAAQwC,SAAQsc,SAAAA,GACxB8nB,GAAoB9nB,GAEI,0BAApBA,EAAOuG,WACP6hB,EAA0BC,SAASroB,EAAOr6B,IAAM,KAChDq6B,EAAOuG,SAAW,2BAE1B,IAEI6hB,GAA2B,GAC3BH,GACIE,EAAYjnC,QACZinC,EAAYjnC,QAAQ3I,OAAS,EAC7B,CACI5S,IAAKwiD,EAAYjnC,QAAQ3I,OAAS,GAAGjX,WACrCilC,SAAU,8BAKtB6gB,EAAmBc,cAAclxB,KAAKmxB,GAI9C,OAAOf,CACX,CApH6BkB,CAA0Bv3C,GAI/C,OAHIs1B,IACAlwB,EAAOpF,EAAOpL,IAAM0gC,GAEjBlwB,CACX,GAAG,CAAC,MAkHR,SAAS8xC,GAAa/mC,EAAc+pB,EAAejL,GAC/C9e,EAAQ2vB,OAAO5F,EAAQ,EAAG,EAAGjL,EACjC,CAEA,SAAS8nB,GAAsC9nB,GACvC,QAASA,UACFA,EAAO3hB,IAGd,aAAc2hB,UACPA,EAAOuoB,SAGd,UAAWvoB,UACJA,EAAO0G,KAEtB,i9BC7IO,IAAM8hB,GACE,SACP5iC,UAIAA,EACM,CACE,YAIAS,OAAO+S,QAAQxT,GAAoB,CAAC,GAAGqU,QACnC,SAACmE,EAAK,iBAAC/W,EAAAA,EAAAA,GAAKnK,EAAAA,EAAAA,UAAWkhB,EAAM/W,EAAMyU,KAAKC,UAAU7e,KAClD,KAGN,CAAC,cAjBFsrC,GAkBO,iBAAM,CAAC,03CCIpB,IAAMC,GAAkB,CAC3BC,aAAaC,EAAAA,EAAAA,wBAAuB,CAAC,2BACrCC,YAAYD,EAAAA,EAAAA,wBAAuB,CAAC,2BACpCE,cAAcF,EAAAA,EAAAA,wBAAuB,CAAC,8BCrBnC,SAASG,GAAgBrhD,GAC5B,IAAM2jB,GAAeC,EAAAA,EAAAA,mBAErB,OAAO3N,EAAAA,EAAAA,UAAQ,WAGX,OAFkB+qC,GAAgBhhD,GAEjB+I,KAAI6W,SAAAA,GACjB,MAAQ,CAACiF,KAAMlB,EAAa/D,GAAKuE,QAAS1O,MAAOmK,EACrD,GACJ,GAAG,CAAC+D,EAAc3jB,GACtB,64BCbO,SAASshD,GAAoBh4C,EAAiCiH,IACjE5L,EAAAA,EAAAA,eAAc2E,IACdi4C,EAAAA,EAAAA,YAAWj4C,EAAOpL,KAAOqS,EAAiB,6BAC9C,CAcO,SAASixC,GAAqChX,EAAkB3gC,GACnE,MAAO,CACH7J,KAAM,eACN6+B,IAAK,SAdF,CACHkC,UAAW,IACXE,iBAAkB,KAClBD,aAAc,GACdhC,MAAO,IACP6B,SAAU,IACVC,UAAW,MACX/B,SAAU,KAQH0iB,CACHhoC,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,6BAGlB5gC,GAAIssC,EACJkX,QAAS73C,IAGrB,CAEO,SAAS83C,GAAqCnX,EAAkB3gC,GACnE,MAAO,CACH7J,KAAM,eACN6+B,IAAK,SA/BF,CACHkC,UAAW,IACXE,iBAAkB,KAClBD,aAAc,GACdhC,MAAO,IACP6B,SAAU,IACVC,UAAW,MACX/B,SAAU,KAyBH0iB,CACHhoC,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,aAEd,CACI5gC,GAAI,IACJ4gC,SAAU,aAEd,CACI5gC,GAAI,IACJ4gC,SAAU,eAGlB5gC,GAAIssC,EACJkX,QAAS73C,IAGrB,CAEO,SAAS+3C,GAAkCpX,EAAkB3gC,GAChE,MAAO,CACH7J,KAAM,aACN6+B,IAAK,SAxDF,CACHkC,UAAW,IACXE,iBAAkB,KAClBD,aAAc,GACdhC,MAAO,IACP6B,SAAU,IACVC,UAAW,MACX/B,SAAU,KAkDH0iB,CACHhoC,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,2BAGlB5gC,GAAIssC,EACJkX,QAAS73C,IAGrB,CAEO,SAASg4C,GAAgCrX,EAAkB3gC,GAC9D,MAAO,CACH7J,KAAM,WACN6+B,IAAK,SAzEF,CACHkC,UAAW,IACXE,iBAAkB,KAClBD,aAAc,GACdhC,MAAO,IACP6B,SAAU,IACVC,UAAW,MACX/B,SAAU,KAmEH0iB,CACHhoC,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,4BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,6BAEd,CACI5gC,GAAI,IACJ4gC,SAAU,+BAEd,CAAC5gC,GAAI,IACD4gC,SAAU,wCAElB5gC,GAAIssC,EACJkX,QAAS73C,IAGrB,wzCClGA,IAAMi4C,GAAa,aAONC,GAAsD,gBAAE34B,EAAAA,EAAAA,SAAU3T,EAAAA,EAAAA,MACrE,GAAMlb,EAAAA,EAAAA,wBAALC,EACqBqiB,EAAAA,IAAAA,EAAAA,EAAAA,UAAS,OAA9BqN,EAAqBrN,EAAAA,GAAbsN,EAAatN,EAAAA,GACtBmlC,GAAoB/rC,EAAAA,EAAAA,UAAQ,mBAAMR,GAAQmJ,OAAO8X,OAAOjhB,GAAOmV,MAAMsL,WAAkB,CAACzgB,IAExFwsC,GAAkBhsC,EAAAA,EAAAA,UAAQ,iBAAM,CAAC,CACnCR,MAAO,OACPpa,QAASb,EAAEwqB,YAAYk9B,oBACxB,CACCzsC,MAAO,QACPpa,QAASb,EAAEwqB,YAAYm9B,qBACxB,CACC1sC,MAAO,kBACPpa,QAASb,EAAEwqB,YAAYo9B,+BACxB,CACC3sC,MAAO,YACPpa,QAASb,EAAEwqB,YAAYq9B,4BAC0C,CAAC7nD,EAAEwqB,cAElEJ,GAAU3O,EAAAA,EAAAA,UAAQ,WACpB,MAAO,CACH,CAACR,MAAOqsC,GAAYzmD,QAASb,EAAEwqB,YAAYs9B,eADxC,OAEH,GAAIN,EAAoB,GAAKC,IAC/Bh8B,QAAO,mBAAE5qB,EAAAA,QAAqBovB,cAAclhB,SAAS2gB,EAAOO,iBAClE,GAAG,CAACw3B,EAAiBD,EAAmB93B,EAAQ1vB,EAAEwqB,cAE5Cu9B,GAActsC,EAAAA,EAAAA,UAAQ,kBACxB+rC,EACM,CAACF,IACDljC,OAAO+S,QAAQlc,GAAS,CAAC,GAAGwQ,QAAO,0BAAErS,EAAAA,UAAG8d,EAAAA,MAAU3oB,KAAI,2BAAE6W,QAChE,CAACoiC,EAAmBvsC,IAGhBqN,GAAeC,EAAAA,EAAAA,cAAY,SAACy/B,GAC1BA,EAAiBj5C,SAASu4C,IAC1B14B,EAAS,CACLkW,OAAO,EACPE,WAAW,EACXH,MAAM,EACNE,iBAAiB,IAIzBnW,EAASo5B,EAAiBhwB,QAA6B,SAACmE,EAAKukB,GAIzD,OAHIA,KAAUvkB,IACVA,EAAIukB,IAAwC,GAEzCvkB,CACX,GAAG,CACC2I,OAAO,EACPE,WAAW,EACXH,MAAM,EACNE,iBAAiB,IAEzB,GAAG,CAACnW,IAEJ,OACI,SAACq5B,EAAAA,iBAAgBA,CACb/7B,MAAOlsB,EAAEwqB,YAAY09B,cACrB99B,QAASA,EACT42B,YAAU,EACVD,eAAgBpxB,EAChB1U,MAAO8sC,EACPn5B,SAAUtG,GAGtB,yzCCzEA,IAAM6/B,GAAY,YAOLC,GAA0C,gBAAEx5B,EAAAA,EAAAA,SAAU3T,EAAAA,EAAAA,MACzD,GAAMlb,EAAAA,EAAAA,wBAALC,EACD,GAAkB4rC,EAAAA,GAAAA,4BAAjBC,cACyBgU,GAAAA,EAAAA,GAAAA,mBAAkB,CAAC,QAAS,mBAArDQ,EAAyBR,EAAzBQ,MAAOgI,EAAkBxI,EAAlBwI,eACchmC,EAAAA,IAAAA,EAAAA,EAAAA,UAAS,OAA9BqN,EAAqBrN,EAAAA,GAAbsN,EAAatN,EAAAA,GACtBimC,GAAmB7sC,EAAAA,EAAAA,UAAQ,kBAAO4kC,GAAS,IAAIjwB,OAAMvD,SAAAA,UAAK5R,EAAMlM,SAAS8d,EAAEnpB,SAAM,CAAC28C,EAAOplC,KAE/F5a,EAAAA,EAAAA,YAAU,WACNwrC,GACJ,GAAG,CAACA,IAEJ,IAAMzhB,GAAU3O,EAAAA,EAAAA,UAAQ,WACpB,IAAM8sC,GAAgBlI,GAAS,IAAI9xC,KAAI4kB,SAAAA,SAAS,CAC5ClY,MAAOkY,EAAKzvB,GACZ7C,QAASsyB,EAAKzJ,SAGlB,MAAO,CACH,CAACzO,MAAOktC,GAAWtnD,QAASb,EAAEwqB,YAAYg+B,cADvC,OAEH,GAAIF,EAAmB,GAAKC,IAC9B98B,QAAO,mBAAE5qB,EAAAA,QAAqBovB,cAAclhB,SAAS2gB,EAAOO,iBAClE,GAAG,CAACowB,EAAOiI,EAAkB54B,EAAQ1vB,EAAEwqB,cAEjCu9B,GAActsC,EAAAA,EAAAA,UAAQ,WACxB,OAAI4sC,EACO,GAGJC,EACD,CAACH,IACDltC,CACV,GAAG,CAACqtC,EAAkBD,EAAgBptC,IAGhCqN,GAAeC,EAAAA,EAAAA,cAAY,SAACy/B,GAC1BA,EAAiBj5C,SAASo5C,IAC1Bv5B,GAASyxB,aAAAA,EAAAA,EAAO9xC,KAAI,mBAAE7K,EAAAA,QAAe,IAGzCkrB,EAASo5B,EACb,GAAG,CAAC3H,EAAOzxB,IAEX,OACI,SAACq5B,EAAAA,iBAAgBA,CACb/7B,MAAOlsB,EAAEwqB,YAAYi+B,aACrBr+B,QAASA,EACTigB,SAAUge,EACVrH,YAAU,EACVD,eAAgBpxB,EAChB1U,MAAO8sC,EACPn5B,SAAUtG,GAGtB,EC9DO,SAASogC,GAAwBljD,GACpC,IAAM8+B,EAAoB,eAAT9+B,EAAwB,kBAAoB,OAE7D,OAAOiW,EAAAA,EAAAA,UAAQ,iBAAM,CAAC,CAClB/X,GAAI,IACJ4gC,SAAAA,EACAloB,IAAc,eAAT5W,EAAwB,OAAS,UACtC,CAAC8+B,EAAU9+B,GACnB,sqGCoEA,IAmDamjD,GAAgD,gBA6BvCC,EACCA,EACUA,EACNA,EAGFA,EACOA,EAnC5B7/B,EAAAA,EAAAA,QACA8/B,EAAAA,EAAAA,kBACAC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,WACGC,EAAAA,GAAAA,EAAAA,CAJHjgC,UACA8/B,oBACAC,UACAC,eAGM,GAAMhpD,EAAAA,EAAAA,wBAALC,EAED4oD,GAAmBntC,EAAAA,EAAAA,UAAQ,WAC7B,GAAIstC,EACA,OA7DFE,EAAah6C,OADAA,EA8DU85C,IA7DU,QAApB95C,EAAAA,EAAQm1B,oBAARn1B,IAAAA,GAAyB,QAAzBA,EAAAA,EAAsBo1B,WAAtBp1B,IAAAA,OAAAA,EAAAA,EAA2BgQ,QAAQ1Q,KAAI,SAAC26C,EAAKlgB,OACtC/5B,EAAAA,EAAAA,EAAhBk6C,EAAgBl6C,SAAoB,QAApBA,EAAAA,EAAQm1B,oBAARn1B,IAAAA,GAAyB,QAAzBA,EAAAA,EAAsBo1B,WAAtBp1B,IAAAA,GAAgC,QAAhCA,EAAAA,EAA2Bw1B,aAA3Bx1B,IAAAA,OAAAA,EAAAA,EAAkCiG,MAAK,gBAAEwvB,EAAAA,EAAAA,GAC3D,OAAOjvB,OAAOivB,KAAQsE,EAAQ,CAClC,IACA,OAAO,SACAkgB,GAAAA,CACH9sC,KAAM+sC,aAAAA,EAAAA,EAAe/sC,MAA0B,OAC/CqoB,MAAOuE,EAAQ,GAEvB,IACO,CACHrlC,MAAOsL,aAAAA,EAAAA,EAAQtL,MACfmmB,mBAAoB7a,aAAAA,EAAAA,EAAQ01B,WAC5BtI,SAASspB,EAAAA,GAAAA,WAAU12C,SAAoB,QAApBA,EAAAA,EAAQm1B,oBAARn1B,IAAAA,GAAyB,QAAzBA,EAAAA,EAAsBo1B,WAAtBp1B,IAAAA,OAAAA,EAAAA,EAA2Bs1B,UAC9C6kB,YAAYzD,EAAAA,GAAAA,WAAU12C,aAAAA,EAAAA,EAAQ21B,aAC9BJ,OAAOmhB,EAAAA,GAAAA,WAAU12C,aAAAA,EAAAA,EAAQu1B,OACzB3a,gBAAgB87B,EAAAA,GAAAA,WAAU12C,SAAoB,QAApBA,EAAAA,EAAQm1B,oBAARn1B,IAAAA,GAAyB,QAAzBA,EAAAA,EAAsBo1B,WAAtBp1B,IAAAA,OAAAA,EAAAA,EAA2Bu1B,OACrDvlB,QAASgqC,GAlBK,IAACh6C,EACAA,EAAAA,EAaIA,EAAAA,EAGOA,EAAAA,EAhBxBg6C,CAgEN,GAAG,CAACF,IAEEM,EAAiBX,GAAwB,cACzC,GAAU7I,EAAAA,GAAAA,mBAAkB,CAAC,UAA5BQ,MAMH5d,GAAAA,EAAAA,GAAAA,SAA0C,CAE1CC,cAAe,CACX/+B,OAAOilD,aAAAA,EAAAA,EAAkBjlD,QAAS3D,EAAEspD,6BAA6BC,aACjEltB,SAASusB,aAAAA,EAAAA,EAAkBvsB,UAAWgkB,EAAM9xC,KAAI,mBAAE7K,EAAAA,MAClD0lD,WAAY,CACRvkB,MAA6C,KAAvC+jB,SAA4B,QAA5BA,EAAAA,EAAkBQ,kBAAlBR,IAAAA,OAAAA,EAAAA,EAA8B/jB,MACpCC,OAA+C,KAAxC8jB,SAA4B,QAA5BA,EAAAA,EAAkBQ,kBAAlBR,IAAAA,OAAAA,EAAAA,EAA8B9jB,OACrCC,iBAAmE,KAAlD6jB,SAA4B,QAA5BA,EAAAA,EAAkBQ,kBAAlBR,IAAAA,OAAAA,EAAAA,EAA8B7jB,iBAC/CC,WAAuD,KAA5C4jB,SAA4B,QAA5BA,EAAAA,EAAkBQ,kBAAlBR,IAAAA,OAAAA,EAAAA,EAA8B5jB,YAE7CR,MAAO,CACHS,SAAS2jB,SAAuB,QAAvBA,EAAAA,EAAkBpkB,aAAlBokB,IAAAA,OAAAA,EAAAA,EAAyB3jB,WAAW,EAC7CC,gBAAgB0jB,SAAuB,QAAvBA,EAAAA,EAAkBpkB,aAAlBokB,IAAAA,OAAAA,EAAAA,EAAyB1jB,kBAAkB,GAE/Dpb,oBAA6D,KAAzC8+B,aAAAA,EAAAA,EAAkB9+B,oBACtCD,gBAAgB++B,aAAAA,EAAAA,EAAkB/+B,iBAzCnB,EA0Cf5K,SAAS2pC,aAAAA,EAAAA,EAAkB3pC,UAAWoqC,KApB1C5pB,EAGAgD,EAHAhD,QACAmD,EAEAH,EAFAG,aACApD,EACAiD,EADAjD,SAsBG5B,GAAqBkC,EAAAA,GAAAA,eAAc,CACtCpW,KAAM,QACN+V,QAAAA,IAFG7B,MAKAA,GAAyBkC,EAAAA,GAAAA,eAAc,CAC1CpW,KAAM,iBACN+V,QAAAA,IAFG7B,MAKAA,GAA6BkC,EAAAA,GAAAA,eAAc,CAC9CpW,KAAM,qBACN+V,QAAAA,IAFG7B,MAMHA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,UACN+V,QAAAA,IAHA7B,MAOAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,aACN+V,QAAAA,IAHA7B,MAOAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,gBACN+V,QAAAA,IAHA7B,MAOAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,uBACN+V,QAAAA,IAHA7B,MAM2B1Q,GAAAA,EAAAA,GAAAA,cAAak3B,IAArCt1C,EAAwBoe,EAAxBpe,OAAQqK,EAAgB+T,EAAhB/T,aAETqwC,GAAO/tC,EAAAA,EAAAA,UAAQ,kBAAMmnB,EAAa,+BAAMnK,sCAC1CquB,GAAoBh4C,EAAQ+5C,GAC5B1vC,EAAa,IACT3T,KAAM,QAvHO,SAACujD,EAA8CrlD,GACpE,IAAM+lD,EAAWV,EAAW9pC,QAAQ+Y,QAA8C,SAACmE,EAAK4B,EAAQiL,GAC5F,OAAIjL,EAAO3hB,KAAsB,SAAf2hB,EAAO3hB,IACd,GAAI+f,GAAAA,OAAJ,CAAS,CAACuI,GAAIh1B,OAAOs5B,EAAQ,GAAI5sB,IAAK2hB,EAAO3hB,OAEjD+f,CACX,GAAG,IACH,MAAO,CACHx4B,MAAOolD,EAAWplD,OAAS,GAC3BghC,WAAYokB,EAAWj/B,mBACvB8a,YAAamkB,EAAWK,WACxB5kB,MAAOukB,EAAWvkB,MAClBJ,aAAc,CACV5+B,KAAM,aACN6+B,IAAK,CACD3gC,GAAAA,EACA6gC,SAAUwkB,EAAW1sB,QACrBmI,MAAOukB,EAAWl/B,eAClB5K,QAAS8pC,EAAW9pC,QAAQ1Q,KAAI,SAAC26C,EAAKQ,UAAS,SAAIR,GAAAA,CAAKxlD,GAAIgM,OAAOg6C,EAAM,QACzEjlB,MAAOglB,IAIvB,CAiGeE,CAAiBlxB,EAAU3pB,EAAOpL,KAClCkmD,EAAAA,GAAAA,MACC96C,EACA,KACA,IACA,IACA,QACA,SACA,mBAIRg6C,SAAAA,IACA//B,UACJ,mMAlB8C0P,mCAAN,MAkBpC,CAACmK,EAAc9zB,EAAQ+5C,EAAmB1vC,EAAc2vC,EAAS//B,IAE/DqB,EAAUy8B,GAAgB,cAC1B5nC,GAAU2gB,EAAAA,GAAAA,UAAS,CACrBH,QAAAA,EACA/V,KAAM,YAEJvL,GAAW1C,EAAAA,EAAAA,UAAQ,kBAAMikB,EAAAA,EAAAA,QAAOzgB,EAAQ1Q,KAAIs+B,SAAAA,UAAKA,EAAEvI,eAAY,CAACrlB,IAEtE,OACI,UAACpU,EAAAA,MAAKA,GAAAA,GAAAA,CAAAA,EACEm+C,GAAAA,CACJp+C,UAAU,gBACVme,QAASA,aAET,SAACle,EAAAA,MAAAA,OAAY,UACR7K,EAAEspD,6BAA6BC,gBAEpC,SAAC1+C,EAAAA,MAAAA,QAAa,CAACD,UAAU,0CACrB,UAAC8hB,GAAWC,KAAI,YACZ,SAACD,GAAWM,OAAM,WACd,UAAC5rB,MAAAA,CAAIwJ,UAAU,sCACX,UAACxJ,MAAAA,CAAIwJ,UAAU,0BACX,SAACm1B,EAAAA,WAAUA,GAAAA,CACP7T,MAAOlsB,EAAEmG,OAAOxC,QAChB8sB,YAAazwB,EAAEmG,OAAOxC,QACtB6sB,gBAAgB,UACZwP,KAER,SAACC,EAAAA,YAAWA,GAAAA,GAAAA,CACR/T,MAAOlsB,EAAEwqB,YAAY0V,oBACrBzP,YAAazwB,EAAEwqB,YAAY0V,oBAC3BC,eAAe,YACXtW,GAAAA,CACJ+E,SAAUhmB,SAAAA,UAAKihB,EAAe+E,SAASnZ,OAAO7M,EAAEpG,OAAOyY,gBAG/D,SAAC8V,EAAAA,gBAAeA,CACZ7E,MAAOlsB,EAAEwqB,YAAY4V,mBACrBpU,QAASlC,EAAmB7O,MAC5B8Q,gBAAiBjC,EAAmB8E,SACpCzC,eAAe,2BAEnB,SAACi8B,GAAWA,CAACntC,MAAO4uC,EAAa5uC,MAAO2T,SAAUi7B,EAAaj7B,YAC/D,UAACxtB,MAAAA,CAAIwJ,UAAU,0BACX,SAACxJ,MAAAA,CAAIwJ,UAAU,6BACX,SAAC28C,GAAiBA,CAACtsC,MAAO6uC,EAAiB7uC,MAAO2T,SAAUk7B,EAAiBl7B,cAGjF,SAAC9C,EAAAA,kBAAiBA,CACdI,MAAOlsB,EAAEwqB,YAAYu/B,mBACrB/9B,QAASg+B,EAAkB/uC,MAC3B8Q,gBAAiBi+B,EAAkBp7B,SACnCyR,mBAAmB,qBAEvB,SAACvU,EAAAA,kBAAiBA,CACdI,MAAOlsB,EAAEwqB,YAAYy/B,kBACrBj+B,QAASk+B,EAAuBjvC,MAChC8Q,gBAAiBm+B,EAAuBt7B,SACxCyR,mBAAmB,6BAKnC,SAAC1R,GAAeA,CACZvE,QAASA,EACTjM,SAAUA,EACVyQ,SAAUsN,SAAAA,GACNsD,EAAU,UAAUtD,EAAO3tB,KAAI2oB,SAAAA,SAAM,CACjCoN,SAAUpN,MAElB,EACArI,SAAUnC,GAAWO,eAIjC,UAACpiB,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAAS,kBAAM2kB,KAAW4B,QAAQ,qBACrC3qB,EAAEsE,iCAAiCsmB,yBAExC,SAACF,GAAAA,OAAMA,CACHtmB,QAASolD,EACT7+B,QAAQ,mBAEP3qB,EAAEsE,iCAAiCC,0BAKxD,29BCpUO,IAAMugB,IAAwBjV,EAAAA,GAAAA,IAAG,CACpCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OACFA,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNkO,SAAU,CACNhO,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,WAOLgV,IAAoBlV,EAAAA,GAAAA,IAAG,CAChCC,KAAM,EACFC,EAAAA,GAAAA,IAAEA,OAENE,SAAU,CACNkO,SAAU,CACNhO,KAAM,EACFJ,EAAAA,GAAAA,IAAEA,OAEN2tC,MAAO,EACH3tC,EAAAA,GAAAA,IAAEA,WCjBLo6C,GAAgC,gBACzCzJ,EAAAA,EAAAA,OACAviC,EAAAA,EAAAA,SACAiE,EAAAA,EAAAA,SAEM,GAAMriB,EAAAA,EAAAA,wBAALC,EAGDwhC,GAAcjZ,EAAAA,EAAAA,cAAY,WAC5BnG,EAASs+B,EAAOl7C,KACpB,GAAG,CAACk7C,EAAOl7C,KAAM4c,IAEXze,EAAQ3D,EAAEspD,6BAA6B5I,EAAOl7C,QAC9C4kD,EAAO1J,EAAO/vB,KAEpB,OACI,UAACnI,SAAAA,CACG5d,UAAWka,GAAsB,CAAC3G,SAAAA,IAClC/Z,QAASo9B,aAET,SAAC4oB,EAAAA,CAAKx/C,UAAWma,GAAkB,CAAC5G,SAAAA,OACpC,SAAC/c,MAAAA,CAAIwJ,UAAU,wDACVjH,MAIjB,EC7Ba0mD,GAA6B,gBAAEthC,EAAAA,EAAAA,QAASja,EAAAA,EAAAA,OAC3Cw7C,GAA+Bva,EAAAA,EAAAA,yBAAwBwa,IAC7D,OAAOhiC,EAAAA,EAAAA,cAAY,WACXzZ,GAA0B,UAAhBA,EAAOtJ,OAAqBjF,SAAS6T,cAAc,kCAC7Dk2C,EAA6B,CACzBzB,kBAAmB/5C,EAAOpL,KAE9BqlB,SAAAA,KAEJA,SAAAA,GACJ,GAAG,CAACA,EAASuhC,EAA8Bx7C,GAC/C,y4DCHO,IAAM07C,GAAkD,gBAC3DzhC,EAAAA,EAAAA,QACA0hC,EAAAA,EAAAA,WACAC,EAAAA,EAAAA,oBACGzhC,EAAAA,GAAAA,EAAAA,CAHHF,UACA0hC,aACAC,wBAGM,GAAM3qD,EAAAA,EAAAA,wBAALC,EAC+ByB,GAAAA,EAAAA,EAAAA,iBAAgB,CAAC,SAAU,YAAa,aAAvE4N,EAA+B5N,EAA/B4N,OAAQ/E,EAAuB7I,EAAvB6I,SAAUD,EAAa5I,EAAb4I,WACzBF,EAAAA,EAAAA,eAAckF,GACd,IAAM,GAAmBpF,EAAAA,EAAAA,iBAAlBC,eACiCmY,EAAAA,IAAAA,EAAAA,EAAAA,UAAS,CAAC3e,GAAI2L,EAAQ/E,SAAAA,EAAUD,UAAAA,IAAS,GAA1E2gC,EAAiC3oB,EAAAA,GAAnB4oB,EAAmB5oB,EAAAA,GAElCsoC,GAAWpiC,EAAAA,EAAAA,cAAY,WACzBkiC,SAAAA,EAAazf,EAAatnC,GAAIwG,EAAe8gC,EAAa3gC,UAAW2gC,EAAa1gC,WAClFye,GACJ,GAAG,CAAC7e,EAAgB6e,EAAS0hC,EAAYzf,IAEnC4f,EAA0BP,GAA2B,CAACthC,QAAAA,EAASja,OAAQ47C,IAE7E,OACI,UAAC7/C,EAAAA,MAAKA,0UAAAA,CAAAA,CACFke,QAASA,GACLE,GAAAA,YAEJ,SAACpe,EAAAA,MAAAA,OAAY,UACR7K,EAAEwqB,YAAYqgC,wBAEnB,SAAChgD,EAAAA,MAAAA,QAAa,WACV,SAACw0C,GAAcA,CACXnzB,MAAOlsB,EAAEwqB,YAAYsgC,qBACrBr6B,YAAazwB,EAAEwqB,YAAYsgC,qBAC3Bl8B,SAAUyE,SAAAA,UAAQ4X,EAAgB,CAC9BvnC,GAAI2vB,EAAK3vB,GACT2G,UAAWgpB,EAAKhpB,UAChBC,SAAU+oB,EAAK/oB,YAEnB2Q,MAAO+vB,EAAatnC,QAG5B,UAACmH,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAASwmD,EAAyBjgC,QAAQ,mBAC7C3qB,EAAEmG,OAAOovB,YAEd,SAAC7K,GAAAA,OAAMA,CAACtmB,QAASumD,EAAUhgC,QAAQ,mBAC9B3qB,EAAEmG,OAAOpB,aAK9B,okBCzDO,IAAMgmD,GAAqB,gBAC9BjC,EAAAA,EAAAA,QAIM,GAAiB57B,EAAAA,GAAAA,cAAak3B,IAA7BjrC,aACD6xC,GAAsBjb,EAAAA,EAAAA,yBAAwBya,IAC9C,GAAMzqD,EAAAA,EAAAA,wBAALC,EAEP,OAAOuoB,EAAAA,EAAAA,cAAY,SAACmiC,GAChBM,EAAoB,CAChBP,WAAY,SAACp7C,EAAQ47C,GACjB9xC,EAAa,8UACNuxC,GAAAA,CACHllD,KAAM,aACN7B,MAAO3D,EAAEkrD,mCAAmCC,WAAWF,GACvD7mB,aAAcgjB,GAAkCsD,EAAoBhnD,GAAI2L,GACxE47C,SAAAA,EACA/D,QAAS73C,IAEjB,EACAq7C,oBAAAA,IAEJ5B,GACJ,GAAG,CAACA,EAASkC,EAAqBhrD,EAAEkrD,mCAAoC/xC,GAC5E,okBC9BO,IAAMiyC,GAAsB,gBAC/BtC,EAAAA,EAAAA,QACAD,EAAAA,EAAAA,kBAK+B37B,GAAAA,EAAAA,GAAAA,cAAak3B,IAArCjrC,EAAwB+T,EAAxB/T,aAAcrK,EAAUoe,EAAVpe,OAErB,OAAOyZ,EAAAA,EAAAA,cAAY,WACfu+B,GAAoBh4C,EAAQ+5C,GAC5B1vC,EAAa,8UACNrK,GAAAA,CACHtJ,KAAM,cAEVsjD,GACJ,GAAG,CAACh6C,EAAQ+5C,EAAmB1vC,EAAc2vC,GACjD,okBCZO,IAAMuC,GAAwB,gBACjCvC,EAAAA,EAAAA,QAIM,GAAiB57B,EAAAA,GAAAA,cAAak3B,IAA7BjrC,aACD6xC,GAAsBjb,EAAAA,EAAAA,yBAAwBya,IAC9C,GAAMzqD,EAAAA,EAAAA,wBAALC,EAEP,OAAOuoB,EAAAA,EAAAA,cAAY,SAACmiC,GAChBM,EAAoB,CAChBP,WAAY,SAACp7C,EAAQ47C,GACjB9xC,EAAa,8UACNuxC,GAAAA,CACHllD,KAAM,eACN7B,MAAO3D,EAAEkrD,mCAAmC1F,aAAayF,GACzD7mB,aAAc4iB,GAAqC0D,EAAoBhnD,GAAI2L,GAC3E63C,QAAS73C,EACT47C,SAAAA,IAER,EACAP,oBAAAA,IAEJ5B,GACJ,GAAG,CAACA,EAASkC,EAAqBhrD,EAAEkrD,mCAAoC/xC,GAC5E,ECxBamyC,GAAoD,gBAC7DrwC,EAAAA,EAAAA,MACA2T,EAAAA,EAAAA,SAEM,GAAM7uB,EAAAA,EAAAA,wBAALC,EAEDoqB,GAAU3O,EAAAA,EAAAA,UAAQ,iBAAM,CAC1B,CACIR,MAAO,QACPpa,QAASb,EAAEurD,uBAAuBC,eAEtC,CACIvwC,MAAO,UACPpa,QAASb,EAAEurD,uBAAuBE,oBAEvC,CAACzrD,IAEJ,OACI,SAACkqC,EAAAA,YAAWA,CACRhe,MAAOlsB,EAAEurD,uBAAuBz3C,QAChC2c,YAAazwB,EAAEurD,uBAAuBz3C,QACtC8a,SAAUsI,SAAAA,UAAKtI,EAASsI,IACxBjc,MAAOA,EACPmP,QAASA,GAGrB,ECvCashC,GAAiB,SAACC,UAAe,IAAIj3B,SAAgBC,SAAAA,GAC9D,IAAMi3B,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WAEZn3B,EAAQi3B,EAAO13C,OACnB,EAEA03C,EAAOG,cAAcJ,EACzB,sqCCMO,IAAMK,GAA0C,gBACnDp9B,EAAAA,EAAAA,SACAq9B,EAAAA,EAAAA,UAEM,GAAMlsD,EAAAA,EAAAA,wBAALC,EACD+b,GAAM3T,EAAAA,EAAAA,QAAyB,MAC/B8jD,GAA0D3jC,EAAAA,EAAAA,aAAY,+BAAMvR,OACjEA,EAAP20C,EAMAQ,EACAC,qDALN,OAFMT,EAAyB,QAAlB30C,EAAAA,EAAMxU,OAAO6pD,aAAbr1C,IAAAA,OAAAA,EAAAA,EAAqB,IAMd,GAAM00C,GAAeC,IAHrC,kBAGEQ,EAAc,SACdC,EAAeT,EAAKjiC,KAE1BkF,EAAS,CACL09B,SAAUH,EACVF,UAAWG,WAEnB,mMAdkFp1C,mCAAN,GAczE,CAAC4X,IAEJ,OACI,SAAC29B,EAAAA,YAAWA,CAACrgC,MAAOlsB,EAAEurD,uBAAuBiB,kBACzC,UAACC,EAAAA,WAAUA,CACPC,qBAAqB,MACrBC,aACI,SAACjiC,GAAAA,OAAMA,CACH9f,UAAU,UACVxG,QAAS,eACL2X,EAAW,QAAXA,EAAAA,EAAI9T,eAAJ8T,IAAAA,GAAAA,EAAa6wC,OACjB,EACAjiC,QAAQ,UACRgG,MAAM,SAACk8B,EAAAA,aAAYA,CAACjiD,UAAU,8BAIrCqhD,GACD,SAACa,QAAAA,CACG5wC,UAAW,EACXH,IAAKA,EACLnR,UAAU,6BACVpF,KAAK,OACL7B,MAAM,GACNirB,SAAUs9B,QAK9B,o6ECdO,IAAMa,GAAwD,gBACjElE,EAAAA,EAAAA,kBACA9/B,EAAAA,EAAAA,QACA+/B,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,WACGC,EAAAA,GAAAA,EAAAA,CAJHH,oBACA9/B,UACA+/B,UACAC,eAGM,GAAMhpD,EAAAA,EAAAA,wBAALC,EACwBktB,GAAAA,EAAAA,GAAAA,cAAak3B,IAArCt1C,EAAwBoe,EAAxBpe,OAAQqK,EAAgB+T,EAAhB/T,aAKXspB,GAAAA,EAAAA,GAAAA,SAA4C,CAC5CC,cAAe,CACX5uB,OAAOi1C,aAAAA,EAAAA,EAAYj1C,QAAS,QAC5Bm4C,WAAWlD,aAAAA,EAAAA,EAAYkD,YAAa,GACpCK,UAAUvD,aAAAA,EAAAA,EAAYuD,WAAY,MANtC7sB,EAEAgD,EAFAhD,QACAmD,EACAH,EADAG,aASE4mB,GAAO/tC,EAAAA,EAAAA,UAAQ,kBAAMmnB,EAAa,+BAAMnK,sCAC1CquB,GAAoBh4C,EAAQ+5C,GAC5B1vC,EAAa,IACT3T,KAAM,SACHizB,GACAmxB,EAAAA,GAAAA,MACC96C,EACA,KACA,IACA,IACA,QACA,SACA,QACA,mBAIRg6C,SAAAA,IACA//B,UACJ,mMAnB8C0P,mCAAN,MAmBpC,CAACmK,EAAc9zB,EAAQ+5C,EAAmB1vC,EAAc2vC,EAAS//B,IAE9D6U,GAAyBkC,EAAAA,GAAAA,eAAc,CAC1CpW,KAAM,YACN+V,QAAAA,IAFG7B,MAKAA,GAAwBkC,EAAAA,GAAAA,eAAc,CACzCpW,KAAM,WACN+V,QAAAA,IAFG7B,MAKAA,GAAqBkC,EAAAA,GAAAA,eAAc,CACtCpW,KAAM,QACN+V,QAAAA,IAFG7B,MAKP,OACI,UAAC/yB,EAAAA,MAAKA,GAAAA,GAAAA,CAAAA,EACEm+C,GAAAA,CACJjgC,QAASA,aAET,SAACle,EAAAA,MAAAA,OAAY,UACR7K,EAAEspD,6BAA6BkD,WAEpC,UAAC3hD,EAAAA,MAAAA,QAAa,CAACD,UAAU,iCACrB,SAACohD,GAAWA,CACRC,UAAWe,EAAe/xC,MAC1B2T,SAAU,gBAAE09B,EAAAA,EAAAA,SAAUL,EAAAA,EAAAA,UAClBgB,EAAcr+B,SAAS09B,GACvBU,EAAep+B,SAASq9B,EAC5B,KAEJ,SAACX,GAAgBA,CAACrwC,MAAOiyC,EAAWjyC,MAAO2T,SAAUs+B,EAAWt+B,eAEpE,UAAC/jB,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAAS,kBAAM2kB,KAAW4B,QAAQ,mBACrC3qB,EAAEsE,iCAAiCsmB,yBAExC,SAACF,GAAAA,OAAMA,CACHtmB,QAASolD,EACT7+B,QAAQ,mBAEP3qB,EAAEsE,iCAAiCC,0BAKxD,m0CCnIA,IAAM4oD,GAAe,eAORC,GAAgD,gBAAEx+B,EAAAA,EAAAA,SAAU3T,EAAAA,EAAAA,MAC/D,GAAMlb,EAAAA,EAAAA,wBAALC,EACD,GAAaqtD,EAAAA,GAAAA,8BAA6B,CAAC,aAA1CtxB,SACqB1Z,EAAAA,IAAAA,EAAAA,EAAAA,UAAS,OAA9BqN,EAAqBrN,EAAAA,GAAbsN,EAAatN,EAAAA,GACtBirC,GAAsB7xC,EAAAA,EAAAA,UAAQ,kBAAM2I,OAAO8X,OAAOH,GAAU3L,OAAMvD,SAAAA,UAAK5R,EAAMlM,SAAS8d,EAAEnpB,SAAM,CAACq4B,EAAU9gB,IAEzGmP,GAAU3O,EAAAA,EAAAA,UAAQ,WACpB,IAAM8xC,EAAkBnpC,OAAO8X,OAAOH,GAAUxtB,KAAI+kB,SAAAA,SAAY,CAC5DrY,MAAOqY,EAAQ5vB,GACf7C,QAASyyB,EAAQ5J,SAGrB,MAAO,CACH,CAACzO,MAAOkyC,GAActsD,QAASb,EAAEwqB,YAAYgjC,iBAD1C,OAEH,GAAIF,EAAsB,GAAKC,IACjC9hC,QAAO,mBAAE5qB,EAAAA,QAAqBovB,cAAclhB,SAAS2gB,EAAOO,iBAClE,GAAG,CAAC8L,EAAUuxB,EAAqB59B,EAAQ1vB,EAAEwqB,cAEvCu9B,GAActsC,EAAAA,EAAAA,UAAQ,WACxB,OAAO6xC,EACD,CAACH,IACDlyC,CACV,GAAG,CAACqyC,EAAqBryC,IAGnBqN,GAAeC,EAAAA,EAAAA,cAAY,SAACklC,GAC1BA,EAAoB1+C,SAASo+C,IAC7Bv+B,EAASxK,OAAO8X,OAAOH,GAAUxtB,KAAI,mBAAE7K,EAAAA,OAAe,IAG1DkrB,EAAS6+B,EACb,GAAG,CAAC1xB,EAAUnN,IAEd,OACI,SAACq5B,EAAAA,iBAAgBA,CACb/7B,MAAOlsB,EAAEwqB,YAAYkjC,gBACrBtjC,QAASA,EACT42B,YAAU,EACVD,eAAgBpxB,EAChB1U,MAAO8sC,EACPn5B,SAAUtG,GAGtB,uqGCQA,IAgDaqlC,GAAoD,gBAC7D5kC,EAAAA,EAAAA,QACA8/B,EAAAA,EAAAA,kBACAC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,WACGC,EAAAA,GAAAA,EAAAA,CAJHjgC,UACA8/B,oBACAC,UACAC,eAGM,GAAMhpD,EAAAA,EAAAA,wBAALC,EACD,GAAaqtD,EAAAA,GAAAA,8BAA6B,CAAC,aAA1CtxB,SAED6sB,GAAmBntC,EAAAA,EAAAA,UAAQ,WAC7B,GAAIstC,EACA,OA3DFE,EAAah6C,OADAA,EA4DU85C,IA3DU,QAApB95C,EAAAA,EAAQm1B,oBAARn1B,IAAAA,GAAyB,QAAzBA,EAAAA,EAAsBo1B,WAAtBp1B,IAAAA,OAAAA,EAAAA,EAA2BgQ,QAAQ1Q,KAAI,SAAC26C,EAAKlgB,OACtC/5B,EAAAA,EAAAA,EAAhBk6C,EAAgBl6C,SAAoB,QAApBA,EAAAA,EAAQm1B,oBAARn1B,IAAAA,GAAyB,QAAzBA,EAAAA,EAAsBo1B,WAAtBp1B,IAAAA,GAAgC,QAAhCA,EAAAA,EAA2Bw1B,aAA3Bx1B,IAAAA,OAAAA,EAAAA,EAAkCiG,MAAK,gBAAEwvB,EAAAA,EAAAA,GAC3D,OAAOjvB,OAAOivB,KAAQsE,EAAQ,CAClC,IACA,OAAO,SACAkgB,GAAAA,CACH9sC,KAAM+sC,aAAAA,EAAAA,EAAe/sC,MAA0B,OAC/CqoB,MAAOuE,EAAQ,GAEvB,IACO,CACHrlC,MAAOsL,aAAAA,EAAAA,EAAQtL,MACfmmB,mBAAoB7a,aAAAA,EAAAA,EAAQ01B,WAC5BipB,YAAYjI,EAAAA,GAAAA,WAAU12C,SAAoB,QAApBA,EAAAA,EAAQm1B,oBAARn1B,IAAAA,GAAyB,QAAzBA,EAAAA,EAAsBo1B,WAAtBp1B,IAAAA,OAAAA,EAAAA,EAA2Bo2B,aACjDxb,gBAAgB87B,EAAAA,GAAAA,WAAU12C,SAAoB,QAApBA,EAAAA,EAAQm1B,oBAARn1B,IAAAA,GAAyB,QAAzBA,EAAAA,EAAsBo1B,WAAtBp1B,IAAAA,OAAAA,EAAAA,EAA2Bu1B,OACrDvlB,QAASgqC,GAhBK,IAACh6C,EACAA,EAAAA,EAaOA,EAAAA,EACIA,EAAAA,EAdxBg6C,CA8DN,GAAG,CAACF,IAEEM,EAAiBX,GAAwB,gBAM3CjmB,GAAAA,EAAAA,GAAAA,SAA4C,CAC5CC,cAAe,CACX/+B,OAAOilD,aAAAA,EAAAA,EAAkBjlD,QAAS3D,EAAEspD,6BAA6BuE,eACjED,YAAYhF,aAAAA,EAAAA,EAAkBgF,aAAcxpC,OAAO8X,OAAOH,GAAUxtB,KAAI,mBAAE7K,EAAAA,MAC1EomB,oBAA6D,KAAzC8+B,aAAAA,EAAAA,EAAkB9+B,oBACtCD,gBAAgB++B,aAAAA,EAAAA,EAAkB/+B,iBA9BnB,EA+Bf5K,SAAS2pC,aAAAA,EAAAA,EAAkB3pC,UAAWoqC,KAT1C5pB,EAGAgD,EAHAhD,QACAmD,EAEAH,EAFAG,aACApD,EACAiD,EADAjD,SAWG5B,GAAqBkC,EAAAA,GAAAA,eAAc,CACtCpW,KAAM,QACN+V,QAAAA,IAFG7B,MAKAA,GAAyBkC,EAAAA,GAAAA,eAAc,CAC1CpW,KAAM,iBACN+V,QAAAA,IAFG7B,MAKAA,GAA6BkC,EAAAA,GAAAA,eAAc,CAC9CpW,KAAM,qBACN+V,QAAAA,IAFG7B,MAMHA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,aACN+V,QAAAA,IAHA7B,MAM2B1Q,GAAAA,EAAAA,GAAAA,cAAak3B,IAArCt1C,EAAwBoe,EAAxBpe,OAAQqK,EAAgB+T,EAAhB/T,aAETqwC,GAAO/tC,EAAAA,EAAAA,UAAQ,kBAAMmnB,EAAa,+BAAMnK,sCAC1CquB,GAAoBh4C,EAAQ+5C,GAC5B1vC,EAAa,IACT3T,KAAM,QArFO,SAACujD,EAAgDrlD,GACtE,IAAM+lD,EAAWV,EAAW9pC,QAAQ+Y,QAA8C,SAACmE,EAAK4B,EAAQiL,GAC5F,OAAIjL,EAAO3hB,KAAsB,SAAf2hB,EAAO3hB,IACd,GAAI+f,GAAAA,OAAJ,CAAS,CAACuI,GAAIh1B,OAAOs5B,EAAQ,GAAI5sB,IAAK2hB,EAAO3hB,OAEjD+f,CACX,GAAG,IACH,MAAO,CACHx4B,MAAOolD,EAAWplD,OAAS,GAC3BghC,WAAYokB,EAAWj/B,mBACvBsa,aAAc,CACV5+B,KAAM,eACN6+B,IAAK,CACD3gC,GAAAA,EACA2hC,YAAa0jB,EAAW6E,WACxBppB,MAAOukB,EAAWl/B,eAClB5K,QAAS8pC,EAAW9pC,QAAQ1Q,KAAI,SAAC26C,EAAKQ,UAAS,SAAIR,GAAAA,CAAKxlD,GAAIgM,OAAOg6C,EAAM,QACzEjlB,MAAOglB,IAIvB,CAiEeE,CAAiBlxB,EAAU3pB,EAAOpL,KAClCkmD,EAAAA,GAAAA,MACC96C,EACA,KACA,IACA,IACA,QACA,SACA,mBAIRg6C,SAAAA,IACA//B,UACJ,mMAlB8C0P,mCAAN,MAkBpC,CAACmK,EAAc9zB,EAAQ+5C,EAAmB1vC,EAAc2vC,EAAS//B,IAE/DqB,EAAUy8B,GAAgB,gBAC1B5nC,GAAU2gB,EAAAA,GAAAA,UAAS,CACrBH,QAAAA,EACA/V,KAAM,YAEJvL,GAAW1C,EAAAA,EAAAA,UAAQ,kBAAMikB,EAAAA,EAAAA,QAAOzgB,EAAQ1Q,KAAIs+B,SAAAA,UAAKA,EAAEvI,eAAY,CAACrlB,IAEtE,OACI,UAACpU,EAAAA,MAAKA,GAAAA,GAAAA,CAAAA,EACEm+C,GAAAA,CACJp+C,UAAU,gBACVme,QAASA,aAET,SAACle,EAAAA,MAAAA,OAAY,CAACijD,KAAK,mBACd9tD,EAAEspD,6BAA6BuE,kBAEpC,SAAChjD,EAAAA,MAAAA,QAAa,CAACD,UAAU,0CACrB,UAAC8hB,GAAWC,KAAI,YACZ,SAACD,GAAWM,OAAM,WACd,UAAC5rB,MAAAA,CAAIwJ,UAAU,sCACX,UAACxJ,MAAAA,CAAIwJ,UAAU,0BACX,SAACm1B,EAAAA,WAAUA,GAAAA,CACP7T,MAAOlsB,EAAEmG,OAAOxC,QAChB8sB,YAAazwB,EAAEmG,OAAOxC,QACtB6sB,gBAAgB,UACZwP,KAER,SAACC,EAAAA,YAAWA,GAAAA,GAAAA,CACR/T,MAAOlsB,EAAEwqB,YAAY0V,oBACrBzP,YAAazwB,EAAEwqB,YAAY0V,oBAC3BC,eAAe,YACXtW,GAAAA,CACJ+E,SAAUhmB,SAAAA,UAAKihB,EAAe+E,SAASnZ,OAAO7M,EAAEpG,OAAOyY,gBAG/D,SAAC8V,EAAAA,gBAAeA,CACZ7E,MAAOlsB,EAAEwqB,YAAY4V,mBACrBpU,QAASlC,EAAmB7O,MAC5B8Q,gBAAiBjC,EAAmB8E,SACpCzC,eAAe,2BAEnB,SAACihC,GAAcA,CAACnyC,MAAO8yC,EAAgB9yC,MAAO2T,SAAUm/B,EAAgBn/B,iBAGhF,SAACD,GAAeA,CACZvE,QAASA,EACTjM,SAAUA,EACVyQ,SAAUsN,SAAAA,GACNsD,EAAU,UAAUtD,EAAO3tB,KAAI2oB,SAAAA,SAAM,CACjCoN,SAAUpN,MAElB,EACArI,SAAUnC,GAAWO,eAIjC,UAACpiB,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAAS,kBAAM2kB,KAAW4B,QAAQ,qBACrC3qB,EAAEsE,iCAAiCsmB,yBAExC,SAACF,GAAAA,OAAMA,CACHtmB,QAASolD,EACT7+B,QAAQ,mBAEP3qB,EAAEsE,iCAAiCC,0BAKxD,o6ECvNO,IAAMypD,GAAsD,gBAC/DnF,EAAAA,EAAAA,kBACA9/B,EAAAA,EAAAA,QACA+/B,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,WACGC,EAAAA,GAAAA,EAAAA,CAJHH,oBACA9/B,UACA+/B,UACAC,eAGM,GAAMhpD,EAAAA,EAAAA,wBAALC,EAEwBktB,GAAAA,EAAAA,GAAAA,cAAak3B,IAArCt1C,EAAwBoe,EAAxBpe,OAAQqK,EAAgB+T,EAAhB/T,aAKXspB,GAAAA,EAAAA,GAAAA,SAA8B,CAC9BC,cAAe,CACX/+B,OAAOolD,aAAAA,EAAAA,EAAYplD,QAAS3D,EAAEspD,6BAA6Bj/B,OAC3DA,MAAM0+B,aAAAA,EAAAA,EAAY1+B,OAAQ,MAL9BoV,EAEAgD,EAFAhD,QACAmD,EACAH,EADAG,aAQE4mB,GAAO/tC,EAAAA,EAAAA,UAAQ,kBAAMmnB,EAAa,+BAAMnK,sCAC1CquB,GAAoBh4C,EAAQ+5C,GAC5B1vC,EAAa,IACT3T,KAAM,QACHizB,GACAmxB,EAAAA,GAAAA,MACC96C,EACA,KACA,IACA,IACA,QACA,SACA,mBAIRg6C,SAAAA,IACA//B,UACJ,mMAlB8C0P,mCAAN,MAkBpC,CAACmK,EAAc9zB,EAAQ+5C,EAAmB1vC,EAAc2vC,EAAS//B,IAG9D6U,GAAqBkC,EAAAA,GAAAA,eAAc,CACtCpW,KAAM,QACN+V,QAAAA,IAFG7B,MAKAA,GAAoBkC,EAAAA,GAAAA,eAAc,CACrCpW,KAAM,OACN+V,QAAAA,IAFG7B,MAKP,OACI,UAAC/yB,EAAAA,MAAKA,GAAAA,GAAAA,CAAAA,EACEm+C,GAAAA,CACJjgC,QAASA,aAET,SAACle,EAAAA,MAAAA,OAAY,UACR7K,EAAEwqB,YAAYH,UAEnB,UAACxf,EAAAA,MAAAA,QAAa,CAACD,UAAU,iCACrB,SAACm1B,EAAAA,WAAUA,GAAAA,CACP7T,MAAOlsB,EAAEmG,OAAOxC,QAChB8sB,YAAazwB,EAAEmG,OAAOxC,SAClBq8B,KAER,SAACiuB,EAAAA,cAAaA,GAAAA,CACV/hC,MAAOlsB,EAAEwqB,YAAYH,OACrBoG,YAAazwB,EAAEwqB,YAAYH,OAC3B6jC,QAAS,GACLC,QAGZ,UAACtjD,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAAS,kBAAM2kB,KAAW4B,QAAQ,mBACrC3qB,EAAEsE,iCAAiCsmB,yBAExC,SAACF,GAAAA,OAAMA,CACHtmB,QAASolD,EACT7+B,QAAQ,mBAEP3qB,EAAEsE,iCAAiCC,0BAKxD,okBCtHO,IAAM6pD,GAAmB,gBAC5BtF,EAAAA,EAAAA,QAIM,GAAiB57B,EAAAA,GAAAA,cAAak3B,IAA7BjrC,aACD,GAAMpZ,EAAAA,EAAAA,wBAALC,EACDgrD,GAAsBjb,EAAAA,EAAAA,yBAAwBya,IAEpD,OAAOjiC,EAAAA,EAAAA,cAAY,SAACmiC,GAChBM,EAAoB,CAChBP,WAAY,SAACp7C,EAAQ47C,GACjB9xC,EAAa,8UACNuxC,GAAAA,CACHllD,KAAM,WACN7B,MAAO3D,EAAEkrD,mCAAmC1hC,SAASyhC,GACrD/D,QAAS73C,EACT47C,SAAAA,EACA7mB,aAAcijB,GAAgCqD,EAAoBhnD,GAAI2L,KAE9E,EACAq7C,oBAAAA,IAEJ5B,GACJ,GAAG,CAACkC,EAAqBlC,EAAS9oD,EAAEkrD,mCAAoC/xC,GAC5E,okBCzBO,IAAMk1C,GAAwB,gBACjCvF,EAAAA,EAAAA,QAIM,GAAiB57B,EAAAA,GAAAA,cAAak3B,IAA7BjrC,aACD6xC,GAAsBjb,EAAAA,EAAAA,yBAAwBya,IAC9C,GAAMzqD,EAAAA,EAAAA,wBAALC,EAEP,OAAOuoB,EAAAA,EAAAA,cAAY,SAACmiC,GAChBM,EAAoB,CAChBP,WAAY,SAACp7C,EAAQ47C,GACjB9xC,EAAa,8UACNuxC,GAAAA,CACHllD,KAAM,eACN7B,MAAO3D,EAAEkrD,mCAAmCoD,aAAarD,GACzD7mB,aAAc+iB,GAAqCuD,EAAoBhnD,GAAI2L,GAC3E63C,QAAS73C,EACT47C,SAAAA,IAER,EACAP,oBAAAA,IAEJ5B,GACJ,GAAG,CAACA,EAASkC,EAAqBhrD,EAAEkrD,mCAAoC/xC,GAC5E,EClCao1C,GAAgC,CACzC9H,YAAa,CACT+H,UAAW,CACPC,OAAQ,WAEZC,UAAW,CACPD,OAAQ,WAEZE,wBAAyB,CACrBF,OAAQ,YAEZG,2BAA4B,CACxBH,OAAQ,YAEZI,gBAAiB,CACbJ,OAAQ,WAEZK,oCAAqC,CACjCL,OAAQ,YAEZM,iCAAkC,CAC9BN,OAAQ,WAEZO,2BAA4B,CACxBP,OAAQ,YAEZQ,0CAA2C,CACvCR,OAAQ,WAEZS,mCAAoC,CAChCT,OAAQ,WAEZU,kCAAmC,CAC/BV,OAAQ,YAEZW,gCAAiC,CAC7BX,OAAQ,YAEZY,iCAAkC,CAC9BZ,OAAQ,WAEZa,gDAAiD,CAC7Cb,OAAQ,WAEZc,OAAQ,CACJd,OAAQ,YAEZe,iBAAkB,CACdf,OAAQ,YAEZgB,yCAA0C,CACtChB,OAAQ,WAEZiB,2CAA4C,CACxCjB,OAAQ,WAEZkB,kCAAmC,CAC/BlB,OAAQ,WAEZmB,iCAAkC,CAC9BnB,OAAQ,WAEZoB,mCAAoC,CAChCpB,OAAQ,YAEZqB,iCAAkC,CAC9BrB,OAAQ,YAEZsB,iBAAkB,CACdtB,OAAQ,WAEZuB,mCAAoC,CAChCvB,OAAQ,WAEZwB,+BAAgC,CAC5BxB,OAAQ,YAEZyB,gCAAiC,CAC7BzB,OAAQ,WAEZ0B,wBAAyB,CACrB1B,OAAQ,WAEZ2B,gCAAiC,CAC7B3B,OAAQ,WAEZ4B,iBAAkB,CACdC,eAAe,GAEnBC,8BAA+B,CAC3B9B,OAAQ,WAEZ+B,cAAe,CACX/B,OAAQ,WAEZgC,qBAAsB,CAClBhC,OAAQ,WAEZiC,sBAAuB,CACnBjC,OAAQ,YAGhB9H,WAAY,CACR6H,UAAW,CACPC,OAAQ,WAEZC,UAAW,CACPD,OAAQ,WAEZztB,eAAgB,CACZ2a,MAAO,QAEX/a,UAAW,CACP+a,MAAO,QAEXgV,sBAAuB,CACnBhV,MAAO,QAEXiV,0BAA2B,CACvBnC,OAAQ,YAEZoC,uBAAwB,CACpBlV,MAAO,QAEXmV,uBAAwB,CACpBnV,MAAO,QAEXoV,4BAA6B,CACzBpV,MAAO,QAEXqV,yBAA0B,CACtBrV,MAAO,QAEXsV,kBAAmB,CACftV,MAAO,QAEXuV,0BAA2B,CACvBzC,OAAQ,YAEZE,wBAAyB,CACrBF,OAAQ,YAEZG,2BAA4B,CACxBH,OAAQ,YAEZ0C,uBAAwB,CACpB1C,OAAQ,YAEZ2C,uBAAwB,CACpB3C,OAAQ,YAEZK,oCAAqC,CACjCL,OAAQ,YAEZM,iCAAkC,CAC9BN,OAAQ,WAEZ4C,gBAAiB,CACb1V,MAAO,QAEXwT,kCAAmC,CAC/BV,OAAQ,YAEZW,gCAAiC,CAC7BX,OAAQ,YAEZ6C,gBAAiB,CACb3V,MAAO,QAEX4V,WAAY,CACR9C,OAAQ,YAEZvtB,YAAa,CACTya,MAAO,QAEXkU,mCAAoC,CAChCpB,OAAQ,YAEZqB,iCAAkC,CAC9BrB,OAAQ,YAEZv5B,OAAQ,CACJymB,MAAO,QAEX4U,8BAA+B,CAC3B9B,OAAQ,WAEZ3tB,eAAgB,CACZ2tB,OAAQ,YAEZ/tB,UAAW,CACPib,MAAO,SAGfiL,aAAc,CACV4H,UAAW,CACPC,OAAQ,WAEZC,UAAW,CACPD,OAAQ,WAEZE,wBAAyB,CACrBF,OAAQ,YAEZG,2BAA4B,CACxBH,OAAQ,YAEZI,gBAAiB,CACbJ,OAAQ,WAEZK,oCAAqC,CACjCL,OAAQ,YAEZM,iCAAkC,CAC9BN,OAAQ,WAEZO,2BAA4B,CACxBP,OAAQ,YAEZQ,0CAA2C,CACvCR,OAAQ,WAEZS,mCAAoC,CAChCT,OAAQ,WAEZU,kCAAmC,CAC/BV,OAAQ,YAEZW,gCAAiC,CAC7BX,OAAQ,YAEZY,iCAAkC,CAC9BZ,OAAQ,WAEZa,gDAAiD,CAC7Cb,OAAQ,WAEZc,OAAQ,CACJd,OAAQ,YAEZe,iBAAkB,CACdf,OAAQ,YAEZ/kC,KAAM,CACFiyB,MAAO,QAEX8T,yCAA0C,CACtChB,OAAQ,WAEZiB,2CAA4C,CACxCjB,OAAQ,WAEZkB,kCAAmC,CAC/BlB,OAAQ,WAEZmB,iCAAkC,CAC9BnB,OAAQ,WAEZoB,mCAAoC,CAChCpB,OAAQ,YAEZqB,iCAAkC,CAC9BrB,OAAQ,YAEZsB,iBAAkB,CACdtB,OAAQ,WAEZuB,mCAAoC,CAChCvB,OAAQ,WAEZwB,+BAAgC,CAC5BxB,OAAQ,YAEZyB,gCAAiC,CAC7BzB,OAAQ,WAEZ0B,wBAAyB,CACrB1B,OAAQ,WAEZ2B,gCAAiC,CAC7B3B,OAAQ,WAEZ4B,iBAAkB,CACdC,eAAe,GAEnBC,8BAA+B,CAC3B9B,OAAQ,WAEZ+B,cAAe,CACX/B,OAAQ,WAEZgC,qBAAsB,CAClBhC,OAAQ,WAEZiC,sBAAuB,CACnBjC,OAAQ,aCpSb,SAAS+C,KACZ,OAAOjpC,EAAAA,EAAAA,cACH,SACC/iB,EAAkBy9B,OACTwuB,EAQKlD,GAAa/oD,GAAMy9B,GAP9B,MAAO,CACHwrB,OAAQgD,aAAAA,EAAAA,EAAUhD,OAClB9S,MAAO8V,aAAAA,EAAAA,EAAU9V,MACjB2U,cAAemB,aAAAA,EAAAA,EAAUnB,cAMjC,GAAG,GACX,i9BChBO,SAASoB,KACZ,IAA4BrvC,EAAAA,IAAAA,EAAAA,EAAAA,UAAS,OAA9BqN,EAAqBrN,EAAAA,GAAbsN,EAAatN,EAAAA,GACtBsvC,EAAgB9K,GAAgB,eAQtC,MAAO,CACHz8B,SAPY3O,EAAAA,EAAAA,UAAQ,WACpB,OAAOk2C,EACFlmC,QAAO,mBAAEpB,EAAAA,KAAe4F,cAAclhB,SAAS2gB,EAAOO,kBACtD1hB,KAAI,gBAAE8b,EAAAA,EAAAA,WAAkB,CAACpP,MAAbA,EAAAA,MAAoBpa,QAASwpB,KAClD,GAAG,CAACqF,EAAQiiC,IAIR5Q,eAAgBpxB,EAExB,sqGCiCO,IAAMiiC,GAAwE,gBACjF/I,EAAAA,EAAAA,kBACA9/B,EAAAA,EAAAA,QACA+/B,EAAAA,EAAAA,QACA+I,EAAAA,EAAAA,WACG7I,EAAAA,GAAAA,EAAAA,CAJHH,oBACA9/B,UACA+/B,UACA+I,eAGM,GAAM9xD,EAAAA,EAAAA,wBAALC,EACwBktB,GAAAA,EAAAA,GAAAA,cAAak3B,IAArCt1C,EAAwBoe,EAAxBpe,OAAQqK,EAAgB+T,EAAhB/T,aACsDu4C,EAAAA,KAA9DtnC,EAA8DsnC,EAA9DtnC,QAAuB22B,EAAuC2Q,EAAvC3Q,eAC6C2Q,EAAAA,KAApEtnC,EAAoEsnC,EAApEtnC,QAA0B22B,EAA0C2Q,EAA1C3Q,eAC3B+Q,EAAiBN,KACjB,GAAanE,EAAAA,GAAAA,8BAA6B,CAAC,aAA1CtxB,SACD6xB,GAAanyC,EAAAA,EAAAA,UAAQ,kBAAM2I,OAAO8X,OAAOH,GAAUxtB,KAAI,mBAAE7K,EAAAA,OAAe,KAAI,CAACq4B,IAG7E2G,GAAgBjnB,EAAAA,EAAAA,UAAQ,eASL3M,EACEA,EASdijD,EAAT,SAAgC92C,GAC5B,OAAOA,EAAMyG,MAAM,KAAK,GAAGswC,MAC/B,EAnBA,OADAlL,GAAoBh4C,EAAQ+5C,GACR,WAAhB/5C,EAAOtJ,MAAqC,UAAhBsJ,EAAOtJ,KAC5BysD,GAAyBJ,EAAY7xD,EAAG4tD,GAG5C,CACHpoD,KAAMsJ,EAAOtJ,KACb7B,MAAOmL,EAAOnL,MACdiqD,WAAa,IAAuB,QAAnB9+C,EAAAA,EAAOs1B,oBAAPt1B,IAAAA,OAAAA,EAAAA,EAAqBu2B,cAAe,IACrDmgB,aAAe,IAAuB,QAAnB12C,EAAAA,EAAOs1B,oBAAPt1B,IAAAA,OAAAA,EAAAA,EAAqB02C,eAAgB,IACxD1f,eAAgBh3B,EAAOg3B,eACvBD,iBAAkB/2B,EAAO+2B,iBACzBqsB,aAAcpjD,EAAOi3B,cACrBH,aAAc92B,EAAO82B,aACrB3qB,MAAOnM,EAAOmM,MAAQ82C,EAAuBjjD,EAAOmM,YAASvI,EAC7DizB,SAAU72B,EAAO62B,SAAWosB,EAAuBjjD,EAAO62B,eAAYjzB,EAM9E,GAAG,CAAC5D,EAAQ+5C,EAAmBgJ,EAAY7xD,EAAG4tD,IAK1CnrB,GAAAA,EAAAA,GAAAA,SAA8C,CAC9CC,cAAAA,IAHAjD,EAEAgD,EAFAhD,QACAmD,EACAH,EADAG,aAMAhF,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,QACN+V,QAAAA,IAHA7B,MAOAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,OACN+V,QAAAA,EACA0yB,aAAc,UAJdv0B,MAQAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,QACN+V,QAAAA,IAHA7B,MAOAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,WACN+V,QAAAA,IAHA7B,MAOAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,mBACN+V,QAAAA,IAHA7B,MAOAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,iBACN+V,QAAAA,IAHA7B,MAOAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,eACN+V,QAAAA,IAHA7B,MAOAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,eACN+V,QAAAA,IAHA7B,MAOAA,GACAkC,EAAAA,GAAAA,eAAc,CACdpW,KAAM,aACN+V,QAAAA,IAHA7B,MAMEgtB,EAA0BP,GAA2B,CAACthC,QAAAA,EAASja,OAAAA,IAE/Dyc,GAAa9P,EAAAA,EAAAA,UAAQ,kBAAMmnB,EAAa,+BAAOnK,OAC3C25B,EAEAC,EAEAxvB,EAgCN,SAASyvB,EAAmBrvB,EAAsBwrB,GAC9C,OAAKA,EAIE,GAAgBA,OAAbxrB,EAAK,UAAe,OAAPwrB,GAHZxrB,CAIf,oCA1CMmvB,EAAcN,EAAe,cAAer5B,EAASxd,OAAOwzC,OAE5D4D,GAAU3yB,EAAAA,EAAAA,QAAO,CAACjH,EAASxd,MAAOwd,EAASkN,WAE3C9C,EAAgC,CAClCr9B,KAAMizB,EAASjzB,KACf7B,MAAO80B,EAAS90B,MAChBsX,MAAOq3C,EAAmB75B,EAASxd,MAAOm3C,GAC1CzsB,SAAUlN,EAASkN,SACb2sB,EAAmB75B,EAASkN,SAAUmsB,EAAe,cAAer5B,EAASkN,UAAU8oB,aACvF/7C,EACNqzB,cAAetN,EAASy5B,aACxBpsB,eAAgBrN,EAASqN,eACzBD,iBAAkBpN,EAASoN,iBAC3BD,aAA6B,WAAfwsB,EAA2B,IAAM35B,EAASmN,aACxDxB,aAAc,CACV5+B,KAAM,cACN6+B,IAAKguB,EACLhtB,YAAa5M,EAASm1B,WACtBpI,aAAc/sB,EAAS+sB,eAG/BsB,GAAoBh4C,EAAQ+5C,GAC5B1vC,EAAa,IACTzV,GAAIoL,EAAOpL,GACXiO,EAAG7C,EAAO6C,EACVE,EAAG/C,EAAO+C,EACVD,MAAO9C,EAAO8C,MACdE,OAAQhD,EAAOgD,OACfqyB,cAAer1B,EAAOq1B,eACnBtB,IAGPimB,SAAAA,IACA//B,UASJ,mMA5CqD0P,mCAAP,MA4C1C,CAACmK,EAAckvB,EAAgBhjD,EAAQ+5C,EAAmB1vC,EAAc2vC,EAAS//B,IAErF,OACI,UAACle,EAAAA,MAAKA,GAAAA,GAAAA,CAAAA,EACEm+C,GAAAA,CACJjgC,QAASA,aAET,SAACle,EAAAA,MAAAA,OAAY,UACY,UAApB0nD,EAAUt3C,MACLjb,EAAEwyD,iCAAiCC,aACnCzyD,EAAEwyD,iCAAiCE,iBAE7C,UAAC7nD,EAAAA,MAAAA,QAAa,CAACD,UAAU,iCACrB,SAACm1B,EAAAA,WAAUA,GAAAA,CACP7T,MAAOlsB,EAAEmG,OAAOxC,QAChB8sB,YAAazwB,EAAEmG,OAAOxC,SAClBq8B,KAER,UAAC2yB,EAAAA,WAAUA,CAAC/nD,UAAU,0BAA0BqQ,MAAOs3C,EAAUt3C,MAAO23C,cAAeL,EAAU3jC,oBAC7F,SAAC+jC,EAAAA,WAAAA,cAAwB,CAAC5nD,KAAK,KAAKkQ,MAAM,QAAQiR,MAAOlsB,EAAEwyD,iCAAiCC,gBAC5F,SAACE,EAAAA,WAAAA,cAAwB,CAAC5nD,KAAK,KAAKkQ,MAAM,SAASiR,MAAOlsB,EAAEwyD,iCAAiCE,oBAEjG,SAACxoB,EAAAA,YAAWA,CACRhe,MAAOlsB,EAAEwyD,iCAAiCK,oBAC1CzoC,QAAS0oC,EACT9R,YAAU,EACV+R,WAAS,EACThS,eAAgBiS,EAChB/3C,MAAOg4C,EAAWh4C,MAClB2T,SAAU3T,SAAAA,UAASg4C,EAAWrkC,SAAS3T,QAAAA,EAAS,UAEpD,SAACmyC,GAAcA,CAACnyC,MAAO8yC,EAAgB9yC,MAAO2T,SAAUm/B,EAAgBn/B,YACxE,UAACxtB,MAAAA,CAAIwJ,UAAU,8BACU,UAApB2nD,EAAUt3C,QACP,SAACglB,EAAAA,YAAWA,GAAAA,GAAAA,CACR/T,MAAOlsB,EAAEwyD,iCAAiCU,qBACtCC,GAAAA,CACJvkC,SAAUhmB,SAAAA,UAAKuqD,EAAsBvkC,SAASnZ,OAAO7M,EAAEpG,OAAOyY,aAGtE,SAACglB,EAAAA,YAAWA,GAAAA,GAAAA,CACR/T,MAAOlsB,EAAEwyD,iCAAiCY,kBAC1C5iC,gBAAiB9xB,EAAI,CAAC,SAA8B,WAApB6zD,EAAUt3C,SACtCo4C,GAAAA,CACJzkC,SAAUhmB,SAAAA,UAAKyqD,EAAoBzkC,SAASnZ,OAAO7M,EAAEpG,OAAOyY,YAE3C,UAApBs3C,EAAUt3C,QACP,SAACglB,EAAAA,YAAWA,GAAAA,GAAAA,CACR/T,MAAOlsB,EAAEwyD,iCAAiCc,iBACtCC,GAAAA,CACJ3kC,SAAUhmB,SAAAA,UAAK2qD,EAAkB3kC,SAASnZ,OAAO7M,EAAEpG,OAAOyY,gBAItE,SAAC8V,EAAAA,gBAAeA,CACZ7E,MAAOlsB,EAAEwyD,iCAAiCgB,uBAC1CrnC,eAAe,cACfH,QAASynC,EAAkBx4C,MAC3B8Q,gBAAiB0nC,EAAkB7kC,WAElB,WAApB2jC,EAAUt3C,QACP,SAACivB,EAAAA,YAAWA,CACRhe,MAAOlsB,EAAEwyD,iCAAiCkB,sBAC1CtpC,QAASupC,EACT3S,YAAU,EACV+R,WAAS,EACThS,eAAgB6S,EAChB34C,MAAO44C,EAAc54C,MACrB2T,SAAU3T,SAAAA,UAAS44C,EAAcjlC,SAAS3T,QAAAA,EAAS,aAI/D,UAACpQ,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAASwmD,EAAyBjgC,QAAQ,mBAC7C3qB,EAAEsE,iCAAiCsmB,yBAExC,SAACF,GAAAA,OAAMA,CACHtmB,QAASmnB,EACTZ,QAAQ,mBAEP3qB,EAAEsE,iCAAiCC,0BAKxD,EAEM0tD,GAA2B,SAC7BzsD,EACAxF,EACA4tD,GAIA,MAAO,CACHpoD,KAAAA,EACA7B,MAJmB,UAAT6B,EAAmBxF,EAAEspD,6BAA6BwK,QAAU9zD,EAAEspD,6BAA6ByK,SAKrGnG,WAAAA,EACA3yC,MAAO,4BACP0qB,cAAUjzB,EACVozB,eAAgB,IAChBD,iBAAkB,IAClBD,aAAc,IACdssB,cAAc,EACd1M,aAAc,GAEtB,EClTawO,GAAyB,gBAClClL,EAAAA,EAAAA,QAIMmL,GAAiClkB,EAAAA,EAAAA,yBAAwB6hB,IAE/D,OAAOrpC,EAAAA,EAAAA,cAAY,SAACspC,EAAgE/iD,GAChFmlD,EAA+B,CAC3BpC,WAAAA,EACAhJ,kBAAmB/5C,EAAOpL,GAC1BolD,QAAAA,IAEJA,GAEJ,GAAG,CAACA,EAASmL,GACjB,o6ECmBO,IC5CH,GD4CSC,GAA4D,gBACrEnrC,EAAAA,EAAAA,QACA8/B,EAAAA,EAAAA,kBACGhuC,EAAAA,GAAAA,EAAAA,CAFHkO,UACA8/B,sBAGM,GAAM9oD,EAAAA,EAAAA,wBAALC,EACwBktB,GAAAA,EAAAA,GAAAA,cAAak3B,IAArCt1C,EAAwBoe,EAAxBpe,OAAQqK,EAAgB+T,EAAhB/T,aAETg7C,GAA0B14C,EAAAA,EAAAA,UAC5B,iBAAO,CACH9X,MAAO3D,EAAEspD,6BAA6B8K,UACtC/T,MAAO,MAEX,CAACrgD,EAAEspD,+BAGD5mB,GAAgBjnB,EAAAA,EAAAA,UAAQ,WAE1B,OADAqrC,GAAoBh4C,EAAQ+5C,GACR,YAAhB/5C,EAAOtJ,KACA2uD,EAGJ,CACHxwD,MAAOmL,EAAOnL,OAASwwD,EAAYxwD,MACnC08C,MACIvxC,EAAOs1B,aAAaC,IAAIE,UACxB4vB,EAAY9T,MAExB,GAAG,CAACvxC,EAAQ+5C,EAAmBsL,IAEC1xB,GAAAA,EAAAA,GAAAA,SAAoB,CAChDC,cAAAA,IADGjD,EAAyBgD,EAAzBhD,QAASmD,EAAgBH,EAAhBG,aAIThF,GAAqBkC,EAAAA,GAAAA,eAAc,CACtCpW,KAAM,QACN+V,QAAAA,IAFG7B,MAKAA,GAAqBkC,EAAAA,GAAAA,eAAc,CACtCpW,KAAM,QACN+V,QAAAA,IAFG7B,MAKDrS,GAAa9P,EAAAA,EAAAA,UACf,kBACImnB,EAAa,+BAAOnK,+BA9DhC,IAAgC,EAAC/0B,EAAI28C,SA+DrByG,GAAoBh4C,EAAQ+5C,GAC5B1vC,EAAa,SACNrK,GAAAA,CACHnL,MAAO80B,EAAS90B,MAChB6B,KAAM,UACN4+B,cApEY,EAoEyB,CAAC1gC,GAAIoL,EAAOpL,GAAI28C,MAAO5nB,EAAS4nB,OApExD38C,EAAD,EAACA,GAAI28C,EAAL,EAAKA,MAC1B,CACH76C,KAAM,UACN6+B,IAAK,S1BrBF,CACHkC,UAAW,IACXE,iBAAkB,KAClBD,aAAc,GACdhC,MAAO,IACP6B,SAAU,IACVC,UAAW,MACX/B,SAAU,K0Be6B0iB,CACnChoC,QAAS,CACL,CACIvb,GAAI,IACJ4gC,SAAU,cAGlB5gC,GAAAA,EACA6gC,SAAU8b,SA2DNt3B,UACJ,mMAVoB0P,mCAAP,MAWjB,CAACmK,EAAc9zB,EAAQ+5C,EAAmB1vC,EAAc4P,IAEtD6hC,EAA0BP,GAA2B,CAACthC,QAAAA,EAASja,OAAAA,IAErE,OACI,UAACjE,EAAAA,MAAKA,GAAAA,GAAAA,CAAAA,EACEgQ,GAAAA,CACJkO,QAASA,aAET,SAACle,EAAAA,MAAAA,OAAY,UACR7K,EAAEwqB,YAAY6pC,kBAEnB,UAACxpD,EAAAA,MAAAA,QAAa,CAACD,UAAU,iCACrB,SAACm1B,EAAAA,WAAUA,GAAAA,CACP7T,MAAOlsB,EAAEmG,OAAOxC,QAChB8sB,YAAazwB,EAAEmG,OAAOxC,SAClBq8B,KAER,SAACooB,GAAWA,CAACntC,MAAOq5C,EAAWr5C,MAAO2T,SAAU0lC,EAAW1lC,eAE/D,UAAC/jB,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAASwmD,EAAyBjgC,QAAQ,mBAC7C3qB,EAAEmG,OAAOovB,YAEd,SAAC7K,GAAAA,OAAMA,CAACtmB,QAASmnB,EAAYZ,QAAQ,mBAChC3qB,EAAEmG,OAAOpB,aAK9B,EE3HawvD,GAAmB,gBAC5BzL,EAAAA,EAAAA,QAIM0L,GAA2BzkB,EAAAA,EAAAA,yBAAwBmkB,IAEzD,OAAO3rC,EAAAA,EAAAA,cAAY,SAACxE,GAEhBywC,EAAyB,CACrB3L,kBAAmB9kC,EAAargB,KAEpColD,GAEJ,GAAG,CAACA,EAAS0L,GACjB,ECSaC,GAAwB,gBACjC3L,EAAAA,EAAAA,QACAD,EAAAA,EAAAA,kBAKM6L,GAAqB3kB,EAAAA,EAAAA,yBAAwB4Y,IAC7CgM,GAAuB5kB,EAAAA,EAAAA,yBAAwB4d,IAC/CiH,GAAyB7kB,EAAAA,EAAAA,yBAAwBgd,IACjD8H,GAAwB9kB,EAAAA,EAAAA,yBAAwBie,IAChD,GAAW9gC,EAAAA,GAAAA,cAAak3B,IAAvBt1C,OAEDgmD,EAAmB1J,GAAoB,CACzCtC,QAAAA,EACAD,kBAAAA,IAGEkM,EAAwBhK,GAAmB,CAC7CjC,QAAAA,IAGEkM,EAA4BhB,GAAuB,CACrDlL,QAAAA,IAGEmM,EAA2B5J,GAAsB,CACnDvC,QAAAA,IAGEoM,EAAsB9G,GAAiB,CACzCtF,QAAAA,IAGEqM,EAAsBZ,GAAiB,CACzCzL,QAAAA,IAGEsM,EAA2B/G,GAAsB,CACnDvF,QAAAA,IAGJ,OAAOvgC,EAAAA,EAAAA,cAAY,SAACspC,EAAkC9I,GAElD,OADAjC,GAAoBh4C,EAAQ+5C,GACpBgJ,GACJ,IAAK,QACG9I,GdtDb,SACHsM,GAEA,KACI,UAAWA,GACX,cAAeA,GACf,aAAcA,GAEd,MAAM,IAAIzhC,MAAM,2DAExB,Cc6CoB0hC,CAAiDvM,GAGrD6L,EAAuB,CACnB/L,kBAAAA,EACAC,QAAAA,EACAC,WAAAA,IAIJ,MAEJ,IAAK,SACL,IAAK,QACDiM,EAA0BnD,EAAY/iD,GACtC,MAEJ,IAAK,aACGi6C,GzBnCb,SACHsM,GAEA,KACI,iBAAkBA,GAClB,UAAWA,GACX,eAAgBA,GAChB,gBAAiBA,GACjB,UAAWA,GACgB,iBAApBA,EAAGjxB,cACU,OAApBixB,EAAGjxB,cACH,SAAUixB,EAAGjxB,cACY,iBAAzBixB,EAAGjxB,aAAa5+B,MAEhB,MAAM,IAAIouB,MAAM,iDAExB,CyBoBoB2hC,CAAwCxM,GAG5C2L,EAAmB,CACf7L,kBAAAA,EACAE,WAAAA,EACAD,QAAAA,IAGJ,MAEJ,IAAK,eACGC,GZ7Eb,SACHsM,GAEA,KACI,UAAWA,GACX,eAAgBA,GAChB,UAAWA,GACX,gBAAiBA,GACjB,YAAaA,GACb,iBAAkBA,GACS,iBAApBA,EAAGjxB,cACU,OAApBixB,EAAGjxB,cACH,SAAUixB,EAAGjxB,cACY,iBAAzBixB,EAAGjxB,aAAa5+B,MAEhB,MAAM,IAAIouB,MAAM,mDAExB,CY6DoB4hC,CAA0CzM,GAG9C4L,EAAqB,CACjB9L,kBAAAA,EACAE,WAAAA,EACAD,QAAAA,IAEJ,MAGJ,IAAK,UACDqM,EAAoBrmD,GACpB,MAEJ,IAAK,OACGi6C,GXpGb,SACHsM,GAEA,KACI,UAAWA,MACX,SAAUA,GAEV,MAAM,IAAIzhC,MAAM,2DAExB,CW4FoB6hC,CAAgD1M,GAGpD8L,EAAsB,CAClBhM,kBAAAA,EACAE,WAAAA,EACAD,QAAAA,IAEJ,MAEJ,IAAK,WACDgM,IACA,MAEJ,IAAK,aACDC,EAAsBjmD,GACtB,MACJ,IAAK,eACDmmD,EAAyBnmD,GACzB,MACJ,IAAK,WACDomD,EAAoBpmD,GACpB,MACJ,IAAK,eACDsmD,EAAyBtmD,GACzB,MACJ,SA9HY,SAAC4mD,GACrB,MAAM,IAAI9hC,MAAM,0BAAqC,OAAX8hC,GAC9C,CA6HgBC,CAAgB9D,GAG5B,GAAG,CACC/iD,EACA4lD,EACAE,EACAC,EACAF,EACA9L,EACAC,EACAkM,EACAG,EACAL,EACAC,EACAE,EACAC,EACAE,GAER,EF7KI,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAWhxC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAI,GAAe,SAAsB0jB,EAAMnK,GAC7C,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,uzDAEP,EACI,IAA0B,IAAAI,YAAW,IAE1B,IGzBf,IAAI,GAAO,GACP,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAWvC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAIozD,GAAc,SAAqB1vC,EAAMnK,GAC3C,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,uUACA,KAAW,GAAsB,gBAAoB,OAAQ,CAChEA,EAAG,iiBAEP,EACI,IAA0B,IAAAI,YAAWivC,IAE1B,IC3Bf,IAAI,GAAO,GACP,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAWxxC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAIqzD,GAAkB,SAAyB3vC,EAAMnK,GACnD,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,6cACA,KAAW,GAAsB,gBAAoB,OAAQ,CAChEA,EAAG,4wDAEP,EACI,IAA0B,IAAAI,YAAWkvC,IAE1B,IC3Bf,IAAI,GAAO,GACP,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAWzxC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAIszD,GAAW,SAAkB5vC,EAAMnK,GACrC,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,mTACA,KAAW,GAAsB,gBAAoB,OAAQ,CAChEA,EAAG,slEAEP,EACI,IAA0B,IAAAI,YAAWmvC,IAE1B,IC3Bf,IAAI,GACA,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAW1xC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAIuzD,GAAU,SAAiB7vC,EAAMnK,GACnC,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,mtDAEP,EACI,IAA0B,IAAAI,YAAWovC,IAE1B,ICzBf,IAAI,GAAO,GAAQC,GACf,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAW5xC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAIyzD,GAAW,SAAkB/vC,EAAMnK,GACrC,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,obACA,KAAW,GAAsB,gBAAoB,OAAQ,CAChEA,EAAG,4rCACAyvC,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEzvC,EAAG,+QAEP,EACI,IAA0B,IAAAI,YAAWsvC,IAE1B,IC7Bf,IAAI,GAAO,GACP,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAW7xC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAI0zD,GAAkB,SAAyBhwC,EAAMnK,GACnD,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,2oCACA,KAAW,GAAsB,gBAAoB,OAAQ,CAChEA,EAAG,ypBAEP,EACI,IAA0B,IAAAI,YAAWuvC,IAE1B,IC3Bf,IAAI,GAAO,GACP,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAW9xC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAI2zD,GAAqB,SAA4BjwC,EAAMnK,GACzD,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,4oCACA,KAAW,GAAsB,gBAAoB,OAAQ,CAChEA,EAAG,6xBAEP,EACI,IAA0B,IAAAI,YAAWwvC,IAE1B,IC3Bf,IAAI,GACA,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAW/xC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAI4zD,GAAkB,SAAyBlwC,EAAMnK,GACnD,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,suDAEP,EACI,IAA0B,IAAAI,YAAWyvC,IAE1B,ICzBf,IAAI,GACA,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAWhyC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAI6zD,GAAW,SAAkBnwC,EAAMnK,GACrC,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,u+CAEP,EACI,IAA0B,IAAAI,YAAW0vC,IAE1B,ICzBf,IAAI,GACA,GAAY,CAAC,QAAS,WAC1B,SAAS,KAAiS,OAApR,GAAWjyC,OAAOC,OAASD,OAAOC,OAAOa,OAAS,SAAU1iB,GAAU,IAAK,IAAI6T,EAAI,EAAGA,EAAI8O,UAAU7O,OAAQD,IAAK,CAAE,IAAI9O,EAAS4d,UAAU9O,GAAI,IAAK,IAAI+O,KAAO7d,EAAc6c,OAAOiB,UAAUC,eAAeC,KAAKhe,EAAQ6d,KAAQ5iB,EAAO4iB,GAAO7d,EAAO6d,GAAU,CAAE,OAAO5iB,CAAQ,EAAU,GAASgjB,MAAMtS,KAAMiS,UAAY,CAClV,SAAS,GAAyB5d,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAAkE6d,EAAK/O,EAAnE7T,EACzF,SAAuC+E,EAAQme,GAAY,GAAc,MAAVne,EAAgB,MAAO,CAAC,EAAG,IAA2D6d,EAAK/O,EAA5D7T,EAAS,CAAC,EAAOmjB,EAAavB,OAAO/E,KAAK9X,GAAqB,IAAK8O,EAAI,EAAGA,EAAIsP,EAAWrP,OAAQD,IAAO+O,EAAMO,EAAWtP,GAAQqP,EAASE,QAAQR,IAAQ,IAAa5iB,EAAO4iB,GAAO7d,EAAO6d,IAAQ,OAAO5iB,CAAQ,CADhN,CAA8B+E,EAAQme,GAAuB,GAAItB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAmB3B,OAAO0B,sBAAsBve,GAAS,IAAK8O,EAAI,EAAGA,EAAI0P,EAAiBzP,OAAQD,IAAO+O,EAAMW,EAAiB1P,GAAQqP,EAASE,QAAQR,IAAQ,GAAkBhB,OAAOiB,UAAUW,qBAAqBT,KAAKhe,EAAQ6d,KAAgB5iB,EAAO4iB,GAAO7d,EAAO6d,GAAQ,CAAE,OAAO5iB,CAAQ,CAI3e,IAAI8zD,GAAU,SAAiBpwC,EAAMnK,GACnC,IAAIpY,EAAQuiB,EAAKviB,MACfwiB,EAAUD,EAAKC,QACftL,EAAQ,GAAyBqL,EAAM,IACzC,OAAoB,gBAAoB,MAAO,GAAS,CACtDI,MAAO,6BACPD,KAAM,+BACND,QAAS,oBACTrK,IAAKA,EACL,kBAAmBoK,GAClBtL,GAAQlX,EAAqB,gBAAoB,QAAS,CAC3DD,GAAIyiB,GACHxiB,GAAS,KAAM,KAAU,GAAqB,gBAAoB,OAAQ,CAC3E4iB,EAAG,44CAEP,EACI,IAA0B,IAAAI,YAAW2vC,IAE1B,ICXR,IAAMC,GAA2C,CACpD,CAAC/wD,KAAM,SAAUmrB,KAAM6lC,IACvB,CAAChxD,KAAM,aAAcmrB,KAAM8lC,IAC3B,CAACjxD,KAAM,eAAgBmrB,KAAM8lC,IAC7B,CAACjxD,KAAM,UAAWmrB,KAAM+lC,IACxB,CAAClxD,KAAM,QAASmrB,KAAMgmC,IACtB,CAACnxD,KAAM,OAAQmrB,KAAMimC,IACrB,CAACpxD,KAAM,WAAYmrB,KAAMkmC,IACzB,CAACrxD,KAAM,QAASmrB,KAAMmmC,KCRbC,GAAwD,gBAAEpzD,EAAAA,EAAAA,MAAOiS,EAAAA,EAAAA,QAASwM,EAAAA,EAAAA,SAAU40C,EAAAA,EAAAA,aAC7F,OACI,iCACI,SAACC,KAAAA,CAAGrsD,UAAU,2BAAmBjH,KACjC,SAACvC,MAAAA,CAAIwJ,UAAU,uCACVgL,EAAQrH,KAAI2oD,SAAAA,UACT,SAAC/M,GAAMA,CAEHzJ,OAAQwW,EACR/4C,SAAU64C,IAAiBE,EAAG1xD,KAC9B4c,SAAUA,GAHL80C,EAAG1xD,aAShC,ECrBM4kB,GAAU,CACZ,CAACzmB,MAAO,mBAAoBiS,QAAS2gD,IACrC,CAAC5yD,MAAO,eAAgBiS,QFcwB,CAChD,CAACpQ,KAAM,aAAcmrB,KAAMwmC,IAC3B,CAAC3xD,KAAM,eAAgBmrB,KAAMymC,IAC7B,CAAC5xD,KAAM,WAAYmrB,KAAM0mC,IACzB,CAAC7xD,KAAM,eAAgBmrB,KAAM2mC,OEfpBC,GAAwBhB,GAAgB,GAAG/wD,KAE3CgyD,GAGR,gBAAER,EAAAA,EAAAA,aAAc50C,EAAAA,EAAAA,SACX,GAAMriB,EAAAA,EAAAA,wBAALC,EAEP,OACI,SAACoB,MAAAA,UACIgpB,GAAQ7b,KAAImyC,SAAAA,UACT,SAACqW,GAAkBA,CAEfpzD,MAAO3D,EAAEwqB,YAAYk2B,EAAO/8C,SAC5BiS,QAAS8qC,EAAO9qC,QAChBohD,aAAcA,EACd50C,SAAUA,GAJLs+B,EAAO/8C,WAShC,y4DCpBO,IAAM4mD,GAAoE,gBAC7E1B,EAAAA,EAAAA,kBACA9/B,EAAAA,EAAAA,QACGigC,EAAAA,GAAAA,EAAAA,CAFHH,oBACA9/B,YAGM,GAAMhpB,EAAAA,EAAAA,wBAALC,EACiCqiB,EAAAA,IAAAA,EAAAA,EAAAA,UAA+Bk1C,IAAqBA,GAArFP,EAAiC30C,EAAAA,GAAnBo1C,EAAmBp1C,EAAAA,GAElCq1C,EAAmBjD,GAAsB,CAC3C3L,QAAS//B,EACT8/B,kBAAAA,IAGEt9B,GAAahD,EAAAA,EAAAA,cAAY,WAC3BmvC,EAAiBV,EACrB,GAAG,CAACU,EAAkBV,IAEtB,OACI,UAACnsD,EAAAA,MAAKA,0UAAAA,CAAAA,CACF8sD,UAAQ,oBACJ3O,GAAAA,CACJjgC,QAASA,EACTne,UAAU,oCAEV,SAACC,EAAAA,MAAAA,OAAY,UACR7K,EAAEwqB,YAAYotC,mBAEnB,SAAC/sD,EAAAA,MAAAA,QAAa,CAACD,UAAU,0BACrB,SAAC4sD,GAAOA,CACJR,aAAcA,EACd50C,SAAUq1C,OAGlB,UAAC5sD,EAAAA,MAAAA,QAAa,YACV,SAAC6f,GAAAA,OAAMA,CAACtmB,QAAS,kBAAM2kB,KAAW4B,QAAQ,mBACrC3qB,EAAEsE,iCAAiCsmB,yBAExC,SAACF,GAAAA,OAAMA,CAACtmB,QAASmnB,EAAYZ,QAAQ,mBAChC3qB,EAAEsE,iCAAiCwmB,sBAKxD,EClBO,SAASulB,GAAsB,WAACl3B,aAC7B0+C,GAAsBlT,EAAAA,GAAAA,YAAWP,IAEjCkG,GAA+Bva,EAAAA,EAAAA,yBAAwBwa,IAEvDoK,GAAuB5kB,EAAAA,EAAAA,yBAAwB4d,IAC/C+G,GAAqB3kB,EAAAA,EAAAA,yBAAwB4Y,IAC7CiM,GAAyB7kB,EAAAA,EAAAA,yBAAwBgd,IACjD8H,GAAwB9kB,EAAAA,EAAAA,yBAAwBie,IAEhD8J,EAA2BzM,GAAsB,CAACvC,QAASle,GAAAA,OAC3DmtB,EAA4B/D,GAAuB,CAAClL,QAASle,GAAAA,OAC7DotB,EAAwBjN,GAAmB,CAACjC,QAASle,GAAAA,OACrDqtB,EAAsB7J,GAAiB,CAACtF,QAASle,GAAAA,OACjDstB,EAAqB7J,GAAsB,CAACvF,QAASle,GAAAA,OACrDutB,EAAsB5D,GAAiB,CAACzL,QAASle,GAAAA,OAGvD,OAAOriB,EAAAA,EAAAA,cACH,SAACzZ,GAEG,OADA+oD,EAAoB,CAAC1+C,aAAAA,EAAcrK,OAAAA,IAC3BA,EAAOtJ,MACX,IAAK,aACDwyD,EAAsBlpD,GACtB,MACJ,IAAK,eACDgpD,EAAyBhpD,GACzB,MACJ,IAAK,QACL,IAAK,SACDipD,EAA0BjpD,EAAOtJ,KAAMsJ,GACvC,MACJ,IAAK,OACD,OAAQA,EAAOs1B,aAAa5+B,MACxB,IAAK,aACDkvD,EAAmB,CACf7L,kBAAmB/5C,EAAOpL,GAC1BqlD,WAAYj6C,IAEhB,MACJ,IAAK,eACD6lD,EAAqB,CACjB9L,kBAAmB/5C,EAAOpL,GAC1BqlD,WAAYj6C,IAIxB,MACJ,IAAK,QACD8lD,EAAuB,CACnB/L,kBAAmB/5C,EAAOpL,GAC1BqlD,WAAYj6C,IAEhB,MACJ,IAAK,WACDmpD,EAAoBnpD,GACpB,MACJ,IAAK,eACDopD,EAAmBppD,GACnB,MACJ,IAAK,UACDqpD,EAAoBrpD,GACpB,MACJ,IAAK,OACD+lD,EAAsB,CAClBhM,kBAAmB/5C,EAAOpL,GAC1BqlD,WAAYj6C,IAEhB,MACJ,QACIw7C,EAA6B,CACzBzB,kBAAmB/5C,EAAOpL,KAG1C,GACA,CACIm0D,EACA1+C,EACA6+C,EACAF,EACAC,EACAnD,EACAqD,EACAC,EACAC,EACAtD,EACAvK,EACAoK,EACAC,GAGZ,CCtHO,0+BCRA,SAASyD,GAAgBn9C,EAAoCwzC,GAChE,IAAKA,EACD,OAAOxzC,aAAAA,EAAAA,EAAO5b,aAAc,GAEhC,OAAQovD,GACJ,IAAK,UACD,OAuBZ,SAA0BxzC,GACtB,QAAcvI,IAAVuI,GAAiC,KAAVA,EACvB,MAAO,GAEX,IAAMo9C,EAAcjS,SAASnrC,EAAM5b,YAEnC,GAAIg5D,EAAc,GAAKA,EAAc,EACjC,MAAO,GAAqB,OAAJ,IAAdA,EAAkB,KAEhC,MAAO,GAAe,OAAZA,EAAY,IAC1B,CAjCmBC,CAAiBr9C,GAC5B,IAAK,WACD,OAMZ,SAA2BA,GACvB,QAAcvI,IAAVuI,GAAiC,KAAVA,EACvB,MAAO,GAGX,IAAMs9C,EAAanS,SAASnrC,EAAM5b,YAAc20C,EAAAA,aAChD,OAAIukB,GAAcC,EAAAA,UACP,GAA0CC,OAAvCthD,KAAKuhD,MAAMH,EAAaC,EAAAA,WAAW,MAAyC,QAArCC,EAAAA,EAAAA,cAAaF,EAAY,aACnEA,GAAc9qD,EAAAA,YACdgrD,EAAAA,EAAAA,cAAaF,EAAY,aAEzBE,EAAAA,EAAAA,cAAaF,EAAY,QAExC,CAnBmBI,CAAkB19C,GAGrC,i9BCXA,IAAM29C,GAAS,CAAC,MAAO,OAWVC,GAAa,gBAAE59C,EAAAA,EAAAA,MAAO4qB,EAAAA,EAAAA,iBAAkBC,EAAAA,EAAAA,eAAgBF,EAAAA,EAAAA,aAAckzB,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,kBACnF3uC,GAAU3O,EAAAA,EAAAA,UAAQ,eACd3H,EAAQm/B,iBAAiB1yC,SAASsD,MAClCm1D,EAAYF,EAAWjzB,EAAmBD,EACnBkzB,EAAAA,GAAAA,EAAW,CAACE,EAAW,GAAK,CAAC,EAAGA,GAAU,GAAhEC,EAAsBH,EAAAA,GAAZI,EAAYJ,EAAAA,GAmB7B,MAAO,CACHK,MAAO,CACHC,OAAQR,GACRhkB,OApCD,OAsCHykB,UAAW,CACP7zD,KAAM,QACN8zD,WAAY,IACZC,UAAW,GACXC,SAAU,CACNC,MAAM,GAEVC,SAAU,CACND,MAAM,GAEVE,UAAW,CACPF,MAAM,GAEVG,UAAW,CACPH,MAAM,IAGdI,WAAY,CACR95C,IAAK,EACLC,IAAK,EACLw5C,SAAU,CACNC,MAAM,GAEVC,SAAU,CACND,MAAM,GAEVE,UAAW,CACPF,MAAM,GAEVG,UAAW,CACPH,MAAM,IAGd9kB,OAAQ,CACJ,CACInvC,KAAM,MACNovC,OAAQ,CAAC,MA1Ed,OA2EKwkB,OAAQR,GACRU,WAAY,IACZC,UAAW,GACXO,QAAQ,EACR/kB,UAAW,CACP0kB,MAAM,GAEV52B,KAAM,CACF,CACI5nB,MAAOA,EACPk4B,UAAW,CACP5mC,MArEhBusD,EACI79C,EAAQ6qB,EACDhyB,EAAMs/B,iBAAiB,oBAEvBt/B,EAAMs/B,iBAAiB,iBAIlCn4B,EAAQ4qB,EACD/xB,EAAMs/B,iBAAiB,iBACvBn4B,EAAQ6qB,EACRhyB,EAAMs/B,iBAAiB,oBAE3Bt/B,EAAMs/B,iBAAiB,iBA2DlB,CACIn4B,MAAOA,EAAQi+C,EAAW/hD,KAAKC,IAAI8hD,EAAWj+C,GAAS,EACvDk4B,UAAW,CACP5mC,MAAOuH,EAAMs/B,iBAAiB,qBAK9C,CACI5tC,KAAM,UACNu0D,iBAAkB,QAClBC,WAAY,EACZF,QAAQ,EACRj3B,KAAM,CAAC,CACH5nB,MAAO,CAAC,IAAM,GACdiR,MAAO,CACHutC,MAAM,EACN3oD,SAAU,SACVmpD,UAAW,kBAAMlB,EAAkBE,IACnCiB,SAAU,KAEf,CACCj/C,MAAO,CAAC,IAAM,KACdiR,MAAO,CACHutC,MAAM,EACN3oD,SAAU,SACVmpD,UAAW,kBAAMlB,EAAkBG,IACnCgB,SAAU,KAEf,CACCj/C,MAAO,CAAC,GAAK,IACbiR,MAAO,CACHutC,MAAM,EACN3oD,SAAU,SACVmpD,UAAW,kBAAMlB,EAAkB99C,IACnCq5B,WAAY,SAK5BH,UAAW,CACPiB,WAAY,oDACZf,SAAU,GACVC,WAAY,IACZC,WAAY,IAGxB,GAAG,CAACukB,EAAUjzB,EAAkBD,EAAc3qB,EAAO6qB,EAAgBizB,IAErE,OACI,SAACvnB,GAAKA,CAACpnB,QAASA,GAExB,EC5FO,SAAS+vC,GAAgB,OA6FbC,EA7FcnrD,EAAD,EAACA,OAAQorD,EAAT,EAASA,UAAyBvI,EAAlC,EAAkCA,eAAgB9xD,EAAlD,EAAkDA,EACxEwF,EAAOyJ,EAAOm1B,aAAa5+B,KACsCmgD,GAAAA,EAAAA,GAAAA,WAAU12C,EAAOm1B,aAAaC,KAA9FplB,EAAgE0mC,EAAhE1mC,QAA4BulB,EAAoCmhB,EAApCnhB,MAAuB9gC,EAAaiiD,EAAbjiD,GACpD22D,GAAY1U,EAAAA,GAAAA,WAAU2U,GAAgB,IACtCF,EAAiBC,EAAUnlD,MAAKqlD,SAAAA,UAAQA,aAAAA,EAAAA,EAAM72D,MAAO82D,KAErDC,EAAcJ,EAAU5uC,QAAOsG,SAAAA,UAAQA,EAAKruB,KAAO82D,KAAO,GAIhE,GAHY,gBAARh1D,GAA0Bi1D,GAAet7C,MAAM8X,QAAQwjC,EAAYv+B,UACnEu+B,EAAYv+B,OAASu+B,EAAYv+B,OAAOyd,MAAM,EAAG9vB,IAEzC,cAARrkB,GAAwBi1D,GAAet7C,MAAM8X,QAAQwjC,EAAYv+B,QAAS,CAC1E,IAAMw+B,EAAWC,EAAkBrkD,OAAS,EACxCskD,EAAgBH,EAAYv+B,OAAOzQ,QAAOsG,SAAAA,GAC1C,IAAMuY,EAAQvY,EAAK2oC,GACnB,OAAOG,EAAAA,UAAAA,SAAmBvwB,EAC9B,IAKAswB,GAJAA,EAAgBA,EAAcrsD,KAAIwjB,SAAAA,GAE9B,cADOA,EAAK2oC,GACL3oC,CACX,KAC8B4nB,MAAM,EAAG9vB,GAEvC,IAAMixC,EAAgBH,EAAkBzlD,MAAK6oB,SAAAA,SAA8B,mBAApBA,EAAOuG,YAC1Dw2B,GACAF,EAAcn5C,SAAQxG,SAAAA,GAClB,IAAMvX,EAAK0iD,UAAS0U,aAAAA,EAAAA,EAAep3D,IAAKo3D,EAAcp3D,GAAK,KACrDq3D,EAAK9/C,EAAMvX,GACXs3D,EAAK//C,EAAMvX,EAAK,GACtBuX,EAAMvX,GAAM,GAAK0iD,SAAS2U,GAAM3U,SAAS4U,UAClC//C,EAAMvX,EAAK,EACtB,IAEJ+2D,EAAYv+B,OAAS0+B,CACzB,CACA,IAAMK,EAAuB,GAqE7B,OApEAN,EAAkBl5C,SAAQsc,SAAAA,GACtB,IAAMm9B,EACApJ,EADuB,iBAATtsD,EACC,eACA,aADgBu4B,EAAOuG,UAG5C22B,EAAUlmC,KAA4B,UAAvBmmC,aAAAA,EAAAA,EAAavf,QAC5B,IAAMwf,EAAS/U,UAASroB,aAAAA,EAAAA,EAAQr6B,KAAM,IAChC03D,EAAyB51D,EAC/B,GACgC,eAA5B,GAA4Cu4B,EAAOuG,eAA4B5xB,IAAhBwoD,GACnC,iBAA3BE,GAA6Cr9B,EAAOuG,eAA4B5xB,IAAhBwoD,EAEjEryD,QAAQ2sB,KAAK,YAAevmB,EAAOtL,MAAQ,kCAAqCo6B,EAAOuG,cAJ3F,KAYI81B,EAYAA,EAYAA,EAQAA,EApCJ,GACgC,eAA5B,GAA4Cr8B,EAAOuG,UAAmC,aAAvB42B,EAAYzM,QAC/C,iBAA3B2M,GAA6Cr9B,EAAOuG,UAAmC,aAAvB42B,EAAYzM,OAE7E2L,SAAsB,QAAtBA,EAAAA,EAAgBl+B,cAAhBk+B,IAAAA,GAAAA,EAAwB34C,SAAQ45C,SAAAA,GACR,OAAhBA,EAAIF,KACJE,EAAIF,GAAU,KAElBE,EAAIF,IAAUG,EAAAA,EAAAA,UAAS7lD,OAAO4lD,EAAIF,IACtC,IAGJ,GAC+B,cAA3B,GAAiE,WAAtBD,EAAYzM,QAC5B,gBAA1B2M,GAAkE,WAAtBF,EAAYzM,OAEzD2L,SAAsB,QAAtBA,EAAAA,EAAgBl+B,cAAhBk+B,IAAAA,GAAAA,EAAwB34C,SAAQ45C,SAAAA,GACT,MAAfA,EAAIF,KACJE,EAAIF,GAAU,KAElBE,EAAIF,GAAUE,EAAIF,GAAU,IAChC,IAGJ,GACgC,eAA5B,GAA4CD,EAAYvf,OAC5B,iBAA3Byf,GAA6CF,EAAYvf,MAE1Dye,SAAsB,QAAtBA,EAAAA,EAAgBl+B,cAAhBk+B,IAAAA,GAAAA,EAAwB34C,SAAQ45C,SAAAA,GACR,OAAhBA,EAAIF,IAAoC,MAAhBE,EAAIF,KAC5BE,EAAIF,GAAU,GAEtB,IAGJ,GAAwB,cAApBp9B,EAAOuG,SACP81B,SAAsB,QAAtBA,EAAAA,EAAgBl+B,cAAhBk+B,IAAAA,GAAAA,EAAwB34C,SAAQ45C,SAAAA,GAC5BA,EAAI5lD,OAAOsoB,EAAOr6B,KA9HlC,SAAqB4mC,EAAetqC,GAChC,OAAQsqC,GACJ,IAAK,OACD,OAAOtqC,EAAEwqB,YAAYk9B,mBACzB,IAAK,QACD,OAAO1nD,EAAEwqB,YAAYm9B,oBACzB,IAAK,kBACD,OAAO3nD,EAAEwqB,YAAYo9B,8BACzB,IAAK,YACD,OAAO5nD,EAAEwqB,YAAYq9B,wBACzB,QACI,OAAO7nD,EAAEwqB,YAAY+wC,yBAEjC,CAiHyCC,CAAYH,EAAI5lD,OAAOsoB,EAAOr6B,KAAM1D,EACjE,GAxCJ,CA0CJ,IAEeo6D,SAAsB,QAAtBA,EAAAA,EAAgBl+B,cAAhBk+B,IAAAA,OAAAA,EAAAA,EAAwB7rD,KAAIktD,SAAAA,GACvC,OAAOr3C,OAAO8X,OAAOu/B,GAAKltD,KAAI,SAACmtD,EAAMrlD,GACjC,MAAO,CACH4E,MAAe,MAARygD,EAAe,IAAMA,EAC5Bh4D,IAAI2lB,EAAAA,GAAAA,QACJ4xC,UAAWA,EAAU5kD,GAE7B,GACJ,GAGJ,CCjJO,ICFMslD,GAAc,gBAAE94B,EAAAA,EAAAA,KACnBzY,GAAU3O,EAAAA,EAAAA,UAAQ,WACpB,IAAM3H,EAAQm/B,iBAAiB1yC,SAASsD,MAExC,MAAO,CACH4vC,OAAQ,CACJviC,OAAQ,EACRwiC,OAAQ,aACR3iC,KAAM,EACNe,OAAQ,GACRtM,KAAM,SACNmuC,QAAS,GACTC,UAAW,GACXC,WAAY,IAEhB0mB,KAAM13B,EAAKt0B,KAAI,SAACgY,EAAGyiB,SAAW,CAC1Bj4B,KAAM,IACNC,MAAO,MACPc,OAAQ,GAA6B,OAA1B,EAAI+wB,EAAKvsB,OAAS,IAAM,EAAE,KACrCrF,IAAK,GAAyC,OAAtC+3B,EAAQnG,EAAKvsB,OAAS,IAAM,EAAI0yB,EAAM,SAElD4yB,MAAO/4B,EAAKt0B,KAAI,SAACgY,EAAGyiB,SAAW,CAC3BxjC,KAAM,QACNq2D,UAAW7yB,EACXwwB,SAAU,CACNC,MAAM,GAEVC,SAAU,CACND,MAAM,GAEVG,UAAW,CACPH,MAAM,GAEVE,UAAW,CACPF,MAAM,OAGdqC,MAAOj5B,EAAKt0B,KAAI,SAACgY,EAAGyiB,SAAW,CAC3BxjC,KAAM,WACNq2D,UAAW7yB,EACX+yB,SAAS,EACTl5B,KAAM,CAACtc,EAAEmD,MACTiwC,UAAW,CACPqC,OAAQ,GACR1nB,WAAY,IACZ2nB,SAAU,QACVrqD,MAAO,IACP2iC,WAAY,QAGpBI,OAAQ9R,EAAK7K,QAA0B,SAACmE,EAAK5V,EAAGyiB,GAsB5C,OArBAziB,EAAEsc,KAAKphB,SAAQyV,SAAAA,GACXiF,EAAIpH,KAAK,CACLvvB,KAAM,MACNkkB,KAAMwN,EAAExN,KACRwyC,WAAYlzB,EACZmzB,WAAYnzB,EACZozB,eAAgB,MAChBv5B,KAAM,CACF,CACInZ,KAAMwN,EAAExN,KACR2yC,QAASnlC,EAAExN,KACXzO,MAAOic,EAAEjc,QAGjBiR,MAAO,CACHutC,MAAM,EACN3oD,SAAU,QACVmpD,UAAW,gBAAEh/C,EAAAA,EAAAA,YAA4B,iBAAVA,EAAqBsL,EAAE0zC,UAAUh/C,GAAS,MAGrF,IACOkhB,CACX,GAAG,IACH5vB,MAAO,CAACuH,EAAMs/B,iBAAiB,iBAAkBt/B,EAAMs/B,iBAAiB,mBACxEe,UAAW,CACPiB,WAAY,oDACZf,SAAU,GACVC,WAAY,IACZC,WAAY,IAGxB,GAAG,CAAC1R,IAEJ,OACI,SAAC2O,GAAKA,CAACpnB,QAASA,GAExB,2HCrFA,IAAMkyC,GAAqB,CACvBC,QAAS,CAACC,WAAY,EAAGC,UAAW,GACpCC,SAAU,CAACF,WAAY,EAAGC,UAAW,GACrCE,aAAc,CAACH,WAAY,EAAGC,UAAW,GACzCG,oBAAqB,CAACJ,WAAY,EAAGC,UAAW,IAiB7C,SAASI,GAAkB,OAsD1B5tD,EAtD2B0U,EAAD,EAACA,iBAAkB1U,EAAnB,EAAmBA,OAC3C,GAAMlP,EAAAA,EAAAA,wBAALC,EACD88D,GAAcrhD,EAAAA,EAAAA,UAAQ,eAKhBxM,EAAAA,EAJR,GAAK0U,EAIL,OAAwC,QAAhC1U,EAAmB,QAAnBA,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAIplB,eAAzBhQ,IAAAA,EAAAA,EAAoC,IAAI+oB,QAC5C,SAAC9jB,EAAQ6pB,OAEDpa,EAAAA,EAAAA,EACWoa,EADXpa,EADE64C,EAAa/mD,OAGd,QAFDkO,EAAAA,SAA6B,QAA7BA,EAAAA,EAAkB8hC,mBAAlB9hC,IAAAA,GAAyC,QAAzCA,EAAAA,EAAgC,GAAGuY,cAAnCvY,IAAAA,GAA8C,QAA9CA,EAAAA,EAA4C,UAA5CA,IAAAA,OAAAA,EAAAA,EACIlO,OAAgB,QAATsoB,EAAAA,EAAOr6B,UAAPq6B,IAAAA,EAAAA,EAAa,WADxBpa,IAAAA,EAAAA,EAEK,GAGT,OAAQoa,EAAOuG,UACX,IAAK,+BAEG3gB,EAAAA,EADE84C,EAAYhnD,OAEgB,QAD9BkO,EAAAA,SAA4B,QAA5BA,EAAAA,EAAkBo5C,kBAAlBp5C,IAAAA,OAAAA,EAAAA,EACMq5C,gCADNr5C,IAAAA,EAAAA,EACkC,GAEtCzP,EAAOqoD,QAAU,CAACC,WAAAA,EAAYC,UAAAA,GAC9B,MAEJ,IAAK,gCAEG94C,EAAAA,EADE84C,EAAYhnD,OAEiB,QAD/BkO,EAAAA,SAA4B,QAA5BA,EAAAA,EAAkBo5C,kBAAlBp5C,IAAAA,OAAAA,EAAAA,EACMs5C,iCADNt5C,IAAAA,EAAAA,EACmC,GAEvCzP,EAAOwoD,SAAW,CAACF,WAAAA,EAAYC,UAAAA,GAC/B,MAEJ,IAAK,kCAEG94C,EAAAA,EADE84C,EAAYhnD,OAEkB,QADhCkO,EAAAA,SAA4B,QAA5BA,EAAAA,EAAkBo5C,kBAAlBp5C,IAAAA,OAAAA,EAAAA,EACMu5C,kCADNv5C,IAAAA,EAAAA,EACoC,GAExCzP,EAAOyoD,aAAe,CAACH,WAAAA,EAAYC,UAAAA,GACnC,MAEJ,IAAK,0CAEG94C,EAAAA,EADE84C,EAAYhnD,OAE2B,QADzCkO,EAAAA,SAA4B,QAA5BA,EAAAA,EAAkBo5C,kBAAlBp5C,IAAAA,OAAAA,EAAAA,EACMmrC,2CADNnrC,IAAAA,EAAAA,EAC6C,GAEjDzP,EAAO0oD,oBAAsB,CAACJ,WAAAA,EAAYC,UAAAA,GAKlD,OAAOvoD,CACX,0UACA,IAAIooD,IAEZ,GAAG,CAAoB,QAAnBrtD,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAIplB,QAAS0E,IAEtC,OAAOlI,EAAAA,EAAAA,UAAqC,WACxC,GAAKqhD,EAIL,MAAO,CAAC,CACJpzC,KAAM1pB,EAAEm9D,0BAA0BC,UAClCnD,UAAW,SAACh/C,SAAkB,GAAS,OAANA,IACjC4nB,KAAM,CACF,CACInZ,KAAM1pB,EAAEm9D,0BAA0B3zC,WAClCvO,MAAO6hD,EAAYP,QAAQC,WAAaM,EAAYJ,SAASF,YAEjE,CACI9yC,KAAM1pB,EAAEm9D,0BAA0BE,cAClCpiD,MAAO6hD,EAAYP,QAAQE,UAAYK,EAAYJ,SAASD,aAIxE,CACI/yC,KAAM1pB,EAAEm9D,0BAA0BG,wBAClCrD,UAAW,SAACh/C,UAAkBsiD,EAAAA,EAAAA,QAAOtiD,IACrC4nB,KAAM,CACF,CACInZ,KAAM1pB,EAAEm9D,0BAA0B3zC,WAClCvO,MAAO6hD,EAAYF,oBAAoBJ,YAE3C,CACI9yC,KAAM1pB,EAAEm9D,0BAA0BE,cAClCpiD,MAAO6hD,EAAYF,oBAAoBH,aAInD,CACI/yC,KAAM1pB,EAAEm9D,0BAA0BK,0BAClCvD,UAAW,SAACh/C,SAAkB,GAAS,OAANA,EAAM,MACvC4nB,KAAM,CACF,CACInZ,KAAM1pB,EAAEm9D,0BAA0B3zC,WAClCvO,MAAO6hD,EAAYH,aAAaH,YAEpC,CACI9yC,KAAM1pB,EAAEm9D,0BAA0BE,cAClCpiD,MAAO6hD,EAAYH,aAAaF,aAIhD,GAAG,CAACK,EAAa98D,EAAEm9D,2BACvB,CChIO,ICLDvE,GAAS,CAAC,MAAO,OACjB6E,GAAS,OAUFC,GAAoB,gBAAEziD,EAAAA,EAAAA,MAAOi+C,EAAAA,EAAAA,SAAUD,EAAAA,EAAAA,SAAUt1D,EAAAA,EAAAA,MAAOo1D,EAAAA,EAAAA,kBAAmBnuD,EAAAA,EAAAA,UAC9Ewf,GAAU3O,EAAAA,EAAAA,UAAQ,WACpB,IAAM3H,EAAQm/B,iBAAiB1yC,SAASsD,MAExC,MAAO,CACHF,MAAO,CACH0mB,KAAM1mB,EACNoN,KAAM,SACNE,KAAM,EACNkjC,UAAW,CACPG,WAAY,IACZD,SAAU,GACVI,gBAAiB,EACjBC,gBAAiB5gC,EAAMs/B,iBAAiB,iBAGhD+lB,MAAO,CACHC,OAAQR,GACRhkB,OAAQ6oB,IAEZpE,UAAW,CACP7zD,KAAM,QACN8zD,WAAY,IACZC,SAAU,EACVC,SAAU,CACNC,MAAM,GAEVC,SAAU,CACND,MAAM,GAEVE,UAAW,CACPF,MAAM,GAEVG,UAAW,CACPH,MAAM,IAGdI,WAAY,CACR95C,IAAK,EACLC,IAAK,EACLw5C,SAAU,CACNC,MAAM,GAEVC,SAAU,CACND,MAAM,GAEVE,UAAW,CACPF,MAAM,GAEVG,UAAW,CACPH,MAAM,IAGd9kB,OAAQ,CACJ,CACInvC,KAAM,MACNovC,OAAQ,CAAC,MAAO6oB,IAChBrE,OAAQR,GACRU,WAAY,IACZC,SAAU,IACVO,QAAQ,EACR/kB,UAAW,CACP0kB,MAAM,GAEV52B,KAAM,CAAC,CACH5nB,MAAO9D,KAAKC,IAAI6hD,EAAWh+C,IAE/B,CACIA,MAAO9D,KAAKC,IAAI8hD,EAAWj+C,MAGnC,CACIzV,KAAM,UACNu0D,iBAAkB,QAClBC,WAAY,EACZF,QAAQ,EACRj3B,KAAM,CAAC,CACH5nB,MAAO,CAAC,GAAK,GACbiR,MAAO,CACHutC,MAAM,EACN3oD,SAAU,SACVmpD,UAAW,kBAAMlB,EAAkBE,MAExC,CACCh+C,MAAO,CAAC,GAAK,KACbiR,MAAO,CACHutC,MAAM,EACN3oD,SAAU,SACVmpD,UAAW,kBAAMlB,EAAkBG,MAExC,CACCj+C,MAAO,CAAC,GAAK,IACbiR,MAAO,CACHutC,MAAM,EACN3oD,SAAU,SACVmpD,UAAW,kBAAMlB,EAAkB99C,SAKnD1O,MAAO,CAACuH,EAAMs/B,iBAAiB,oBAAqBt/B,EAAMs/B,iBAAiB,kBAC3Ee,UAAW,CACPiB,WAAY,oDACZf,SAAU,GACVC,WAAY,IACZC,WAAY,IAGxB,GAAG,CAAC5wC,EAAOs1D,EAAUh+C,EAAOi+C,EAAUH,IAEtC,OACI,SAAC33D,MAAAA,CACGwJ,UAAWlM,EAAI,qFAAsFkM,aAErG,SAAC4mC,GAAKA,CAACpnB,QAASA,KAI5B,ECvHMuzC,GAAoD,CACtDnP,UAAW,CACPyK,SAAU,EACVC,SAAU,KAEdxK,UAAW,CACPuK,UAAW,IACXC,SAAU,KAEd0E,WAAY,CACR3E,SAAU,EACVC,SAAU,KAIL2E,GAAwB,SACjCv5B,EACAr1B,EACA6uD,OAKkBnD,EAEGP,EAAAA,EAAAA,EALfjxC,GAAeC,EAAAA,EAAAA,mBACf0oC,EAAiBN,KACyBviD,EAAAA,EAAOm1B,aAAaC,IAA7DplB,EAAyChQ,EAAzCgQ,QAA4Bvb,EAAauL,EAAbvL,GAC7Bq6D,EAAYpD,iBAAAA,EAAAA,EAAmBzlD,MAAK23B,SAAAA,UAAKA,EAAEvI,WAAaA,YAA5Cq2B,IAAAA,OAAAA,EAAAA,EAAuDj3D,GACnE02D,EAAiB0D,aAAAA,EAAAA,EAAO5oD,MAAKqlD,SAAAA,UAAQA,aAAAA,EAAAA,EAAM72D,MAAO82D,KAClDv/C,EAAQxF,OAAuD,QAAhD2kD,EAAAA,SAAsB,QAAtBA,EAAAA,EAAgBl+B,cAAhBk+B,IAAAA,GAA2B,QAA3BA,EAAAA,EAAyB,UAAzBA,IAAAA,OAAAA,EAAAA,EAA8B3kD,OAAOsoD,WAArC3D,IAAAA,EAAAA,EAAoD,GAEzE,OAAO3+C,EAAAA,EAAAA,UAAQ,eAQA0N,EAPX,MAAO,CACHlO,MAAAA,EACAi+C,SAAUyE,GAAmBr5B,GAAU40B,SACvCD,SAAU0E,GAAmBr5B,GAAU20B,SACvCF,kBAAmB,SAACiF,OACiBlM,EAAjC,OAAOsG,GAAgB4F,EAAuC15B,QAA7BwtB,EAAAA,EAAe,aAAcxtB,UAA7BwtB,IAAAA,OAAAA,EAAAA,EAAwCrD,OAC7E,EACA9qD,MAA6B,QAAtBwlB,EAAAA,EAAamb,UAAbnb,IAAAA,OAAAA,EAAAA,EAAwBQ,QAEvC,GAAG,CAAC1O,EAAOqpB,EAAUnb,EAAc2oC,GACvC,84BC5CO,ICHMmM,GAA6D,gBACtEhvD,EAAAA,EAAAA,OAEA,OACI,UAAC7N,MAAAA,CAAIwJ,UAAU,qCAA2B,uBAEtC,SAACszD,MAAAA,UAAKrkC,KAAKC,UAAU7qB,EAAQ,KAAM,OAG/C,84BCYA,IAAMkrC,GAAsE,CACxEogB,KRfyE,gBACzEtrD,EAAAA,EAAAA,OACA0U,EAAAA,EAAAA,iBAEM,GAAM5jB,EAAAA,EAAAA,wBAALC,EACD8xD,EAAiBN,KACjB2M,EAAmBlvD,EAAOm1B,aAAa5+B,KACvC2jB,GAAeC,EAAAA,EAAAA,mBAEfg1C,GAAY3iD,EAAAA,EAAAA,UAAQ,WACtB,GAAKxM,EAAO01B,WAIZ,OAAO11B,EAAOm1B,aAAaC,IAAIplB,QAAQ1Q,KAAI26C,SAAAA,OAgB5B//B,EAfPsoC,OAAsC/+C,EAC1C,GAAIw2C,EAAI5C,SACJ,OAAQ6X,GACJ,IAAK,aACD1M,EAAWK,EAAe,aAAc5I,EAAI5kB,UAC5C,MACJ,IAAK,eACDmtB,EAAWK,EAAe,eAAgB5I,EAAI5kB,UAM1D,MAAO,CACH5gC,GAAIwlD,EAAIxlD,GACRC,OAAwE,QAAjEwlB,EAAAA,EAAa+/B,EAAI5kB,iBAAjBnb,IAAAA,OAAAA,EAAAA,EAAmEQ,UAAWu/B,EAAI5C,UAAY,GACrG2U,UAA+B,UAApBxJ,aAAAA,EAAAA,EAAU9V,OAE7B,GACJ,GAAG,CAAC1sC,EAAO01B,WAAY11B,EAAOm1B,aAAaC,IAAIplB,QAASkK,EAAcg1C,EAAkBrM,IAElFuM,GAAc5iD,EAAAA,EAAAA,UAAQ,WACxB,GAAKkI,EAIL,OAAQw6C,GACJ,IAAK,aACD,OAAOhE,GAAgB,CACnBlrD,OAAAA,EACAjP,EAAAA,EACA8xD,eAAAA,EACAuI,UAAW12C,aAAAA,EAAAA,EAAkB8hC,cAErC,IAAK,eACD,OAAO0U,GAAgB,CACnBlrD,OAAAA,EACAjP,EAAAA,EACA8xD,eAAAA,EACAuI,UAAW12C,aAAAA,EAAAA,EAAkBsiC,gBAG7C,GAAG,CAACtiC,EAAkBw6C,EAAkBlvD,EAAQjP,EAAG8xD,IAE7CxmB,GAAa3nB,EAEnB,OACI,SAACy3B,EAAAA,WAAUA,CACPC,SAASgjB,aAAAA,EAAAA,EAAa/nD,QACtBg1B,UAAWA,EACX1gC,UAAU,2BAEV,SAACxJ,MAAAA,CAAIwJ,UAAU,wCACX,UAAC0wC,EAAAA,MAAKA,CAACvwC,KAAK,KAAKH,UAAU,oBACtBwzD,aAAAA,EAAAA,EAAW9nD,UACR,SAACglC,EAAAA,MAAAA,OAAY,CAACC,QAAM,YAChB,SAACD,EAAAA,MAAAA,IAAS,UACL8iB,EAAU7vD,KACP,gBAAE5K,EAAAA,EAAAA,MAAOs3D,EAAAA,EAAAA,UAAWv3D,EAAAA,EAAAA,UAChB,SAAC43C,EAAAA,MAAAA,WAAgB,CAEbK,MAAOsf,EAAY,OAAS,iBAE3Bt3D,GAHID,WAU7B,SAAC43C,EAAAA,MAAAA,KAAU,UACN+iB,aAAAA,EAAAA,EAAa9vD,KAAI,SAAC+vD,EAAOjoD,UACtB,SAACilC,EAAAA,MAAAA,IAAS,UACLgjB,EAAM/vD,KAAIs0B,SAAAA,UACP,SAACyY,EAAAA,MAAAA,KAAU,CAAeK,MAAO9Y,EAAKo4B,UAAY,OAAS,iBACtDp4B,EAAK5nB,OADO4nB,EAAKn/B,QAFd2S,cAa5C,EQpFIkoD,SC1BoC,WACpC,IAAsBl8C,EAAAA,IAAAA,EAAAA,EAAAA,UAAS/Z,KAAKk2D,OAAG,GAAhCA,EAAen8C,EAAAA,GAAVo8C,EAAUp8C,EAAAA,IAEtBhiB,EAAAA,EAAAA,YAAU,WACN,IAAM4I,EAAWC,aAAY,WACzBu1D,EAAOn2D,KAAKk2D,MAChB,GAAG,KAEH,OAAO,WACHr1D,cAAcF,EAClB,CACJ,GAAG,IAEH,IAAMy1D,EAAOC,KAAMH,GAAK/P,OAAO,eACzBmQ,EAAOD,KAAMH,GAAK/P,OAAO,YAE/B,OACI,SAACrtD,MAAAA,CAAIwJ,UAAU,mEACX,UAACi0D,MAAAA,CACGjtD,MAAM,OACNE,OAAO,OACPsU,QAAQ,yBAER,SAACiE,OAAAA,CACG1Y,EAAE,MACFE,EAAE,KACFwiC,SAAS,KACTyqB,WAAW,SACXl0D,UAAU,4BAET8zD,KAEL,SAACr0C,OAAAA,CACG1Y,EAAE,MACFE,EAAE,KACFwiC,SAAS,KACTyqB,WAAW,SACXl0D,UAAU,4BAETg0D,QAKrB,EDjBIG,ME5BiC,WACjC,OACI,SAAC39D,MAAAA,CAAIwJ,UAAU,kDAEvB,EFyBIkpD,MGnB2E,gBAYvE7kD,EAXJA,EAAAA,EAAAA,OACA0U,EAAAA,EAAAA,iBAEMmuC,EAAiBN,KACjBwN,GAAa9xC,EAAAA,GAAAA,cAAai3B,IAE1B8a,GAAaxjD,EAAAA,EAAAA,UAAQ,eAClBxM,EAAL,GAAwB,QAAnBA,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAG1B,OAAOytB,EAAe,cAAe7iD,EAAOm1B,aAAaC,IAAI,GACjE,GAAG,CAAoB,QAAnBp1B,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAKytB,IAGxBoN,GAAazjD,EAAAA,EAAAA,UAAQ,eAMTkI,EALd,GAAKA,GAAqB1U,EAAOm1B,aAAjC,CAIA,IAAMnB,EAAOh0B,EAAOm1B,aAAaC,IAAI,GAC/BppB,EAAqC,QAA7B0I,EAAAA,EAAiByhC,oBAAjBzhC,IAAAA,OAAAA,EAAAA,EAAgCsf,GAC9C,OAAOxtB,OAAOwF,QAAAA,EAAS,EAJvB,CAKJ,GAAG,CAAChM,EAAOm1B,aAAczgB,KAEzBtjB,EAAAA,EAAAA,YAAU,WACN,GAAK4O,EAAO82B,cAAZ,CAGA,IAAM+yB,GAAWmG,aAAAA,EAAAA,EAAY3O,iBAAiB,EACxCr1C,EAAQikD,GAAc,EAK5B,KAHMpG,GAAY79C,GAAShM,EAAO62B,gBAC7BgzB,GAAY79C,GAAShM,EAAO62B,iBAEXk5B,EAAtB,CAIA,IAAM,EAASA,EAAW/hD,QAAnB2nC,KAEP,OAAO,WACHA,GACJ,CANA,CATA,CAgBJ,GAAG,CAACoa,EAAY/vD,EAAO62B,eAAgB72B,EAAO82B,cAAem5B,EAAYD,aAAAA,EAAAA,EAAY3O,gBAiBrF,IAAMhlB,GAAa3nB,EACb03B,OAAwB3oC,IAAfwsD,IAA6BD,EAE5C,OACI,SAAC7jB,EAAAA,WAAUA,CAACC,OAAQA,EAAQ/P,UAAWA,EAAW1gC,UAAU,mBAEtDywC,IACE,SAACwd,GAAUA,CACP59C,MAAOikD,EACPp5B,eAAgB72B,EAAO62B,eACvBF,aAAc32B,EAAO22B,aACrBC,iBAAkB52B,EAAO42B,iBACzBizB,SAAUmG,EAAW3O,gBAAiB,EACtCyI,kBAAmB7hC,SAAAA,UAAKkhC,GAAgBlhC,EAAG+nC,EAAWxQ,YAK1E,EH3DIjC,MIzB2E,gBAC3Ev9C,EAAAA,EAAAA,OAEM6E,GAAQ2H,EAAAA,EAAAA,UAAuB,iBAAO,CACxC0jD,gBAAiB,OAAuB,OAAhBlwD,EAAOq9C,SAAS,KACxC8S,eAAgBnwD,EAAO6E,SACvB,CAAC7E,EAAOq9C,SAAUr9C,EAAO6E,QAE7B,OACI,SAAC1S,MAAAA,CACGwJ,UAAU,gCACVkJ,MAAOA,GAGnB,EJYIurD,KAAM,KACNtL,OKpB4E,gBAaxE9kD,EASAA,EAqCyBA,EA1D7BA,EAAAA,EAAAA,OACA0U,EAAAA,EAAAA,iBAEM,GAAM5jB,EAAAA,EAAAA,wBAALC,EACD8xD,EAAiBN,KACjBwN,GAAa9xC,EAAAA,GAAAA,cAAai3B,IAE1Bmb,GAAkB7jD,EAAAA,EAAAA,UAAQ,eACvBxM,EAAL,GAAwB,QAAnBA,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAG1B,OAAOytB,EAAe,cAAe7iD,EAAOm1B,aAAaC,IAAI,GACjE,GAAG,CAAoB,QAAnBp1B,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAKytB,IAExB72C,GAAQQ,EAAAA,EAAAA,UAAQ,eACQxM,EAKnB0U,EALP,GAAKA,IAAwC,QAAnB1U,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAI,IAAnD,CAIA,IAAMpB,EAAOh0B,EAAOm1B,aAAaC,IAAI,GACrC,OAAoC,QAA7B1gB,EAAAA,EAAiByhC,oBAAjBzhC,IAAAA,OAAAA,EAAAA,EAAgCsf,EAHvC,CAIJ,GAAG,CAAoB,QAAnBh0B,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAK1gB,KAE9BtjB,EAAAA,EAAAA,YAAU,WACN,GAAK4O,EAAO82B,eAAkB9qB,EAA9B,CAGA,IAAM69C,GAAWwG,aAAAA,EAAAA,EAAiBhP,iBAAiB,EAC7CiP,EAAcnZ,SAASnrC,GAK7B,KAHM69C,GAAYyG,GAAetwD,EAAO62B,gBACnCgzB,GAAYyG,GAAetwD,EAAO62B,iBAEjBk5B,EAAtB,CAIA,IAAM,EAASA,EAAW/hD,QAAnB2nC,KAEP,OAAO,WACHA,GACJ,CANA,CATA,CAgBJ,GAAG,CACCoa,EACA/vD,EAAO62B,eACP72B,EAAO82B,cACP9qB,EACAqkD,aAAAA,EAAAA,EAAiBhP,gBAGrB,IAAMkP,GAAiB/jD,EAAAA,EAAAA,UAAQ,WAC3B,GAAKR,EAIL,OAAOm9C,GAAgBn9C,EAAOqkD,aAAAA,EAAAA,EAAiB7Q,OACnD,GAAG,CAACxzC,EAAOqkD,aAAAA,EAAAA,EAAiB7Q,SAEtBgR,EAA0C,QAAnBxwD,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAI,GAChDq7B,GAAoBjkD,EAAAA,EAAAA,UAAQ,eAO1BkI,EANJ,GAAKA,GAAqB87C,EAA1B,CAIA,IAAMR,EAAanN,EAAe,cAAe2N,GACjD,OAAOrH,GAC0B,QAA7Bz0C,EAAAA,EAAiByhC,oBAAjBzhC,IAAAA,OAAAA,EAAAA,EAAgC87C,GAChCR,EAAWxQ,OALf,CAOJ,GAAG,CAACqD,EAAgB2N,EAAsB97C,IAEpC03B,GAAS8F,EAAAA,GAAAA,cAAYlmC,IAASwkD,GAAuBA,GACrDn0B,GAAa3nB,EAEnB,OACI,SAACviB,MAAAA,CAAIwJ,UAAU,yDACX,SAACwwC,EAAAA,WAAUA,CACP9P,UAAWA,EACX+P,OAAQA,EACRzwC,UAAWlM,EAAI,SAAU,CAAC,iBAAkB28C,cAE5C,SAACj6C,MAAAA,CAAIwJ,UAAU,mBACX,UAACi0D,MAAAA,CACGjtD,MAAM,OACNE,OAAO,OACPsU,QAAQ,yBAER,SAACiE,OAAAA,CACG1Y,EAAE,MACFE,EAAG6tD,EAAoB,KAAO,KAC9BrrB,SAAS,KACTyqB,WAAW,SACXl0D,UAAWlM,EAAI,mBAAoB,CAAC,oBAAqB8gE,aAExDA,GAAkBx/D,EAAEmG,OAAOw5D,iBAE/BF,IACG,SAACp1C,OAAAA,CACG1Y,EAAE,MACFE,EAAE,KACFwiC,SAAS,KACTyqB,WAAW,SACXl0D,UAAWlM,EAAI,mBAAoB,CAAC,oBAAqBghE,aAExDA,GAAqB1/D,EAAEmG,OAAOw5D,yBAQ/D,EL5FIt1C,KM7ByE,gBACzEpb,EAAAA,EAAAA,OAGA,OACI,SAAC7N,MAAAA,CAAIwJ,UAAU,uFACVqE,EAAOob,MAGpB,ENqBI+pC,QO3B+E,gBAC/EnlD,EAAAA,EAAAA,OACA0U,EAAAA,EAAAA,iBAEM,GAAM5jB,EAAAA,EAAAA,wBAALC,EACD4/D,GAAcnkD,EAAAA,EAAAA,UAAQ,eAKAxM,EAQT0U,EAAAA,EAZf,GAAKA,EAAL,CAIA,IAAMk8C,UAAkB5wD,EAAAA,EAAOm1B,aAAaC,IAAIplB,QAAQ/J,MACpD23B,SAAAA,SAAoB,cAAfA,EAAEvI,mBADar1B,IAAAA,OAAAA,EAAAA,EAErBvL,GAEH,GAAKm8D,EAAL,CAIA,IAAMC,EAASn8C,SAA6B,QAA7BA,EAAAA,EAAkB8hC,mBAAlB9hC,IAAAA,GAAyC,QAAzCA,EAAAA,EAAgC,GAAGuY,cAAnCvY,IAAAA,OAAAA,EAAAA,EAA2CpV,KACtD0M,SAAAA,UAASA,GAAO4kD,MAGpB,GAAKC,EAAL,CAIA,IAAMzgD,EAAO,CAAC,OAAQ,QAAS,kBAAmB,aAC5C6c,EAAS4jC,EAAO9nC,QAClB,SAACmE,EAAKmO,GACF,IAAMy1B,EAAW1gD,EAAKnK,MAAKkQ,SAAAA,UAAOA,IAAQklB,KAI1C,OAHIy1B,IACA5jC,EAAI4jC,GAAY5jC,EAAI4jC,GAAY,GAE7B5jC,CACX,GACJ,CACI,KAAQ,EACR,MAAS,EACT,gBAAmB,EACnB,UAAa,IAGjB,OAAO9c,EAAK9Q,KAAI6W,SAAAA,SAAQ,CACpBnK,MAAOihB,EAAO9W,GACdsE,KAAM1pB,EAAEwqB,YAAY,eAAmB,OAAJpF,SApBvC,CARA,CARA,CAsCJ,GAAG,CACCnW,EAAOm1B,aAAaC,IAAIplB,QACxB0E,EACA3jB,EAAEwqB,cAGAJ,GAAU3O,EAAAA,EAAAA,UAAQ,WACpB,IAAM3H,EAAQm/B,iBAAiB1yC,SAASsD,MAClCm8D,EAAWJ,aAAAA,EAAAA,EAAa5nC,QAAgB,SAACmE,EAAK,OAAClhB,EAAAA,EAAAA,aAAWkhB,IAAQlhB,KAAO,GACzE4nB,EAAgC+8B,aAAAA,EAAAA,EAAarxD,KAAI,gBAAEmb,EAAAA,EAAAA,KAAMzO,EAAAA,EAAAA,YAAY,CACvEyO,KAAAA,EACAzO,MAAAA,EACAiR,MAAO,CACHutC,KAAM/9B,QAAQzgB,IAAU+kD,OAIhC,MAAO,CACHvsB,OAAQ,CACJviC,OAAQ,EACRwiC,OAAQ,aACR3iC,KAAM,EACNe,OAAQ,GACRtM,KAAM,SACNmuC,QAAS,GACTC,UAAW,GACXC,WAAY,IAEhBc,OAAQ,CACJ,CACInvC,KAAM,MACNuL,KAAM,SACNE,IAAK,GACLC,OAAQ,GACRU,MAAO,OACPgjC,OAAQ,CAAC,MAAO,OAChBC,mBAAmB,EACnB3oB,MAAO,CACH4oB,UAAW,GACXmlB,UAAW,gBAAEh/C,EAAAA,EAAAA,MAAOyO,EAAAA,EAAAA,WAAU,GAAYzO,OAATyO,EAAK,MAAU,OAANzO,KAE9C85B,UAAW,CACPC,WAAW,EACXirB,gBAAiB,GAErBp9B,KAAAA,IAGRt2B,MAAO,CACHuH,EAAMs/B,iBAAiB,oBACvBt/B,EAAMs/B,iBAAiB,iBACvBt/B,EAAMs/B,iBAAiB,kBACvBt/B,EAAMs/B,iBAAiB,qBAE3Be,UAAW,CACPiB,WAAY,oDACZf,SAAU,OACVC,WAAY,IACZC,WAAY,IAGxB,GAAG,CAACqrB,IAEJ,OACI,SAACxkB,EAAAA,WAAUA,CAACC,QAASukB,EAAat0B,WAAY3nB,YAC1C,SAAC6tB,GAAKA,CAACpnB,QAASA,KAG5B,EPtFI+gC,WZzB6E,gBAkBzEl8C,EAjBJA,EAAAA,EAAAA,OACA0U,EAAAA,EAAAA,iBAEMy2B,GAAiBn0C,EAAAA,EAAAA,mBAAkB,uBAAyBguC,EAAAA,aAAeD,EAAAA,aAE3EksB,GAAgBzkD,EAAAA,EAAAA,UAAQ,eAKtBxM,EAMU0U,EAAAA,EAAAA,EAVd,GAAKA,EAAL,CAGA,IAOcA,EAPRw8C,EACiB,QAAnBlxD,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAIplB,QAAQ/J,MAAK23B,SAAAA,SAAoB,2BAAfA,EAAEvI,YAEjD,GAAK67B,aAAAA,EAAAA,EAA6Bz8D,GAIlC,OAAO+R,OAA+F,QAAxFkO,EAAAA,SAA6B,QAA7BA,EAAAA,EAAkB8hC,mBAAlB9hC,IAAAA,GAAyC,QAAzCA,EAAAA,EAAgC,GAAGuY,cAAnCvY,IAAAA,GAA8C,QAA9CA,EAAAA,EAA4C,UAA5CA,IAAAA,OAAAA,EAAAA,EAAiDlO,OAAO0qD,EAA4Bz8D,YAApFigB,IAAAA,EAAAA,EAA4F,EAR1G,CASJ,GAAG,CAAoB,QAAnB1U,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAIplB,QAAS0E,IAEhC02B,EAAmB6lB,QAAAA,EAAiB,EACpC50B,GAAa3nB,EAEnB,OACI,SAACy3B,EAAAA,WAAUA,CAACC,QAAQ8F,EAAAA,GAAAA,aAAY+e,GAAgB50B,UAAWA,YACvD,SAACoH,GAAcA,CAACC,MAAOyH,EAAgBnyC,QAASoyC,KAG5D,EYFImL,aQpBmF,gBAoC/Ev2C,EAnCJA,EAAAA,EAAAA,OACA0U,EAAAA,EAAAA,iBAEMy8C,GAAmB3kD,EAAAA,EAAAA,UAAQ,eAMzBxM,EASA0U,EAAAA,EAAAA,EAdJ,GAAKA,EAAL,CAIA,IAAM08C,EACiB,QAAnBpxD,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAIplB,QAAQ/J,MAC7B23B,SAAAA,SAAoB,6BAAfA,EAAEvI,YAGf,GAAK+7B,aAAAA,EAAAA,EAAgC38D,GAArC,CAIA,IAAM48D,EACF38C,SAA6B,QAA7BA,EAAAA,EAAkB8hC,mBAAlB9hC,IAAAA,GAAyC,QAAzCA,EAAAA,EAAgC,GAAGuY,cAAnCvY,IAAAA,GAA8C,QAA9CA,EAAAA,EAA4C,UAA5CA,IAAAA,OAAAA,EAAAA,GACK08C,EAA+B38D,IAGxC,GAAK48D,EAIL,IACI,IAAMC,EAA+B1mC,KAAK2mC,MAAMF,GAChD,OAAOG,EAAAA,GAAAA,gBAAeF,GAAY,SAACxuC,SAA2B,CAC1DrI,KAAMqI,EAAKrI,KACXzO,MAAOxF,OAAOsc,EAAK2uC,UAI3B,CAFE,MAAO53D,GACL,MACJ,CAnBA,CATA,CA6BJ,GAAG,CAAoB,QAAnBmG,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAIplB,QAAS0E,IAEhCyG,GAAU3O,EAAAA,EAAAA,UAAQ,WACpB,GAAK2kD,aAAAA,EAAAA,EAAkB9pD,OAAvB,CAIA,IAAMxC,EAAQm/B,iBAAiB1yC,SAASsD,MAExC,MAAO,CACH02D,KAAM,CACFxpD,KAAM,IACNC,MAAO,OAEX4qD,MAAO,CACHp2D,KAAM,QACNg0D,SAAU,CACNC,MAAM,GAEVC,SAAU,CACND,MAAM,GAEVG,UAAW,CACPH,MAAM,GAEVE,UAAW,CACPF,MAAM,IAGdqC,MAAO,CACHt2D,KAAM,WACNu2D,SAAS,EACTl5B,KAAMu9B,EAAiB7xD,KAAIgY,SAAAA,UAAKA,EAAEmD,QAClCiwC,UAAW,CACPqC,OAAQ,GACR1nB,WAAY,IACZ2nB,SAAU,QACVrqD,MAAO,IACP2iC,WAAY,KAGpBI,OAAQ,CACJnvC,KAAM,MACNq9B,KAAMu9B,EAAiB7xD,KAAIgY,SAAAA,SAAM,CAC7BmD,KAAMnD,EAAEmD,KACRzO,MAAOsL,EAAEtL,UAEb0lD,SAAU,MACVz0C,MAAO,CACHutC,MAAM,EACN3oD,SAAU,UAGlBvE,MAAO,CAACuH,EAAMs/B,iBAAiB,mBAC/Be,UAAW,CACPiB,WAAY,oDACZf,SAAU,GACVC,WAAY,IACZC,WAAY,IArDpB,CAwDJ,GAAG,CAAC6rB,IAEJ,OACI,SAAChlB,EAAAA,WAAUA,CAACC,QAASjxB,EAASkhB,WAAY3nB,WACrCyG,IAAW,SAAConB,GAAKA,CAACpnB,QAASA,KAGxC,ERnFIZ,SL7ByE,gBACzEva,EAAAA,EAAAA,OACA0U,EAAAA,EAAAA,iBAEMyG,EAAUyyC,GAAkB,CAAC5tD,OAAAA,EAAQ0U,iBAAAA,IACrC2nB,GAAa3nB,EAEnB,OACI,SAACy3B,EAAAA,WAAUA,CACPC,QAASjxB,EACTkhB,UAAWA,EACX1gC,UAAU,gDAETwf,IACG,SAACuxC,GAAWA,CAAC94B,KAAMzY,KAInC,EKYIkkC,aF/ByF,gBAErFr/C,EAAAA,EAAAA,OACA0U,EAAAA,EAAAA,iBAGEi9C,EAAoB/C,GAAsB,YAAa5uD,EAAQ0U,aAAAA,EAAAA,EAAkB8hC,aACjFob,EAA0BhD,GAAsB,YAAa5uD,EAAQ0U,aAAAA,EAAAA,EAAkB8hC,aACvFqb,EAAkBjD,GAAsB,aAAc5uD,EAAQ0U,aAAAA,EAAAA,EAAkB8hC,aAChFna,GAAa3nB,EAEnB,OACI,UAACy3B,EAAAA,WAAUA,CACPxwC,UAAU,cACVywC,QAAS13B,EACT2nB,UAAWA,aAEX,SAACoyB,GAAiBA,GAAAA,GAAAA,CAAAA,EACVkD,GAAAA,CACJh2D,UAAU,qBAEd,SAAC8yD,GAAiBA,GAAAA,GAAAA,CAAAA,EACVmD,GAAAA,CACJj2D,UAAU,uBAEd,SAAC8yD,GAAiBA,GAAAA,GAAAA,CAAAA,EACVoD,GAAAA,CACJl2D,UAAU,iCAI1B,EECIm2D,OAAQ,KACRC,YAAa,MAGV,SAASC,GACZpmD,GAEA,IAAOoJ,EAAgDpJ,EAAhDoJ,KAAMhV,EAA0C4L,EAA1C5L,OAAQ0U,EAAkC9I,EAAlC8I,iBAAkBgsB,EAAgB90B,EAAhB80B,aAEjC,EAAS1gC,EAARzJ,KACD22C,EAAShC,GAAe30C,IAASy4D,GACjCjuD,EAAakxD,GAAcrmD,GAEjC,OACI,SAACoJ,EAAAA,GAAAA,GAAAA,CAAAA,EACOpJ,GAAAA,CACJjQ,UAAWoF,EACX8K,UAAU,SAACuhC,GAAkBA,CAACptC,OAAQA,EAAQ0gC,aAAcA,IAC5Dn+B,QAAQ,SAAC4qC,GAAgBA,CAACntC,OAAQA,cAElC,SAACktC,EAAAA,CAAOltC,OAAQA,EAAQ0U,iBAAkBA,MAGtD,CAEO,SAASw9C,GACZtmD,GAEA,IAAOoJ,EAAkCpJ,EAAlCoJ,KAAMhV,EAA4B4L,EAA5B5L,OAAQ0U,EAAoB9I,EAApB8I,iBAEf,EAAS1U,EAARzJ,KACD22C,EAAShC,GAAe30C,IAASy4D,GAEjCjuD,EAAakxD,GAAcrmD,GAGjC,OACI,SAACoJ,EAAAA,GAAAA,GAAAA,CAAAA,EAASpJ,GAAAA,CAAOjQ,UAAWoF,EAAYwB,QAAQ,SAAC4qC,GAAgBA,CAACntC,OAAQA,cACtE,SAACktC,EAAAA,CAAOltC,OAAQA,EAAQ0U,iBAAkBA,MAGtD,CAGA,SAASy4B,GAAiB,WACtBntC,OAIA,OACI,SAAChN,OAAAA,CAAK2I,UAAU,4CACXqE,EAAOtL,OAGpB,CAEA,SAASu9D,GAA0C,OAC/CjyD,EAD+C,EAC/CA,OACA0U,EAF+C,EAE/CA,iBAIMy9C,GAAkB3lD,EAAAA,EAAAA,UAAQ,eAQvBxM,EAODm1B,EAdJ,MAAoB,WAAhBn1B,EAAOzJ,UAKNyJ,EAAO62B,gBACPniB,IACmB,QAAnB1U,EAAAA,EAAOm1B,oBAAPn1B,IAAAA,OAAAA,EAAAA,EAAqBo1B,IAAI,MAMhB+hB,UACe,QAAzBhiB,EAHwDzgB,EAG3CyhC,oBAAbhhB,IAAAA,OAAAA,EAAAA,EAA4Bn1B,EAAOm1B,aAAaC,IAAI,MAAO,MAE/Cp1B,EAAO62B,eAC3B,GAAG,CAAC72B,EAAQ0U,IAEZ,OAAOlI,EAAAA,EAAAA,UAAQ,WACX,GACS,WADDxM,EAAOzJ,KAEP,GAAI47D,EACA,OAAO1iE,EAAI,iGAGvB,OAAOA,EAAI,QACf,GAAG,CAAC0iE,EAAiBnyD,EAAOzJ,MAChC,CAQA,SAAS62C,GAAmB,OACxB1M,EADwB,EACxBA,aACA1gC,EAFwB,EAExBA,OAEM,GAAMlP,EAAAA,EAAAA,wBAALC,EAEDs8C,EAAejM,GAAsB,CAACl3B,aADvBi3B,GAAmB,kBAExC,OACI,UAAChvC,MAAAA,CAAIwJ,UAAU,kBACX,SAAC4lC,GAAaA,CACV5O,QAAS5hC,EAAEwqB,YAAYiyB,mBACvBr4C,SAASsQ,EAAAA,GAAAA,SAAQ4nC,EAAcrtC,aAE/B,SAACytC,EAAAA,gBAAeA,CAAC9xC,UAAU,6BAE/B,SAAC4lC,GAAaA,CACVpsC,QAAS,kBAAMurC,aAAAA,EAAAA,EAAe1gC,IAC9B2yB,QAAS5hC,EAAEwqB,YAAY+kB,gCAEvB,SAACoN,EAAAA,aAAYA,CAAC/xC,UAAU,8BAIxC,i9BS7IO,IAAMy2D,GAA0D,gBACnEvjD,EAAAA,EAAAA,SACAlI,EAAAA,EAAAA,QACAuD,EAAAA,EAAAA,aACAw2B,EAAAA,EAAAA,aACA39B,EAAAA,EAAAA,YACA6D,EAAAA,EAAAA,SACAmT,EAAAA,EAAAA,UAEgC3G,EAAAA,IAAAA,EAAAA,EAAAA,UAAe,CAACzQ,MAAO,EAAGE,OAAQ,IAAC,GAA5DJ,EAAyB2Q,EAAAA,GAAfY,EAAeZ,EAAAA,GACCi/C,ECvB9B,SAAqC1rD,GAExC,IAAM+N,EAAmBshC,GAA2BrvC,GAC9ClI,GAAc6zD,EAAAA,EAAAA,kBAGuBC,GAAAA,EAAAA,EAAAA,UAAS,CAChDjb,SAAUA,GAAmB5iC,GAC7B89C,QAAS,kEAEL,SAAM/zD,EAAYg0D,cAAc,CAACnb,SAAUA,eAE3C,OAFA,SAEA,GAAM74C,EAAYi0D,aAAa,CAACpb,SAAUA,eAE1C,OAFA,SAEA,GAAMhsB,GAA6BE,8CAEnC,OAFA,SAEA,GAAMF,GAA6BI,oCAAoC,CAACL,YAAa3W,YACrF,OADA,SACO,UACX,IACA7V,OAAuB,EAAfkmC,EAAAA,aACR4tB,UAA0B,EAAf5tB,EAAAA,aAEX6tB,UAAWz9C,OAAO/E,KAAKsE,GAAkBrN,SAhBtCusB,EAAoC2+B,EAApC3+B,KAAoBi/B,EAAgBN,EAAhBM,aAoB3B,OAAON,EAAAA,EAAAA,UAAS,CACZjb,SAAUA,KACVkb,QAASlnC,GAA6BK,qCAEtCmnC,gBAAgC,EAAf/tB,EAAAA,aACjBguB,MAAAA,SAAMC,GACF,QAAIA,EAAe,IACfv0D,EAAYw0D,kBAAkB,CAAC3b,SAAUA,GAAmB5iC,KACrD,GAIf,EAEAk+C,UAAWM,IAAiBL,GAEpC,CDnBqCR,CAA4B1rD,GAAtDitB,EAA0By+B,EAA1Bz+B,KACDyZ,EAAejM,GAAsB,CAACl3B,aAAAA,IACtCuK,EErBH,SAA8B,OAACsF,EAAD,EAACA,UAAWhX,EAAZ,EAAYA,YAAasqC,EAAzB,EAAyBA,aAE1D,OAAO/zB,EAAAA,EAAAA,cAAY,gBAAEtL,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,IAIxB,GAAKD,GAAUC,EAAf,CAIA,IACMpO,EAAsC,CACxCpL,IAFO2lB,EAAAA,GAAAA,QAGP7jB,KAAM,QACN7B,MAAO,WACPgO,EAAGsL,EAAMtL,EACTE,EAAGoL,EAAMpL,EACTD,MAAOuF,KAAK6I,IAAI9C,EAAIvL,EAAIsL,EAAMtL,EAAI,EAAGK,EAAYJ,OACjDE,OAAQqF,KAAK6I,IAAI9C,EAAIrL,EAAIoL,EAAMpL,EAAI,EAAGG,EAAYF,QAClDqyB,eAAe,GAGnBnb,EAAUla,GACVwtC,EAAaxtC,EAfb,CAgBJ,GAAG,CAACka,EAAWszB,EAActqC,GACjC,CFJ8BowD,CAAqB,CAACp5C,UAAAA,EAAWhX,YAAAA,EAAasqC,aAAAA,IAExE,OACI,iCACI,SAACn4B,GAAWA,CACRrG,SAAUA,EACV6F,iBAAkBA,EAClBD,kBAAmBA,EACnB9N,QAASA,EACTlE,SAAUA,EACVuR,YAAaA,EACbjR,YAAaA,EACb6D,SAAUA,EACV0O,mBAAoB08C,GACpB38C,mBAAoB68C,GACpB7kB,aAAcA,EACd3M,aAAcA,EACdx2B,aAAcA,KAElB,SAACkrC,GAAUA,CAAAA,KAGvB,EG5CMge,GAAY,CACdzwD,MAAO,GACPE,OAAQ,IAGNwwD,GAAgB,CAClB1wD,MAAO,EACPE,OAAQ,GAGCywD,GAA4B51D,IAAAA,MAAW,WAChD,IxLyMuCsC,EwLnMnCmhC,EAAAA,GAAmB,CAAC,eAAgB,eAAgB,OAAQ,YAAa,qBALzE1F,EAKA0F,EALA1F,aACAvxB,EAIAi3B,EAJAj3B,aACA+xB,EAGAkF,EAHAlF,KACAliB,EAEAonB,EAFApnB,UACA6hB,EACAuF,EADAvF,iBAEEmB,GAAevqC,EAAAA,EAAAA,iBAAgB,gBAC/B+gE,EAAsB,SAATt3B,EACb,GAAQ6C,EAAAA,EAAAA,yBAAP/gC,IAEP,OACI,gCACKg/B,IAAgB,SAACkY,GAAMA,CAAChZ,KAAMA,KAC/B,SAACu3B,UAAAA,CACG73D,UAAWlM,EACP,kGACA,CACI,OAAgB,cAARsO,aAIfgC,GAAsB07B,IACnB,SAACmS,GAAcA,CACXjnC,QAAS80B,EAAa90B,QACtB5D,YAAaswD,GACbzsD,SAAUwsD,GACVvkD,SAAU0kD,EACV7yB,aAAc9E,EACd1xB,aAAcA,KxL4KKlK,EwL1KIy7B,ExL2KlCz7B,IAAYA,EAAOC,WwL1KZ,SAACmyD,GAAmBA,CAChBzrD,QAAS80B,EAAa90B,QACtBkI,SAAU0kD,EACVrpD,aAAcA,EACd6P,UAAWA,EACX2mB,aAAc9E,EACd74B,YAAaswD,GACbzsD,SAAUwsD,KAEd,UAIpB,IC5CaK,GAAwC,gBAAEC,EAAAA,EAAAA,YAAaC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,WAC5E,GAAQ/0B,EAAAA,EAAAA,yBAAP/gC,IACDq+B,EAAU+E,GAAmB,WAC7B,GAAMrwC,EAAAA,EAAAA,wBAALC,EAED+iE,GAAc36D,EAAAA,EAAAA,QAAuB,MAErC46D,GAAqBp2B,EAAAA,GAAAA,mBAAiB/f,SAAAA,UAAKA,EAAEwS,QAAQ/oB,OAAS,KAEpE,OACI,UAAClV,MAAAA,CACGwJ,UAAU,gGAEV,UAACxJ,MAAAA,CAAIwJ,UAAU,sCACX,SAACq4D,GAAAA,SAAQA,CAACr4D,UAAU,uCACfg4D,EAAKr0D,KAAI20D,SAAAA,UACN,SAACC,GAAAA,YAAWA,CAERloD,MAAOioD,EAAIx/D,GACX0/D,iBAAiB,cACjBC,WAAYV,IAAgBO,EAAIx/D,GAChCgC,SAAUw9D,EAAII,UACdv6C,QAAS,WACL85C,EAAWK,EAAIx/D,GACnB,WAECw/D,EAAIv/D,OATAu/D,EAAIx/D,SAcpBs/D,IACG,SAAC5hE,MAAAA,CAAIwJ,UAAU,6BAA6BmR,IAAKgnD,YAC7C,SAACQ,EAAAA,eAAcA,CACX5nB,MAAM,QACN6nB,aAAa,EACb54D,UAAU,OACV64D,OAAO,EACPr5C,SACI,8BAEQ04C,EAAWv0D,KAAI,gBAAE6W,EAAAA,EAAAA,IAAKvkB,EAAAA,EAAAA,QAAwBuhB,EAAAA,EAAAA,gBAC1C,SAACmhD,EAAAA,eAAAA,KAAmB,CAAWn/D,QAASwE,SAAAA,UAAKwZ,aAAAA,EAAAA,EAAWxZ,EAAGwc,aACtDs+C,GADqBt+C,QAO1CoD,OAAQ,CAACmC,QAAS,QAAS5f,KAAM,gBAEjC,SAAC44D,EAAAA,WAAUA,CAAAA,WAM3B,SAACviE,MAAAA,CAAIwJ,UAAU,wCACF,cAARoC,IACG,SAAC3K,IAAAA,CACGC,KAAM+oC,EACN7oC,OAAO,SACPD,IAAI,gCAEJ,SAACo/B,EAAAA,WAAUA,CAAC52B,KAAK,KAAK62B,QAAS5hC,EAAEwqB,YAAYo5C,wBACzC,SAACC,EAAAA,iBAAgBA,CAAAA,WAO7C,yzCCnFO,IAAMC,GAAyBn3D,IAAAA,MAAW,WAC7C,IAAM,GAAM5M,EAAAA,EAAAA,wBAALC,EACqCowC,EAAAA,GAAmB,CAAC,YAAa,mBAAoB,SAA1F9E,EAAqC8E,EAArC9E,UAAWG,EAA0B2E,EAA1B3E,iBAAkBP,EAAQkF,EAARlF,KAC6B64B,ECE9D,WACH,IAAM,GAAMhkE,EAAAA,EAAAA,wBAALC,EACAhB,EAAgBstC,IAAAA,EAAAA,GAAAA,mBAAeA,GAAfA,GACjB03B,GAAmBviE,EAAAA,EAAAA,iBAAgB,oBACnC49B,GAAUuN,EAAAA,GAAAA,kBAAiB,WACyBwD,EAAAA,GAAmB,CAAC,kBAAmB,eAAgB,qBAA1G1F,EAAmD0F,EAAnD1F,aAAcC,EAAqCyF,EAArCzF,gBAAiBc,EAAoB2E,EAApB3E,iBACAppB,EAAAA,IAAAA,EAAAA,EAAAA,UAAmB,IAAE,GAApD4hD,EAA+B5hD,EAAAA,GAAlB6hD,EAAkB7hD,EAAAA,GAChC8hD,EAAYnlE,EAAai2B,IAAI,cAAeyV,aAAAA,EAAAA,EAAchnC,KAAM,OAChC2e,EAAAA,IAAAA,EAAAA,EAAAA,WAAiB,kBAAM8hD,QAAtDxB,EAA+BtgD,EAAAA,GAAlB+hD,EAAkB/hD,EAAAA,IAEtCgiD,EAAAA,GAAAA,yBACIJ,EACA,sBACAC,EACA,KAGJG,EAAAA,GAAAA,yBACI1B,EACA,uBACApnC,SAAAA,GACQv8B,EAAai2B,IAAI,aAGrBmvC,EAAe7oC,EACnB,GACA4oC,GAGJ,IAAMG,GAAU7oD,EAAAA,EAAAA,UACZ,eAGgBuoD,EAFZ,GAAIv4B,EACA,OAAO/L,EAAAA,EAAAA,QACH,WAAIskC,EAAAA,aAAAA,EAAAA,EAAkBz1D,KAAIiB,SAAAA,SAAQ,CAC9B9L,GAAI8L,EACJ7L,MAAO3D,EAAEwqB,YAAY+5C,oBACrBjB,WAAW,aAHXU,IAAAA,EAAAA,EAIG,KAIf,IAUQA,EAVFQ,EAAgBnlC,EAAQnqB,MAAK23B,SAAAA,UAAKA,EAAE39B,aACpCu1D,EAAgBplC,EAAQ5T,QAAOohB,SAAAA,UAAMA,EAAE39B,WAAa29B,EAAE/I,YACtD4gC,EAAcrlC,EAAQ5T,QAAOohB,SAAAA,UAAMA,EAAE39B,YAAc29B,EAAE/I,YAE3D,OAAOpE,EAAAA,EAAAA,QAAO,CACV8kC,EAAgB,CACZ9gE,GAAI8gE,EAAc9gE,IAAM,OACxBC,MAAO3D,EAAEwqB,YAAYyjB,WACrBq1B,WAAW,QACX5wD,GALM,OAMV,WAAIsxD,EAAAA,aAAAA,EAAAA,EAAkBz1D,KAAIiB,SAAAA,SAAQ,CAC9B9L,GAAI8L,EACJ7L,MAAO3D,EAAEwqB,YAAY+5C,oBACrBjB,WAAW,aAHXU,IAAAA,EAAAA,EAIG,IACP,GAAIS,EAAcl2D,KAAIs+B,SAAAA,SAAM,CACxBnpC,GAAImpC,EAAEnpC,GACNC,MAAOkpC,EAAEnjB,KACT45C,WAAW,OAEf,GAAIoB,EAAYn2D,KAAIs+B,SAAAA,SAAM,CACtBnpC,GAAImpC,EAAEnpC,GACNC,MAAOkpC,EAAEnjB,KACT45C,WAAW,QAGvB,GACA,CAACjkC,EAAS2kC,EAAkBhkE,EAAEwqB,YAAaihB,IAGzCm3B,GAAOnnD,EAAAA,EAAAA,UAAQ,WACjB,IAAMkpD,EAAcL,EAAQ74C,QAAOohB,SAAAA,UAAMA,EAAEy2B,aACrCsB,GAAWllC,EAAAA,EAAAA,QAAOukC,EAAY11D,KAAIgtB,SAAAA,UAAS+oC,EAAQpvD,MAAK23B,SAAAA,UAAKA,EAAEnpC,KAAO63B,GAASsR,EAAEy2B,iBAEvF,OAAO,GAAIqB,GAAAA,OAAa,GAAGC,GAC/B,GAAG,CAACN,EAASL,IAEPnB,GAAarnD,EAAAA,EAAAA,UAAsB,kBAAM6oD,EAC1C74C,QAAOy3C,SAAAA,UAAOA,EAAII,aAClB/0D,KAAI20D,SAAAA,SAAQ,CACT99C,IAAK89C,EAAIx/D,GACT7C,QAASqiE,EAAIv/D,MACbye,SAAU,WACN8hD,GAAeW,SAAAA,GAEX,OADAT,EAAelB,EAAIx/D,IACfmhE,EAAY91D,SAASm0D,EAAIx/D,IAClBmhE,EAEJ,GAAIA,GAAAA,OAAJ,CAAiB3B,EAAIx/D,IAChC,GACJ,QAED,CAAC4gE,IAEFQ,GAAcv8C,EAAAA,EAAAA,cAAY,SAACgT,GAC7B6oC,EAAe7oC,EACnB,GAAG,IAEGsnC,GAAat6C,EAAAA,EAAAA,cAAY,SAACgT,GAE5B,GADA2oC,GAAeW,SAAAA,UAAeA,EAAYp5C,QAAO/nB,SAAAA,UAAMA,IAAO63B,QAC1DonC,IAAgBpnC,EAApB,CAIA,IAAMwpC,EAAcnC,EAAK1tD,MAAK,SAACkE,EAAG/C,OAAMusD,SAAW,QAAXA,EAAAA,EAAKvsD,EAAI,UAATusD,IAAAA,OAAAA,EAAAA,EAAal/D,MAAO63B,KACvDwpC,GAILD,EAAYC,EAAYrhE,GAPxB,CAQJ,GAAG,CAACi/D,EAAamC,EAAalC,IAkC9B,OAhCAviE,EAAAA,EAAAA,YAAU,WACDg/B,EAAQ/oB,UAAU0tD,aAAAA,EAAAA,EAAkBj1D,SAAS4zD,KAGlDh4B,EAAgBtL,EAAQnqB,MAAK23B,SAAAA,SAAqB,SAAhB81B,EAC5B91B,EAAE39B,UACF29B,EAAEnpC,KAAOi/D,KAEnB,GAAG,CAACA,EAAatjC,EAAS2kC,EAAkBr5B,KAE5CtqC,EAAAA,EAAAA,YAAU,WACDg/B,EAAQ/oB,UAAUguD,aAAAA,EAAAA,EAASl4C,MAAK82C,SAAAA,UAAOA,EAAIx/D,KAAOi/D,OAGlD2B,GAAYA,EAAQhuD,QAGzB8tD,EAAeE,EAAQ,GAAG5gE,GAC9B,GAAG,CAACi/D,EAAa2B,EAASjlC,EAAQ/oB,UAElCjW,EAAAA,EAAAA,YAAU,YACDqqC,GAAgBA,EAAax7B,WAAaw7B,EAAa5G,UAG5DogC,GAAeW,SAAAA,GACX,OAAIA,EAAY91D,SAAS27B,EAAahnC,IAC3BmhE,EAEJ,GAAIA,GAAAA,OAAJ,CAAiBn6B,EAAahnC,IACzC,GACJ,GAAG,CAACgnC,IAEG,CAACk4B,KAAAA,EAAMD,YAAAA,EAAamC,YAAAA,EAAahC,WAAAA,EAAYD,WAAAA,EACxD,CDpJqEkB,GAA1DnB,EAA0DmB,EAA1DnB,KAAMD,EAAoDoB,EAApDpB,YAAaE,EAAuCkB,EAAvClB,WAAYC,EAA2BiB,EAA3BjB,WAAYgC,EAAef,EAAfe,YAGlD,OAAIr5B,GAAoC,IAAhBm3B,EAAKtsD,QAErB,SAAClV,MAAAA,WACG,SAAC89C,KAAAA,CAAGt0C,UAAU,yCAAiC5K,EAAEwqB,YAAY+5C,yBAMrE,+BACI,UAACS,GAAAA,SAAQA,CAACp6D,UAAU,0BAA0BqQ,MAAO0nD,EAAa/P,cAAekS,YAEhE,eAAT55B,IACI,SAACw3B,GAAUA,CACPC,YAAaA,EACbC,KAAMA,EACNE,WAAYA,EACZD,WAAYA,KAIxB,SAACoC,GAAAA,YAAWA,CAACr6D,UAAU,0BAA0BqQ,MAAO0nD,YACnD71B,EAAAA,EAAAA,OAAM61B,IACD,SAACuC,EAAAA,OAAMA,CAACpgB,IAAK6d,EAAa/3D,UAAU,2BACpC,SAAC23D,GAAeA,CAAAA,KAGzBj3B,IAAa,SAACj/B,EAAAA,OAAMA,CAACtB,KAAK,KAAKH,UAAU,gBAI1D,IE7Cau6D,GAAyBx4D,IAAAA,MAAW,WAC7C,OACI,SAACvL,MAAAA,CACG6J,cAAY,YACZL,UAAU,oDAEV,SAAC+gC,GAAyBA,WACtB,SAACm4B,GAAYA,CAAAA,MAI7B,ICRO,IAAMsB,GAAgB,WACzB,ICHM,EACyB3jE,EAAxByE,EAAYm/D,EDEb,GAAwBC,EAAAA,EAAAA,cAAvBC,oBAGP,OCNM,GAA4CC,EAAAA,EAAAA,4BAA3CC,wCACwBhkE,GAAAA,EAAAA,EAAAA,mBAAxByE,EAAwBzE,EAAxByE,WAAYm/D,EAAY5jE,EAAZ4jE,UAEnBhlE,EAAAA,EAAAA,YAAU,WACF6F,GAAcm/D,GAEdI,EAAwCJ,EAEhD,GAAG,CAACI,EAAyCv/D,EAAYm/D,KDDrD,SAACjkE,MAAAA,CACGwJ,UAAWlM,EAAI,8BAA+B,CAC1C,8DAA+D6mE,EAC/D,wDAAyDA,cAG7D,SAACJ,GAAYA,CAAAA,IAGzB,EEXMO,IAAoBC,EAAAA,EAAAA,uBAAsB,CAC5CC,EAAAA,oBAGSC,GAAkC,WAC3C,OACI,SAACx4D,EAAmBA,CAChBJ,kBAAkB64D,EAAAA,EAAAA,wBAAuB,aACzC94D,IAAI,YACJM,cAAc,oBAEb,kBACG,SAACo4D,GAAAA,WACG,UAAC33D,GAA2BA,YACxB,SAACq3D,GAAGA,CAAAA,IACJ,SAACW,EAAAA,OAAMA,CAAAA,UAM/B,EC3BaC,GAAqBr5D,IAAAA,MAAW,WACzC,OACI,SAACoB,GAA2BA,WACxB,SAACo3D,GAAYA,CAAAA,IAGzB","sources":["webpack://@bpinc/web-home-page-ui/../../packages/lib-tailwind-classnames/src/tcn.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/constants.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/system/useDomainAuthorizationPopup.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/system/useInstallationRequiredPopup.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/system/useOutdatedBrowserExtensionPopup.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/system/useOutdatedClientNotification.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/system/usePhoneOutOfServiceNotification.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/hooks.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/system/useOfflineNotification.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/system/useSipServerDisconnectedNotification.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/system/useSlowNetworkNotification.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-system-notifications/src/system/useUnauthorizedDomainNotification.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-authorization-module/src/AuthorizedConnectorsConsumers.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-login-ui/src/components/ForceLogout.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-authorization-module/src/UnauthorizedUI.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-authorization-module/src/AuthorizationUIRouter.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-authorization-module/src/BaseConnectorsConsumers.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-authorization-module/src/TopLevelProviders.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-authorization-module/src/AuthorizationModule.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/HomePageQueryClientProvider.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-state-types/src/types.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/helpers.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/styles.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/CardEditHeader.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/useCardLayout.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/constants.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/dragManager.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/helpers.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/useEnoughRoomChecker.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/useOnDrag.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/useOnDragStop.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/Card.module.less?aa64","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/useOnResizeStart.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/useOnResizeStop.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/CardEdit.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/CardViewHeader.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/card/CardView.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/types.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/cell/styles.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/cell/Cell.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/utils/calculateCellPage.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/grid/styles.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/grid/Grid.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/hooks/useCellSelectHandler/SelectedCellsManager.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/hooks/useCellSelectHandler/CellManager.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/hooks/useCellSelectHandler/consts.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/hooks/useCellSelectHandler/useCellSelectHandler.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/hooks/useCellSelectHandler/CellSelectionHighlighter.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/hooks/useCellSizeObserver.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/BpWallboardEdit.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/BpWallboardView.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/index.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/bp-wallboard/BpWallboard.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/CreateWidgetModal/styles.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/CreateWidgetModal/widget-previews-icons/break-time.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/CreateWidgetModal/widget-previews-icons/my-services.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/CreateWidgetModal/widget-previews-icons/my-stats.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/CreateWidgetModal/widget-previews-icons/my-team.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/CreateWidgetModal/NewWidgetOption.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/CreateWidgetModal/CreateWidgetModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/CreateWidgetModal/useGetDefaultWidgetsConfig.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/FlippingWidgetsModal/FlippingWidgetsModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/HidingArea/HidingAreaRoot.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/HidingArea/index.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/HidingArea/HidingAreaTarget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/MetricSelection/MetricView.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/MetricSelection/SortableMetricView.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/MetricSelection/MetricSelection.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-state-types/src/events.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-state-types/src/constants.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-widgets-urls/src/api-service/core/ApiError.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-widgets-urls/src/api-service/core/CancelablePromise.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-widgets-urls/src/api-service/core/OpenAPI.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-widgets-urls/src/api-service/core/request.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-widgets-urls/src/api-service/services/HomePageServices.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-widgets-urls/src/api-service/services/SupervisorWidgetsApiServices.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-widgets-urls/src/api-service/services/WallboardApiServices.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-state/src/pending-subscriptions.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-state/src/subscription-manager.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-state/src/utils.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-state/src/state.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/SettingsModal/MyServicesConfigModalContent/MyServicesConfigModalContent.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/SettingsModal/MyServicesConfigModalContent/useMyServicesMetricsOptions.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/SettingsModal/MyStatsConfigModalContent/MyStatsConfigModalContent.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/SettingsModal/MyStatsConfigModalContent/useMyStatsMetricsOptions.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/SettingsModal/MyTeamConfigModalContent/MyTeamConfigModalContent.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/SettingsModal/MyTeamConfigModalContent/useMyTeamMetricsOptions.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/SettingsModal/SettingsSelector.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/SettingsModal/useSettingsFormData.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/SettingsModal/SettingsModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/modals/NewHomepageModal/useNewHomepageOptions.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/modals/NewHomepageModal/useTemplateConfigs.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/modals/NewHomepageModal/NewHomepageModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/HomePageUIContextProvider.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/modals/useOpenRemoveWidgetModal.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/FlippingWidgetsModal/useOpenFlippingWidgetsModal.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/useOpenWidgetSettings.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/SettingsModal/useOpenSettingsModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/ControlButton/style.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/ControlButton/ControlButton.tsx","webpack://@bpinc/web-home-page-ui/../../packages/lib-echarts/src/init.ts","webpack://@bpinc/web-home-page-ui/../../packages/lib-echarts/src/Chart.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/charts/BreakTimeChart.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/LiveStatTimer.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/MyServicesTable/useMyServicesColumns.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/MyServicesTable/MyServicesTable.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/MyStats.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/MyTeamTable/useMyTeamColumns.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/MyTeamTable/useAgentStateCellRenderer.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/MyTeamTable/useAcdStateSorter.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/MyTeamTable/useMyTeamUsers.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/useActiveWidget.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/WidgetResolver.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/BreakTimeRemaining.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/widgets/MyTeamTable/MyTeamTable.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/AgentWallboard.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/agent/modals/CreateWidgetModal/useOpenCreateWidgetsModal.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/useUnsavedConfigsMethods.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/Header/styles.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/Header/EditorHeader.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/useRestoreUnsavedConfig.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/AgentsSelector/useAgentsOptions.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/AgentsSelector/AgentsSelector.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/Header/AgentsDropdown.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/Header/useMenuOptions.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/modals/NewHomepageModal/useOpenNewHomepageModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/modals/useOpenRemoveHomepageModal.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/Header/SupervisorHeader.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/Header/Header.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/atoms.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/AudioAlert/AudioAlert.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/selectors.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/queries/query-keys.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/stats/types.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/stats/useStatsOptions.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/helpers.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/shared/AgentStatesSelect.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/shared/TeamsSelect.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/shared/utils.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/AgentGridModal/AgentGridModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Option/styles.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Option/Option.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/useHandleCancelWidgetModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/SelectUserModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Option/useBreakTimeWidget.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Option/useCreateTimeWidget.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Option/useDispositionsWidget.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/ImageSettingsModal/ImageStyleSelect.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/ImageSettingsModal/getFileDataUrl.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/ImageSettingsModal/SelectImage.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/ImageSettingsModal/ImageSettingsModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/shared/ServicesSelect.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/ServiceGridModal/ServiceGridModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/TextSettingsModal/TextSettingsModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Option/useMyStatsWidget.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Option/useSatisfactionWidget.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/stats/config.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/stats/useGetStatsConfig.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/SingleOrGaugeSettingsModal/useSingleStatsOptions.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/SingleOrGaugeSettingsModal/SingleOrGaugeSettingsModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Option/useSingleOrGaugeWidget.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/SummarySettingsModal/SummarySettingsModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/breakTime.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Option/useSummaryWidget.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Option/useHandleWidgetSelect.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/datetime.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/dispositions.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/gauge.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/grid.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/image.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/satisfaction.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/singleStatistic.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/stateSummary.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/stats.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/icons/text.svg","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/optionsList.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/WidgetOptionsGroup.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/Options/Options.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/settings-modals/EmptyWidgetSettingsModal/EmptyWidgetSettingsModal.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/useOpenWidgetSettings.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/BreakTime/BreakTimeWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/stats/helpers.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Gauge/GaugeChart.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Grid/utils.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Grid/GridWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/MyStats/MyStatChart.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/MyStats/useMyStatsOptions.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/MyStats/MyStatsWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Satisfaction/SatisfactionChart.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Satisfaction/useSatisfactionOption.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Satisfaction/SatisfactionWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Unknown/Unknown.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/WidgetResolver.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/DateTime/DateTimeWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Empty/EmptyWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Gauge/GaugeWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Image/ImageWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Single/SingleWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Text/TextWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Summary/SummaryWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/widgets/Dispositions/DispositionsWidget.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/SupervisorWallboard.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/queries/useWidgetsSubscriptionQuery.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/supervisor/useCreateEmptyWidget.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/HomePageContent.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/TabsHeader.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/HomePageTabs.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/useHomePageTabs.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/HomePageBase.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/app/App.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/app/hooks/useAppConfigChecker.ts","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/app/Connector.tsx","webpack://@bpinc/web-home-page-ui/../../packages/home-page-ui/src/components/HomePage.tsx"],"sourcesContent":["import cn from 'classnames'\r\nimport {twMerge} from 'tailwind-merge'\r\n\r\n\r\nexport function tcn(...classnames: cn.ArgumentArray) {\r\n    return twMerge(cn(classnames))\r\n}\r\n","\r\nexport const DOMAIN_AUTH_URL = 'http://localhost:9897'\r\nconst DOMAIN_PARAM = 'domain'\r\n\r\nconst linkUrl = new URL(DOMAIN_AUTH_URL)\r\nlinkUrl.searchParams.append(DOMAIN_PARAM, location.hostname)\r\n\r\nexport const CURRENT_DOMAIN_AUTH_URL = linkUrl.toString()\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useBpClientStateConnector} from '@bpinc/ad-bpclient-state-context'\r\nimport {SmButton} from '@bpinc/lib-external-ui-elements'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {CURRENT_DOMAIN_AUTH_URL} from '../constants'\r\n\r\n\r\nconst DOMAIN_AUTHORIZATION_MODAL_ID = 'bpClient/onShowDomainAuthorizationDialog'\r\n\r\n\r\nexport const useDomainAuthorizationPopup = () => {\r\n    const bpClientConnector = useBpClientStateConnector()\r\n    const {openModal, closeModal} = useModalsStateMethods()\r\n    const t = useLocalizationState('t')\r\n\r\n    const onShowDomainAuthorizationDialog = useEvent(() => {\r\n        openModal({\r\n            id: DOMAIN_AUTHORIZATION_MODAL_ID,\r\n            title: t.INSTALLATION_PROCESS.bp_client_not_authorized_header(),\r\n            body: (\r\n                <>\r\n                    <span>\r\n                        {t.INSTALLATION_PROCESS.bp_client_not_authorized_message_part1()}\r\n                    </span>\r\n                    <a href={CURRENT_DOMAIN_AUTH_URL} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        {t.ERROR_MESSAGES.domainAuthentificationErrorAnchor()}\r\n                    </a>\r\n                    <span>\r\n                        {t.INSTALLATION_PROCESS.bp_client_not_authorized_message_part2()}\r\n                    </span>\r\n                </>\r\n            ),\r\n            actions: ({closeModal: closeThisModal}) => (\r\n                <SmButton onClick={closeThisModal}>\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk()}\r\n                </SmButton>\r\n            ),\r\n        })\r\n    })\r\n\r\n    const onHideDomainAuthorizationDialog = useEvent(() => {\r\n        closeModal(DOMAIN_AUTHORIZATION_MODAL_ID)\r\n    })\r\n\r\n    useEffect(() => {\r\n        const subscription = bpClientConnector.dispenser.subscribe({\r\n            onShowDomainAuthorizationDialog,\r\n            onHideDomainAuthorizationDialog,\r\n        })\r\n        return subscription.unsubscribe\r\n    }, [bpClientConnector, onShowDomainAuthorizationDialog, onHideDomainAuthorizationDialog])\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useBpClientState, useBpClientStateConnector} from '@bpinc/ad-bpclient-state-context'\r\nimport {platformInfo} from '@bpinc/ad-build-and-platform-info'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {useInstallationMethods} from '@bpinc/lib-helpers-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\n\r\nconst linkClass = 'cursor-pointer text-primary-legacy'\r\n\r\nconst EXTENSION_ID = 'ext-link'\r\nconst EXTENSION_ID_FF = 'ext-link-firefox'\r\nconst PLUGIN_ID = 'plugin-link'\r\n\r\ntype ModalContentProps = {\r\n    isExtAvailable: boolean\r\n    install: boolean\r\n}\r\n\r\nconst ModalContent: React.FC<ModalContentProps> = ({isExtAvailable, install}) => {\r\n    const {t: {INSTALLATION_PROCESS: i18n}} = useLocalizationState()\r\n    const {\r\n        installChromeExtension,\r\n        installFirefoxExtension,\r\n        installBPClientPlugin,\r\n    } = useInstallationMethods()\r\n\r\n    /* Set click handler after the modal is rendered or translations are changed */\r\n    useEffect(() => {\r\n        const chromeLink = document.getElementById(EXTENSION_ID)\r\n        const firefoxLink = document.getElementById(EXTENSION_ID_FF)\r\n        const pluginLink = document.getElementById(PLUGIN_ID)\r\n\r\n        chromeLink?.addEventListener('click', installChromeExtension)\r\n        firefoxLink?.addEventListener('click', installFirefoxExtension)\r\n        pluginLink?.addEventListener('click', installBPClientPlugin)\r\n\r\n        return () => {\r\n            chromeLink?.removeEventListener('click', installChromeExtension)\r\n            firefoxLink?.removeEventListener('click', installFirefoxExtension)\r\n            pluginLink?.removeEventListener('click', installBPClientPlugin)\r\n        }\r\n    }, [installChromeExtension, installFirefoxExtension, installBPClientPlugin])\r\n\r\n    let content: string = i18n.install_updateHeader(PLUGIN_ID, linkClass)\r\n\r\n    if (install) {\r\n        if (platformInfo.browser === 'chrome') {\r\n            content = isExtAvailable\r\n                ? i18n.install_installHeader(PLUGIN_ID, linkClass)\r\n                : i18n.install_installHeaderChrome(EXTENSION_ID, PLUGIN_ID, linkClass)\r\n\r\n        } else if (platformInfo.browser === 'firefox') {\r\n            content = isExtAvailable\r\n                ? i18n.install_installHeader(PLUGIN_ID, linkClass)\r\n                : i18n.install_installHeaderFirefox(EXTENSION_ID_FF, PLUGIN_ID, linkClass)\r\n\r\n        } else {\r\n            content = i18n.install_installHeader(PLUGIN_ID, linkClass)\r\n        }\r\n    }\r\n\r\n    return <div dangerouslySetInnerHTML={{__html: content}} />\r\n}\r\n\r\nexport const useInstallationRequiredPopup = () => {\r\n    const {WINDOW_POPUP_TITLES_AND_MESSAGES: i18n} = useLocalizationState('t')\r\n    const isExtensionAvailable = useBpClientState('isExtensionAvailable')\r\n    const bpClientConnector = useBpClientStateConnector()\r\n    const {openModal} = useModalsStateMethods()\r\n\r\n    const onInstallationRequired = useEvent((install: boolean) => {\r\n        openModal({\r\n            title: i18n.window_title_warning(),\r\n            body: (\r\n                <ModalContent\r\n                    install={install}\r\n                    isExtAvailable={isExtensionAvailable}\r\n                />\r\n            ),\r\n            actions: {\r\n                ok: {\r\n                    title: i18n.window_buttonOk(),\r\n                },\r\n            },\r\n        })\r\n    })\r\n\r\n    useEffect(() => {\r\n        const subscription = bpClientConnector.dispenser.subscribe({onInstallationRequired})\r\n        return subscription.unsubscribe\r\n    }, [bpClientConnector, onInstallationRequired])\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useBpClientStateConnector} from '@bpinc/ad-bpclient-state-context'\r\nimport {platformInfo} from '@bpinc/ad-build-and-platform-info'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {SmButton} from '@bpinc/lib-external-ui-elements'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {URL_EXTENSION_INSTALLER_CHROME, URL_EXTENSION_INSTALLER_FIREFOX, URL_MAC_PLUGIN} from '@bpinc/lib-helpers-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\n\r\ntype Props = {\r\n    browserName: string\r\n}\r\n\r\nconst ModalContent: React.FC<Props> = ({browserName}) => {\r\n    const {INSTALLATION_PROCESS: i18n} = useLocalizationState('t')\r\n    const serverOrigin = useSessionState('serverOrigin')\r\n\r\n    const isChrome = platformInfo.browser === 'chrome'\r\n    const isFirefox = platformInfo.browser === 'firefox'\r\n    const isSafari = platformInfo.browser === 'safari'\r\n    let linkHref = ''\r\n\r\n    if (isChrome) {\r\n        linkHref = URL_EXTENSION_INSTALLER_CHROME\r\n    } else if (isFirefox) {\r\n        linkHref = serverOrigin + URL_EXTENSION_INSTALLER_FIREFOX\r\n    } else if (isSafari) {\r\n        linkHref = serverOrigin + URL_MAC_PLUGIN\r\n    }\r\n    return (\r\n        <>\r\n            <span>\r\n                {i18n.bp_client_old_extension_version(browserName)}\r\n            </span>\r\n            {(isChrome || isFirefox || isSafari) && (\r\n                <>\r\n                    <br />\r\n                    <br />\r\n                    <span>\r\n                        {i18n.bp_client_update_extension_part1()}\r\n                    </span>\r\n                    <a href={linkHref} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        {i18n.bp_client_update_extension_text()}\r\n                    </a>\r\n                    <span>\r\n                        {i18n.bp_client_update_extension_part2()}\r\n                    </span>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const useOutdatedBrowserExtensionPopup = () => {\r\n    const bpClientConnector = useBpClientStateConnector()\r\n    const {WINDOW_POPUP_TITLES_AND_MESSAGES: i18n} = useLocalizationState('t')\r\n    const {openModal} = useModalsStateMethods()\r\n\r\n    const onShowExtensionIsOldDialog = useEvent((browserName: string) => {\r\n        openModal({\r\n            title: i18n.window_title_warning(),\r\n            body: (\r\n                <ModalContent browserName={browserName} />\r\n            ),\r\n            actions: ({closeModal}) => (\r\n                <SmButton onClick={closeModal}>\r\n                    {i18n.window_buttonOk()}\r\n                </SmButton>\r\n            ),\r\n        })\r\n    })\r\n\r\n    useEffect(() => {\r\n        const subscription = bpClientConnector.dispenser.subscribe({onShowExtensionIsOldDialog})\r\n        return subscription.unsubscribe\r\n    }, [bpClientConnector, onShowExtensionIsOldDialog])\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useAppConfigState} from '@bpinc/ad-app-config-state-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst reloadPage = () => location.reload()\r\n\r\nexport function useOutdatedClientNotification() {\r\n    const {showNotification, hideNotificationById} = useNotificationsState('methods')\r\n    const isClientOutdated = useAppConfigState('isClientOutdated')\r\n    const isLoggedIn = useSessionState('isLoggedIn')\r\n    const {GLOBAL: i18n} = useLocalizationState('t')\r\n\r\n    const updateNotification = useEvent(() => {\r\n        if (!isLoggedIn) {\r\n            return\r\n        }\r\n        if (isClientOutdated) {\r\n            showNotification({\r\n                type: 'error',\r\n                id: Notifications.OutdatedClientAppError,\r\n                message: (\r\n                    <>\r\n                        <span>{i18n.reload_confirm_new_msg_part1()}</span>\r\n                        <a href=\"#\" onClick={reloadPage}>\r\n                            {i18n.reload_confirm_action_button_text()}\r\n                        </a>\r\n                        <span>{i18n.reload_confirm_new_msg_part2()}</span>\r\n                    </>\r\n                ),\r\n            })\r\n        } else {\r\n            hideNotificationById(Notifications.OutdatedClientAppError)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        updateNotification()\r\n        // track only isClientOutdated\r\n    }, [isClientOutdated, updateNotification])\r\n}\r\n","import {useEffect} from 'react'\r\n\r\nimport {useBpClientState} from '@bpinc/ad-bpclient-state-context'\r\nimport {bpLogger} from '@bpinc/ad-persistent-logger'\r\nimport {useSessionState, useSessionStateConnector} from '@bpinc/ad-session-context'\r\nimport type {PhoneCapabilities, ServerErrorSource} from '@bpinc/ad-session-types'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst PHONE_OUT_OF_SERVICE_ERROR_DELAY = 5000\r\n\r\nexport const usePhoneOutOfServiceNotification = () => {\r\n    const sessionStateConnector = useSessionStateConnector()\r\n    const isHelperAppInstanceCreated = useBpClientState('isHelperAppInstanceCreated')\r\n    const {showNotification, hideNotificationById} = useNotificationsState('methods')\r\n    const phoneType = useSessionState('phoneType')\r\n    const t = useLocalizationState('t')\r\n\r\n    const onUpdateCapabilities = useEvent((caps: PhoneCapabilities) => {\r\n        if (!caps.canDial && phoneType !== 'phone_type_none') {\r\n            bpLogger.warn('SIP phone or external line is out of service')\r\n\r\n            let message: string | undefined\r\n            switch (phoneType) {\r\n                case 'phone_type_nailed':\r\n                    message = t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_messages_virtual_phone_not_available()\r\n                    break\r\n                case 'phone_type_soft_secure':\r\n                case 'phone_type_soft_unsecure':\r\n                    if (isHelperAppInstanceCreated) {\r\n                        message = t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_messages_phone_not_available()\r\n                    } else {\r\n                        message = t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_messages_helper_app_not_available()\r\n                    }\r\n                    break\r\n                default:\r\n                    message = t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_messages_phone_not_available()\r\n            }\r\n\r\n            showNotification({\r\n                type: 'error',\r\n                id: Notifications.PhoneOutOfServiceError,\r\n                message,\r\n                closable: false,\r\n                showDelay: PHONE_OUT_OF_SERVICE_ERROR_DELAY,\r\n            })\r\n        } else {\r\n            bpLogger.info('SIP phone or external line is in service')\r\n            hideNotificationById(Notifications.PhoneOutOfServiceError)\r\n        }\r\n    })\r\n\r\n    const onServerError = useEvent((source: ServerErrorSource, errorCode: number) => {\r\n        if (source === 'agentServer' && errorCode === 4) {\r\n            showNotification({\r\n                type: 'warning',\r\n                id: Notifications.PhoneOutOfServiceError,\r\n                message: t.ERROR_MESSAGES.phoneIsNotRegistered(),\r\n                closable: false,\r\n                showDelay: PHONE_OUT_OF_SERVICE_ERROR_DELAY,\r\n            })\r\n        }\r\n    })\r\n\r\n    const onThreePCCServerGone = useEvent(() => {\r\n        showNotification({\r\n            type: 'warning',\r\n            id: Notifications.PhoneOutOfServiceError,\r\n            message: t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_messages_3pcc_server_connectionLost(),\r\n            closable: false,\r\n            showDelay: PHONE_OUT_OF_SERVICE_ERROR_DELAY,\r\n        })\r\n    })\r\n\r\n    const onThreePCCServerReady = useEvent(() => {\r\n        hideNotificationById(Notifications.PhoneOutOfServiceError)\r\n    })\r\n\r\n    useEffect(() => {\r\n        const subscription = sessionStateConnector.dispenser.subscribe({\r\n            onUpdateCapabilities,\r\n            onServerError,\r\n            onThreePCCServerGone,\r\n            onThreePCCServerReady,\r\n        })\r\n        return subscription.unsubscribe\r\n    }, [\r\n        onUpdateCapabilities,\r\n        onServerError,\r\n        onThreePCCServerGone,\r\n        onThreePCCServerReady,\r\n        sessionStateConnector,\r\n    ])\r\n}\r\n","import {useEmiErrorsNotifications} from './interaction/useEmiErrorsNotifications'\r\nimport {useFailedCallNotification} from './interaction/useFailedCallNotification'\r\nimport {useFavoritesLimitReachedError} from './interaction/useFavoritesLimitReachedError'\r\nimport {useInteractionNotAcceptedNotification} from './interaction/useInteractionNotAcceptedNotification'\r\nimport {usePhoneDeviceNotDetectedNotification} from './interaction/usePhoneDeviceNotDetectedNotification'\r\nimport {usePhoneTypeErrorNotification} from './interaction/usePhoneTypeErrorNotification'\r\nimport {\r\n    useReservedForIncomingInteractionNotification,\r\n} from './interaction/useReservedForIncomingInteractionNotification'\r\nimport {useWebRtcCallInChatErrorNotifications} from './interaction/useWebRtcCallInChatErrorNotifications'\r\nimport {useDomainAuthorizationPopup} from './system/useDomainAuthorizationPopup'\r\nimport {useInstallationRequiredPopup} from './system/useInstallationRequiredPopup'\r\nimport {useOfflineNotification} from './system/useOfflineNotification'\r\nimport {useOutdatedBrowserExtensionPopup} from './system/useOutdatedBrowserExtensionPopup'\r\nimport {useOutdatedClientNotification} from './system/useOutdatedClientNotification'\r\nimport {usePhoneOutOfServiceNotification} from './system/usePhoneOutOfServiceNotification'\r\nimport {useSipServerDisconnectedNotification} from './system/useSipServerDisconnectedNotification'\r\nimport {useSlowNetworkNotification} from './system/useSlowNetworkNotification'\r\nimport {useUnauthorizedDomainNotification} from './system/useUnauthorizedDomainNotification'\r\n\r\n\r\n/**\r\n * Top-level notifications which should be shown for application WITH COMM.PANEL ONLY\r\n */\r\nexport function useInteractionNotifications() {\r\n    useEmiErrorsNotifications()\r\n    useFailedCallNotification()\r\n    useInteractionNotAcceptedNotification()\r\n    usePhoneDeviceNotDetectedNotification()\r\n    usePhoneTypeErrorNotification()\r\n    useReservedForIncomingInteractionNotification()\r\n    useWebRtcCallInChatErrorNotifications()\r\n    useFavoritesLimitReachedError()\r\n}\r\n\r\n/**\r\n * Top-level notifications which should be shown in ANY application of AD framework (standalone KB, for instance)\r\n */\r\nexport function useSystemNotifications() {\r\n    useDomainAuthorizationPopup()\r\n    useInstallationRequiredPopup()\r\n    useOfflineNotification()\r\n    useOutdatedBrowserExtensionPopup()\r\n    useOutdatedClientNotification()\r\n    usePhoneOutOfServiceNotification()\r\n    useSipServerDisconnectedNotification()\r\n    useSlowNetworkNotification()\r\n    useUnauthorizedDomainNotification()\r\n}\r\n","import {useEffect} from 'react'\r\n\r\nimport {\r\n    useIsOffline,\r\n    useOfflineErrorMessages,\r\n    useOfflineStateDataShowOfflineAlert,\r\n    useOfflineStateMethods,\r\n} from '@bpinc/ad-offline-state-context'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\n\r\n\r\nexport function useOfflineNotification() {\r\n    const {showNotification} = useNotificationsState('methods')\r\n    const {setShowOfflineAlert} = useOfflineStateMethods()\r\n    const showOfflineAlert = useOfflineStateDataShowOfflineAlert()\r\n    const offlineErrorMessages = useOfflineErrorMessages()\r\n    const isOffline = useIsOffline()\r\n\r\n    useEffect(() => {\r\n        if (showOfflineAlert) {\r\n            showNotification({\r\n                type: 'error',\r\n                id: Notifications.OfflineStateError,\r\n                content: offlineErrorMessages.isOffline,\r\n                closable: true,\r\n                duration: 5000,\r\n                onHide: () => setShowOfflineAlert(false),\r\n            })\r\n        }\r\n    }, [\r\n        offlineErrorMessages.isOffline,\r\n        setShowOfflineAlert,\r\n        showNotification,\r\n        showOfflineAlert,\r\n    ])\r\n\r\n    useEffect(() => {\r\n        if (!isOffline) {\r\n            setShowOfflineAlert(false)\r\n        }\r\n    }, [isOffline, setShowOfflineAlert])\r\n}\r\n","import {useEffect} from 'react'\r\n\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useEvent, usePreviousValueRef} from '@bpinc/lib-helpers'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport function useSipServerDisconnectedNotification() {\r\n    const {showNotification, hideNotificationById} = useNotificationsState('methods')\r\n    const {WINDOW_POPUP_TITLES_AND_MESSAGES: i18n} = useLocalizationState('t')\r\n    const sipServer = useSessionState('sipServer')\r\n    const prevSipServerRef = usePreviousValueRef(sipServer)\r\n\r\n    const updateNotification = useEvent(() => {\r\n        if (sipServer) {\r\n            hideNotificationById(Notifications.SipServerConnectionError)\r\n        } else if (prevSipServerRef.current) {\r\n            // we had SIP server, but not anymore\r\n            showNotification({\r\n                type: 'error',\r\n                id: Notifications.SipServerConnectionError,\r\n                message: i18n.window_messages_3pcc_server_connectionLost(),\r\n            })\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        updateNotification()\r\n        // track sipServer change only\r\n    }, [sipServer, updateNotification])\r\n}\r\n","import {useEffect, useRef} from 'react'\r\n\r\nimport {bpLogger} from '@bpinc/ad-persistent-logger'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst CHECK_INTERVAL = 5000\r\nconst SLOW_THRESHOLD = 800\r\n\r\n/**\r\n * This hook periodically checks the user's connection speed by fetching root of the current host.\r\n * and shows a notification if the connection is slow.\r\n * Connection is considered slow based on the predefined threshold (SLOW_THRESHOLD),\r\n * When the connection speed improves, it hides the notification.\r\n */\r\nexport function useSlowNetworkNotification() {\r\n    const {showNotification, hideNotificationById} = useNotificationsState('methods')\r\n    const {GLOBAL: i18n} = useLocalizationState('t')\r\n\r\n    const startTime = useRef(0)\r\n\r\n    const checkConnectionSpeed = useEvent(() => {\r\n        const isRequestAlreadyInProgress = startTime.current !== 0\r\n\r\n        if (isRequestAlreadyInProgress || process.env.NODE_ENV === 'development') {\r\n            return\r\n        }\r\n\r\n        startTime.current = new Date().getTime()\r\n\r\n        fetch('/', {\r\n            method: 'HEAD',\r\n            cache: 'no-store',\r\n        })\r\n            .catch(e => console.error(e))\r\n            .finally(() => {\r\n                const endTime = new Date().getTime()\r\n                const duration = endTime - startTime.current\r\n\r\n                startTime.current = 0\r\n\r\n                if (duration > SLOW_THRESHOLD) {\r\n                    const message = i18n.slow_connection()\r\n                    showNotification({\r\n                        type: 'error',\r\n                        id: Notifications.SlowNetworkConnectionError,\r\n                        message,\r\n                    })\r\n                    bpLogger.warn(`Slow connection detected`)\r\n                } else {\r\n                    hideNotificationById(Notifications.SlowNetworkConnectionError)\r\n                }\r\n            })\r\n    })\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(checkConnectionSpeed, CHECK_INTERVAL)\r\n        return () => clearInterval(interval)\r\n    }, [checkConnectionSpeed])\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useBpClientState} from '@bpinc/ad-bpclient-state-context'\r\nimport {useEvent} from '@bpinc/lib-helpers'\r\nimport {Notifications, useNotificationsState} from '@bpinc/lib-notifications-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {CURRENT_DOMAIN_AUTH_URL} from '../constants'\r\n\r\n\r\nexport function useUnauthorizedDomainNotification() {\r\n    const {showNotification, hideNotificationById} = useNotificationsState('methods')\r\n    const isDomainAuthorized = useBpClientState('isDomainAuthorized')\r\n    const {ERROR_MESSAGES: i18n} = useLocalizationState('t')\r\n\r\n    const updateNotification = useEvent(() => {\r\n        if (!isDomainAuthorized) {\r\n            showNotification({\r\n                type: 'error',\r\n                id: Notifications.DomainNotAuthorizedForBPClientError,\r\n                closable: false,\r\n                message: (\r\n                    <>\r\n                        <span>\r\n                            {i18n.domain_authentication_error_part1()}\r\n                        </span>\r\n                        <a href={CURRENT_DOMAIN_AUTH_URL} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                            {i18n.domainAuthentificationErrorAnchor()}\r\n                        </a>\r\n                        <span>\r\n                            {i18n.domain_authentication_error_part2()}\r\n                        </span>\r\n                    </>\r\n                ),\r\n            })\r\n        } else {\r\n            hideNotificationById(Notifications.DomainNotAuthorizedForBPClientError)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        updateNotification()\r\n        // track only isDomainAuthorized\r\n    }, [isDomainAuthorized, updateNotification])\r\n}\r\n","import type {ReactElement, ReactFragment} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {AuthorizedConnectors, BaseConnectors} from '@bpinc/ad-connected-state-types'\r\nimport {useSystemNotifications} from '@bpinc/lib-system-notifications'\r\n\r\n\r\ntype Props = {\r\n    baseConnectors: BaseConnectors\r\n    authorizedConnectors: AuthorizedConnectors\r\n    children: (\r\n        baseConnectors: BaseConnectors,\r\n        authorizedConnectors: AuthorizedConnectors,\r\n    ) => ReactElement | ReactFragment\r\n}\r\n\r\nexport const AuthorizedConnectorsConsumers: React.FC<Props> = ({baseConnectors, authorizedConnectors, children}) => {\r\n    useSystemNotifications()\r\n    return <>{children(baseConnectors, authorizedConnectors)}</>\r\n}\r\n","import React from 'react'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {formatDate} from '@bpinc/ad-formatting-helpers'\r\nimport {useSessionState, useSessionStateMethods} from '@bpinc/ad-session-context'\r\nimport {incomingErrorMessageCodes} from '@bpinc/ad-transport-types'\r\nimport {SmButton, SmSegment} from '@bpinc/lib-external-ui-elements'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport {Modal} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport const ForceLogout: React.FC = () => {\r\n    const forceLogoutInfo = useSessionState('forceLogoutInfo')\r\n    const {closeForceLogout} = useSessionStateMethods()\r\n    const {formatFullName} = useFormatting()\r\n    const {t} = useLocalizationState()\r\n\r\n    assertDefined(forceLogoutInfo)\r\n    const loggedOutBy = formatFullName(forceLogoutInfo.firstName, forceLogoutInfo.lastName)\r\n    const loggedOutTime = formatDate(forceLogoutInfo.timestamp)\r\n\r\n    const getContent = () => {\r\n        switch (forceLogoutInfo.errorCode) {\r\n            case incomingErrorMessageCodes.forced_logout_by_another_session: {\r\n                return t.ERROR_MESSAGES.sessionWasOverwritten()\r\n            }\r\n            case incomingErrorMessageCodes.forced_logout_by_supervisor: {\r\n                return t.ERROR_MESSAGES.forcedLogout(loggedOutBy, loggedOutTime)\r\n            }\r\n            case incomingErrorMessageCodes.forced_logout_by_disabling_tenant:\r\n            case incomingErrorMessageCodes.forced_logout_by_disabling_user: {\r\n                return t.ERROR_MESSAGES.account_has_been_disabled()\r\n            }\r\n        }\r\n        return forceLogoutInfo.forceLogoutReason\r\n    }\r\n\r\n    return (\r\n        <SmSegment\r\n            padded\r\n            className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\r\n                overflow-hidden rounded-none border-none bg-transparent shadow-none\"\r\n            id=\"login\"\r\n        >\r\n            <Modal\r\n                isOpen\r\n                size=\"small\"\r\n                className=\"max-w-[570px]\"\r\n                aria-describedby=\"forceLogoutDialogDescription\"\r\n                data-testid=\"forced-logout-modal\"\r\n            >\r\n                <Modal.Header>\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_title_information()}\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description id=\"forceLogoutDialogDescription\">\r\n                        <p>{getContent()}</p>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <SmButton onClick={closeForceLogout} primary data-testid=\"ok-button\">\r\n                        {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk()}\r\n                    </SmButton>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </SmSegment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useCurrentTabRole} from '@bpinc/ad-current-tab-data-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {ForceLogin, LoginPage} from '@bpinc/lib-login-ui'\r\nimport {ForceLogout} from '@bpinc/lib-login-ui/src/components/ForceLogout'\r\nimport {Loader} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport const UnauthorizedUI: React.FC = () => {\r\n    const tabRole = useCurrentTabRole()\r\n    const {\r\n        authChecked,\r\n        isLoggedIn,\r\n        showLoginDialog,\r\n        offerForceLogin,\r\n        forceLogoutInfo,\r\n    } = useSessionState(['authChecked', 'isLoggedIn', 'showLoginDialog', 'offerForceLogin', 'forceLogoutInfo'])\r\n    const language = useLocalizationState('language')\r\n\r\n    const showAppLoader = !language || (tabRole === 'undecided' && !authChecked)\r\n    const showLoginPage = !showAppLoader && (showLoginDialog || !isLoggedIn)\r\n    const showForceLogout = !!forceLogoutInfo && showLoginPage\r\n    const showForceLogin = offerForceLogin && !forceLogoutInfo && showLoginPage\r\n\r\n    return (\r\n        <div className=\"mx-auto h-full w-[496px]\">\r\n            {showAppLoader && <Loader active size=\"huge\" color=\"primary\" />}\r\n            {showLoginPage && <LoginPage />}\r\n            {showForceLogout && <ForceLogout />}\r\n            {showForceLogin && <ForceLogin />}\r\n        </div>\r\n    )\r\n}\r\n","import type {ReactElement, ReactFragment} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {AuthorizedConnectors, BaseConnectors} from '@bpinc/ad-connected-state-types'\r\nimport {AuthorizedProviders} from '@bpinc/ad-local-providers'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\n\r\nimport {AuthorizedConnectorsConsumers} from './AuthorizedConnectorsConsumers'\r\nimport {UnauthorizedUI} from './UnauthorizedUI'\r\n\r\n\r\ntype Props = {\r\n    baseConnectors: BaseConnectors\r\n    children: (\r\n        baseConnectors: BaseConnectors,\r\n        authorizedConnectors: AuthorizedConnectors,\r\n    ) => ReactElement | ReactFragment\r\n}\r\n\r\nexport const AuthorizationUIRouter: React.FC<Props> = React.memo(({\r\n    baseConnectors,\r\n    children,\r\n}) => {\r\n    const isLoggedIn = useSessionState('isLoggedIn')\r\n\r\n    if (isLoggedIn) {\r\n        return (\r\n            <AuthorizedProviders baseConnectors={baseConnectors}>\r\n                {authorizedConnectors => (\r\n                    <AuthorizedConnectorsConsumers\r\n                        baseConnectors={baseConnectors}\r\n                        authorizedConnectors={authorizedConnectors}\r\n                    >\r\n                        {children}\r\n                    </AuthorizedConnectorsConsumers>\r\n                )}\r\n            </AuthorizedProviders>\r\n        )\r\n    }\r\n    return <UnauthorizedUI />\r\n})\r\n","import type {ReactElement} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {BaseConnectors} from '@bpinc/ad-connected-state-types'\r\n\r\nimport type {BaseConnectorsConsumerComponent} from './AuthorizationModule'\r\n\r\n\r\ntype Props = {\r\n    baseConnectors: BaseConnectors\r\n    children: ReactElement\r\n    BaseConnectorsConsumer?: BaseConnectorsConsumerComponent\r\n}\r\n\r\nexport const BaseConnectorsConsumers: React.FC<Props> = ({\r\n    baseConnectors,\r\n    children,\r\n    BaseConnectorsConsumer,\r\n}) => {\r\n\r\n    if (BaseConnectorsConsumer) {\r\n        return (\r\n            <BaseConnectorsConsumer baseConnectors={baseConnectors}>\r\n                {children}\r\n            </BaseConnectorsConsumer>\r\n        )\r\n    }\r\n    return children\r\n}\r\n","import type {ReactElement} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {BaseConnectors} from '@bpinc/ad-connected-state-types'\r\nimport {BaseProviders} from '@bpinc/ad-local-providers'\r\nimport type {PlatformSpecific} from '@bpinc/ad-platform-specific-types'\r\nimport {Tooltip} from '@bpinc/lib-jskit-ui'\r\nimport {NotificationsStateProvider} from '@bpinc/lib-notifications-context'\r\nimport type {AppType} from '@bpinc/state-lookup'\r\n\r\nimport type {BaseConnectorsConsumerComponent} from './AuthorizationModule'\r\nimport {BaseConnectorsConsumers} from './BaseConnectorsConsumers'\r\n\r\n\r\ntype Props = {\r\n    app: AppType\r\n    platformSpecific: PlatformSpecific\r\n    children: (baseConnectors: BaseConnectors) => ReactElement\r\n    BaseConnectorsConsumer?: BaseConnectorsConsumerComponent\r\n}\r\n\r\nexport const TopLevelProviders: React.FC<Props> = ({\r\n    app,\r\n    platformSpecific,\r\n    BaseConnectorsConsumer,\r\n    children,\r\n}) => {\r\n    return (\r\n        <BaseProviders platformSpecific={platformSpecific} app={app}>\r\n            {baseConnectors => (\r\n                <BaseConnectorsConsumers\r\n                    baseConnectors={baseConnectors}\r\n                    BaseConnectorsConsumer={BaseConnectorsConsumer}\r\n                >\r\n                    <Tooltip.Provider>\r\n                        <NotificationsStateProvider>\r\n                            {children(baseConnectors)}\r\n                        </NotificationsStateProvider>\r\n                    </Tooltip.Provider>\r\n                </BaseConnectorsConsumers>\r\n            )}\r\n        </BaseProviders>\r\n    )\r\n}\r\n","import type {PropsWithChildren, ReactElement, ReactFragment} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {AuthorizedConnectors, BaseConnectors} from '@bpinc/ad-connected-state-types'\r\nimport type {PlatformSpecific} from '@bpinc/ad-platform-specific-types'\r\nimport type {RemoteName} from '@bpinc/lib-remotes-configs'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {AppStyleSelector} from '@bpinc/lib-ui-elements'\r\nimport type {AppType} from '@bpinc/state-lookup'\r\n\r\nimport {AuthorizationUIRouter} from './AuthorizationUIRouter'\r\nimport {TopLevelProviders} from './TopLevelProviders'\r\n\r\n\r\nexport type BaseConnectorsConsumerComponent = React.FC<PropsWithChildren<{baseConnectors: BaseConnectors}>>\r\n\r\ntype Props = {\r\n    app: AppType\r\n    platformSpecific: PlatformSpecific\r\n    children: (\r\n        baseConnectors: BaseConnectors,\r\n        authorizedConnectors: AuthorizedConnectors,\r\n    ) => ReactElement | ReactFragment\r\n    BaseConnectorsConsumer?: BaseConnectorsConsumerComponent\r\n    className?: string\r\n    appRemoteName: RemoteName\r\n}\r\n\r\nexport const AuthorizationModule: React.FC<Props> = ({\r\n    app,\r\n    platformSpecific,\r\n    children,\r\n    BaseConnectorsConsumer,\r\n    className,\r\n    appRemoteName,\r\n}) => {\r\n    return (\r\n        <AppStyleSelector app={appRemoteName}>\r\n            <div className={tcn('h-full', className)}>\r\n                <TopLevelProviders\r\n                    app={app}\r\n                    platformSpecific={platformSpecific}\r\n                    BaseConnectorsConsumer={BaseConnectorsConsumer}\r\n                >\r\n                    {baseConnectors => (\r\n                        <AuthorizationUIRouter baseConnectors={baseConnectors}>\r\n                            {children}\r\n                        </AuthorizationUIRouter>\r\n                    )}\r\n                </TopLevelProviders>\r\n            </div>\r\n        </AppStyleSelector>\r\n    )\r\n}\r\n","import type {FC, ReactNode} from 'react'\r\nimport React from 'react'\r\nimport {QueryClient, QueryClientProvider} from '@tanstack/react-query'\r\nimport {ReactQueryDevtools} from '@tanstack/react-query-devtools'\r\n\r\nimport {MS_IN_HOUR} from '@bpinc/lib-helpers'\r\n\r\n\r\nconst DEFAULT_CACHE_TIME = 8 * MS_IN_HOUR\r\nconst queryClient = new QueryClient({\r\n    defaultOptions: {\r\n        queries: {\r\n            gcTime: DEFAULT_CACHE_TIME,\r\n        },\r\n    },\r\n})\r\n\r\n\r\nexport const HomePageQueryClientProvider: FC<{ children: ReactNode }> = ({children}) => {\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            {children}\r\n            <ReactQueryDevtools initialIsOpen={false} buttonPosition=\"bottom-left\" />\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n","import type {ServiceDetailsConstructor} from '@bpinc/ad-transport-types'\r\nimport type {UserDetailsConstructor} from '@bpinc/ad-user-details-state-types'\r\nimport type {\r\n    AgentWidget,\r\n    HomePageConfig,\r\n    HomePageNewConfig,\r\n    HomePageWidget,\r\n    MyServicesDetailsFields,\r\n    MyStatsDetailsFields,\r\n    MyTeamFields,\r\n    SupervisorWidget,\r\n} from '@bpinc/lib-widgets-urls'\r\n\r\n\r\nexport interface HomePageStateData {\r\n    subscriptionData: {\r\n        user: {\r\n            [userId: string]: {\r\n                isLoading?: boolean\r\n                agentTotalBreakTime?: number\r\n                myStatsDetails?: MyStatsDetails\r\n            }\r\n        }\r\n        team: {\r\n            [teamId: string]: {\r\n                isLoading?: boolean\r\n                myTeamUserDetails?: MyTeamUserDetails[]\r\n            }\r\n        }\r\n        service: {\r\n            [teamId: string]: {\r\n                isLoading?: boolean\r\n                myServicesDetails?: MyServicesDetails[]\r\n            }\r\n        }\r\n    }\r\n    configs: HomePageConfig[]\r\n}\r\n\r\nexport type TeamSubscriptionFields = {\r\n    id: string | undefined\r\n    fields: ServerMyTeamUserDetailsFields[]\r\n    includeLoggedOutUsers: boolean\r\n}\r\n\r\n/**\r\n * My stats\r\n */\r\n\r\nexport const MY_STATS_FIELD_MAP = [\r\n    ['inCallsHandledPerDay', 'in_calls_handled_per_day'],\r\n    ['inCallsRejectedPerDay', 'in_calls_rejected_per_day'],\r\n    ['outCallsRejectedPerDay', 'out_calls_rejected_per_day'],\r\n    ['outCallsHandledPerDay', 'out_calls_handled_per_day'],\r\n    ['agentOccupancy', 'agent_occupancy'],\r\n    ['loginTime', 'login_time'],\r\n    ['agentAverageIdleTime', 'agent_average_idle_time'],\r\n    ['agentAveragePreviewTime', 'agent_average_preview_time'],\r\n    ['recordsSkippedRatioPerDay', 'records_skipped_ratio_per_day'],\r\n    ['recordsAcceptedPerDay', 'records_accepted_per_day'],\r\n    ['recordsSkippedPerDay', 'records_skipped_per_day'],\r\n    // ['recordsWithAssignedAgentsCompleted', 'records_with_assigned_agents_completed'], // Field absent in server data\r\n    // ['recordsWithAssignedAgentsRemaining', 'records_with_assigned_agents_remaining'],  // Field absent in server data\r\n    ['outCallsTransferredPerDay', 'out_calls_transferred_per_day'],\r\n    ['outCallsDroppedTalkingPerDay', 'out_calls_dropped_talking_per_day'],\r\n    ['outCallsDisconnectedTalkingPerDay', 'out_calls_disconnected_talking_per_day'],\r\n    ['inEmailCarriedOver', 'in_email_carried_over'],\r\n    ['inEmailCarriedOverNew', 'in_email_carried_over_new'],\r\n    ['inEmailOfferedPerDay', 'in_email_offered_per_day'],\r\n    ['inEmailPulledPerDay', 'in_email_pulled_per_day'],\r\n    ['inEmailProcessedRepliedPerDay', 'in_email_processed_replied_per_day'],\r\n    ['inEmailProcessedNoreplyPerDay', 'in_email_processed_noreply_per_day'],\r\n    ['inEmailWaitingInPersonalQueues', 'in_email_waiting_in_personal_queues'],\r\n    ['inEmailWaitingInPqBreachedSla', 'in_email_waiting_in_pq_breached_sla'],\r\n    ['inEmailHandledNewPerDay', 'in_email_handled_new_per_day'],\r\n    ['inEmailRejectedPerDay', 'in_email_rejected_per_day'],\r\n    ['inEmailsJoinedExistingCases', 'in_emails_joined_existing_cases'],\r\n    ['outEmailWaitingInPersonalQueues', 'out_email_waiting_in_personal_queues'],\r\n    // ['inServiceChangedPerDay', 'in_service_changed_per_day'],  // Field absent in server data\r\n    ['inCallsTransferredPerDay', 'in_calls_transferred_per_day'],\r\n    ['inCallsFirstTimeHandledPerDay', 'in_calls_first_time_handled_per_day'],\r\n    ['inTransfersReceivedPerDay', 'in_transfers_received_per_day'],\r\n    ['inCallsDurationAveragePerDay', 'in_calls_duration_average_per_day'],\r\n    ['inCallsDurationTotalPerDay', 'in_calls_duration_total_per_day'],\r\n    ['callsAverageHandlingTimePerDay', 'calls_average_handling_time_per_day'],\r\n    ['callsAverageAcwTimePerDay', 'calls_average_acw_time_per_day'],\r\n    ['inCallsPutOnHoldPerDay', 'in_calls_put_on_hold_per_day'],\r\n    ['inCallsFirstTimePutOnHoldPerDay', 'in_calls_first_time_put_on_hold_per_day'],\r\n    ['agentFcr', 'agent_fcr'],\r\n    ['agentNps', 'agent_nps'],\r\n    ['agentCsat', 'agent_csat'],\r\n    ['agentCm1', 'agent_cm1'],\r\n    ['agentCm2', 'agent_cm2'],\r\n    ['agentTotalReadyTime', 'agent_total_ready_time'],\r\n] as const\r\n\r\nexport type ServerMyStatsDetailsFields = typeof MY_STATS_FIELD_MAP[number][1]\r\n\r\nexport const MY_STATS_DETAILS_FIELDS: MyStatsDetailsFields['name'][] = MY_STATS_FIELD_MAP.map(m => m[0])\r\n\r\nexport type MyStatsDetails = Partial<Record<MyStatsDetailsFields['name'], number>>\r\n\r\n/**\r\n * My team\r\n */\r\nexport const SERVER_MY_TEAM_USER_DETAILS_FIELDS = [\r\n    'user_id',\r\n    'firstname',\r\n    'lastname',\r\n    'acd_state',\r\n    'presence_state',\r\n    'is_agent',\r\n    'is_logged',\r\n    'acd_next_state',\r\n    'state_duration',\r\n    'reason',\r\n    'next_reason',\r\n    'items',\r\n    'active_item_id',\r\n    'extension',\r\n] as const\r\n\r\nexport type ServerMyTeamUserDetailsFields =\r\n    typeof SERVER_MY_TEAM_USER_DETAILS_FIELDS[number]\r\n\r\n\r\nexport const MY_TEAM_CONFIGURABLE_COLUMNS: MyTeamFields['name'][] = [\r\n    'name',\r\n    'acdState',\r\n    'reason',\r\n    'stateDuration',\r\n    'acdNextState',\r\n    'nextReason',\r\n]\r\n\r\nexport const MY_TEAM_USER_DETAILS_FIELDS = [\r\n    'userId',\r\n    'firstName',\r\n    'lastName',\r\n    'acdState',\r\n    'presenceState',\r\n    'isAgent',\r\n    'isLogged',\r\n    'acdNextState',\r\n    'stateDuration',\r\n    'reason',\r\n    'nextReason',\r\n    'items',\r\n    'activeItemId',\r\n] as const\r\n\r\ntype MyTeamUserDetailsFields = typeof MY_TEAM_USER_DETAILS_FIELDS[number]\r\n\r\nexport const SERVER_MY_TEAM_ITEM_FIELDS = [\r\n    'item_id',\r\n    'media_type',\r\n    'direction',\r\n] as const\r\n\r\nexport const MY_TEAM_ITEM_FIELDS = [\r\n    'id',\r\n    'mediaType',\r\n    'state',\r\n    'direction',\r\n] as const\r\n\r\ntype MyTeamItemFields = typeof MY_TEAM_ITEM_FIELDS[number]\r\n\r\nexport type MyTeamUserDetails = ReplaceNamesWithFullName<\r\n    UserDetailsConstructor<MyTeamItemFields, MyTeamUserDetailsFields>\r\n>\r\n\r\ntype ReplaceNamesWithFullName<T extends Record<string, unknown>> = Omit<\r\n    T,\r\n    'firstName' | 'lastName'\r\n> & { name: string }\r\n\r\n/**\r\n * My Services\r\n */\r\nexport const MY_SERVICES_DETAILS_CONFIGURABLE_FIELDS: MyServicesDetailsFields['name'][] = [\r\n    'name',\r\n    'inCallsWaiting',\r\n    'inMaxWaitTime',\r\n    'serviceLevel',\r\n    'agentsReady',\r\n    'agentsLogged',\r\n    'serviceLevelPerDay',\r\n    'inCallsHandledPerDay',\r\n    'inCallsAbandonedInQueuePerDay',\r\n    'inEwt',\r\n    'inAverageSpeedOfAnswer',\r\n    'callsAverageHandlingTimePerDay',\r\n    'outCallsHandledPerDay',\r\n    'outCallsUnattendedPerDay',\r\n    'outCallsUnattendedRatioPerDay',\r\n]\r\n\r\nexport type MyServicesDetails = ServiceDetailsConstructor<MyServicesDetailsFields['name']>\r\n\r\n\r\nexport type AgentHomeScreenWidgetType = AgentWidget['type']\r\n\r\nconst AGENT_WIDGET_TYPES: AgentWidget['type'][] = ['FLIPPING', 'BREAK_TIME_REMAINING', 'MY_TEAM', 'MY_STATS', 'MY_SERVICES']\r\n\r\nexport function isAgentWidget(widget: HomePageWidget): widget is AgentWidget {\r\n    return AGENT_WIDGET_TYPES.includes(widget.type as AgentHomeScreenWidgetType)\r\n}\r\n\r\nexport function isAgentWidgets(widgets: HomePageWidget[]): widgets is AgentWidget[] {\r\n    return widgets.every(isAgentWidget)\r\n}\r\n\r\nexport type HomePageAgentConfig = Exclude<HomePageConfig, 'widgets'> & {\r\n    widgets: AgentWidget[]\r\n}\r\n\r\nexport function isHomePageAgentConfig(config: HomePageNewConfig | undefined): config is HomePageAgentConfig {\r\n    return !!config && (config?.isDefault || false)\r\n}\r\n\r\nexport type HomePageSupervisorConfig = Exclude<HomePageConfig, 'widgets'> & {\r\n    widgets: SupervisorWidget[]\r\n}\r\n\r\nexport function isHomePageSupervisorConfig(config: HomePageNewConfig | undefined): config is HomePageSupervisorConfig {\r\n    return !!config && (!config.isDefault || false)\r\n}\r\n","import type {AgentFlippingWidget, HomePageWidget} from '@bpinc/lib-widgets-urls'\r\n\r\n\r\nconst FULLSCREEN_HOME_APP_URL = '/agent/home-app'\r\n\r\nexport function makeLinkToHomePageApp({\r\n    configId,\r\n    userId,\r\n    teamId,\r\n    edit,\r\n    serverOrigin,\r\n}: {\r\n    serverOrigin: string\r\n    configId: string | undefined\r\n    userId: string\r\n    teamId: string | undefined\r\n    edit?: boolean\r\n}): string {\r\n    const url = new URL(FULLSCREEN_HOME_APP_URL, serverOrigin)\r\n    url.searchParams.set('configId', configId ?? '')\r\n    url.searchParams.set('userId', userId)\r\n    url.searchParams.set('teamId', teamId ?? '')\r\n    url.searchParams.set('edit', String(edit))\r\n\r\n    return url.toString()\r\n}\r\n\r\nexport function isFlippingWidget(widget: HomePageWidget): widget is AgentFlippingWidget {\r\n    return widget.type === 'FLIPPING'\r\n}\r\n","import {tw} from '@servicepattern/ui'\r\nimport {tv} from 'tailwind-variants'\r\n\r\n\r\nexport const headerStyles = tv({\r\n    base: [\r\n        tw`flex shrink-0 items-center justify-between`,\r\n        tw`z-[1] p-4`,\r\n        tw`transition-all`,\r\n        tw`body-m`,\r\n        tw`border-b border-default`,\r\n    ],\r\n})\r\n\r\nexport const cardStyles = tv({\r\n    base: [\r\n        tw`flex flex-col`,\r\n        tw`h-full`,\r\n        tw`bg-primary-background`,\r\n        tw`rounded-xs border border-solid border-default`,\r\n        tw`shadow-[0px_0px_10px_0px_rgba(71,71,71,0.10)]`,\r\n    ],\r\n    variants: {\r\n        activeBorder: {\r\n            true: [\r\n                tw`border-2 group-hover:border-primary`,\r\n            ],\r\n        },\r\n        isDragging: {\r\n            true: [\r\n                tw`pointer-events-none`,\r\n            ],\r\n        },\r\n    },\r\n})\r\n\r\nexport const cardBodyStyles = tv({\r\n    base: [\r\n        tw`flex flex-col`,\r\n        tw`h-full`,\r\n        tw`p-4`,\r\n        tw`relative overflow-hidden`,\r\n    ],\r\n})\r\n\r\nexport const cardWrapperStyles = tv({\r\n    base: [\r\n        tw`absolute z-[1]`,\r\n        tw`group`,\r\n    ],\r\n    variants: {\r\n        isDragging: {\r\n            true: [\r\n                tw``,\r\n            ],\r\n        },\r\n    },\r\n})\r\n\r\nexport const cardControlsStyles = tv({\r\n    base: [\r\n        tw`pointer-events-none absolute -bottom-10 right-2 opacity-0`,\r\n        tw`group-hover:pointer-events-auto group-hover:z-[2] group-hover:opacity-100`,\r\n    ],\r\n    variants: {\r\n        isBottom: {\r\n            true: [\r\n                tw`bottom-0`,\r\n            ],\r\n        },\r\n        forceShow: {\r\n            true: [\r\n                tw`pointer-events-auto z-[2] opacity-100`,\r\n            ],\r\n        },\r\n        forceHide: {\r\n            true: [\r\n                tw`!pointer-events-none !opacity-0`,\r\n            ],\r\n        },\r\n    },\r\n})\r\n\r\n\r\nexport const borderContainerStyles = tv({\r\n    base: [\r\n        tw`border-2 border-primary bg-transparent`,\r\n    ],\r\n})\r\n\r\nexport const resizeHandlerStyles = tv({\r\n    base: [\r\n        tw`z-[1]`,\r\n    ],\r\n})\r\n\r\nexport const resizeHandleStyles = tv({\r\n    base: [\r\n        tw`absolute z-[1] block h-2 w-2 border border-primary opacity-0 bg-primary-background`,\r\n    ],\r\n    variants: {\r\n        visible: {\r\n            true: [\r\n                tw`group-hover:opacity-100`,\r\n            ],\r\n        },\r\n        position: {\r\n            left: [\r\n                tw`left-0.5 top-[calc(50%-4px)]`,\r\n            ],\r\n            right: [\r\n                tw`right-0.5 top-[calc(50%-4px)]`,\r\n            ],\r\n            top: [\r\n                tw`left-[calc(50%-4px)] top-0.5`,\r\n            ],\r\n            bottom: [\r\n                tw`bottom-0.5 left-[calc(50%-4px)]`,\r\n            ],\r\n            topRight: [\r\n                tw`bottom-1 left-1`,\r\n            ],\r\n            bottomRight: [\r\n                tw`left-1 top-1`,\r\n            ],\r\n            bottomLeft: [\r\n                tw`right-1 top-1`,\r\n            ],\r\n            topLeft: [\r\n                tw`bottom-1 right-1`,\r\n            ],\r\n        },\r\n    },\r\n})\r\n","import type {ReactNode} from 'react'\r\nimport React from 'react'\r\n\r\nimport {headerStyles} from './styles'\r\n\r\n\r\ninterface CardHeaderProps {\r\n    children: ReactNode\r\n}\r\n\r\nexport const CardEditHeader = React.memo(function CardEditHeader({children}: CardHeaderProps) {\r\n    return <header className={headerStyles()}>{children}</header>\r\n})\r\n","import React from 'react'\r\nimport type {Position} from 'react-rnd'\r\n\r\nimport {CARD_MARGIN} from '../constants'\r\nimport type {BpWallboardBaseWidget, CommonCardProps, Size} from '../types'\r\n\r\n\r\ninterface GetCardPositionParams {\r\n    cellSize: Size\r\n    position: Position\r\n}\r\n\r\nexport function getCardPosition({cellSize, position}: GetCardPositionParams) {\r\n    if (!cellSize) {\r\n        return\r\n    }\r\n\r\n    return {\r\n        x: position.x * cellSize.width + CARD_MARGIN,\r\n        y: position.y * cellSize.height + CARD_MARGIN,\r\n    }\r\n}\r\n\r\nexport function useCardLayout<WidgetConfig extends BpWallboardBaseWidget>({\r\n    cellSize,\r\n    config,\r\n    minCardSize,\r\n}: CommonCardProps<WidgetConfig>) {\r\n    const position = React.useMemo(() => {\r\n        return getCardPosition({\r\n            cellSize,\r\n            position: config,\r\n        })\r\n    }, [cellSize, config])\r\n\r\n    const size = React.useMemo(() => {\r\n        if (!cellSize) {\r\n            return\r\n        }\r\n\r\n        return {\r\n            minWidth: calculateSize(cellSize.width, minCardSize.width),\r\n            minHeight: calculateSize(cellSize.height, minCardSize.height),\r\n            width: calculateSize(cellSize.width, config.width),\r\n            height: calculateSize(cellSize.height, config.height),\r\n        }\r\n    }, [cellSize, config.height, config.width, minCardSize.height, minCardSize.width])\r\n\r\n    return {\r\n        size,\r\n        position,\r\n    }\r\n}\r\n\r\nfunction calculateSize(cellSize: number, cellNumbers: number) {\r\n    const basicSize = cellSize * cellNumbers\r\n\r\n    return basicSize - 2 * CARD_MARGIN\r\n}\r\n","export const CARD_MARGIN = 8\r\n","import type {Position} from 'react-rnd'\r\n\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\n\r\nimport type {Direction} from '../types'\r\n\r\n\r\nfunction getInitialDirection(initialPosition: Position | undefined): Direction {\r\n    return {x: 'none', y: 'none', position: initialPosition ?? {x: 0, y: 0}} as const\r\n}\r\n\r\ninterface DragManagerI {\r\n    getDirection: () => Direction\r\n    setDirection: (direction: Direction) => void\r\n    resetDirection: (cardPosition: Position | undefined) => void\r\n\r\n    getDropPosition: () => Position | undefined\r\n    getPrevDropPosition: () => Position | undefined\r\n    setDropPosition: (position: Position) => void\r\n    resetDropPosition: () => void\r\n\r\n    highlightDropzone: (position: Position & {height: number; width: number}) => void\r\n    hideDropzone: () => void\r\n\r\n    getGridPosition: () => Position\r\n}\r\n\r\nclass DragManager implements DragManagerI {\r\n    direction: Direction = getInitialDirection(undefined)\r\n    dropzoneElement: HTMLElement | undefined\r\n    dropPosition: Position | undefined\r\n    prevDropPosition: Position | undefined\r\n    gridPosition: Position | undefined\r\n    gridElement: Element | undefined\r\n    dropzoneVisible = false\r\n\r\n    /**\r\n     * Gets the current drag direction.\r\n     * @returns The current direction.\r\n     */\r\n    public getDirection() {\r\n        return this.direction\r\n    }\r\n\r\n    /**\r\n     * Sets the drag direction.\r\n     * @param direction - The direction to set.\r\n     */\r\n    public setDirection(direction: Direction) {\r\n        this.direction = direction\r\n    }\r\n\r\n    /**\r\n     * Resets the drag direction based on the card position.\r\n     * @param cardPosition - The position of the card.\r\n     */\r\n    public resetDirection(cardPosition: Position | undefined) {\r\n        this.direction = getInitialDirection(cardPosition)\r\n    }\r\n\r\n    /**\r\n     * Gets the current drop position.\r\n     * @returns The current drop position.\r\n     */\r\n    public getDropPosition() {\r\n        return this.dropPosition\r\n    }\r\n\r\n    /**\r\n     * Gets the previous drop position.\r\n     * @returns The previous drop position.\r\n     */\r\n    public getPrevDropPosition() {\r\n        return this.prevDropPosition\r\n    }\r\n\r\n    /**\r\n     * Sets the drop position.\r\n     * @param position - The position to set as the drop position.\r\n     */\r\n    public setDropPosition(position: Position) {\r\n        this.prevDropPosition = this.dropPosition || position\r\n        this.dropPosition = position\r\n    }\r\n\r\n    /**\r\n     * Resets the drop position.\r\n     */\r\n    public resetDropPosition() {\r\n        this.prevDropPosition = this.dropPosition\r\n        this.dropPosition = undefined\r\n    }\r\n\r\n    /**\r\n     * Highlights the dropzone based on the provided position and dimensions.\r\n     * @param dropzoneLayout - The position and dimensions of the dropzone.\r\n     */\r\n    public highlightDropzone({width, height, x, y}: Position & {height: number; width: number}) {\r\n        if (this.dropzoneVisible) {\r\n            this.updateDropzonePosition({x, y})\r\n        } else {\r\n            this.showDropzone({x, y, width, height})\r\n        }\r\n    }\r\n\r\n    private showDropzone({height, width, x, y}: Position & {height: number; width: number}) {\r\n        const dropzoneElement = this.getDropzoneElement()\r\n        if (!dropzoneElement) {\r\n            return\r\n        }\r\n        this.dropzoneVisible = true\r\n        dropzoneElement.style.height = `${height}px`\r\n        dropzoneElement.style.width = `${width}px`\r\n        dropzoneElement.style.transform = `translate(${x}px, ${y}px)`\r\n    }\r\n\r\n    private updateDropzonePosition({x, y}: Position) {\r\n        const dropzoneElement = this.getDropzoneElement()\r\n        if (!dropzoneElement) {\r\n            return\r\n        }\r\n        dropzoneElement.style.transform = `translate(${x}px, ${y}px)`\r\n        dropzoneElement.style.transition = 'transform 0.15s ease-in-out'\r\n    }\r\n\r\n    /**\r\n     * Hides the dropzone.\r\n     */\r\n    public hideDropzone() {\r\n        this.dropzoneVisible = false\r\n        const dropzoneElement = this.getDropzoneElement()\r\n        if (!dropzoneElement) {\r\n            return\r\n        }\r\n\r\n        dropzoneElement.style.height = '0'\r\n        dropzoneElement.style.width = '0'\r\n        dropzoneElement.style.transition = 'none'\r\n    }\r\n\r\n    private getDropzoneElement() {\r\n        const result = this.dropzoneElement\r\n\r\n        if (result) {\r\n            return result\r\n        }\r\n\r\n        const gridElement = this.getGridElement()\r\n        const dropzoneElement = gridElement.querySelector('[data-grid-dropzone]')\r\n\r\n        if (dropzoneElement instanceof HTMLElement) {\r\n            this.dropzoneElement = dropzoneElement\r\n        }\r\n\r\n        return this.dropzoneElement\r\n    }\r\n\r\n    /**\r\n     * Gets the grid position. If the grid position is not set, it will be set.\r\n     * @returns The grid position.\r\n     */\r\n    public getGridPosition() {\r\n        const result = this.gridPosition\r\n\r\n        if (result) {\r\n            return result\r\n        }\r\n\r\n        const gridElement = this.getGridElement()\r\n\r\n        this.updateGridPosition(gridElement.getBoundingClientRect())\r\n\r\n        assertDefined(this.gridPosition)\r\n\r\n        return this.gridPosition\r\n    }\r\n\r\n    private getGridElement() {\r\n        const result = document.querySelector('[data-grid]')\r\n        assertDefined(result)\r\n\r\n        return result\r\n    }\r\n\r\n    private updateGridPosition(position: Position) {\r\n        this.gridPosition = position\r\n    }\r\n}\r\n\r\nexport const dragManager = new DragManager()\r\n","import type {DraggableData, Position} from 'react-rnd'\r\nimport {partial} from 'lodash-es'\r\n\r\nimport type {CornerPositions, Direction, Size} from '../types'\r\nimport type {HasEnoughRoom} from './useEnoughRoomChecker'\r\n\r\n\r\n/**\r\n * Gets the cell element by position.\r\n * @param isDesiredElement - Function to determine if the element is the desired element.\r\n * @param position - The position of the element.\r\n * @returns The cell element if found, otherwise undefined.\r\n */\r\nexport const getCellElementByPosiion = partial(getElementByPosition, isCell)\r\n\r\n/**\r\n * Gets the card element by position.\r\n * @param isDesiredElement - Function to determine if the element is the desired element.\r\n * @param position - The position of the element.\r\n * @returns The card element if found, otherwise undefined.\r\n */\r\nexport const getCardElementByPosition = partial(getElementByPosition, isCard)\r\n\r\n/**\r\n * Gets the element by position.\r\n * @param isDesiredElement - Function to determine if the element is the desired element.\r\n * @param position - The position of the element.\r\n * @returns The element if found, otherwise undefined.\r\n */\r\nfunction getElementByPosition(\r\n    isDesiredElement: (element: Element) => boolean,\r\n    position: Position,\r\n): HTMLElement | undefined {\r\n    const result = document.elementsFromPoint(position.x, position.y).find(isDesiredElement)\r\n\r\n    if (result instanceof HTMLElement) {\r\n        return result\r\n    }\r\n}\r\n/**\r\n * Checks if the element is a card.\r\n * @param element - The element to check.\r\n * @returns True if the element is a card, otherwise false.\r\n */\r\nfunction isCard(element: Element | undefined): element is HTMLElement {\r\n    return element instanceof HTMLElement && !!element.dataset.card\r\n}\r\n\r\n/**\r\n * Checks if the element is a cell.\r\n * @param element - The element to check.\r\n * @returns True if the element is a cell, otherwise false.\r\n */\r\nexport function isCell(element: Element | undefined): element is HTMLElement {\r\n    return element instanceof HTMLElement && !!element.dataset.cell\r\n}\r\n\r\n/**\r\n * Parameters for getting the cell position.\r\n */\r\ninterface GetCellPositionParams {\r\n    leftTopCell: HTMLElement | undefined\r\n    prevPosition: Position | undefined\r\n    rightBottomCell: HTMLElement | undefined\r\n    direction: Direction\r\n    cardSize: Size\r\n    cardId: string\r\n    hasEnoughRoom: HasEnoughRoom\r\n}\r\n\r\nconst topLeftDirections = ['left-top', 'left-none', 'none-top']\r\nconst topRightDirections = ['right-top', 'right-none']\r\nconst bottomLeftDirections = ['left-bottom', 'none-bottom']\r\nconst bottomRightDirections = ['right-bottom']\r\n\r\n/**\r\n * Gets the position of the cell during dragging.\r\n * @param leftTopCell - The left-top cell element.\r\n * @param cardSize - The size of the card.\r\n * @param direction - The direction of the drag.\r\n * @param cardId - The ID of the card.\r\n * @param rightBottomCell - The right-bottom cell element.\r\n * @param prevPosition - The previous position of the card.\r\n * @param hasEnoughRoom - Function to check if there is enough room for the card.\r\n * @returns The position of the cell if found, otherwise undefined.\r\n */\r\nexport function getDropCellPosition({\r\n    leftTopCell,\r\n    cardSize,\r\n    direction,\r\n    cardId,\r\n    rightBottomCell,\r\n    prevPosition,\r\n    hasEnoughRoom,\r\n}: GetCellPositionParams): Position | undefined {\r\n    let x = NaN\r\n    let y = NaN\r\n    const directionString = `${direction.x}-${direction.y}`\r\n    if (!direction || topLeftDirections.includes(directionString)) {\r\n        x = Number(leftTopCell?.dataset.x)\r\n        y = Number(leftTopCell?.dataset.y)\r\n    }\r\n\r\n    if (topRightDirections.includes(directionString)) {\r\n        x = Number(rightBottomCell?.dataset.x) - cardSize.width + 1\r\n        y = Number(leftTopCell?.dataset.y)\r\n    }\r\n\r\n    if (bottomLeftDirections.includes(directionString)) {\r\n        x = Number(leftTopCell?.dataset.x)\r\n        y = Number(rightBottomCell?.dataset.y) - cardSize.height + 1\r\n    }\r\n\r\n    if (bottomRightDirections.includes(directionString)) {\r\n        x = Number(rightBottomCell?.dataset.x) - cardSize.width + 1\r\n        y = Number(rightBottomCell?.dataset.y) - cardSize.height + 1\r\n    }\r\n\r\n    if (isNaN(x) || isNaN(y)) {\r\n        return undefined\r\n    }\r\n    if (!hasEnoughRoom({x, y, width: cardSize.width, height: cardSize.height}, cardId)) {\r\n        return prevPosition\r\n    }\r\n\r\n    return {x, y}\r\n}\r\n\r\n/**\r\n * Gets the position of the cell.\r\n * @param element - The cell element.\r\n * @returns The position of the cell if found, otherwise undefined.\r\n */\r\nexport function getCellPosition(element: Element | undefined): Position | undefined {\r\n    if (!isCell(element)) {\r\n        return undefined\r\n    }\r\n\r\n    const x = Number(element?.dataset.x)\r\n    const y = Number(element?.dataset.y)\r\n\r\n    if (isNaN(x) || isNaN(y)) {\r\n        return undefined\r\n    }\r\n\r\n    return {x, y}\r\n}\r\n\r\n/**\r\n * Gets the corner positions of the card during dragging.\r\n * @param dragData - The draggable data.\r\n * @returns The corner positions of the card.\r\n */\r\nexport function getCardCornerPositions(initialPosition: Position, dragData: DraggableData): CornerPositions {\r\n    return {\r\n        topLeft: {\r\n            x: initialPosition.x + dragData.lastX,\r\n            y: initialPosition.y + dragData.lastY,\r\n        },\r\n        topRight: {\r\n            x: initialPosition.x + dragData.lastX + dragData.node.clientWidth,\r\n            y: initialPosition.y + dragData.lastY,\r\n        },\r\n        bottomLeft: {\r\n            x: initialPosition.x + dragData.lastX,\r\n            y: initialPosition.y + dragData.lastY + dragData.node.clientHeight,\r\n        },\r\n        bottomRight: {\r\n            x: initialPosition.x + dragData.lastX + dragData.node.clientWidth,\r\n            y: initialPosition.y + dragData.lastY + dragData.node.clientHeight,\r\n        },\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport type {BaseWidgetLocation, Size} from '../types'\r\n\r\n\r\ntype Widget = BaseWidgetLocation & {id?: string}\r\ninterface UseEnoughRoomCheckerParams {\r\n    widgets: Widget[]\r\n    gridSize: Size\r\n}\r\n\r\nexport type HasEnoughRoom = ReturnType<typeof useEnoughRoomChecker>\r\n\r\nexport function useEnoughRoomChecker({widgets, gridSize}: UseEnoughRoomCheckerParams) {\r\n    return React.useCallback(\r\n        /**\r\n         * Checks if the new card has enough room to be placed in the grid\r\n         * @param newCard - The new card to be placed in the grid\r\n         * @param currentWidgetId - The id of the widget that is being dragged, used to skip the widget when checking for intersection\r\n         */\r\n        (newCard: Widget, currentWidgetId?: string) => {\r\n            // Calculate the coordinates of the new card's edges\r\n            const newCardLeft = newCard.x\r\n            const newCardRight = newCard.x + newCard.width\r\n            const newCardTop = newCard.y\r\n            const newCardBottom = newCard.y + newCard.height\r\n\r\n            // Check if the new card is within the grid boundaries\r\n            if (newCardLeft < 0 || newCardRight > gridSize.width || newCardTop < 0 || newCardBottom > gridSize.height) {\r\n                return false\r\n            }\r\n\r\n            const widgetConfigs = widgets\r\n            // Check if the new card intersects with any of the existing cards\r\n            for (let i = 0; i < widgetConfigs.length; i++) {\r\n                const existingCard = widgetConfigs[i]\r\n\r\n                // Skip the new card when checking for intersection\r\n                if (currentWidgetId && existingCard.id === currentWidgetId) {\r\n                    continue\r\n                }\r\n\r\n                // Calculate the coordinates of the existing card's edges\r\n                const existingCardLeft = existingCard.x\r\n                const existingCardRight = existingCard.x + existingCard.width\r\n                const existingCardTop = existingCard.y\r\n                const existingCardBottom = existingCard.y + existingCard.height\r\n\r\n                // Check if the new card intersects with the existing card\r\n                if (\r\n                    newCardLeft < existingCardRight &&\r\n                    newCardRight > existingCardLeft &&\r\n                    newCardTop < existingCardBottom &&\r\n                    newCardBottom > existingCardTop\r\n                ) {\r\n                    return false\r\n                }\r\n            }\r\n\r\n            return true\r\n        },\r\n        [gridSize.height, gridSize.width, widgets],\r\n    )\r\n}\r\n","import React from 'react'\r\nimport type {DraggableEvent} from 'react-draggable'\r\nimport type {DraggableData, Position} from 'react-rnd'\r\n\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\n\r\nimport {CARD_MARGIN} from '../constants'\r\nimport type {BpWallboardBaseWidget, Size} from '../types'\r\nimport {dragManager} from './dragManager'\r\nimport {getCardCornerPositions, getCellElementByPosiion, getDropCellPosition} from './helpers'\r\nimport {useEnoughRoomChecker} from './useEnoughRoomChecker'\r\n\r\n\r\nconst IS_DRAGGING_THRESHOLD = 10\r\nconst DIRECTION_CHANGE_THRESHOLD = 10\r\ninterface UseOnDragParams<Config extends BpWallboardBaseWidget> {\r\n    setDragging: (dragging: boolean) => void\r\n    config: Config\r\n    initialPosition: Position | undefined\r\n    widgets: Config[]\r\n    gridSize: Size\r\n}\r\nexport function useOnDrag<Config extends BpWallboardBaseWidget>({\r\n    initialPosition,\r\n    widgets,\r\n    gridSize,\r\n    config,\r\n    setDragging,\r\n}: UseOnDragParams<Config>) {\r\n    const hasEnoughRoom = useEnoughRoomChecker({widgets, gridSize})\r\n    return React.useCallback(\r\n        (event: DraggableEvent, dragData: DraggableData) => {\r\n            detectDragging()\r\n            detectDirection()\r\n            handleDropzone()\r\n\r\n            function handleDropzone() {\r\n                const cardCoordinates = getCardCornerPositions(dragManager.getGridPosition(), dragData)\r\n                const cellPosition = getDropCellPosition({\r\n                    leftTopCell: getCellElementByPosiion(cardCoordinates.topLeft),\r\n                    rightBottomCell: getCellElementByPosiion(cardCoordinates.bottomRight),\r\n                    cardSize: config,\r\n                    cardId: config.id,\r\n                    hasEnoughRoom,\r\n                    direction: dragManager.getDirection(),\r\n                    prevPosition: dragManager.getPrevDropPosition(),\r\n                })\r\n\r\n                if (!cellPosition) {\r\n                    return\r\n                }\r\n\r\n                dragManager.setDropPosition(cellPosition)\r\n\r\n                function getDropzoneCell(cellNewPosition: Position) {\r\n                    const cell = document.querySelector(\r\n                        `[data-cell][data-x=\"${cellNewPosition.x}\"][data-y=\"${cellNewPosition.y}\"]`,\r\n                    )\r\n\r\n                    if (!(cell instanceof HTMLElement)) {\r\n                        return\r\n                    }\r\n                    return cell\r\n                }\r\n\r\n                const draggingElement = dragData.node\r\n                const dropzoneCell = getDropzoneCell(cellPosition)\r\n\r\n                if (!dropzoneCell) {\r\n                    return\r\n                }\r\n\r\n                dragManager.highlightDropzone({\r\n                    x: dropzoneCell.offsetLeft + CARD_MARGIN,\r\n                    y: dropzoneCell.offsetTop + CARD_MARGIN,\r\n                    height: draggingElement.clientHeight,\r\n                    width: draggingElement.clientWidth,\r\n                })\r\n\r\n\r\n            }\r\n\r\n            function detectDragging() {\r\n                assertDefined(initialPosition)\r\n\r\n                const deltaX = Math.abs(initialPosition.x - dragData.x)\r\n                const deltaY = Math.abs(initialPosition.y - dragData.y)\r\n\r\n                if (deltaX > IS_DRAGGING_THRESHOLD || deltaY > IS_DRAGGING_THRESHOLD) {\r\n                    setDragging(true)\r\n                }\r\n            }\r\n\r\n            function detectDirection() {\r\n                const prevDirection = dragManager.getDirection()\r\n\r\n                assertDefined(prevDirection)\r\n\r\n                const deltaX = dragData.x - prevDirection.position.x\r\n                const deltaY = dragData.y - prevDirection.position.y\r\n                const verticalDirectionDetected = Math.abs(deltaY) > DIRECTION_CHANGE_THRESHOLD\r\n                const horizontalDirectionDetected = Math.abs(deltaX) > DIRECTION_CHANGE_THRESHOLD\r\n                const directionDetected = verticalDirectionDetected || horizontalDirectionDetected\r\n\r\n                if (!directionDetected) {\r\n                    return\r\n                }\r\n\r\n                dragManager.setDirection({\r\n                    x:\r\n                        deltaX > DIRECTION_CHANGE_THRESHOLD\r\n                            ? 'right'\r\n                            : deltaX < -DIRECTION_CHANGE_THRESHOLD\r\n                                ? 'left'\r\n                                : prevDirection.x,\r\n                    y:\r\n                        deltaY > DIRECTION_CHANGE_THRESHOLD\r\n                            ? 'bottom'\r\n                            : deltaY < -DIRECTION_CHANGE_THRESHOLD\r\n                                ? 'top'\r\n                                : prevDirection.y,\r\n                    position: {\r\n                        x: dragData.x,\r\n                        y: dragData.y,\r\n                    },\r\n                })\r\n            }\r\n        },\r\n        [initialPosition, setDragging, hasEnoughRoom, config, gridSize, widgets],\r\n    )\r\n}\r\n","import React from 'react'\r\nimport type {DraggableEvent} from 'react-draggable'\r\nimport type {DraggableData} from 'react-rnd'\r\n\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\n\r\nimport type {BpWallboardBaseWidget, Size} from '../types'\r\nimport {dragManager} from './dragManager'\r\nimport {getCardPosition} from './useCardLayout'\r\nimport {useEnoughRoomChecker} from './useEnoughRoomChecker'\r\n\r\n\r\ninterface UseOnDragStopProps<Config extends BpWallboardBaseWidget> {\r\n    config: Config\r\n    updateWidget: (widget: Config) => void\r\n    cellSize: Size\r\n    widgets: Config[]\r\n    gridSize: Size\r\n    setDragging: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\nexport function useOnDragStop<Config extends BpWallboardBaseWidget>({\r\n    config,\r\n    widgets,\r\n    gridSize,\r\n    cellSize,\r\n    updateWidget,\r\n    setDragging,\r\n}: UseOnDragStopProps<Config>) {\r\n    const hasEnoughRoom = useEnoughRoomChecker({widgets, gridSize})\r\n\r\n    return React.useCallback(\r\n        (_: DraggableEvent, _dragData: DraggableData) => {\r\n            setDragging(false)\r\n            dragManager.hideDropzone()\r\n\r\n            const newPosition = dragManager.getDropPosition()\r\n            dragManager.resetDropPosition()\r\n\r\n            const widgetWithNewPosition = {\r\n                ...config,\r\n                ...newPosition,\r\n            }\r\n\r\n            if (!newPosition || !hasEnoughRoom(widgetWithNewPosition, config.id)) {\r\n                return\r\n            }\r\n\r\n            const newCardPosition = getCardPosition({\r\n                position: newPosition,\r\n                cellSize,\r\n            })\r\n\r\n            assertDefined(newCardPosition)\r\n            dragManager.resetDirection(newCardPosition)\r\n\r\n            updateWidget(widgetWithNewPosition)\r\n        },\r\n        [config, hasEnoughRoom, updateWidget, widgets, cellSize, setDragging],\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"transition\":\"homePage_Card_transition_gfPPz\",\"resizing\":\"homePage_Card_resizing_PGMqK\"};","import React from 'react'\r\n\r\nimport styles from './Card.module.less'\r\n\r\n\r\nexport function useOnResizeStart() {\r\n    return React.useCallback((e: React.MouseEvent<HTMLElement> | React.TouchEvent<HTMLElement>) => {\r\n        if (e.target instanceof HTMLElement) {\r\n            e.target.closest('[data-card]')?.classList.add(styles.resizing)\r\n        }\r\n    }, [])\r\n}\r\n","import type {RefObject} from 'react'\r\nimport React from 'react'\r\nimport type {Position, Rnd, RndResizeCallback} from 'react-rnd'\r\nimport {flow} from 'lodash-es'\r\n\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\n\r\nimport type {BpWallboardBaseWidget, Size} from '../types'\r\nimport {getCellElementByPosiion, getCellPosition} from './helpers'\r\nimport {useEnoughRoomChecker} from './useEnoughRoomChecker'\r\n\r\nimport styles from './Card.module.less'\r\n\r\n\r\ninterface UseOnResizeStopParams<Widget extends BpWallboardBaseWidget> {\r\n    gridSize: Size\r\n    widgets: Widget[]\r\n    config: Widget\r\n    rndRef: RefObject<Rnd>\r\n    defaultPosition: Position | undefined\r\n    updateWidget: (widget: Widget) => void\r\n}\r\n\r\nexport function useOnResizeStop<Widget extends BpWallboardBaseWidget>({\r\n    widgets,\r\n    config,\r\n    gridSize,\r\n    rndRef,\r\n    defaultPosition,\r\n    updateWidget,\r\n}: UseOnResizeStopParams<Widget>): RndResizeCallback {\r\n    const hasEnoughRoom = useEnoughRoomChecker({widgets, gridSize})\r\n\r\n    return React.useCallback(\r\n        (evt, direction, card) => {\r\n            removeResizingClassName()\r\n\r\n            const {top, left, right, bottom} = card.getBoundingClientRect()\r\n            const getCellCoordinates = flow(getCellElementByPosiion, getCellPosition)\r\n\r\n            const leftTopCell = getCellCoordinates({\r\n                x: left,\r\n                y: top,\r\n            })\r\n\r\n            const rightBottomCell = getCellCoordinates({\r\n                x: right,\r\n                y: bottom,\r\n            })\r\n\r\n            if (!leftTopCell || !rightBottomCell) {\r\n                return preserveDefaultPosition()\r\n            }\r\n\r\n            const newWidth = rightBottomCell.x - leftTopCell.x + 1\r\n            const newHeight = rightBottomCell.y - leftTopCell.y + 1\r\n\r\n            const newPosition = getNewPosition()\r\n\r\n            const cardWithNewPosition = {\r\n                ...config,\r\n                x: newPosition.x,\r\n                y: newPosition.y,\r\n                width: newWidth,\r\n                height: newHeight,\r\n            }\r\n\r\n            const isSizeChanged = newWidth !== config.width || newHeight !== config.height\r\n\r\n            if (!isSizeChanged || !hasEnoughRoom(cardWithNewPosition, config.id)) {\r\n                return preserveDefaultPosition()\r\n            }\r\n\r\n            updateWidget(cardWithNewPosition)\r\n\r\n            function getNewPosition(): Position {\r\n                assertDefined(defaultPosition)\r\n\r\n                const directionsWhichChangeYPosition = ['top', 'topLeft', 'topRight']\r\n                const directionsWhichChangeXPosition = ['left', 'topLeft', 'bottomLeft']\r\n\r\n                const x = directionsWhichChangeXPosition.includes(direction)\r\n                    ? config.x - (newWidth - config.width)\r\n                    : config.x\r\n\r\n                const y = directionsWhichChangeYPosition.includes(direction)\r\n                    ? config.y - (newHeight - config.height)\r\n                    : config.y\r\n\r\n                return {\r\n                    x,\r\n                    y,\r\n                }\r\n            }\r\n\r\n            function removeResizingClassName() {\r\n                setTimeout(() => {\r\n                    if (evt.target instanceof HTMLElement) {\r\n                        evt.target.closest('[data-card]')?.classList.remove(styles.resizing)\r\n                    }\r\n                }, 0)\r\n            }\r\n            function preserveDefaultPosition() {\r\n                assertDefined(defaultPosition)\r\n                rndRef.current?.updatePosition({\r\n                    x: defaultPosition.x,\r\n                    y: defaultPosition.y,\r\n                })\r\n            }\r\n        },\r\n        [config, widgets, hasEnoughRoom, updateWidget, defaultPosition, rndRef],\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\nimport type {RndResizeCallback, RndResizeStartCallback} from 'react-rnd'\r\nimport {Rnd} from 'react-rnd'\r\nimport classnames from 'classnames'\r\n\r\nimport {useBoolean} from '@bpinc/lib-helpers'\r\n\r\nimport type {BpWallboardBaseWidget, CommonCardProps, Size} from '../types'\r\nimport {CardEditHeader} from './CardEditHeader'\r\nimport {\r\n    borderContainerStyles,\r\n    cardBodyStyles,\r\n    cardControlsStyles,\r\n    cardStyles,\r\n    cardWrapperStyles,\r\n    resizeHandleStyles,\r\n} from './styles'\r\nimport {useCardLayout} from './useCardLayout'\r\nimport {useOnDrag} from './useOnDrag'\r\nimport {useOnDragStop} from './useOnDragStop'\r\nimport {useOnResizeStart} from './useOnResizeStart'\r\nimport {useOnResizeStop} from './useOnResizeStop'\r\n\r\nimport styles from './Card.module.less'\r\n\r\n\r\nexport type BpWallboardCardEditProps<CardConfig extends BpWallboardBaseWidget> = CommonCardProps<CardConfig> & {\r\n    hasSettings: boolean\r\n    openSettings: (config: CardConfig) => void\r\n    updateWidget: (config: CardConfig) => void\r\n    removeWidget: (config: CardConfig) => void\r\n    gridSize: Size\r\n    widgets: CardConfig[]\r\n}\r\n\r\nexport const CardEdit = function CardEdit<CardConfig extends BpWallboardBaseWidget>(\r\n    props: BpWallboardCardEditProps<CardConfig>,\r\n) {\r\n    const {\r\n        children,\r\n        config,\r\n        cellSize,\r\n        gridSize,\r\n        style,\r\n        updateWidget,\r\n        header,\r\n        controls,\r\n        widgets,\r\n        className,\r\n    } = props\r\n\r\n    const rndRef = React.useRef<Rnd>(null)\r\n    const {position, size} = useCardLayout(props)\r\n    const [dragging, setDragging] = React.useState(false)\r\n\r\n    const {value: isResizing, setTrue: startResizing, setFalse: endResizing} = useBoolean(false)\r\n    const onDrag = useOnDrag({\r\n        setDragging,\r\n        widgets,\r\n        gridSize,\r\n        config,\r\n        initialPosition: position,\r\n    })\r\n\r\n    const onDragStop = useOnDragStop({\r\n        config,\r\n        gridSize,\r\n        cellSize,\r\n        updateWidget,\r\n        widgets,\r\n        setDragging,\r\n    })\r\n\r\n    const onResizeStart = useOnResizeStart()\r\n\r\n    const initResize: RndResizeStartCallback = e => {\r\n        onResizeStart(e)\r\n        startResizing()\r\n    }\r\n\r\n    const onResizeStop = useOnResizeStop({\r\n        config,\r\n        rndRef,\r\n        defaultPosition: position,\r\n        gridSize,\r\n        updateWidget,\r\n        widgets,\r\n    })\r\n\r\n    const endResize: RndResizeCallback = (e, dir, elementRef, delta, endResizePosition) => {\r\n        onResizeStop(e, dir, elementRef, delta, endResizePosition)\r\n        endResizing()\r\n    }\r\n\r\n    const positionStyle = useMemo(() => {\r\n        return {\r\n            position: 'absolute' as const,\r\n            transform: `translate(${position?.x}px, ${position?.y}px)`,\r\n            ...size,\r\n        }\r\n    }, [position, size])\r\n\r\n\r\n    const isBottom = (gridSize.height - (config.y + config.height)) === 0\r\n\r\n    const resizeHandlerComponents = useMemo(() => ({\r\n        top: <div className={resizeHandleStyles({visible: !(isResizing || dragging), position: 'top'})} />,\r\n        right: <div className={resizeHandleStyles({visible: !(isResizing || dragging), position: 'right'})} />,\r\n        bottom: <div className={resizeHandleStyles({visible: !(isResizing || dragging), position: 'bottom'})} />,\r\n        left: <div className={resizeHandleStyles({visible: !(isResizing || dragging), position: 'left'})} />,\r\n\r\n        topRight: <div className={resizeHandleStyles({visible: !(isResizing || dragging), position: 'topRight'})} />,\r\n        bottomRight: <div className={resizeHandleStyles({visible: !(isResizing || dragging), position: 'bottomRight'})} />,\r\n        bottomLeft: <div className={resizeHandleStyles({visible: !(isResizing || dragging), position: 'bottomLeft'})} />,\r\n        topLeft: <div className={resizeHandleStyles({visible: !(isResizing || dragging), position: 'topLeft'})} />,\r\n    }), [isResizing, dragging])\r\n\r\n\r\n    if (!position || !size || !cellSize.width || !cellSize.height) {\r\n        return null\r\n    }\r\n\r\n    // z-index of card on top should be higher than the card on bottom (menu items of top card should be shown over bottom one)\r\n    // but for resize or drag zIndex should be superior\r\n    const cardZIndex = (isResizing || dragging) ? 1000 : 100 - config.y\r\n\r\n    return (\r\n        <>\r\n            {isResizing && (\r\n                <div className={borderContainerStyles()} style={{...positionStyle, zIndex: cardZIndex + 1}}>\r\n                    <div className={cardControlsStyles({forceShow: true, isBottom})}>\r\n                        {controls}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <Rnd\r\n                ref={rndRef}\r\n                enableResizing\r\n                resizeHandleComponent={resizeHandlerComponents}\r\n                position={position}\r\n                minWidth={size.minWidth}\r\n                minHeight={size.minHeight}\r\n                size={size}\r\n                tabIndex={0}\r\n                className={classnames(className, styles.transition, cardWrapperStyles())}\r\n                style={{...style, zIndex: cardZIndex}}\r\n                onDrag={onDrag}\r\n                onDragStop={onDragStop}\r\n                onResizeStart={initResize}\r\n                onResizeStop={endResize}\r\n                data-x={config.x}\r\n                data-y={config.y}\r\n                data-card\r\n                data-card-id={config.id}\r\n            >\r\n                <div className={cardStyles({activeBorder: !isResizing, isDragging: dragging})}>\r\n                    <CardEditHeader>{header}</CardEditHeader>\r\n                    <div className={cardBodyStyles()}>{children}</div>\r\n                    <div className={cardControlsStyles({isBottom, forceShow: dragging, forceHide: isResizing})}>\r\n                        {controls}\r\n                    </div>\r\n                </div>\r\n            </Rnd>\r\n        </>\r\n    )\r\n}\r\n","import type {ReactNode} from 'react'\r\nimport React from 'react'\r\n\r\nimport {headerStyles} from './styles'\r\n\r\n\r\ninterface CardViewHeaderProps {\r\n    children: ReactNode\r\n}\r\n\r\nexport const CardViewHeader: React.FC<CardViewHeaderProps> = React.memo(function CardViewHeader({children}) {\r\n    return <header className={headerStyles()}>{children}</header>\r\n})\r\n","import React from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport type {BpWallboardBaseWidget, CommonCardProps} from '../types'\r\nimport {CardViewHeader} from './CardViewHeader'\r\nimport {cardBodyStyles, cardStyles, cardWrapperStyles} from './styles'\r\nimport {useCardLayout} from './useCardLayout'\r\n\r\nimport styles from './Card.module.less'\r\n\r\n\r\nexport type BpWallboardCardViewProps<CardConfig extends BpWallboardBaseWidget> = CommonCardProps<CardConfig>\r\n\r\nexport function CardView<CardConfig extends BpWallboardBaseWidget>(props: BpWallboardCardViewProps<CardConfig>) {\r\n    const {children, config, cellSize, style, className, header} = props\r\n\r\n    const {position, size} = useCardLayout(props)\r\n\r\n    if (!position || !size || !cellSize.width || !cellSize.height) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                ...style,\r\n                top: position.y,\r\n                left: position.x,\r\n                ...size,\r\n            }}\r\n            className={tcn(cardWrapperStyles(), className, styles.transition)}\r\n            data-x={config.x}\r\n            data-y={config.y}\r\n            data-card\r\n            data-card-id={config.id}\r\n        >\r\n            <div className={cardStyles()}>\r\n                <CardViewHeader>{header}</CardViewHeader>\r\n                <div className={cardBodyStyles()}>{children}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import type {CSSProperties, ReactNode} from 'react'\r\nimport type {Position} from 'react-rnd'\r\n\r\nimport type {BpWallboardCardEditProps, BpWallboardCardViewProps} from './card'\r\n\r\n\r\nexport type BaseWidgetLocation = {\r\n    x: number\r\n    y: number\r\n    width: number\r\n    height: number\r\n}\r\n\r\nexport type BpWallboardBaseWidget = BaseWidgetLocation & {\r\n    id: string\r\n    type: string\r\n}\r\n\r\nexport type Size = {\r\n    width: number\r\n    height: number\r\n}\r\n\r\nexport interface CellPosition {\r\n    x: number\r\n    y: number\r\n}\r\n\r\nexport interface SelectedCells {\r\n    start: CellPosition | null\r\n    end: CellPosition | null\r\n}\r\n\r\nexport interface BpWallboardSelectedCellsRequired {\r\n    start: CellPosition\r\n    end: CellPosition\r\n}\r\n\r\nexport function isSelectedCellsRequired(\r\n    selectedCells: SelectedCells,\r\n): selectedCells is BpWallboardSelectedCellsRequired {\r\n    return selectedCells.start !== null && selectedCells.end !== null\r\n}\r\n\r\nexport type CommonCardProps<WidgetConfig extends BpWallboardBaseWidget> = {\r\n    config: WidgetConfig\r\n    cellSize: Size\r\n    children: ReactNode\r\n    header: ReactNode\r\n    controls?: ReactNode\r\n    style?: CSSProperties\r\n    className?: string\r\n    minCardSize: Size\r\n}\r\n\r\nexport interface WallboardCommonProps<\r\n    Widget extends BpWallboardBaseWidget,\r\n    SubscriptionData extends Record<string, Record<string, unknown>>\r\n> {\r\n    cellSize: Size\r\n    setCellSize: React.Dispatch<React.SetStateAction<Size>>\r\n    widgets: Widget[]\r\n    className?: string\r\n    gridSize: Size\r\n    minCardSize: Size\r\n    subscriptionData?: SubscriptionData\r\n}\r\n\r\nexport type BpWallboardWidgetResolverViewProps<\r\n    W extends BpWallboardBaseWidget,\r\n    SubscriptionData = Record<string, unknown>\r\n> = Omit<BpWallboardCardViewProps<W>, 'children' | 'header'> & {\r\n    Card: React.FC<BpWallboardCardViewProps<W>>\r\n    subscriptionData?: SubscriptionData\r\n}\r\n\r\nexport type BpWallboardWidgetResolverEditProps<\r\n    W extends BpWallboardBaseWidget,\r\n    SubscriptionData = Record<string, unknown>\r\n> = Omit<BpWallboardCardEditProps<W>, 'children' | 'header'> & {\r\n    Card: React.FC<BpWallboardCardEditProps<W>>\r\n    subscriptionData?: SubscriptionData\r\n    hideWidgetSettings?: (widget: W) => boolean\r\n}\r\n\r\nexport type Direction = {\r\n    x: 'left' | 'right' | 'none'\r\n    y: 'top' | 'bottom' | 'none'\r\n    position: Position\r\n}\r\n\r\ntype Corners = 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight'\r\n\r\nexport type CornerPositions = Record<Corners, Position>\r\n","import {tw} from '@servicepattern/ui'\r\nimport {tv} from 'tailwind-variants'\r\n\r\n\r\nexport const cellStyles = tv({\r\n    base: [\r\n        tw`relative h-full w-full`,\r\n        tw`select-none `,\r\n        tw`box-border border border-l-0 border-t-0 border-transparent p-2`,\r\n    ],\r\n    variants: {\r\n        isFirstColumn: {\r\n            true: [\r\n                tw`border-l`,\r\n            ],\r\n        },\r\n        isFirstRow: {\r\n            true: [\r\n                tw`border-t`,\r\n            ],\r\n        },\r\n        isEdit: {\r\n            true: [\r\n                tw`border-disabled`,\r\n            ],\r\n        },\r\n        firstSelectionRow: {\r\n            true: [\r\n                tw`border-t-2 border-solid !border-t-[color:var(--primary-600)]`,\r\n            ],\r\n        },\r\n        firstSelectionColumn: {\r\n            true: [\r\n                tw`border-l-2 border-solid !border-l-[color:var(--primary-600)]`,\r\n            ],\r\n        },\r\n        lastSelectionRow: {\r\n            true: [\r\n                tw`border-b-2 border-solid !border-b-[color:var(--primary-600)]`,\r\n            ],\r\n        },\r\n        lastSelectionColumn: {\r\n            true: [\r\n                tw`border-r-2 border-solid !border-r-[color:var(--primary-600)]`,\r\n            ],\r\n        },\r\n    },\r\n})\r\n\r\nexport const subCellStyles = tv({\r\n    base: [\r\n        tw`h-full w-full`,\r\n        tw`bg-primary-container-variant2`,\r\n        tw`pointer-events-none select-none`,\r\n        tw`border border-action`,\r\n    ],\r\n})\r\n\r\nexport const cellHighlighterStyles = tv({\r\n    base: [\r\n        tw`bg-selection-primary-transparent`,\r\n        tw`pointer-events-none absolute inset-0 `,\r\n    ],\r\n})\r\n","import React, {useRef} from 'react'\r\n\r\nimport type {SelectedCells} from '../types'\r\nimport {calculateCellPage} from '../utils/calculateCellPage'\r\nimport {cellHighlighterStyles, cellStyles, subCellStyles} from './styles'\r\n\r\n\r\ntype CellProps = {\r\n    x: number\r\n    y: number\r\n    editMode?: boolean\r\n    highlightedCellsRange?: SelectedCells\r\n}\r\nexport const Cell: React.FC<CellProps> = React.memo(function Cell({x, y, editMode, highlightedCellsRange}) {\r\n    const cellElem = useRef<HTMLDivElement | null>(null)\r\n    const highlightStatus = calculateCellPage({x, y}, highlightedCellsRange)\r\n    return (\r\n        <div\r\n            ref={cellElem}\r\n            key={`${x}-${y}`}\r\n            className={cellStyles(\r\n                {\r\n                    isFirstRow: y === 0,\r\n                    isFirstColumn: x === 0,\r\n                    isEdit: editMode,\r\n                    firstSelectionRow: highlightStatus.firstRow,\r\n                    firstSelectionColumn: highlightStatus.firstColumn,\r\n                    lastSelectionColumn: highlightStatus.lastColumn,\r\n                    lastSelectionRow: highlightStatus.lastRow,\r\n                })}\r\n            data-cell\r\n            data-x={x}\r\n            data-y={y}\r\n        >\r\n            {editMode && (\r\n                <>\r\n                    {highlightStatus.selected && <div className={cellHighlighterStyles()} />}\r\n                    <div\r\n                        className={ subCellStyles() }\r\n                    />\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n})\r\n","import type {CellPosition, SelectedCells} from '../types'\r\nimport {isSelectedCellsRequired} from '../types'\r\n\r\n\r\nexport const calculateCellPage = (elementPosition: CellPosition, highlightedCellsRange?: SelectedCells): {\r\n    selected: boolean\r\n    firstRow: boolean\r\n    firstColumn: boolean\r\n    lastRow: boolean\r\n    lastColumn: boolean\r\n} => {\r\n    if (!highlightedCellsRange || !isSelectedCellsRequired(highlightedCellsRange)) {\r\n        return {\r\n            selected: false,\r\n            firstRow: false,\r\n            firstColumn: false,\r\n            lastRow: false,\r\n            lastColumn: false,\r\n        }\r\n    }\r\n    let Yselected = false\r\n    let Xselected = false\r\n    let firstRow = false\r\n    let firstColumn = false\r\n    let lastRow = false\r\n    let lastColumn = false\r\n\r\n    const {x, y} = elementPosition\r\n    const {start, end} = highlightedCellsRange\r\n    if (start.y <= y && end.y >= y) {\r\n        Yselected = true\r\n        if (y === start.y) {\r\n            firstRow = true\r\n        }\r\n        if (y === end.y) {\r\n            lastRow = true\r\n        }\r\n    }\r\n\r\n    if (start.x <= x && end.x >= x) {\r\n        Xselected = true\r\n        if (x === start.x) {\r\n            firstColumn = true\r\n        }\r\n        if (x === end.x) {\r\n            lastColumn = true\r\n        }\r\n    }\r\n\r\n    return {\r\n        selected: Yselected && Xselected,\r\n        firstRow: Xselected && firstRow,\r\n        firstColumn: Yselected && firstColumn,\r\n        lastRow: Xselected && lastRow,\r\n        lastColumn: Yselected && lastColumn,\r\n    }\r\n}\r\n","import {tw} from '@servicepattern/ui'\r\nimport {tv} from 'tailwind-variants'\r\n\r\n\r\nexport const gridStyles = tv({\r\n    base: [\r\n        tw`grid `,\r\n        tw`mt-0.5 h-full w-full`,\r\n        tw`relative`,\r\n        tw`rounded-md`,\r\n    ],\r\n})\r\n\r\nexport const gridWrapper = tv({\r\n    base: [\r\n        tw`flex flex-auto flex-col`,\r\n        tw`relative`,\r\n        tw`min-w-0 `,\r\n        tw`bg-secondary-container-variant1`,\r\n    ],\r\n})\r\n\r\nexport const dropZoneHighlightStyles = tv({\r\n    base: [\r\n        tw`absolute left-0 top-0`,\r\n        tw`rounded-md`,\r\n        tw`bg-selection-primary-transparent`,\r\n    ],\r\n})\r\n","import type {FC, ReactNode} from 'react'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport {Cell} from '../cell'\r\nimport type {SelectedCells} from '../types'\r\nimport {dropZoneHighlightStyles, gridStyles, gridWrapper} from './styles'\r\n\r\n\r\ntype GridProps = {\r\n    className?: string\r\n    editMode?: boolean\r\n    rows: number\r\n    columns: number\r\n    children: ReactNode\r\n    highlightedCellsRange?: SelectedCells\r\n}\r\n\r\nexport const Grid: FC<GridProps> = ({rows, columns, className, children, editMode, highlightedCellsRange}) => {\r\n    const rowArray = Array.from(Array(rows).keys())\r\n    const columnArray = Array.from(Array(columns).keys())\r\n\r\n    const gridStyle = {\r\n        gridTemplateColumns: `repeat(${columns}, 1fr)`,\r\n        gridTemplateRows: `repeat(${rows}, 1fr)`,\r\n    }\r\n\r\n    return (\r\n        <div className={gridWrapper()}>\r\n            <div\r\n                className={tcn(className, gridStyles())}\r\n                data-grid\r\n                style={gridStyle}\r\n                data-testid={'wallboard-grid'}\r\n            >\r\n                {rowArray.map(y =>\r\n                    columnArray.map(x => (\r\n                        <Cell\r\n                            highlightedCellsRange={highlightedCellsRange}\r\n                            editMode={editMode}\r\n                            key={x + y}\r\n                            x={x}\r\n                            y={y}\r\n                        />\r\n                    )),\r\n                )}\r\n                <div\r\n                    data-grid-dropzone\r\n                    className={dropZoneHighlightStyles()}\r\n                />\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {isEqual} from 'lodash-es'\r\n\r\nimport type {CellPosition, SelectedCells} from '../../types'\r\n\r\n\r\nexport class SelectedCellsManager {\r\n    minSize: {width: number; height: number}\r\n\r\n    constructor(minSize: {width: number; height: number}) {\r\n        this.minSize = minSize\r\n    }\r\n\r\n    selectedCells: SelectedCells = {start: null, end: null}\r\n\r\n    setSelectedCells(cells: SelectedCells) {\r\n        this.selectedCells = cells\r\n    }\r\n\r\n    addSelectedCell(cell: CellPosition) {\r\n        this.selectedCells.end = cell\r\n    }\r\n\r\n    clearSelectedCells() {\r\n        this.selectedCells = {start: null, end: null}\r\n    }\r\n\r\n    getSelectedCells() {\r\n        return this.selectedCells\r\n    }\r\n\r\n    getSortedSelectedCells() {\r\n        const {start, end} = this.selectedCells\r\n        if (!start || !end) {\r\n            return {start, end}\r\n        }\r\n\r\n        return SelectedCellsManager.sortCells(start, end)\r\n    }\r\n\r\n    static sortCells(start: CellPosition, end: CellPosition) {\r\n        return {\r\n            start: {\r\n                x: Math.min(start.x, end.x),\r\n                y: Math.min(start.y, end.y),\r\n            },\r\n            end: {\r\n                x: Math.max(start.x, end.x),\r\n                y: Math.max(start.y, end.y),\r\n            },\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        const {start, end} = this.selectedCells\r\n\r\n        if (!start || !end) {\r\n            return false\r\n        }\r\n\r\n        if (isEqual(start, end)) {\r\n            return true\r\n        }\r\n\r\n        const selectionIsBigEnough =\r\n            Math.abs(end.x - start.x) >= this.minSize.width - 1 && Math.abs(end.y - start.y) >= this.minSize.height - 1\r\n\r\n        return selectionIsBigEnough\r\n    }\r\n}\r\n","export class CellManager {\r\n    cell: HTMLElement | null\r\n\r\n    constructor(cell: EventTarget | null) {\r\n        if (!CellManager.isValidCellElement(cell)) {\r\n            this.cell = null\r\n            return\r\n        }\r\n\r\n        this.cell = cell\r\n    }\r\n\r\n    static isValidCellElement(cell: EventTarget | null): cell is HTMLElement {\r\n        return cell instanceof HTMLElement && !!cell.dataset.cell && !!cell.dataset.x && !!cell.dataset.y\r\n    }\r\n\r\n    static getCellPosition(cell: EventTarget | null) {\r\n        if (!CellManager.isValidCellElement(cell)) {\r\n            return null\r\n        }\r\n\r\n        const {x, y} = cell.dataset\r\n        return {x: Number(x), y: Number(y)}\r\n    }\r\n\r\n    getPosition() {\r\n        return CellManager.getCellPosition(this.cell)\r\n    }\r\n\r\n    getHTMLElement() {\r\n        return this.cell\r\n    }\r\n}\r\n","export const HIGHLIGHTED_CELL_ATTRIBUTE = 'data-cell-highlighted'\r\n","import React, {useState} from 'react'\r\n\r\nimport type {SelectedCells} from '../../types'\r\nimport {\r\n    type BaseWidgetLocation,\r\n    type BpWallboardSelectedCellsRequired,\r\n    type Size,\r\n    isSelectedCellsRequired,\r\n} from '../../types'\r\nimport {CellManager} from './CellManager'\r\nimport {CellSelectionHighlighter} from './CellSelectionHighlighter'\r\nimport {SelectedCellsManager} from './SelectedCellsManager'\r\n\r\n\r\nconst cellHighlighter = new CellSelectionHighlighter()\r\nconst cellSelection = new SelectedCellsManager({height: 2, width: 2})\r\n\r\nconst initialSelected = {start: null, end: null}\r\nexport const useCellSelectHandler = (\r\n    onSelect: (selectedCells: BpWallboardSelectedCellsRequired) => void,\r\n    hasEnoughRoom: (widget: BaseWidgetLocation) => boolean,\r\n    minCardSize: Size,\r\n) => {\r\n\r\n    const [selectedCellsRange, setSelectedCellsRange] = useState<SelectedCells>(initialSelected)\r\n    const handleMouseDown = React.useCallback((event: MouseEvent) => {\r\n        const cell = new CellManager(event.target)\r\n\r\n        const cellElement = cell.getHTMLElement()\r\n        const cellPosition = cell.getPosition()\r\n\r\n        if (!cellElement || !cellPosition) {\r\n            return\r\n        }\r\n\r\n        const {x, y} = cellPosition\r\n\r\n        cellSelection.setSelectedCells({\r\n            start: {x, y},\r\n            end: {x, y},\r\n        })\r\n\r\n        cellHighlighter.clearHighlightedCells()\r\n        cellHighlighter.highlightCell(cellElement, cellPosition)\r\n        setSelectedCellsRange(cellSelection.getSortedSelectedCells())\r\n    }, [])\r\n\r\n    const handleMouseMove = React.useCallback((event: MouseEvent) => {\r\n        const {start} = cellSelection.getSelectedCells()\r\n        const cell = new CellManager(event.target)\r\n        const newEnd = cell.getPosition()\r\n\r\n        if (!start || !newEnd) {\r\n            return\r\n        }\r\n\r\n        cellSelection.addSelectedCell(newEnd)\r\n        cellHighlighter.clearHighlightedCells()\r\n\r\n        const sortedCells = SelectedCellsManager.sortCells(start, newEnd)\r\n        cellHighlighter.highlightCells(sortedCells.start, sortedCells.end)\r\n        setSelectedCellsRange(cellSelection.getSortedSelectedCells())\r\n    }, [])\r\n\r\n    const handleMouseUp = React.useCallback(() => {\r\n        const selectedCells = cellSelection.getSortedSelectedCells()\r\n\r\n        if (isSelectedCellsRequired(selectedCells) && cellSelection.isValid()) {\r\n            const selectedCellsEnd = {\r\n                x: Math.max(selectedCells.end.x, selectedCells.start.x + minCardSize.width - 1),\r\n                y: Math.max(selectedCells.end.y, selectedCells.start.y + minCardSize.height - 1),\r\n            }\r\n\r\n            if (\r\n                !hasEnoughRoom({\r\n                    x: selectedCells.start.x,\r\n                    y: selectedCells.start.y,\r\n                    width: selectedCellsEnd.x - selectedCells.start.x + 1,\r\n                    height: selectedCellsEnd.y - selectedCells.start.y + 1,\r\n                })\r\n            ) {\r\n                return cleanup()\r\n            }\r\n\r\n            onSelect({...selectedCells, end: selectedCellsEnd})\r\n        }\r\n        cleanup()\r\n\r\n        function cleanup() {\r\n            cellHighlighter.clearHighlightedCells()\r\n            cellSelection.clearSelectedCells()\r\n            setSelectedCellsRange(cellSelection.getSortedSelectedCells())\r\n        }\r\n    }, [minCardSize.width, minCardSize.height, hasEnoughRoom, onSelect])\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener('mousedown', handleMouseDown)\r\n        document.addEventListener('mousemove', handleMouseMove)\r\n        document.addEventListener('mouseup', handleMouseUp)\r\n        return removeAllListeners\r\n\r\n        function removeAllListeners() {\r\n            document.removeEventListener('mousedown', handleMouseDown)\r\n            document.removeEventListener('mousemove', handleMouseMove)\r\n            document.removeEventListener('mouseup', handleMouseUp)\r\n        }\r\n    }, [handleMouseDown, handleMouseMove, handleMouseUp])\r\n\r\n\r\n    return selectedCellsRange\r\n}\r\n","import type {Position} from 'react-rnd'\r\n\r\nimport {HIGHLIGHTED_CELL_ATTRIBUTE} from './consts'\r\n\r\n\r\nexport class CellSelectionHighlighter {\r\n    private highlightedCells = new Set<string>()\r\n\r\n    public highlightCells(start: Position, end: Position) {\r\n        for (let x = start.x; x <= end.x; x++) {\r\n            for (let y = start.y; y <= end.y; y++) {\r\n                const cellId = `${x},${y}`\r\n                if (!this.highlightedCells.has(cellId)) {\r\n                    const cellToHighlight = document.querySelector(`[data-cell][data-x=\"${x}\"][data-y=\"${y}\"]`)\r\n                    if (cellToHighlight) {\r\n                        cellToHighlight.setAttribute(HIGHLIGHTED_CELL_ATTRIBUTE, '')\r\n                        this.highlightedCells.add(cellId)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public highlightCell(cell: HTMLElement, {x, y}: Position) {\r\n        cell.setAttribute(HIGHLIGHTED_CELL_ATTRIBUTE, '')\r\n        this.highlightedCells.add(`${x},${y}`)\r\n    }\r\n\r\n    public clearHighlightedCells() {\r\n        this.highlightedCells.forEach(cellId => {\r\n            const [highlightedX, highlightedY] = cellId.split(',')\r\n            const cellToUnhighlight = document.querySelector(\r\n                `[data-cell][data-x=\"${highlightedX}\"][data-y=\"${highlightedY}\"]`,\r\n            )\r\n            if (cellToUnhighlight) {\r\n                cellToUnhighlight.removeAttribute(HIGHLIGHTED_CELL_ATTRIBUTE)\r\n            }\r\n        })\r\n        this.highlightedCells.clear()\r\n    }\r\n\r\n    public getHighlightedCells() {\r\n        return this.highlightedCells\r\n    }\r\n}\r\n","import React, {useEffect} from 'react'\r\n\r\nimport {useResizeObserver} from '@bpinc/lib-helpers'\r\n\r\nimport type {Size} from '../types'\r\n\r\n\r\nexport const useCellSizeObserver = (\r\n    setCellSize: React.Dispatch<React.SetStateAction<Size>>,\r\n    cellSelector = '[data-cell]',\r\n) => {\r\n    const [cellElement, setCellElement] = React.useState<HTMLElement | null>(null)\r\n\r\n    useEffect(() => {\r\n        const cell = document.querySelector<HTMLElement>(cellSelector)\r\n        setCellElement(cell)\r\n    }, [cellSelector])\r\n\r\n    const resizeObserver = useResizeObserver(cellElement)\r\n\r\n    useEffect(() => {\r\n        const height = resizeObserver?.borderBoxSize[0]?.blockSize // somehow it is border box height, with paddings. was contentRect?.height\r\n        const width = resizeObserver?.borderBoxSize[0]?.inlineSize // somehow it is border box width, with paddings. was  contentRect?.width\r\n\r\n        if (height && width) {\r\n            setCellSize({width, height})\r\n        }\r\n    }, [resizeObserver?.borderBoxSize, setCellSize])\r\n}\r\n","import React from 'react'\r\n\r\nimport {CardEdit, useEnoughRoomChecker} from './card'\r\nimport {Grid} from './grid'\r\nimport {useCellSelectHandler, useCellSizeObserver} from './hooks'\r\nimport type {\r\n    BpWallboardBaseWidget,\r\n    BpWallboardSelectedCellsRequired,\r\n    BpWallboardWidgetResolverEditProps,\r\n    WallboardCommonProps,\r\n} from './types'\r\n\r\n\r\nexport type BpWallboardEditProps<\r\n    Widget extends BpWallboardBaseWidget,\r\n    SubscriptionData extends Record<string, Record<string, unknown>>\r\n> = WallboardCommonProps<Widget, SubscriptionData> &\r\nOmit<\r\n        BpWallboardWidgetResolverEditProps<Widget>,\r\n        'config' | 'cellSize' | 'subscriptionData' | 'Card' | 'widgets' | 'hasSettings' | 'header'\r\n    > & {\r\n    createEmptyWidget: (cells: BpWallboardSelectedCellsRequired) => void\r\n    WidgetResolver: React.FC<BpWallboardWidgetResolverEditProps<Widget>>\r\n}\r\n\r\nexport function BpWallboardEdit<\r\n    Widget extends BpWallboardBaseWidget,\r\n    SubscriptionData extends Record<string, Record<string, unknown>>\r\n>({\r\n    createEmptyWidget,\r\n    gridSize,\r\n    className,\r\n    widgets,\r\n    subscriptionData,\r\n    WidgetResolver,\r\n    setCellSize,\r\n    hideWidgetSettings,\r\n    ...widgetResolverProps\r\n}: BpWallboardEditProps<Widget, SubscriptionData>) {\r\n    const hasEnoughRoom = useEnoughRoomChecker({widgets, gridSize})\r\n    const highlightedCellsRange = useCellSelectHandler(createEmptyWidget, hasEnoughRoom, widgetResolverProps.minCardSize)\r\n    useCellSizeObserver(setCellSize)\r\n\r\n    return (\r\n        <Grid\r\n            editMode\r\n            rows={gridSize.width}\r\n            columns={gridSize.height}\r\n            className={className}\r\n            highlightedCellsRange={highlightedCellsRange}\r\n        >\r\n            {widgets.map(widgetConfig => {\r\n                const hasSettings = !hideWidgetSettings?.(widgetConfig)\r\n\r\n                return (\r\n                    <WidgetResolver\r\n                        Card={CardEdit}\r\n                        hasSettings={hasSettings}\r\n                        widgets={widgets}\r\n                        gridSize={gridSize}\r\n                        key={widgetConfig.id}\r\n                        subscriptionData={subscriptionData?.[widgetConfig.id]}\r\n                        config={widgetConfig}\r\n                        {...widgetResolverProps}\r\n                    />\r\n                )\r\n            })}\r\n        </Grid>\r\n    )\r\n}\r\n","import {Grid} from './grid/'\r\nimport {CardView} from './card'\r\nimport {useCellSizeObserver} from './hooks'\r\nimport type {BpWallboardBaseWidget, BpWallboardWidgetResolverViewProps, WallboardCommonProps} from './types'\r\n\r\n\r\nexport type BpWallboardViewProps<\r\n    Widget extends BpWallboardBaseWidget,\r\n    SubscriptionData extends Record<string, Record<string, unknown>>\r\n> = WallboardCommonProps<Widget, SubscriptionData> & {\r\n    WidgetResolver: React.FC<BpWallboardWidgetResolverViewProps<Widget>>\r\n} & Omit<BpWallboardWidgetResolverViewProps<Widget>, 'config' | 'cellSize' | 'subscriptionData' | 'Card' | 'header'>\r\n\r\nexport function BpWallboardView<\r\n    Widget extends BpWallboardBaseWidget,\r\n    SubscriptionData extends Record<string, Record<string, unknown>>\r\n>({\r\n    gridSize,\r\n    className,\r\n    widgets,\r\n    subscriptionData,\r\n    WidgetResolver,\r\n    setCellSize,\r\n    ...widgetResolverProps\r\n}: BpWallboardViewProps<Widget, SubscriptionData>) {\r\n    useCellSizeObserver(setCellSize)\r\n\r\n    return (\r\n        <Grid\r\n            rows={gridSize.width}\r\n            columns={gridSize.height}\r\n            className={className}\r\n        >\r\n            {widgets.map(widgetConfig => {\r\n                return (\r\n                    <WidgetResolver\r\n                        Card={CardView}\r\n                        key={widgetConfig.id}\r\n                        subscriptionData={subscriptionData?.[widgetConfig.id]}\r\n                        config={widgetConfig}\r\n                        {...widgetResolverProps}\r\n                    />\r\n                )\r\n            })}\r\n        </Grid>\r\n    )\r\n}\r\n","import {BpWallboard as BpWallboardDefault} from './BpWallboard'\r\nimport {BpWallboardEdit} from './BpWallboardEdit'\r\nimport {BpWallboardView} from './BpWallboardView'\r\n\r\n\r\nexport type {BpWallboardCardEditProps, BpWallboardCardViewProps} from './card/'\r\nexport type {\r\n    BpWallboardBaseWidget,\r\n    BpWallboardSelectedCellsRequired,\r\n    BpWallboardWidgetResolverEditProps,\r\n    BpWallboardWidgetResolverViewProps,\r\n} from './types'\r\n\r\nconst BpWallboard = Object.assign(BpWallboardDefault, {Edit: BpWallboardEdit, View: BpWallboardView})\r\n\r\nexport {BpWallboard}\r\n","import React from 'react'\r\n\r\nimport type {BpWallboardEditProps} from './BpWallboardEdit'\r\nimport {BpWallboardEdit} from './BpWallboardEdit'\r\nimport type {BpWallboardViewProps} from './BpWallboardView'\r\nimport {BpWallboardView} from './BpWallboardView'\r\nimport type {\r\n    BpWallboardBaseWidget,\r\n    BpWallboardWidgetResolverEditProps,\r\n    BpWallboardWidgetResolverViewProps,\r\n} from './types'\r\n\r\n\r\nexport type BpWallboardProps<\r\n    Widget extends BpWallboardBaseWidget,\r\n    SubscriptionData extends Record<string, Record<string, unknown>>\r\n> = Omit<BpWallboardViewProps<Widget, SubscriptionData>, 'WidgetResolver'> &\r\nOmit<BpWallboardEditProps<Widget, SubscriptionData>, 'WidgetResolver'> & {\r\n    editMode: boolean\r\n    WidgetResolverEdit: React.FC<BpWallboardWidgetResolverEditProps<Widget>>\r\n    WidgetResolverView: React.FC<BpWallboardWidgetResolverViewProps<Widget>>\r\n}\r\n\r\nexport function BpWallboard<\r\n    Widget extends BpWallboardBaseWidget,\r\n    SubscriptionData extends Record<string, Record<string, unknown>>\r\n>({WidgetResolverView, WidgetResolverEdit, ...props}: BpWallboardProps<Widget, SubscriptionData>) {\r\n    const {editMode} = props\r\n\r\n    if (editMode) {\r\n        return (\r\n            <BpWallboardEdit\r\n                {...props}\r\n                WidgetResolver={WidgetResolverEdit}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <BpWallboardView\r\n            {...props}\r\n            WidgetResolver={WidgetResolverView}\r\n        />\r\n    )\r\n}\r\n","import {tw} from '@servicepattern/ui'\r\nimport {tv} from 'tailwind-variants'\r\n\r\n\r\nexport const optionContainerStyles = tv({\r\n    base: [\r\n        tw`group/option`,\r\n        tw`flex flex-1 flex-col items-center justify-start gap-0.5`,\r\n        tw`min-h-[110px] rounded-xs border p-2 border-disabled`,\r\n        tw`cursor-pointer outline-none`,\r\n        tw`focus-visible:border-primary`,\r\n    ],\r\n    variants: {\r\n        selected: {\r\n            true: [\r\n                tw`border-2 border-primary p-[7px]`,\r\n            ],\r\n        },\r\n    },\r\n})\r\n\r\nexport const previewElemStyles = tv({\r\n    base: [\r\n        tw`h-16 w-16 group-hover/option:svg-color-[color:var(--primary-600)] group-hover/option:svg-color-secondary-[color:var(--primary-100)]`,\r\n        tw`group-focus-visible/option:svg-color-[color:var(--primary-600)] group-focus-visible/option:svg-color-secondary-[color:var(--primary-100)]`,\r\n    ],\r\n    variants: {\r\n        selected: {\r\n            true: [\r\n                tw`svg-color-[color:var(--primary-600)] svg-color-secondary-[color:var(--primary-100)]`,\r\n            ],\r\n        },\r\n    },\r\n})\r\n","var _path, _path2, _rect, _rect2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgBreakTime = function SvgBreakTime(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 65,\n    viewBox: \"0 0 64 65\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 1.389a31.111 31.111 0 1 1-15.995 57.796l4.767-7.952A21.84 21.84 0 1 0 32 10.66V1.389Z\",\n    fill: \"var(--tw-svg-color, #8E92A4)\",\n    stroke: \"var(--tw-svg-color, #E3E4E8)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.317 59.369a31.11 31.11 0 0 1 15.731-57.98l-.014 9.271a21.84 21.84 0 0 0-11.043 40.702l-4.674 8.007Z\",\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 17.777,\n    y: 28.055,\n    width: 27,\n    height: 4,\n    rx: 2,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 20.277,\n    y: 34.333,\n    width: 22,\n    height: 3,\n    rx: 1.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgBreakTime);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"3a3108a90ed098fea020ef469eadc986.svg\";","var _rect, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _rect17, _rect18;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgMyServices = function SvgMyServices(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 65,\n    viewBox: \"0 0 64 65\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4.5,\n    y: 8.5,\n    width: 15,\n    height: 3,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color, #8E92A4)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4.5,\n    y: 15.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4.5,\n    y: 24.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4.5,\n    y: 33.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4.5,\n    y: 42.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4.5,\n    y: 51.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 24.5,\n    y: 8.5,\n    width: 15,\n    height: 3,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color, #8E92A4)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 24.5,\n    y: 15.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 24.5,\n    y: 24.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 24.5,\n    y: 33.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 24.5,\n    y: 42.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 24.5,\n    y: 51.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 44.5,\n    y: 8.5,\n    width: 15,\n    height: 3,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color, #8E92A4)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 44.5,\n    y: 15.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 44.5,\n    y: 24.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 44.5,\n    y: 33.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 44.5,\n    y: 42.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 44.5,\n    y: 51.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgMyServices);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"4ed104e3b56924e2e9c4cf1e380dcc5b.svg\";","var _rect, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgMyStats = function SvgMyStats(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 65,\n    viewBox: \"0 0 64 65\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 8,\n    width: 18,\n    height: 2,\n    rx: 1,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 11.778,\n    width: 22,\n    height: 8,\n    rx: 2,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 35.5,\n    y: 8,\n    width: 18,\n    height: 2,\n    rx: 1,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 35.5,\n    y: 11.778,\n    width: 14,\n    height: 8,\n    rx: 2,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 26,\n    width: 12,\n    height: 2,\n    rx: 1,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 29.778,\n    width: 26.5,\n    height: 8,\n    rx: 2,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 35.5,\n    y: 26,\n    width: 23,\n    height: 2,\n    rx: 1,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 35.5,\n    y: 29.778,\n    width: 22,\n    height: 8,\n    rx: 2,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 44,\n    width: 21,\n    height: 2,\n    rx: 1,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 2,\n    y: 47.778,\n    width: 15,\n    height: 8,\n    rx: 2,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 35.5,\n    y: 44,\n    width: 9,\n    height: 2,\n    rx: 1,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 35.5,\n    y: 47.778,\n    width: 26.5,\n    height: 8,\n    rx: 2,\n    fill: \"var(--tw-svg-color, #EFF0F3)\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgMyStats);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"27434df51795a9d7d004187235b2f2bb.svg\";","var _rect, _rect2, _rect3, _rect4, _rect5, _rect6, _rect7, _rect8, _rect9, _rect10, _rect11, _rect12, _rect13, _rect14, _rect15, _rect16, _rect17, _rect18, _rect19, _rect20, _rect21, _rect22, _rect23, _rect24;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgMyTeam = function SvgMyTeam(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 65,\n    viewBox: \"0 0 64 65\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.5,\n    y: 8.5,\n    width: 15,\n    height: 3,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color, #8E92A4)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.5,\n    y: 15.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.5,\n    y: 24.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.5,\n    y: 33.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.5,\n    y: 42.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.5,\n    y: 51.5,\n    width: 15,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 25.5,\n    y: 8.5,\n    width: 7,\n    height: 3,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color, #8E92A4)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 26.5,\n    y: 15.5,\n    width: 5,\n    height: 5,\n    rx: 2.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 26.5,\n    y: 24.5,\n    width: 5,\n    height: 5,\n    rx: 2.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 26.5,\n    y: 33.5,\n    width: 5,\n    height: 5,\n    rx: 2.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 26.5,\n    y: 42.5,\n    width: 5,\n    height: 5,\n    rx: 2.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 26.5,\n    y: 51.5,\n    width: 5,\n    height: 5,\n    rx: 2.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 36.5,\n    y: 8.5,\n    width: 10,\n    height: 3,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color, #8E92A4)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 36.5,\n    y: 15.5,\n    width: 10,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 36.5,\n    y: 24.5,\n    width: 10,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 36.5,\n    y: 33.5,\n    width: 10,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 36.5,\n    y: 42.5,\n    width: 10,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 36.5,\n    y: 51.5,\n    width: 10,\n    height: 5,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 50.5,\n    y: 8.5,\n    width: 7,\n    height: 3,\n    rx: 0.5,\n    fill: \"var(--tw-svg-color, #8E92A4)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect20 || (_rect20 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 51.5,\n    y: 15.5,\n    width: 5,\n    height: 5,\n    rx: 2.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect21 || (_rect21 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 51.5,\n    y: 24.5,\n    width: 5,\n    height: 5,\n    rx: 2.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect22 || (_rect22 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 51.5,\n    y: 33.5,\n    width: 5,\n    height: 5,\n    rx: 2.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect23 || (_rect23 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 51.5,\n    y: 42.5,\n    width: 5,\n    height: 5,\n    rx: 2.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })), _rect24 || (_rect24 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 51.5,\n    y: 51.5,\n    width: 5,\n    height: 5,\n    rx: 2.5,\n    fill: \"var(--tw-svg-color-secondary, #EFF0F3)\",\n    stroke: \"var(--tw-svg-color-secondary, #E3E4E8)\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgMyTeam);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"b326196211971155817f05404c4e84e7.svg\";","import {useCallback} from 'react'\r\n\r\nimport type {AgentHomeScreenWidgetType} from '@bpinc/home-page-state-types'\r\n\r\nimport {optionContainerStyles, previewElemStyles} from './styles'\r\nimport {BreakTimePreview, MyServicesPreview, MyStatsPreview, MyTeamPreview} from './widget-previews-icons'\r\n\r\n\r\ntype OptionProps = {\r\n    type: AgentHomeScreenWidgetType\r\n    title: string\r\n    id: string\r\n    selected: boolean\r\n    onSelect: (id: string) => void\r\n}\r\n\r\nexport const NewWidgetOption: React.FC<OptionProps> = ({type, title, selected, onSelect, id}) => {\r\n    const handleSelect = useCallback(() => {\r\n        onSelect(id)\r\n    }, [onSelect, id])\r\n    return (\r\n        <button className={optionContainerStyles({selected})} onClick={handleSelect}>\r\n            <div className={previewElemStyles({selected})}>\r\n                <WidgetPreview type={type} />\r\n            </div>\r\n            <div className=\"flex flex-auto items-center text-center body\">\r\n                {title}\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport const WidgetPreview: React.FC<{type: AgentHomeScreenWidgetType}> = ({type}) => {\r\n    switch (type) {\r\n        case 'BREAK_TIME_REMAINING':\r\n            return <BreakTimePreview />\r\n        case 'MY_TEAM':\r\n            return <MyTeamPreview />\r\n        case 'MY_SERVICES':\r\n            return <MyServicesPreview />\r\n        case 'MY_STATS':\r\n            return <MyStatsPreview />\r\n        default:\r\n            return <div />\r\n    }\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useMemo, useState} from 'react'\r\nimport {Button} from '@servicepattern/ui'\r\nimport uuid from 'uuid/v4'\r\n\r\nimport {Modal} from '@bpinc/lib-jskit-ui'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport type {AgentWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\nimport type {BpWallboardSelectedCellsRequired} from '../../../bp-wallboard'\r\nimport {NewWidgetOption} from './NewWidgetOption'\r\nimport {useGetDefaultWidgetsConfig} from './useGetDefaultWidgetsConfig'\r\n\r\n\r\ntype CreateWidgetModalProps = CommonModalProps & {\r\n    selectedCells: BpWallboardSelectedCellsRequired\r\n    addWidget: (widget: AgentWidget) => void\r\n}\r\n\r\nexport const CreateWidgetModal: FC<CreateWidgetModalProps> = ({\r\n    onClose,\r\n    addWidget,\r\n    selectedCells,\r\n    ...rest\r\n}) => {\r\n    const t = useLocalizationState('t')\r\n    const getDefaultWidgetsConfig = useGetDefaultWidgetsConfig()\r\n    const widgetsToSelect = useMemo(() => getDefaultWidgetsConfig(), [getDefaultWidgetsConfig])\r\n\r\n    const options = useMemo(() => {\r\n        return widgetsToSelect.map(widget => ({\r\n            text: widget.title,\r\n            value: widget.id,\r\n        }))\r\n    }, [widgetsToSelect])\r\n\r\n    const [selectedWidgetId, setSelectedWidgetId] = useState(options[0].value)\r\n\r\n    const handleSave = () => {\r\n        const selectedWidget = widgetsToSelect.find(widget => widget.id === selectedWidgetId)\r\n        assertDefined(selectedWidget)\r\n        addWidget({\r\n            ...selectedWidget,\r\n            x: selectedCells.start.x,\r\n            y: selectedCells.start.y,\r\n            width: selectedCells.end.x - selectedCells.start.x + 1,\r\n            height: selectedCells.end.y - selectedCells.start.y + 1,\r\n            id: uuid(),\r\n        })\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <Modal className=\"max-w-[560px]\" onClose={onClose} {...rest}>\r\n            <Modal.Header className=\"heading-s\">{t.HOME_SCREEN.add_widget()}</Modal.Header>\r\n            <Modal.Content>\r\n                <div className=\"flex grow gap-6\">\r\n                    {\r\n                        widgetsToSelect.map(({id, title, type}) => {\r\n                            return (\r\n                                <NewWidgetOption\r\n                                    selected={id === selectedWidgetId}\r\n                                    onSelect={setSelectedWidgetId}\r\n                                    id={id}\r\n                                    key={id}\r\n                                    title={title}\r\n                                    type={type}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={() => onClose()} variant=\"neutral\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonCancel()}\r\n                </Button>\r\n                <Button onClick={handleSave} variant=\"primary\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.button_save()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useMetricsNames} from '@bpinc/lib-helpers-ui'\r\nimport {uuid} from '@bpinc/lib-uuid'\r\nimport type {\r\n    AgentWidget,\r\n    AgentWidgetConfigBreakTime,\r\n    AgentWidgetConfigMyServices,\r\n    AgentWidgetConfigMyStats,\r\n} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport function useGetDefaultWidgetsConfig() {\r\n    const t = useLocalizationState('t')\r\n    const metricsNames = useMetricsNames()\r\n\r\n    return useCallback(() => [\r\n        {\r\n            id: uuid(),\r\n            x: 0,\r\n            y: 0,\r\n            width: 3,\r\n            height: 4,\r\n            type: 'BREAK_TIME_REMAINING' as const,\r\n            title: t.HOME_PAGE_AGENT_WIDGETS.my_break_time(),\r\n        } satisfies AgentWidgetConfigBreakTime,\r\n        {\r\n            id: uuid(),\r\n            x: 3,\r\n            y: 0,\r\n            width: 3,\r\n            height: 4,\r\n            type: 'MY_STATS' as const,\r\n            title: t.HOME_PAGE_AGENT_WIDGETS.my_stats(),\r\n            fields: [\r\n                {\r\n                    id: '1',\r\n                    name: 'inCallsHandledPerDay',\r\n                    title: metricsNames['in_calls_handled_per_day'].general,\r\n                }, {\r\n                    id: '2',\r\n                    name: 'inCallsRejectedPerDay',\r\n                    title: metricsNames['in_calls_rejected_per_day'].general,\r\n                }, {\r\n                    id: '3',\r\n                    name: 'outCallsHandledPerDay',\r\n                    title: metricsNames['out_calls_handled_per_day'].general,\r\n                }, {\r\n                    id: '4',\r\n                    name: 'callsAverageHandlingTimePerDay',\r\n                    title: metricsNames['calls_average_handling_time_per_day'].general,\r\n                }, {\r\n                    id: '5',\r\n                    name: 'inCallsDurationAveragePerDay',\r\n                    title: metricsNames['in_calls_duration_average_per_day'].general,\r\n                },\r\n            ],\r\n        } satisfies AgentWidgetConfigMyStats,\r\n        {\r\n            id: uuid(),\r\n            x: 0,\r\n            y: 4,\r\n            width: 6,\r\n            height: 8,\r\n            type: 'MY_SERVICES' as const,\r\n            title: t.HOME_PAGE_AGENT_WIDGETS.my_services(),\r\n            maxItemsToShow: 8,\r\n            columnTitleEnabled: true,\r\n            fields: [\r\n                {\r\n                    id: '1',\r\n                    name: 'name',\r\n                    title: metricsNames['name'].general,\r\n                    sort: 'ASC',\r\n                }, {\r\n                    id: '2',\r\n                    name: 'inMaxWaitTime',\r\n                    title: metricsNames['in_max_wait_time'].general,\r\n                }, {\r\n                    id: '3',\r\n                    name: 'inCallsWaiting',\r\n                    title: metricsNames['in_calls_waiting'].general,\r\n                }, {\r\n                    id: '4',\r\n                    name: 'agentsReady',\r\n                    title: metricsNames['agents_ready'].general,\r\n                }, {\r\n                    id: '5',\r\n                    name: 'serviceLevel',\r\n                    title: metricsNames['service_level'].general,\r\n                },\r\n            ],\r\n        } satisfies AgentWidgetConfigMyServices,\r\n        {\r\n            id: uuid(),\r\n            x: 6,\r\n            y: 0,\r\n            width: 6,\r\n            height: 12,\r\n            type: 'MY_TEAM' as const,\r\n            title: t.HOME_PAGE_AGENT_WIDGETS.my_team(),\r\n            maxItemsToShow: 8,\r\n            columnTitleEnabled: true,\r\n            userDummyNames: false,\r\n            fields: [\r\n                {\r\n                    id: '1',\r\n                    name: 'name',\r\n                    title: metricsNames['name'].general,\r\n                    sort: 'ASC',\r\n                }, {\r\n                    id: '2',\r\n                    name: 'acdState',\r\n                    title: metricsNames['acd_state'].general,\r\n                }, {\r\n                    id: '3',\r\n                    name: 'reason',\r\n                    title: metricsNames['reason'].general,\r\n                }, {\r\n                    id: '4',\r\n                    name: 'stateDuration',\r\n                    title: metricsNames['state_duration'].general,\r\n                }, {\r\n                    id: '5',\r\n                    name: 'acdNextState',\r\n                    title: metricsNames['acd_next_state'].general,\r\n                }, {\r\n                    id: '6',\r\n                    name: 'nextReason',\r\n                    title: metricsNames['next_reason'].general,\r\n                },\r\n            ],\r\n        } satisfies AgentWidget,\r\n    ], [metricsNames, t.HOME_PAGE_AGENT_WIDGETS])\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useCallback, useMemo, useState} from 'react'\r\nimport {Button} from '@servicepattern/ui'\r\n\r\nimport {CheckboxWithLabel, Modal} from '@bpinc/lib-jskit-ui'\r\nimport type {AgentWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\nimport {isFlippingWidget} from '../../../../helpers'\r\n\r\n\r\ntype FlippingWidgetModalProps = CommonModalProps & {\r\n    widget: AgentWidget\r\n    allWidgets: AgentWidget[]\r\n    onSave: (widget: AgentWidget, flippingWidgetIds: string[]) => void\r\n}\r\n\r\nexport const FlippingWidgetModal: FC<FlippingWidgetModalProps> = ({\r\n    onClose,\r\n    widget,\r\n    allWidgets,\r\n    onSave,\r\n    ...restProps\r\n}) => {\r\n    const isFlipping = isFlippingWidget(widget)\r\n    const initialSelectedWidgets = useMemo(() => isFlipping ? widget.widgets : [widget], [isFlipping, widget])\r\n\r\n    const [checkedWidgets, setCheckedWidgets] = useState<string[]>(initialSelectedWidgets.map(({id}) => id))\r\n\r\n    const {t} = useLocalizationState()\r\n\r\n    const handleSave = useCallback(() => {\r\n        onSave(widget, checkedWidgets)\r\n        onClose()\r\n    }, [onSave, widget, checkedWidgets, onClose])\r\n\r\n    const availableWidgets = useMemo(() => {\r\n        /** Exclude other flipping widgets from available list */\r\n        const availableToFlipWidgets = allWidgets\r\n            .filter(({type, id}) => type !== 'FLIPPING' && id !== widget.id)\r\n        return [...availableToFlipWidgets, ...initialSelectedWidgets]\r\n    }, [allWidgets, initialSelectedWidgets, widget.id])\r\n\r\n    return (\r\n        <Modal className=\"!w-[380px]\" onClose={onClose} {...restProps}>\r\n            <Modal.Header>{t.HOME_SCREEN.combine_widgets()}</Modal.Header>\r\n            <Modal.Content>\r\n                <p className=\"mb-2 body\">\r\n                    {t.HOME_SCREEN.select_flipping_widgets()}\r\n                </p>\r\n                {availableWidgets.map(currWidget => {\r\n                    return (\r\n                        <div className=\"mt-4\" key={currWidget.id}>\r\n                            <CheckboxWithLabel\r\n                                size=\"24\"\r\n                                onCheckedChange={checked => {\r\n                                    const newCheckedWidgets = checked\r\n                                        ? [...checkedWidgets, currWidget.id]\r\n                                        : checkedWidgets.filter(\r\n                                            id => id !== currWidget.id,\r\n                                        )\r\n                                    setCheckedWidgets(newCheckedWidgets)\r\n                                }}\r\n                                checked={checkedWidgets.includes(currWidget.id)}\r\n                                name={currWidget.id}\r\n                                label={currWidget.title}\r\n                                labelClassName=\"!font-normal\"\r\n                            />\r\n                            {!checkedWidgets.includes(currWidget.id) && initialSelectedWidgets.some(w => w.id === currWidget.id) &&\r\n                              <div className=\"ml-7 mt-1 text-on-error\">{t.HOME_SCREEN.widget_will_be_removed()}</div>\r\n                            }\r\n                        </div>\r\n                    )\r\n                })}\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={() => onClose()} variant=\"neutral\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonClose()}\r\n                </Button>\r\n                <Button onClick={handleSave} variant=\"primary\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.button_save()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {atom, createStore, Provider} from 'jotai'\r\n\r\nimport type {FCWithChildren} from '@bpinc/lib-types-helpers'\r\n\r\n\r\nexport const hiddenAreaAtom = atom(false)\r\n\r\nexport const HidingAreaRoot: FCWithChildren = ({children}) => {\r\n    const [store] = useState(() => {\r\n        const s = createStore()\r\n        s.set(hiddenAreaAtom, false)\r\n        return s\r\n    })\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            {children}\r\n        </Provider>\r\n    )\r\n}\r\n\r\n","import {hiddenAreaAtom, HidingAreaRoot} from './HidingAreaRoot'\r\nimport {HidingAreaTarget} from './HidingAreaTarget'\r\n\r\n\r\nconst HidingArea = {\r\n    Root: HidingAreaRoot,\r\n    Target: HidingAreaTarget,\r\n    hidden: hiddenAreaAtom,\r\n}\r\n\r\nexport {HidingArea}\r\n","import React from 'react'\r\nimport {AnimatePresence, motion} from 'framer-motion'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport type {FCWithChildren} from '@bpinc/lib-types-helpers'\r\n\r\nimport {hiddenAreaAtom} from './HidingAreaRoot'\r\n\r\n\r\nexport const HidingAreaTarget: FCWithChildren = ({children}) => {\r\n    const hidden = useAtomValue(hiddenAreaAtom)\r\n\r\n    return (\r\n        <AnimatePresence initial={false}>\r\n            {!hidden && (\r\n                <motion.div\r\n                    key=\"content\"\r\n                    initial={{\r\n                        height: 0,\r\n                        opacity: 0,\r\n                    }}\r\n                    animate={{\r\n                        height: 'auto',\r\n                        opacity: 1,\r\n                        transition: {\r\n                            height: {\r\n                                duration: 0.4,\r\n                            },\r\n                            opacity: {\r\n                                duration: 0.25,\r\n                                delay: 0.15,\r\n                            },\r\n                        },\r\n                    }}\r\n                    exit={{\r\n                        height: 0,\r\n                        opacity: 0,\r\n                        transition: {\r\n                            height: {\r\n                                duration: 0.4,\r\n                            },\r\n                            opacity: {\r\n                                duration: 0.25,\r\n                            },\r\n                        },\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            )}\r\n        </AnimatePresence>\r\n    )\r\n}\r\n\r\n","import type {HTMLAttributes, Ref} from 'react'\r\nimport React from 'react'\r\nimport type {SyntheticListenerMap} from '@dnd-kit/core/dist/hooks/utilities'\r\n\r\nimport {Checkbox, IconDrag16} from '@bpinc/lib-jskit-ui'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\n\r\ntype MetricRowViewProps = HTMLAttributes<HTMLDivElement> & {\r\n    selected: boolean\r\n    text: string\r\n    dragElemRef?: Ref<HTMLDivElement>\r\n    dragListeners?: SyntheticListenerMap | undefined\r\n    isDragging?: boolean\r\n}\r\n\r\nexport const MetricView = React.forwardRef<HTMLDivElement, MetricRowViewProps>(({\r\n    dragElemRef,\r\n    dragListeners,\r\n    isDragging,\r\n    selected,\r\n    text,\r\n    ...restProps\r\n}, ref) => {\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={tcn(\r\n                'z-0 flex cursor-pointer items-center gap-2 rounded border p-2 bg-primary-background border-default', {\r\n                    'opacity-0': isDragging,\r\n                },\r\n            )}\r\n            aria-label={text}\r\n            {...restProps}\r\n        >\r\n            <div\r\n                ref={dragElemRef}\r\n                {...dragListeners}\r\n            >\r\n                <IconDrag16 />\r\n            </div>\r\n            <Checkbox checked={selected} tabIndex={-1} />\r\n            <p className=\"caption-s\">{text}</p>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport {defaultAnimateLayoutChanges, useSortable} from '@dnd-kit/sortable'\r\nimport {CSS} from '@dnd-kit/utilities'\r\n\r\nimport {MetricView} from './MetricView'\r\n\r\n\r\ntype SortableMetricViewProps<T extends string> = {\r\n    id: T\r\n    selected: boolean\r\n    onSelect: (id: T) => void\r\n    text: string\r\n}\r\n\r\nexport const SortableMetricView = <T extends string>({id, selected, onSelect, text}: SortableMetricViewProps<T>) => {\r\n    const {\r\n        attributes,\r\n        listeners,\r\n        setNodeRef,\r\n        transform,\r\n        transition,\r\n        setActivatorNodeRef,\r\n        isDragging,\r\n    } = useSortable({\r\n        id,\r\n        animateLayoutChanges: defaultAnimateLayoutChanges,\r\n    })\r\n\r\n    const style = {\r\n        transform: CSS.Transform.toString(transform),\r\n        transition,\r\n    }\r\n\r\n    return (\r\n        <MetricView\r\n            ref={setNodeRef}\r\n            style={style}\r\n            selected={selected}\r\n            onClick={() => onSelect(id)}\r\n            onKeyDown={e => {\r\n                if ([' ', 'Enter'].includes(e.key)) {\r\n                    e.preventDefault()\r\n                    onSelect(id)\r\n                }\r\n            }}\r\n            text={text}\r\n            {...attributes}\r\n            dragElemRef={setActivatorNodeRef}\r\n            dragListeners={listeners}\r\n            isDragging={isDragging}\r\n        />\r\n    )\r\n}\r\n","import React, {useDeferredValue, useMemo, useState} from 'react'\r\nimport {type UniqueIdentifier, DndContext, DragOverlay} from '@dnd-kit/core'\r\nimport {arrayMove, SortableContext, verticalListSortingStrategy} from '@dnd-kit/sortable'\r\nimport {Button} from '@servicepattern/ui'\r\nimport type {PrimitiveAtom} from 'jotai'\r\nimport {useAtom} from 'jotai'\r\n\r\nimport {IconExpand24, SearchField, ToggleWithLabel} from '@bpinc/lib-jskit-ui'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {MetricView} from './MetricView'\r\nimport {SortableMetricView} from './SortableMetricView'\r\n\r\n\r\nexport type MetricSelectionOption<T extends string> = {\r\n    value: T\r\n    text: string\r\n}\r\n\r\ntype MetricSelectionProps<T extends string> = {\r\n    options: MetricSelectionOption<T>[]\r\n    selected: T[]\r\n    onChange: (value: T[]) => void\r\n    className?: string\r\n    expanded: PrimitiveAtom<boolean>\r\n}\r\n\r\nexport const MetricSelection = <T extends string>({\r\n    options,\r\n    selected,\r\n    onChange,\r\n    className,\r\n    expanded,\r\n}: MetricSelectionProps<T>) => {\r\n    const {HOME_SCREEN} = useLocalizationState('t')\r\n    const [sortedOptions, setSortedOptions] = useState(() => options\r\n        .toSorted((a, b) => {\r\n            const aIndex = selected.indexOf(a.value)\r\n            const bIndex = selected.indexOf(b.value)\r\n            if (aIndex === -1 && bIndex !== -1) {\r\n                return 1\r\n            }\r\n            if (bIndex === - 1 && aIndex !== -1) {\r\n                return -1\r\n            }\r\n            return aIndex - bIndex\r\n        })\r\n        .map(o => ({\r\n            id: o.value,\r\n            text: o.text,\r\n        })),\r\n    )\r\n\r\n    const [isExpanded, setIsExpanded] = useAtom(expanded)\r\n    const [showSelectedOnly, setShowSelectedOnly] = useState(false)\r\n    const [search, setSearch] = useState('')\r\n    const deferredSearch = useDeferredValue(search)\r\n    const [activeId, setActiveId] = useState<UniqueIdentifier | null>(null)\r\n\r\n    const visibleItems = useMemo(() =>\r\n        sortedOptions\r\n            .filter(o => o.text.toLowerCase().includes(deferredSearch.toLowerCase()))\r\n            .filter(o => showSelectedOnly ? selected.includes(o.id) : true)\r\n            .map(o => ({\r\n                ...o,\r\n                selected: selected.includes(o.id),\r\n            }))\r\n    , [deferredSearch, sortedOptions, selected, showSelectedOnly])\r\n    const activeItem = useMemo(() => visibleItems.find(i => i.id === activeId), [activeId, visibleItems])\r\n\r\n    const allSelected = useMemo(() => options.every(o => selected.includes(o.value)), [options, selected])\r\n\r\n    const onSelectChange = (value: T) => {\r\n        if (selected.includes(value)) {\r\n            onChange(selected.filter(s => s !== value))\r\n        } else {\r\n            onChange([...selected, value])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={tcn('relative -m-0.5 flex flex-col gap-2 overflow-hidden p-0.5 bg-primary-background', className)}\r\n            data-expanded={isExpanded}\r\n        >\r\n            <div className=\"flex items-center gap-4\">\r\n                <SearchField\r\n                    layoutClassName=\"flex-1\"\r\n                    placeholder={HOME_SCREEN.search_for_metrics()}\r\n                    value={search}\r\n                    onChange={e => setSearch(e.target.value)}\r\n                />\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    onClick={() => setIsExpanded(e => !e)}\r\n                    className={tcn('flex size-8 shrink-0 items-center justify-center', {\r\n                        'icon-reversed hover:icon-primary focus-visible:icon-primary': isExpanded,\r\n                        'bg-inverse-container-variant1': isExpanded,\r\n                    })}\r\n                    icon={<IconExpand24 />}\r\n                />\r\n            </div>\r\n            <div className=\"flex flex-col gap-2 overflow-hidden\">\r\n                <div className=\"flex items-center justify-between gap-4\">\r\n                    <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                            onChange(allSelected ? [] : options.map(o => o.value))\r\n                        }}\r\n                    >\r\n                        {allSelected ? HOME_SCREEN.deselect_all() : HOME_SCREEN.select_all()}\r\n                    </Button>\r\n                    <ToggleWithLabel\r\n                        checked={showSelectedOnly}\r\n                        labelClassName=\"caption-s font-normal\"\r\n                        onCheckedChange={() => setShowSelectedOnly(s => !s)}\r\n                        label={HOME_SCREEN.show_selected_only()}\r\n                    />\r\n                </div>\r\n                <div className=\"scrollbar-on-hover overflow-y-auto\">\r\n                    <div className=\"flex flex-col gap-2\">\r\n                        <DndContext\r\n                            onDragStart={({active}) => {\r\n                                if (!active) {\r\n                                    return\r\n                                }\r\n\r\n                                setActiveId(active.id)\r\n                            }}\r\n                            onDragEnd={({active, over}) => {\r\n                                setActiveId(null)\r\n                                if (!over) {\r\n                                    return\r\n                                }\r\n                                const activeIndex = sortedOptions.findIndex(o => o.id === active.id)\r\n                                const overIndex = sortedOptions.findIndex(o => o.id === over.id)\r\n                                if (activeIndex === overIndex) {\r\n                                    return\r\n                                }\r\n\r\n                                const newSortedOptions = arrayMove(sortedOptions, activeIndex, overIndex)\r\n                                setSortedOptions(newSortedOptions)\r\n                                //Update order of selected metrics\r\n                                onChange(\r\n                                    newSortedOptions\r\n                                        .filter(o => selected.includes(o.id))\r\n                                        .map(o => o.id),\r\n                                )\r\n                            }}\r\n                            onDragCancel={() => setActiveId(null)}\r\n                        >\r\n                            <SortableContext items={sortedOptions} id=\"id\" strategy={verticalListSortingStrategy}>\r\n                                {visibleItems.map(item => (\r\n                                    <SortableMetricView\r\n                                        key={item.id}\r\n                                        id={item.id}\r\n                                        selected={item.selected}\r\n                                        text={item.text}\r\n                                        onSelect={onSelectChange}\r\n                                    />\r\n                                ))}\r\n                            </SortableContext>\r\n                            <DragOverlay>\r\n                                {activeItem ? <MetricView text={activeItem.text} selected={activeItem.selected} /> : null}\r\n                            </DragOverlay>\r\n                        </DndContext>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import type {Events, StateConnector} from '@bpinc/lib-typed-events'\r\nimport {asyncEvent, event} from '@bpinc/lib-typed-events'\r\nimport type {HomePageConfig, HomePageNewConfig, TeamOwners} from '@bpinc/lib-widgets-urls'\r\n\r\nimport type {HomePageAgentConfig, HomePageStateData} from './types'\r\n\r\n\r\nexport const homePageStateTrackerEvents = {\r\n    onInitialState: event<[state: HomePageStateData]>(),\r\n    onChange: event<[stateUpdate: Partial<HomePageStateData>]>(),\r\n} satisfies Events\r\n\r\nexport const homePageStateControlEvents = {\r\n    getConfigs: asyncEvent(),\r\n    createConfig: asyncEvent<[newPage: HomePageNewConfig, result: HomePageConfig]>(),\r\n    duplicateConfig: asyncEvent<[configId: string, result: HomePageConfig]>(),\r\n    deleteConfig: asyncEvent<[configId: string, result: void]>(),\r\n    updateConfig: asyncEvent<[\r\n        updatedConfig: Pick<HomePageConfig, 'id' | 'name' | 'widgets' | 'isDefault'>,\r\n        result: void\r\n    ]>(),\r\n    updateConfigOwnership: asyncEvent<[configId: string, teamOwners: TeamOwners, result: void]>(),\r\n    toggleConfigIsGlobal: asyncEvent<[configId: string, result: void]>(),\r\n\r\n    subscribeForAgentStats: event<[config: HomePageAgentConfig, userId: string, tabId: string]>(),\r\n    unsubscribeFromAgentStats: event<[tabId: string]>(),\r\n\r\n    subscribeForServiceStats: event<[config: HomePageAgentConfig, teamId: string, tabId: string]>(),\r\n    unsubscribeFromServicesStats: event<[tabId: string]>(),\r\n\r\n    subscribeForTeamStats: event<[config: HomePageAgentConfig, teamId: string, tabId: string]>(),\r\n    unsubscribeFromTeamStats: event<[tabId: string]>(),\r\n} satisfies Events\r\n\r\nexport type HomePageStateTrackerEvents = typeof homePageStateTrackerEvents\r\nexport type HomePageStateControlEvents = typeof homePageStateControlEvents\r\n\r\nexport type HomePageStateConnector = StateConnector<HomePageStateControlEvents, HomePageStateTrackerEvents, HomePageStateData>\r\n","import type {HomePageStateData} from './types'\r\n\r\n\r\nexport const getInitialHomePageState = (): HomePageStateData => ({\r\n    subscriptionData: {\r\n        service: {},\r\n        user: {},\r\n        team: {},\r\n    },\r\n    configs: [],\r\n})\r\n\r\nexport const INITIAL_SUBSCRIPTION_FIELDS = {\r\n    team: {\r\n        id: undefined,\r\n        includeLoggedOutUsers: false,\r\n        fields: [],\r\n    },\r\n    user: {\r\n        id: undefined,\r\n        fields: [],\r\n    },\r\n    service: {\r\n        teamId: undefined,\r\n        fields: [],\r\n    },\r\n}\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    readonly [Symbol.toStringTag]!: string;\n\n    private _isResolved: boolean;\n    private _isRejected: boolean;\n    private _isCancelled: boolean;\n    private readonly _cancelHandlers: (() => void)[];\n    private readonly _promise: Promise<T>;\n    private _resolve?: (value: T | PromiseLike<T>) => void;\n    private _reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this._isResolved = false;\n        this._isRejected = false;\n        this._isCancelled = false;\n        this._cancelHandlers = [];\n        this._promise = new Promise<T>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._isResolved = true;\n                this._resolve?.(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._isRejected = true;\n                this._reject?.(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this._isResolved || this._isRejected || this._isCancelled) {\n                    return;\n                }\n                this._cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this._isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this._isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this._isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this._promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this._promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this._promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this._isResolved || this._isRejected || this._isCancelled) {\n            return;\n        }\n        this._isCancelled = true;\n        if (this._cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this._cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this._cancelHandlers.length = 0;\n        this._reject?.(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this._isCancelled;\n    }\n}\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\nexport type OpenAPIConfig = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    CREDENTIALS: 'include' | 'omit' | 'same-origin';\n    TOKEN?: string | Resolver<string>;\n    USERNAME?: string | Resolver<string>;\n    PASSWORD?: string | Resolver<string>;\n    HEADERS?: Headers | Resolver<Headers>;\n    ENCODE_PATH?: (path: string) => string;\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n    BASE: '',\n    VERSION: '1.0.0',\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: 'include',\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nconst isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nconst isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nconst isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nconst isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nconst isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nconst base64 = (str: string): string => {\n    try {\n        return btoa(str);\n    } catch (err) {\n        // @ts-ignore\n        return Buffer.from(str).toString('base64');\n    }\n};\n\nconst getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nconst getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nconst resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nconst getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\n    const token = await resolve(options, config.TOKEN);\n    const username = await resolve(options, config.USERNAME);\n    const password = await resolve(options, config.PASSWORD);\n    const additionalHeaders = await resolve(options, config.HEADERS);\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n    })\n        .filter(([_, value]) => isDefined(value))\n        .reduce((headers, [key, value]) => ({\n            ...headers,\n            [key]: String(value),\n        }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return new Headers(headers);\n};\n\nconst getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body) {\n        if (options.mediaType?.includes('/json')) {\n            return JSON.stringify(options.body)\n        } else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n            return options.body;\n        } else {\n            return JSON.stringify(options.body);\n        }\n    }\n    return undefined;\n};\n\nexport const sendRequest = async (\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Headers,\n    onCancel: OnCancel\n): Promise<Response> => {\n    const controller = new AbortController();\n\n    const request: RequestInit = {\n        headers,\n        body: body ?? formData,\n        method: options.method,\n        signal: controller.signal,\n    };\n\n    if (config.WITH_CREDENTIALS) {\n        request.credentials = config.CREDENTIALS;\n    }\n\n    onCancel(() => controller.abort());\n\n    return await fetch(url, request);\n};\n\nconst getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers.get(responseHeader);\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nconst getResponseBody = async (response: Response): Promise<any> => {\n    if (response.status !== 204) {\n        try {\n            const contentType = response.headers.get('Content-Type');\n            if (contentType) {\n                const isJSON = contentType.toLowerCase().startsWith('application/json');\n                if (isJSON) {\n                    return await response.json();\n                } else {\n                    return await response.text();\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    return undefined;\n};\n\nconst catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        throw new ApiError(options, result, 'Generic Error');\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n                const responseBody = await getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: response.ok,\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                resolve(result.body);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { HomePageConfig } from '../models/HomePageConfig';\nimport type { HomePageNewConfig } from '../models/HomePageNewConfig';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport class HomePageServices {\n\n    /**\n     * Get Agent Home Page Configurations\n     * Returns current agent's home page configurations.\n     * @returns HomePageConfig Successful response\n     * @throws ApiError\n     */\n    public static getConfigs(): CancelablePromise<Array<HomePageConfig>> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/newadws/api/v1/hp/getConfigs',\n        });\n    }\n\n    /**\n     * Create a new Agent Home Page Configuration\n     * Creates a new agent home page configuration.\n     * @returns HomePageConfig Configuration created successfully\n     * @throws ApiError\n     */\n    public static createConfig({\nrequestBody,\n}: {\nrequestBody: HomePageNewConfig,\n}): CancelablePromise<HomePageConfig> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/newadws/api/v1/hp/addConfig',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Update an existing Agent Home Page Configuration\n     * Updates an existing agent home page configuration.\n     * @returns HomePageConfig Configuration updated successfully\n     * @throws ApiError\n     */\n    public static updateConfig({\nrequestBody,\n}: {\nrequestBody: HomePageConfig,\n}): CancelablePromise<HomePageConfig> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/newadws/api/v1/hp/updateConfig',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Delete an Agent Home Page Configuration\n     * Deletes an existing agent home page configuration.\n     * @returns void \n     * @throws ApiError\n     */\n    public static deleteConfig({\nconfigId,\n}: {\n/**\n * Unique identifier for the configuration\n */\nconfigId: any,\n}): CancelablePromise<void> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/newadws/api/v1/hp/deleteConfig/{configId}',\n            path: {\n                'configId': configId,\n            },\n        });\n    }\n\n}\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AgendaResponse } from '../models/AgendaResponse';\nimport type { StatsAPIAgent } from '../models/StatsAPIAgent';\nimport type { StatsAPIService } from '../models/StatsAPIService';\nimport type { StatsAPITeam } from '../models/StatsAPITeam';\nimport type { StatsAPITimeSeriesData } from '../models/StatsAPITimeSeriesData';\nimport type { SupervisorWidgetsSubscriptionData } from '../models/SupervisorWidgetsSubscriptionData';\nimport type { SupervisorWidgetsSubscriptionRequest } from '../models/SupervisorWidgetsSubscriptionRequest';\nimport type { TenantAgentConfiguration } from '../models/TenantAgentConfiguration';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport class SupervisorWidgetsApiServices {\n\n    /**\n     * Get a collection of team names and IDs\n     * Returns a collection of team names and IDs for all teams in the system.\n     * @returns StatsAPITeam OK\n     * @throws ApiError\n     */\n    public static getTeams(): CancelablePromise<Array<StatsAPITeam>> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/statsapi/cfg/teams',\n        });\n    }\n\n    /**\n     * Delete supervisor widgets subscription\n     * @throws ApiError\n     */\n    public static deleteSupervisorWidgetsSubscription(): CancelablePromise<void> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/statsapi/subscription/active',\n        });\n    }\n\n    /**\n     * Retrieve user's agenda\n     * @returns AgendaResponse OK\n     * @throws ApiError\n     */\n    public static getAgenda({\nrequestBody,\n}: {\n/**\n * List of user IDs\n */\nrequestBody: Array<string>,\n}): CancelablePromise<AgendaResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/statsapi/subscription/agenda',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Create supervisor widgets subscription\n     * @throws ApiError\n     */\n    public static createSupervisorWidgetsSubscription({\nrequestBody,\n}: {\nrequestBody: SupervisorWidgetsSubscriptionRequest,\n}): CancelablePromise<void> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/statsapi/subscription',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * Get supervisor widgets subscription data\n     * @returns SupervisorWidgetsSubscriptionData Wallboard subscription data\n     * @throws ApiError\n     */\n    public static getSupervisorWidgetsSubscriptionData(): CancelablePromise<SupervisorWidgetsSubscriptionData> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/statsapi/subscription/data',\n        });\n    }\n\n    /**\n     * @returns any \n     * @throws ApiError\n     */\n    public static getTenantConfiguration(): CancelablePromise<{\nagentConfiguration: TenantAgentConfiguration;\n}> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/statsapi/cfg/tenant_configuration',\n        });\n    }\n\n    /**\n     * @returns StatsAPIAgent List of agents\n     * @throws ApiError\n     */\n    public static getAgents(): CancelablePromise<Array<StatsAPIAgent>> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/statsapi/cfg/agents',\n        });\n    }\n\n    /**\n     * @returns StatsAPIService List of services\n     * @throws ApiError\n     */\n    public static getServices(): CancelablePromise<Array<StatsAPIService>> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/statsapi/cfg/services',\n        });\n    }\n\n    /**\n     * @returns StatsAPITimeSeriesData Time series widget data\n     * @throws ApiError\n     */\n    public static getTimeSeriesData({\nmeasurement,\nstatistic,\nstart,\nend,\ntimeInterval,\n}: {\nmeasurement: string,\nstatistic: string,\nstart: string,\nend: string,\ntimeInterval: string,\n}): CancelablePromise<StatsAPITimeSeriesData> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/statsapi/timeseries/{measurement}?statistic={statistic}&start={start}&end={end}&interval={timeInterval}',\n            path: {\n                'measurement': measurement,\n                'statistic': statistic,\n                'start': start,\n                'end': end,\n                'timeInterval': timeInterval,\n            },\n        });\n    }\n\n}\r\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { WallboardConfig } from '../models/WallboardConfig';\nimport type { WallboardConfigType } from '../models/WallboardConfigType';\nimport type { WallboardInfo } from '../models/WallboardInfo';\nimport type { WallboardNewConfig } from '../models/WallboardNewConfig';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport class WallboardApiServices {\n\n    /**\n     * @returns any \n     * @throws ApiError\n     */\n    public static getWallboards(): CancelablePromise<{\nwallboards: Array<WallboardInfo>;\n}> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/statsapi/cfg/wallboards',\n        });\n    }\n\n    /**\n     * @returns any \n     * @throws ApiError\n     */\n    public static createWallboard({\nrequestBody,\n}: {\nrequestBody: WallboardNewConfig,\n}): CancelablePromise<{\nid: string;\n}> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/statsapi/cfg/wallboards',\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * @returns WallboardConfig \n     * @throws ApiError\n     */\n    public static getWallboardDetails({\nwallboardId,\n}: {\nwallboardId: string,\n}): CancelablePromise<WallboardConfig> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/statsapi/cfg/wallboards/{wallboardId}',\n            path: {\n                'wallboardId': wallboardId,\n            },\n        });\n    }\n\n    /**\n     * @throws ApiError\n     */\n    public static deleteWallboard({\nwallboardId,\n}: {\nwallboardId: string,\n}): CancelablePromise<void> {\n        return __request(OpenAPI, {\n            method: 'DELETE',\n            url: '/statsapi/cfg/wallboards/{wallboardId}',\n            path: {\n                'wallboardId': wallboardId,\n            },\n        });\n    }\n\n    /**\n     * @throws ApiError\n     */\n    public static updateWallboardIsGlobal({\nwallboardId,\nrequestBody,\n}: {\nwallboardId: string,\nrequestBody: {\nis_global: boolean;\n},\n}): CancelablePromise<void> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/statsapi/cfg/wallboards/{wallboardId}/is_global',\n            path: {\n                'wallboardId': wallboardId,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * @throws ApiError\n     */\n    public static updateWallboardConfig({\nwallboardId,\nrequestBody,\n}: {\nwallboardId: string,\nrequestBody: {\nconfig: WallboardConfigType;\n},\n}): CancelablePromise<void> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/statsapi/cfg/wallboards/{wallboardId}/config',\n            path: {\n                'wallboardId': wallboardId,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n    /**\n     * @throws ApiError\n     */\n    public static updateWallboardName({\nwallboardId,\nrequestBody,\n}: {\nwallboardId: string,\nrequestBody: {\nname: string;\n},\n}): CancelablePromise<void> {\n        return __request(OpenAPI, {\n            method: 'PUT',\n            url: '/statsapi/cfg/wallboards/{wallboardId}/name',\n            path: {\n                'wallboardId': wallboardId,\n            },\n            body: requestBody,\n            mediaType: 'application/json',\n        });\n    }\n\n}\r\n","interface PendingSubscriptionsI {\r\n    addSubscription(tabId: string, subscriptionId: string): void\r\n\r\n    hasSubscription(tabId: string, subscriptionId: string): boolean\r\n\r\n    removeSubscription(tabId: string): void\r\n\r\n    clean(): void\r\n}\r\n\r\n\r\n/**\r\n * Because service subscription should be done after services are fetched from server,\r\n * we need to keep track of pending subscriptions for each tab\r\n * to avoid subscribing for services when unsubscribe was called while requesting services\r\n */\r\nexport class PendingSubscriptions implements PendingSubscriptionsI {\r\n    subscriptions: {\r\n        [tabId: string]: {\r\n            [subscriptionId: string]: boolean\r\n        }\r\n    } = {}\r\n\r\n    addSubscription(tabId: string, subscriptionId: string) {\r\n        this.subscriptions[tabId] = {\r\n            ...this.subscriptions[tabId],\r\n            [subscriptionId]: true,\r\n        }\r\n    }\r\n\r\n    hasSubscription(tabId: string, subscriptionId: string) {\r\n        return Boolean(this.subscriptions[tabId]?.[subscriptionId])\r\n    }\r\n\r\n    removeSubscription(tabId: string) {\r\n        delete this.subscriptions[tabId]\r\n    }\r\n\r\n    clean() {\r\n        this.subscriptions = {}\r\n    }\r\n}\r\n","import type {ServiceDetailsFieldNames, UserDetailsFieldNames} from '@bpinc/ad-transport-types'\r\nimport type {ServerMyTeamUserDetailsFields} from '@bpinc/home-page-state-types'\r\nimport {type TeamSubscriptionFields, INITIAL_SUBSCRIPTION_FIELDS} from '@bpinc/home-page-state-types'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\n\r\n\r\ninterface SubscriptionManagerFields {\r\n    [tabId: string]: {\r\n        team?: TeamSubscriptionFields\r\n        service: {\r\n            teamId: string | undefined\r\n            fields: ServiceDetailsFieldNames[]\r\n\r\n        }\r\n        user?: {\r\n            id: string | undefined\r\n            fields: UserDetailsFieldNames[]\r\n        }\r\n    }\r\n}\r\n\r\ninterface ServicesByTeamId {\r\n    [teamId: string]: string[]\r\n}\r\n\r\n\r\nexport class SubscriptionManager {\r\n    services: ServicesByTeamId = {}\r\n    subscriptionFields: SubscriptionManagerFields = {}\r\n\r\n    constructor(subscriptionFields: SubscriptionManagerFields = {}, services: ServicesByTeamId = {}) {\r\n        this.subscriptionFields = subscriptionFields\r\n        this.services = services\r\n    }\r\n\r\n    clean() {\r\n        this.services = {}\r\n        this.subscriptionFields = {}\r\n    }\r\n\r\n    copy() {\r\n        return new SubscriptionManager(this.subscriptionFields)\r\n    }\r\n\r\n    getUserSubscriptionIds = () => {\r\n        const userIds = Object.values(this.subscriptionFields).reduce<Set<string>>((acc, v) => {\r\n            if (v.user?.id) {\r\n                acc.add(v.user.id)\r\n            }\r\n            return acc\r\n        }, new Set())\r\n\r\n        return Array.from(userIds).map(id => `STATS:${id}`)\r\n    }\r\n\r\n    getTeamSubscriptionIds = () => {\r\n        const teamIds = Object.values(this.subscriptionFields).reduce<Set<string>>((acc, v) => {\r\n            if (v.team?.id) {\r\n                acc.add(v.team.id)\r\n            }\r\n            return acc\r\n        }, new Set())\r\n\r\n        return Array.from(teamIds).map(id => `AGENT_HOME_PAGE_TEAM:${id}`)\r\n    }\r\n\r\n    getServices = () => this.services\r\n\r\n    saveServices: (teamId: string, services: string[]) => void = (teamId, services) => {\r\n        this.services[teamId] = services\r\n    }\r\n\r\n    getServicesByTeamId(teamId: string): string[] | undefined {\r\n        return this.services[teamId]\r\n    }\r\n\r\n    getSubscriptionFields(tabId: string) {\r\n        return this.subscriptionFields[tabId]\r\n    }\r\n\r\n    addUserFields(teamId: string, tabId: string, fields: UserDetailsFieldNames[]) {\r\n        this.intializeTabFields(tabId)\r\n        this.subscriptionFields[tabId] = {\r\n            ...this.subscriptionFields[tabId],\r\n            user: {\r\n                id: teamId,\r\n                fields,\r\n            },\r\n        }\r\n    }\r\n\r\n    removeUserFields(tabId: string) {\r\n        this.subscriptionFields[tabId] = {\r\n            ...this.subscriptionFields[tabId],\r\n            user: INITIAL_SUBSCRIPTION_FIELDS.user,\r\n        }\r\n    }\r\n\r\n    addServiceFields(teamId: string, tabId: string, fields: ServiceDetailsFieldNames[]) {\r\n        this.intializeTabFields(tabId)\r\n        this.subscriptionFields[tabId] = {\r\n            ...this.subscriptionFields[tabId],\r\n            service: {\r\n                teamId,\r\n                fields,\r\n            },\r\n        }\r\n    }\r\n\r\n    removeServiceFields(tabId: string) {\r\n        this.subscriptionFields[tabId] = {\r\n            ...this.subscriptionFields[tabId],\r\n            service: INITIAL_SUBSCRIPTION_FIELDS.service,\r\n        }\r\n    }\r\n\r\n    addTeamFields(teamId: string, tabId: string, fields: ServerMyTeamUserDetailsFields[]) {\r\n        this.intializeTabFields(tabId)\r\n        this.subscriptionFields[tabId] = {\r\n            ...this.subscriptionFields[tabId],\r\n            team: {\r\n                id: teamId,\r\n                includeLoggedOutUsers: false,\r\n                fields,\r\n            },\r\n        }\r\n    }\r\n\r\n    removeTeamFields(tabId: string) {\r\n        this.subscriptionFields[tabId] = {\r\n            ...this.subscriptionFields[tabId],\r\n            team: INITIAL_SUBSCRIPTION_FIELDS.team,\r\n        }\r\n    }\r\n\r\n    getUserFieldsById() {\r\n        return Object.values(this.subscriptionFields).reduce<Record<string, UserDetailsFieldNames[]>>((acc, v) => {\r\n            if (v.user?.id && v.user.fields) {\r\n                if (!acc[v.user.id]) {\r\n                    acc[v.user.id] = []\r\n                }\r\n                acc[v.user.id] = Array.from(new Set([...acc[v.user.id], ...v.user.fields]))\r\n            }\r\n\r\n            return acc\r\n        }, {})\r\n    }\r\n\r\n    getServiceFieldsByTeamId() {\r\n        return Object.values(this.subscriptionFields).reduce<Record<string, ServiceDetailsFieldNames[]>>((acc, v) => {\r\n            if (v.service.teamId && v.service.fields) {\r\n                if (!acc[v.service.teamId]) {\r\n                    acc[v.service.teamId] = []\r\n                }\r\n                acc[v.service.teamId] = Array.from(new Set([...acc[v.service.teamId], ...v.service.fields]))\r\n            }\r\n\r\n            return acc\r\n        }, {})\r\n    }\r\n\r\n    getTeamFieldsById() {\r\n        return Object.values(this.subscriptionFields).reduce<Record<string, TeamSubscriptionFields>>((acc, v) => {\r\n            if (v.team?.id && v.team.fields) {\r\n                if (!acc[v.team.id]) {\r\n                    acc[v.team.id] = {\r\n                        id: v.team.id,\r\n                        fields: [],\r\n                        includeLoggedOutUsers: v.team.includeLoggedOutUsers,\r\n                    }\r\n                }\r\n                const currentTeam = acc[v.team.id]\r\n\r\n                currentTeam.fields = Array.from(new Set([...currentTeam.fields, ...v.team.fields]))\r\n                currentTeam.includeLoggedOutUsers = v.team.includeLoggedOutUsers || currentTeam.includeLoggedOutUsers\r\n            }\r\n\r\n            return acc\r\n        }, {})\r\n    }\r\n\r\n    private intializeTabFields = (tabId: string) => {\r\n        if (!this.subscriptionFields[tabId]) {\r\n            this.subscriptionFields[tabId] = INITIAL_SUBSCRIPTION_FIELDS\r\n        }\r\n        assertDefined(this.subscriptionFields[tabId])\r\n    }\r\n}\r\n","import type {ServiceDetailsFieldNames, UserDetailsRegular} from '@bpinc/ad-transport-types'\r\nimport type {\r\n    MyStatsDetails,\r\n    ServerMyStatsDetailsFields,\r\n    ServerMyTeamUserDetailsFields,\r\n} from '@bpinc/home-page-state-types'\r\nimport {MY_STATS_FIELD_MAP} from '@bpinc/home-page-state-types'\r\nimport {unstringifyNumber} from '@bpinc/lib-helpers'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport type {MyServicesDetailsFields, MyStatsDetailsFields, MyTeamFields} from '@bpinc/lib-widgets-urls'\r\n\r\n\r\nexport function convertUserDetailsToMyStatsDetails(userDetails: UserDetailsRegular): MyStatsDetails {\r\n    return MY_STATS_FIELD_MAP.reduce<MyStatsDetails>((res, [statField, serverField]) => {\r\n        res[statField] = userDetails[serverField] !== undefined ? unstringifyNumber(userDetails[serverField]) : -1\r\n        return res\r\n    }, {})\r\n}\r\n\r\nexport function convertMyStatsFiledToServerField(\r\n    field: MyStatsDetailsFields['name'],\r\n): ServerMyStatsDetailsFields {\r\n    const filed = MY_STATS_FIELD_MAP.find(m => m[0] === field)\r\n    assertDefined(filed)\r\n\r\n    return filed[1]\r\n}\r\n\r\n\r\nexport function convertNyTeamColumnToServerField(\r\n    columns: MyTeamFields[],\r\n): ServerMyTeamUserDetailsFields[] {\r\n    const result = new Set<ServerMyTeamUserDetailsFields | 'extension'>(['user_id'])\r\n    //Add extension for better converting to UserDetailsRegular\r\n    result.add('extension')\r\n\r\n    columns.forEach(column => {\r\n        switch (column.name) {\r\n            case 'name':\r\n                result.add('firstname')\r\n                result.add('lastname')\r\n                break\r\n            case 'stateDuration': {\r\n                result.add('state_duration')\r\n                break\r\n            }\r\n            case 'reason': {\r\n                result.add('reason')\r\n                break\r\n            }\r\n            case 'nextReason': {\r\n                result.add('next_reason')\r\n                break\r\n            }\r\n            case 'acdState': {\r\n                result.add('acd_state')\r\n                result.add('items')\r\n                result.add('presence_state')\r\n                result.add('is_agent')\r\n                result.add('is_logged')\r\n                break\r\n            }\r\n            case 'acdNextState': {\r\n                result.add('acd_next_state')\r\n                result.add('is_agent')\r\n                result.add('is_logged')\r\n                break\r\n            }\r\n        }\r\n    })\r\n\r\n    return Array.from(result)\r\n}\r\n\r\n\r\nexport function convertMyServicesFiledToServerField(\r\n    field: MyServicesDetailsFields['name'],\r\n): ServiceDetailsFieldNames {\r\n    const nameMap: Record<MyServicesDetailsFields['name'], ServiceDetailsFieldNames> = {\r\n        id: 'service_id',\r\n        name: 'name',\r\n        inCallsWaiting: 'in_calls_waiting',\r\n        inMaxWaitTime: 'in_max_wait_time',\r\n        serviceLevel: 'service_level',\r\n        agentsReady: 'agents_ready',\r\n        agentsLogged: 'agents_logged',\r\n        serviceLevelPerDay: 'service_level_per_day',\r\n        inCallsHandledPerDay: 'in_calls_handled_per_day',\r\n        inCallsAbandonedInQueuePerDay: 'in_calls_abandoned_in_queue_per_day',\r\n        inEwt: 'in_ewt',\r\n        inAverageSpeedOfAnswer: 'in_average_speed_of_answer',\r\n        callsAverageHandlingTimePerDay: 'calls_average_handling_time_per_day',\r\n        outCallsHandledPerDay: 'out_calls_handled_per_day',\r\n        outCallsUnattendedPerDay: 'out_calls_unattended_per_day',\r\n        outCallsUnattendedRatioPerDay: 'out_calls_unattended_ratio_per_day',\r\n    }\r\n    return nameMap[field]\r\n}\r\n","import {formatFullName} from '@bpinc/ad-formatting-helpers'\r\nimport {bpLogger} from '@bpinc/ad-persistent-logger'\r\nimport type {\r\n    IncomingServiceDetails,\r\n    IncomingUserDetails as IncomingUserDetailsResponse,\r\n    LoggedUsersTeam,\r\n    ServiceDetailsFieldNames,\r\n    UserDetailsFieldNames,\r\n} from '@bpinc/ad-transport-types'\r\nimport {isRegularUserDetails} from '@bpinc/ad-transport-types'\r\nimport {convertUserDetailsItem} from '@bpinc/ad-user-details-state-helpers'\r\nimport type {\r\n    HomePageAgentConfig,\r\n    MyServicesDetails,\r\n    MyTeamUserDetails,\r\n    ServerMyTeamUserDetailsFields,\r\n    TeamSubscriptionFields,\r\n} from '@bpinc/home-page-state-types'\r\nimport {\r\n    getInitialHomePageState,\r\n    homePageStateControlEvents,\r\n    homePageStateTrackerEvents,\r\n    isHomePageAgentConfig,\r\n    SERVER_MY_TEAM_ITEM_FIELDS,\r\n} from '@bpinc/home-page-state-types'\r\nimport {unstringifyNumber} from '@bpinc/lib-helpers'\r\nimport {booleanToTransport, convertKVArray, toKVArray} from '@bpinc/lib-transport-conversion'\r\nimport {truthy, typedKeys} from '@bpinc/lib-types-helpers'\r\nimport {uuid} from '@bpinc/lib-uuid'\r\nimport type {AgentWidget, HomePageConfig, HomePageNewConfig, TeamOwners} from '@bpinc/lib-widgets-urls'\r\nimport {HomePageServices} from '@bpinc/lib-widgets-urls'\r\nimport {StateFactory} from '@bpinc/state-factory'\r\n\r\nimport {PendingSubscriptions} from './pending-subscriptions'\r\nimport {SubscriptionManager} from './subscription-manager'\r\nimport {\r\n    convertMyServicesFiledToServerField,\r\n    convertMyStatsFiledToServerField,\r\n    convertNyTeamColumnToServerField,\r\n    convertUserDetailsToMyStatsDetails,\r\n} from './utils'\r\n\r\n\r\nconst SUBSCRIBE_FOR_SERVICE_STATS_INTERVAL = 5000\r\n\r\n\r\nexport class HomePageStateImpl extends StateFactory.createBaseStateClass({\r\n    name: 'homePageState',\r\n    controlEvents: homePageStateControlEvents,\r\n    trackerEvents: homePageStateTrackerEvents,\r\n    options: {authorized: true, synchronized: true},\r\n    getInitialState: getInitialHomePageState,\r\n    dependencies: [\r\n        'transport',\r\n        'sessionConnector',\r\n        'servicesDispositionsConnector',\r\n    ] as const,\r\n}) {\r\n    /**\r\n     * Because service subscription is just imitation of real subscription by\r\n     * sending get request every 5 seconds, we need to keep track of interval\r\n     * to be able to unsubscribe from it\r\n     */\r\n    serviceStatsSubscriptionInterval: number | null = null\r\n    /**\r\n     * Because team subscription is async and fetches teams from server,\r\n     * we need to keep track of pending subscriptions for each tab\r\n     * to avoid subscribing for team when unsubscribe was called while requesting teams\r\n     *\r\n     */\r\n    pendingTeamStatsSubscriptions = new PendingSubscriptions()\r\n    /**\r\n     * Because service subscription should be done after services are fetched from server,\r\n     * we need to keep track of pending subscriptions for each tab\r\n     * to avoid subscribing for services when unsubscribe was called while requesting services\r\n    */\r\n    pendingServicesSubscriptions = new PendingSubscriptions()\r\n    /**\r\n     * Subscription manager is used to keep track of subscriptions for each tab\r\n     * and to keep track of fields for each subscription\r\n     * It is used to avoid subscribing for the same fields multiple times\r\n     */\r\n    subscriptionManager = new SubscriptionManager()\r\n    initialize() {\r\n        this.subscriptions.push(\r\n            this.transport.dispenser.subscribe({\r\n                agent_users_details: this.onIncomingAgentUsersDetails,\r\n            }),\r\n            this.fromClientDispenser.subscribe({\r\n                getConfigs: this.getConfigs,\r\n                updateConfig: this.updateConfig,\r\n                createConfig: this.createConfig,\r\n                duplicateConfig: this.duplicateConfig,\r\n                deleteConfig: this.deleteConfig,\r\n                updateConfigOwnership: this.updateConfigOwnership,\r\n                toggleConfigIsGlobal: this.toggleConfigIsGlobal,\r\n\r\n                subscribeForAgentStats: this.subscribeForAgentStats,\r\n                unsubscribeFromAgentStats: this.unsubscribeFromAgentStats,\r\n\r\n                subscribeForServiceStats: this.subscribeForServiceStats,\r\n                unsubscribeFromServicesStats: this.unsubscribeFromServicesStats,\r\n\r\n                subscribeForTeamStats: this.subscribeForTeamStats,\r\n                unsubscribeFromTeamStats: this.unsubscribeFromTeamStats,\r\n            }),\r\n        )\r\n    }\r\n\r\n    clean() {\r\n        //Unsubscribe from service stats\r\n        this.serviceStatsSubscriptionInterval && clearInterval(this.serviceStatsSubscriptionInterval)\r\n\r\n        //Unsubscribe from user stats\r\n        const userSubscriptionIds = this.subscriptionManager.getUserSubscriptionIds()\r\n        userSubscriptionIds.forEach(id => {\r\n            this.transport.dispatch.agent_unsubscribe_users_details({\r\n                type: id,\r\n            })\r\n        })\r\n\r\n        //Unsubscribe from team stats\r\n        const teamSubscriptionIds = this.subscriptionManager.getTeamSubscriptionIds()\r\n        teamSubscriptionIds.forEach(id => {\r\n            this.transport.dispatch.agent_unsubscribe_users_details({\r\n                type: id,\r\n            })\r\n        })\r\n\r\n        //Clean state data\r\n        this.pendingTeamStatsSubscriptions.clean()\r\n        this.pendingServicesSubscriptions.clean()\r\n        this.subscriptionManager.clean()\r\n\r\n    }\r\n\r\n    override cleanup() {\r\n        super.cleanup()\r\n        this.clean()\r\n    }\r\n\r\n    override resetState() {\r\n        this.pendingTeamStatsSubscriptions.clean()\r\n        this.pendingServicesSubscriptions.clean()\r\n        this.subscriptionManager.clean()\r\n\r\n        super.resetState()\r\n    }\r\n\r\n    public getConfigs = async () => {\r\n        try {\r\n            const configs = await HomePageServices.getConfigs()\r\n            this.produceState(draft => {\r\n                draft.configs = configs\r\n            })\r\n        } catch (e) {\r\n            bpLogger.error(e)\r\n        }\r\n    }\r\n\r\n    public createConfig = async (newConfig: HomePageNewConfig) => {\r\n        try {\r\n            const config = await HomePageServices.createConfig({\r\n                requestBody: newConfig,\r\n            })\r\n            this.produceState(draft => {\r\n                draft.configs.push(config)\r\n            })\r\n\r\n            return config\r\n        } catch (e) {\r\n            bpLogger.error(e)\r\n            throw e\r\n        }\r\n    }\r\n\r\n    public updateConfigOwnership = async (configId: string, teamOwners: TeamOwners) => {\r\n        const config = this.stateData.configs.find(c => c.id === configId)\r\n        if (!config || isHomePageAgentConfig(config)) {\r\n            return\r\n        }\r\n\r\n        await this.updateConfigBase({\r\n            ...config,\r\n            teamOwners,\r\n        })\r\n    }\r\n\r\n    public toggleConfigIsGlobal = async (configId: string) => {\r\n        const config = this.stateData.configs.find(c => c.id === configId)\r\n        if (!config || isHomePageAgentConfig(config)) {\r\n            return\r\n        }\r\n        await this.updateConfigBase({\r\n            ...config,\r\n            isGlobal: !config.isGlobal,\r\n        })\r\n    }\r\n\r\n    public updateConfig = async (updatedConfig: Pick<HomePageConfig, 'id' | 'name' | 'widgets' | 'isDefault'>) => {\r\n        const currentConfig = this.stateData.configs.find(c => {\r\n            if (updatedConfig.isDefault) {\r\n                return c.isDefault\r\n            }\r\n            return c.id === updatedConfig.id\r\n        })\r\n        if (!currentConfig) {\r\n            return\r\n        }\r\n        const resultConfig = {\r\n            ...currentConfig,\r\n            ...updatedConfig,\r\n        } satisfies HomePageConfig\r\n\r\n        if (resultConfig.isDefault && !resultConfig.id) {\r\n            const {id: _, ...createConfigData} = resultConfig\r\n            await this.createConfig(createConfigData)\r\n            return\r\n        }\r\n        await this.updateConfigBase(resultConfig)\r\n    }\r\n\r\n    public duplicateConfig = async (configId: string) => {\r\n        const config = this.stateData.configs.find(c => c.id === configId)\r\n        if (!config) {\r\n            throw new Error(`Couldn't find the configId=\"${configId}\" in state`)\r\n        }\r\n\r\n        const {id: _, ...newConfig} = config\r\n        return await this.createConfig(newConfig)\r\n    }\r\n\r\n    public deleteConfig = async (configId: string) => {\r\n        const config = this.stateData.configs.find(c => c.id === configId)\r\n        // We can't delete agents configs\r\n        if (isHomePageAgentConfig(config)) {\r\n            return\r\n        }\r\n        try {\r\n            await HomePageServices.deleteConfig({configId})\r\n            this.produceState(draft => {\r\n                draft.configs = draft.configs.filter(c => c.id !== configId)\r\n            })\r\n        } catch (e) {\r\n            bpLogger.error(e)\r\n            throw e\r\n        }\r\n    }\r\n\r\n    private updateConfigBase = async (updatedConfig: HomePageConfig) => {\r\n        try {\r\n            const config = await HomePageServices.updateConfig({\r\n                requestBody: updatedConfig,\r\n            })\r\n\r\n            this.produceState(draft => {\r\n                const configIndex = draft.configs?.findIndex(\r\n                    c => c.id === config.id,\r\n                )\r\n                if (configIndex === undefined || configIndex === -1) {\r\n                    return\r\n                }\r\n\r\n                draft.configs[configIndex] = config\r\n            })\r\n        } catch (e) {\r\n            bpLogger.error(e)\r\n            throw e\r\n        }\r\n    }\r\n\r\n    //==============\r\n    // Subscriptions\r\n    //==============\r\n\r\n    //------------------------\r\n    // Subscriptions responses\r\n    // -----------------------\r\n\r\n    private onIncomingAgentUsersDetails = (response: IncomingUserDetailsResponse) => {\r\n        const isTeamStats = response.type.startsWith('MY_TEAM')\r\n        const isAgentStats = response.type.startsWith('STATS')\r\n\r\n        if (isTeamStats) {\r\n            this.onTeamStatsSubscription(response)\r\n        }\r\n        if (isAgentStats) {\r\n            this.onAgentStatsSubscription(response)\r\n        }\r\n    }\r\n\r\n    private onTeamStatsSubscription = (incomingTeamDetails: IncomingUserDetailsResponse) => {\r\n        const displayNameFormat =\r\n                    this.sessionConnector.getStateData().displayNameFormat\r\n\r\n        const teamId = incomingTeamDetails.type.split(':')[1]\r\n\r\n\r\n        this.produceState(draft => {\r\n            if (!draft.subscriptionData.team[teamId]) {\r\n                draft.subscriptionData.team[teamId] = {}\r\n            }\r\n\r\n            draft.subscriptionData.team[teamId].isLoading = false\r\n\r\n            draft.subscriptionData.team[teamId].myTeamUserDetails = convertKVArray(\r\n                incomingTeamDetails.users,\r\n                v => {\r\n                    const result = {...convertUserDetailsItem(v)}\r\n                    Object.assign(result, {\r\n                        name: formatFullName(\r\n                            displayNameFormat,\r\n                            result.firstName,\r\n                            result.lastName,\r\n                        ),\r\n                    })\r\n                    delete result.firstName\r\n                    delete result.lastName\r\n\r\n                    return result\r\n                },\r\n            ).sort(i => (i.isLogged ? -1 : 1)) as MyTeamUserDetails[]\r\n        })\r\n    }\r\n\r\n    private onAgentStatsSubscription = (incomingAgentDetails: IncomingUserDetailsResponse) => {\r\n        const incomingUser = incomingAgentDetails.users[0]\r\n        if (\r\n            !isRegularUserDetails(incomingUser)\r\n        ) {\r\n            return\r\n        }\r\n        const userId = incomingAgentDetails.type.split(':')[1]\r\n\r\n        this.produceState(draft => {\r\n            if (!draft.subscriptionData.user[userId]) {\r\n                draft.subscriptionData.user[userId] = {}\r\n            }\r\n\r\n            const user = draft.subscriptionData.user[userId]\r\n\r\n            user.isLoading = false\r\n            user.myStatsDetails = convertUserDetailsToMyStatsDetails(incomingUser)\r\n            user.agentTotalBreakTime = unstringifyNumber(\r\n                incomingUser.agent_total_break_time,\r\n            )\r\n        })\r\n    }\r\n\r\n    //----------------------\r\n    // Subscription requests\r\n    // ---------------------\r\n\r\n    public subscribeForAgentStats = (config: HomePageAgentConfig, userId: string, tabId: string) => {\r\n        const currentUserFields = this.subscriptionManager.getUserFieldsById()[userId]\r\n        const newUserFields = getUserFieldsFromConfig()\r\n\r\n        // If subscription fields are the same, don't resubscribe.\r\n        if (currentUserFields?.sort().join() === newUserFields.sort().join()) {\r\n            return\r\n        }\r\n\r\n        this.unsubscribeFromAgentStats(tabId)\r\n\r\n        if (!newUserFields.length) {\r\n            return\r\n        }\r\n\r\n        this.subscriptionManager.addUserFields(userId, tabId, newUserFields)\r\n\r\n        const userFieldsById = this.subscriptionManager.getUserFieldsById()\r\n\r\n        this.sendSubscribeForAgentStatsRequest(userId, userFieldsById[userId])\r\n\r\n        function getUserFieldsFromConfig() {\r\n            const result = new Set<UserDetailsFieldNames>()\r\n            parseWidgets(config.widgets)\r\n\r\n            function parseWidgets(widgets: AgentWidget[]) {\r\n                widgets.forEach(widget => {\r\n                    switch (widget.type) {\r\n                        case 'BREAK_TIME_REMAINING': {\r\n                            result.add('agent_total_break_time')\r\n                            //Add extension for better converting to UserDetailsRegular\r\n                            result.add('extension')\r\n                            break\r\n                        }\r\n                        case 'MY_STATS': {\r\n                            widget.fields\r\n                                .map(({name}) => convertMyStatsFiledToServerField(name))\r\n                                .forEach(name => result.add(name))\r\n                            //Add extension for better converting to UserDetailsRegular\r\n                            result.add('extension')\r\n                            break\r\n                        }\r\n                        case 'FLIPPING':\r\n                            parseWidgets(widget.widgets)\r\n                            break\r\n                        default: {\r\n                        /** */\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            return Array.from(result)\r\n        }\r\n    }\r\n\r\n    private sendSubscribeForAgentStatsRequest = (userId: string, fields: UserDetailsFieldNames[]) => {\r\n        if (!fields.length) {\r\n            return\r\n        }\r\n\r\n        this.produceState(draft => {\r\n            if (!draft.subscriptionData.user[userId]) {\r\n                draft.subscriptionData.user[userId] = {}\r\n            }\r\n\r\n            draft.subscriptionData.user[userId].isLoading = true\r\n        })\r\n\r\n        this.transport.dispatch.agent_subscribe_users_details({\r\n            users: toKVArray([userId]),\r\n            type: `STATS:${userId}`,\r\n            user_fields: toKVArray(fields),\r\n        })\r\n    }\r\n\r\n    public subscribeForServiceStats = (config: HomePageAgentConfig, teamId: string, tabId: string) => {\r\n        const currentSubscription = this.subscriptionManager.getServiceFieldsByTeamId()[teamId]\r\n        const newSubscription = getServiceFieldsFromConfig()\r\n\r\n        // If subscription fields are the same, don't resubscribe.\r\n        if (currentSubscription?.sort().join() === newSubscription.sort().join()) {\r\n            return\r\n        }\r\n\r\n        this.unsubscribeFromServicesStats(tabId, false)\r\n\r\n        this.produceState(draft => {\r\n            if (!draft.subscriptionData.service[teamId]) {\r\n                draft.subscriptionData.service[teamId] = {}\r\n            }\r\n\r\n            draft.subscriptionData.service[teamId].isLoading = true\r\n        })\r\n\r\n\r\n        this.subscriptionManager.addServiceFields(teamId, tabId, newSubscription)\r\n\r\n\r\n        this.startServiceSubscription()\r\n\r\n\r\n        function getServiceFieldsFromConfig() {\r\n            const result = new Set<ServiceDetailsFieldNames>()\r\n            parseWidgets(config.widgets)\r\n\r\n            function parseWidgets(agentWidgets: AgentWidget[]) {\r\n                agentWidgets.forEach(widget => {\r\n                    switch (widget.type) {\r\n                        case 'MY_SERVICES': {\r\n                        //Required fields\r\n                            result.add('service_id')\r\n                            result.add('name')\r\n                        //Configured fields\r\n                            widget.fields\r\n                                .map(({name}) => convertMyServicesFiledToServerField(name))\r\n                                .forEach(name => result.add(name))\r\n                            break\r\n                        }\r\n                        case 'FLIPPING': {\r\n                            parseWidgets(widget.widgets)\r\n                            break\r\n                        }\r\n                        default: {\r\n                        /** */\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            return Array.from(result)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Collects all services ids from all tabs and starts sending\r\n     * get requests for services stats every 5 seconds\r\n     */\r\n    private startServiceSubscription = async () => {\r\n        const serviceFieldsByTeamId = this.subscriptionManager.getServiceFieldsByTeamId()\r\n\r\n        const collectAllServicesIds = async () => {\r\n            const promises: Promise<string[] | undefined>[] = []\r\n            typedKeys(serviceFieldsByTeamId).forEach(async (teamId: string) => {\r\n                promises.push(this.requestServices(teamId))\r\n            })\r\n            const services = truthy((await Promise.all(promises)).flat())\r\n            return Array.from(new Set(services))\r\n        }\r\n\r\n        const allServicesIds = await collectAllServicesIds()\r\n        const allServiceFields = Array.from(new Set(Object.values(serviceFieldsByTeamId).flat()))\r\n\r\n        this.serviceStatsSubscriptionInterval = setInterval(() => {\r\n            if (!allServiceFields) {\r\n                return\r\n\r\n            }\r\n            this.transport.dispatch\r\n                .agent_get_services_details({\r\n                    services: toKVArray(allServicesIds),\r\n                    service_fields: toKVArray(allServiceFields),\r\n                })\r\n                .then(this.onServicesStats)\r\n        }, SUBSCRIBE_FOR_SERVICE_STATS_INTERVAL)\r\n    }\r\n\r\n    private onServicesStats = (incomingServiceDetails: IncomingServiceDetails) => {\r\n        const services = convertKVArray(incomingServiceDetails.services, s => ({\r\n            id: s.service_id,\r\n            agentsLogged: Number(s.agents_logged ?? 0),\r\n            agentsReady: Number(s.agents_ready ?? 0),\r\n            callsAverageHandlingTimePerDay: s.calls_average_handling_time_per_day,\r\n            inAverageSpeedOfAnswer: s.in_average_speed_of_answer,\r\n            inCallsAbandonedInQueuePerDay: Number(s.in_calls_abandoned_in_queue_per_day ?? 0),\r\n            inCallsHandledPerDay: Number(s.in_calls_handled_per_day ?? 0),\r\n            inCallsWaiting: Number(s.in_calls_waiting ?? 0),\r\n            inEwt: s.in_ewt,\r\n            inMaxWaitTime: s.in_max_wait_time,\r\n            name: s.name,\r\n            outCallsHandledPerDay: Number(s.out_calls_handled_per_day ?? 0),\r\n            outCallsUnattendedPerDay: Number(s.out_calls_unattended_per_day ?? 0),\r\n            outCallsUnattendedRatioPerDay: s.out_calls_unattended_ratio_per_day,\r\n            serviceLevel: s.service_level,\r\n            serviceLevelPerDay: s.service_level_per_day,\r\n        }))\r\n\r\n        const servicesFieldsByServiceId = services.reduce<Record<string, MyServicesDetails>>((\r\n            acc,\r\n            v,\r\n        ) => {\r\n            acc[v.id] = v\r\n            return acc\r\n        }, {})\r\n\r\n        const servicesIdsByTeam = this.subscriptionManager.getServices()\r\n\r\n\r\n        const servicesFieldsByTeamId = Object.entries(servicesIdsByTeam).reduce<\r\n        Record<string, { myServicesDetails: MyServicesDetails[]; isLoading: boolean }>\r\n        >((acc, [teamId, servicesIds]) => {\r\n            acc[teamId] = {myServicesDetails: [], isLoading: false}\r\n            acc[teamId].myServicesDetails = servicesIds.map(\r\n                id => servicesFieldsByServiceId[id],\r\n            ).filter(Boolean)\r\n            return acc\r\n        }, {})\r\n\r\n        this.produceState(draft => {\r\n            if (!draft.subscriptionData.service) {\r\n                draft.subscriptionData.service = {}\r\n            }\r\n\r\n            draft.subscriptionData.service = servicesFieldsByTeamId\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Gets services from server and checks if subscription is still active\r\n     * If subscription is not active, returns undefined, otherwise returns services\r\n     * @param teamId - teamId for which subscription is made\r\n     * @returns services if subscription is still active, otherwise undefined\r\n     */\r\n    private requestServices = async (teamId: string) => {\r\n        const existingServices = this.subscriptionManager.getServicesByTeamId(teamId)\r\n\r\n        if (existingServices) {\r\n            return existingServices\r\n        }\r\n\r\n        const subscriptionId = uuid()\r\n        this.pendingServicesSubscriptions.addSubscription(teamId, subscriptionId)\r\n\r\n        const {result: services} = await this.transport.dispatch.agent_service_info_by_team({\r\n            team_id: teamId,\r\n        })\r\n\r\n        const servicesIds = services?.map(s => s.id) ?? []\r\n\r\n        this.subscriptionManager.saveServices(teamId, servicesIds)\r\n\r\n        if (!this.pendingServicesSubscriptions.hasSubscription(teamId, subscriptionId)) {\r\n            return\r\n        }\r\n\r\n        return servicesIds\r\n    }\r\n\r\n    public subscribeForTeamStats = async (config: HomePageAgentConfig, teamId: string, tabId: string) => {\r\n        const currentSubscription = this.subscriptionManager.getTeamFieldsById()[teamId]\r\n        const newSubscriptionFields = getSubscriptionFieldsFromConfig()\r\n\r\n\r\n        // If subscription fields are the same, don't resubscribe.\r\n        if (currentSubscription?.fields.sort().join() === newSubscriptionFields.sort().join()) {\r\n            return\r\n        }\r\n\r\n        this.unsubscribeFromTeamStats(tabId, false)\r\n        this.subscriptionManager.addTeamFields(teamId, tabId, newSubscriptionFields)\r\n\r\n        const teams = await this.requestTeams(tabId, Object.keys(this.subscriptionManager.getTeamFieldsById()))\r\n\r\n        if (!teams) {\r\n            return\r\n        }\r\n\r\n        const teamFields = this.subscriptionManager.getTeamFieldsById()\r\n\r\n        this.sendSubscribeForTeamStatsRequest(teams, teamFields)\r\n\r\n        function getSubscriptionFieldsFromConfig(): ServerMyTeamUserDetailsFields[] {\r\n            const result: Set<ServerMyTeamUserDetailsFields> = new Set()\r\n            parseWidgets(config.widgets)\r\n\r\n            return Array.from(result)\r\n\r\n            function parseWidgets(widgets: AgentWidget[]) {\r\n                widgets.forEach(widget => {\r\n                    switch (widget.type) {\r\n                        case 'MY_TEAM': {\r\n                            convertNyTeamColumnToServerField(widget.fields)\r\n                                .forEach(field => result.add(field))\r\n                            break\r\n                        }\r\n                        case 'FLIPPING': {\r\n                            parseWidgets(widget.widgets)\r\n                            break\r\n                        }\r\n                        default: {\r\n                        /** */\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets teams from server and checks if subscription is still active\r\n     * If subscription is not active, returns undefined, otherwise returns teams\r\n     *\r\n     * @param tabId - tabId for which subscription is made\r\n     * @param teamIds - teamIds for which subscription is made\r\n     *\r\n     * @returns teams if subscription is still active, otherwise undefined\r\n     */\r\n    private requestTeams = async (tabId: string, teamIds: string[]) => {\r\n        const subscriptionId = uuid()\r\n        this.pendingTeamStatsSubscriptions.addSubscription(tabId, subscriptionId)\r\n\r\n        const {teams} = await this.transport.dispatch.agent_get_logged_users({\r\n            include_logged_out: booleanToTransport(false),\r\n            teams: toKVArray(teamIds),\r\n        })\r\n\r\n        if (!this.pendingTeamStatsSubscriptions.hasSubscription(tabId, subscriptionId)) {\r\n            return undefined\r\n        }\r\n\r\n        return convertKVArray(teams)\r\n    }\r\n\r\n    private sendSubscribeForTeamStatsRequest = (teams: LoggedUsersTeam[], teamSubscriptionFields: Record<string, TeamSubscriptionFields>) => {\r\n\r\n        teams.forEach(team => {\r\n            this.produceState(draft => {\r\n                if (!draft.subscriptionData.team[team.team_id]) {\r\n                    draft.subscriptionData.team[team.team_id] = {}\r\n                }\r\n\r\n                draft.subscriptionData.team[team.team_id].isLoading = true\r\n            })\r\n\r\n            const subscriptionFields = teamSubscriptionFields[team.team_id]\r\n\r\n            const myTeamUsers =\r\n            team &&\r\n            convertKVArray(team.users).filter(\r\n                v =>\r\n                    subscriptionFields.includeLoggedOutUsers ||\r\n                v.presence_state !== 'offline',\r\n            )\r\n\r\n            if (myTeamUsers && subscriptionFields.fields.length) {\r\n                this.transport.dispatch.agent_subscribe_users_details({\r\n                    users: toKVArray(myTeamUsers, u => u.user_id),\r\n                    type: `MY_TEAM:${subscriptionFields.id}`,\r\n                    user_fields: toKVArray(subscriptionFields.fields),\r\n                    item_fields: subscriptionFields.fields.includes('items') ? toKVArray([...SERVER_MY_TEAM_ITEM_FIELDS]) : {},\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    //----------------------\r\n    // Unsubscription requests\r\n    // ---------------------\r\n\r\n    /**\r\n     *  We unsubscribe once for all tabs because service subscription gathers data for all tabs\r\n     *  and then we filter data for each tab. We do so, because subscription for services is get request\r\n     *  and reducing number of requests reduces the server load (surprisingly :D)\r\n     * @param tabId - tabId for which subscription is made\r\n     *\r\n     */\r\n    public unsubscribeFromServicesStats = (tabId: string, resetState = true) => {\r\n        this.pendingServicesSubscriptions.removeSubscription(tabId)\r\n        this.subscriptionManager.removeServiceFields(tabId)\r\n\r\n        if (resetState) {\r\n            this.produceState(draft => {\r\n                delete draft.subscriptionData.service.myServicesDetails\r\n            })\r\n        }\r\n\r\n        this.serviceStatsSubscriptionInterval &&\r\n            clearInterval(this.serviceStatsSubscriptionInterval)\r\n    }\r\n\r\n    public unsubscribeFromAgentStats = (tabId: string) => {\r\n        const currentSubscriptionFields = this.subscriptionManager.getSubscriptionFields(tabId)\r\n\r\n        if (!currentSubscriptionFields) {\r\n            return\r\n        }\r\n\r\n        const userId = currentSubscriptionFields.user?.id\r\n\r\n        //If no user is subscribed for current tab, return\r\n        if (!userId) {\r\n            return\r\n        }\r\n\r\n        this.subscriptionManager.removeUserFields(tabId)\r\n\r\n\r\n        this.produceState(draft => {\r\n            delete draft.subscriptionData.user[userId]\r\n        })\r\n\r\n        //Unsubscribe from user stats\r\n\r\n        this.transport.dispatch.agent_unsubscribe_users_details({\r\n            type: `STATS:${userId}`,\r\n        })\r\n\r\n        // Resubscribe for user stats if there were other tabs subscribed for current user\r\n        const currentUserSubscriptions = this.subscriptionManager.getUserFieldsById()\r\n\r\n\r\n        if (currentUserSubscriptions && currentUserSubscriptions[userId]) {\r\n            this.sendSubscribeForAgentStatsRequest(userId, currentUserSubscriptions[userId])\r\n        }\r\n    }\r\n\r\n    public unsubscribeFromTeamStats = async (tabId: string, resetState = true) => {\r\n        this.pendingTeamStatsSubscriptions.removeSubscription(tabId)\r\n        const currentSubscriptionFields = this.subscriptionManager.getSubscriptionFields(tabId)\r\n\r\n        if (!currentSubscriptionFields) {\r\n            return\r\n        }\r\n\r\n        const teamId = currentSubscriptionFields.team?.id\r\n\r\n        //If no team is subscribed for current tab, return\r\n        if (!teamId) {\r\n            return\r\n        }\r\n\r\n        this.subscriptionManager.removeTeamFields(tabId)\r\n\r\n        if (resetState) {\r\n            this.produceState(draft => {\r\n                delete draft.subscriptionData.team[teamId]\r\n            })\r\n        }\r\n\r\n        //Unsubscribe from team stats\r\n        this.transport.dispatch.agent_unsubscribe_users_details({\r\n            type: `MY_TEAM:${teamId}`,\r\n        })\r\n\r\n        const currentTeamSubscriptions = this.subscriptionManager.getTeamFieldsById()\r\n\r\n        // Resubscribe for team stats if there were other tabs subscribed for current team\r\n        if (currentTeamSubscriptions && currentTeamSubscriptions[teamId]) {\r\n            const teams = await this.requestTeams(tabId, [teamId])\r\n\r\n            if (!teams) {\r\n                return\r\n            }\r\n\r\n            this.sendSubscribeForTeamStatsRequest(teams, currentTeamSubscriptions)\r\n        }\r\n    }\r\n}\r\n\r\n","import React, {useMemo} from 'react'\r\nimport {type Control, type UseFormSetValue, useController, useWatch} from 'react-hook-form'\r\nimport uuid from 'uuid/v4'\r\n\r\nimport {InputField, Modal, NumberField, ToggleWithLabel} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {HidingArea} from '../../../../HidingArea'\r\nimport {MetricSelection} from '../../../../MetricSelection'\r\nimport type {SettingsFromData} from '../useSettingsFormData'\r\nimport {useMyServicesMetricsOptions} from './useMyServicesMetricsOptions'\r\n\r\n\r\ntype MyServicesConfigModalProps = {\r\n    id: string\r\n    setValue: UseFormSetValue<SettingsFromData>\r\n    control: Control<SettingsFromData>\r\n}\r\n\r\nexport const MyServicesConfigModalContent: React.FC<MyServicesConfigModalProps> = ({\r\n    id,\r\n    setValue,\r\n    control,\r\n}) => {\r\n    const t = useLocalizationState('t')\r\n    const options = useMyServicesMetricsOptions()\r\n    const fields = useWatch({\r\n        name: `${id}.fields`,\r\n        control,\r\n    })\r\n    const selected = useMemo(() => fields.map(f => f.name), [fields])\r\n\r\n    const {field: titleField} = useController({\r\n        name: `${id}.title`,\r\n        control,\r\n    })\r\n\r\n    const {field: maxItemsToShow} = useController({\r\n        name: `${id}.maxItemsToShow`,\r\n        control,\r\n    })\r\n\r\n    const {field: columnTitleEnabled} = useController({\r\n        name: `${id}.columnTitleEnabled`,\r\n        control,\r\n    })\r\n\r\n    return (\r\n        <Modal.Content className=\"flex flex-col overflow-hidden\">\r\n            <HidingArea.Root>\r\n                <HidingArea.Target>\r\n                    <div className=\"mb-4 flex gap-2.5\">\r\n                        <InputField\r\n                            label={t.GLOBAL.title()}\r\n                            placeholder={t.GLOBAL.title()}\r\n                            layoutClassName=\"flex-1\"\r\n                            {...titleField}\r\n                        />\r\n                        <NumberField\r\n                            label={t.HOME_SCREEN.max_items_to_show()}\r\n                            placeholder={t.HOME_SCREEN.max_items_to_show()}\r\n                            inputClassName=\"max-w-20\"\r\n                            {...maxItemsToShow}\r\n                            onChange={e => maxItemsToShow.onChange(Number(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <ToggleWithLabel\r\n                        label={t.HOME_SCREEN.columns_headings()}\r\n                        checked={columnTitleEnabled.value}\r\n                        onCheckedChange={columnTitleEnabled.onChange}\r\n                        labelClassName=\"caption-s font-normal\"\r\n                        containerClassName=\"mb-4\"\r\n                    />\r\n                </HidingArea.Target>\r\n                <MetricSelection\r\n                    options={options}\r\n                    selected={selected}\r\n                    onChange={values => {\r\n                        setValue(`${id}.fields`, values.map(v => ({\r\n                            name: v,\r\n                            id: uuid(),\r\n                            title: options.find(o => o.value === v)?.text,\r\n                        })))\r\n                    }}\r\n                    expanded={HidingArea.hidden}\r\n                />\r\n            </HidingArea.Root>\r\n        </Modal.Content>\r\n    )\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {convertMyServicesFiledToServerField} from '@bpinc/home-page-state'\r\nimport {MY_SERVICES_DETAILS_CONFIGURABLE_FIELDS} from '@bpinc/home-page-state-types'\r\nimport {useMetricsNames} from '@bpinc/lib-helpers-ui'\r\nimport {truthy} from '@bpinc/lib-types-helpers'\r\n\r\n\r\nexport function useMyServicesMetricsOptions() {\r\n    const metricsNames = useMetricsNames()\r\n\r\n    return useMemo(() => {\r\n        return truthy(MY_SERVICES_DETAILS_CONFIGURABLE_FIELDS.map(name => {\r\n            const convertedName = convertMyServicesFiledToServerField(name)\r\n            if (convertedName === 'service_id') {\r\n                return\r\n            }\r\n            const metric = metricsNames[convertedName].general\r\n            return {value: name, text: metric}\r\n        }))\r\n    }, [metricsNames])\r\n}\r\n","import React, {useMemo} from 'react'\r\nimport type {Control, UseFormSetValue} from 'react-hook-form'\r\nimport {useController, useWatch} from 'react-hook-form'\r\nimport uuid from 'uuid/v4'\r\n\r\nimport {InputField, Modal} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {HidingArea} from '../../../../HidingArea'\r\nimport {MetricSelection} from '../../../../MetricSelection'\r\nimport type {SettingsFromData} from '../useSettingsFormData'\r\nimport {useMyStatsMetricsOptions} from './useMyStatsMetricsOptions'\r\n\r\n\r\ntype MyStatsConfigModalProps = {\r\n    id: string\r\n    setValue: UseFormSetValue<SettingsFromData>\r\n    control: Control<SettingsFromData>\r\n}\r\n\r\nexport const MyStatsConfigModalContent: React.FC<MyStatsConfigModalProps> = ({\r\n    id,\r\n    control,\r\n    setValue,\r\n}) => {\r\n    const t = useLocalizationState('t')\r\n    const options = useMyStatsMetricsOptions()\r\n    const fields = useWatch({\r\n        name: `${id}.fields`,\r\n        control,\r\n    })\r\n    const selected = useMemo(() => fields.map(f => f.name), [fields])\r\n\r\n    const {field: titleField} = useController({\r\n        name: `${id}.title`,\r\n        control,\r\n    })\r\n\r\n    return (\r\n        <Modal.Content className=\"flex flex-col overflow-hidden\">\r\n            <HidingArea.Root>\r\n                <HidingArea.Target>\r\n                    <InputField\r\n                        label={t.GLOBAL.title()}\r\n                        placeholder={t.GLOBAL.title()}\r\n                        layoutClassName=\"mb-4\"\r\n                        {...titleField}\r\n                    />\r\n                </HidingArea.Target>\r\n                <MetricSelection\r\n                    options={options}\r\n                    selected={selected}\r\n                    onChange={values => {\r\n                        setValue(`${id}.fields`, values.map(v => ({\r\n                            name: v,\r\n                            id: uuid(),\r\n                            title: options.find(o => o.value === v)?.text,\r\n                        })))\r\n                    }}\r\n                    expanded={HidingArea.hidden}\r\n                />\r\n            </HidingArea.Root>\r\n        </Modal.Content>\r\n    )\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {convertMyStatsFiledToServerField} from '@bpinc/home-page-state'\r\nimport {MY_STATS_DETAILS_FIELDS} from '@bpinc/home-page-state-types'\r\nimport {useMetricsNames} from '@bpinc/lib-helpers-ui'\r\n\r\n\r\nexport function useMyStatsMetricsOptions() {\r\n    const metricsNames = useMetricsNames()\r\n\r\n    return useMemo(() => {\r\n        return MY_STATS_DETAILS_FIELDS.map(name => {\r\n            const metricName = metricsNames[convertMyStatsFiledToServerField(name)]?.general || ''\r\n\r\n            return {value: name, text: metricName}\r\n        })\r\n    }, [metricsNames])\r\n}\r\n","import React, {useMemo} from 'react'\r\nimport {type Control, type UseFormSetValue, useController, useWatch} from 'react-hook-form'\r\nimport uuid from 'uuid/v4'\r\n\r\nimport {InputField, Modal, NumberField, ToggleWithLabel} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {HidingArea} from '../../../../HidingArea'\r\nimport {MetricSelection} from '../../../../MetricSelection'\r\nimport type {SettingsFromData} from '../useSettingsFormData'\r\nimport {useMyTeamMetricsOptions} from './useMyTeamMetricsOptions'\r\n\r\n\r\ntype MyTeamConfigModalProps = {\r\n    id: string\r\n    setValue: UseFormSetValue<SettingsFromData>\r\n    control: Control<SettingsFromData>\r\n}\r\n\r\nexport const MyTeamConfigModalContent: React.FC<MyTeamConfigModalProps> = ({\r\n    id,\r\n    setValue,\r\n    control,\r\n}) => {\r\n    const t = useLocalizationState('t')\r\n    const options = useMyTeamMetricsOptions()\r\n    const fields = useWatch({\r\n        name: `${id}.fields`,\r\n        control,\r\n    })\r\n    const selected = useMemo(() => fields.map(f => f.name), [fields])\r\n\r\n    const {field: titleField} = useController({\r\n        name: `${id}.title`,\r\n        control,\r\n    })\r\n\r\n    const {field: maxItemsToShow} = useController({\r\n        name: `${id}.maxItemsToShow`,\r\n        control,\r\n    })\r\n\r\n    const {field: userDummyNames} = useController({\r\n        name: `${id}.userDummyNames`,\r\n        control,\r\n    })\r\n\r\n    const {field: columnTitleEnabled} = useController({\r\n        name: `${id}.columnTitleEnabled`,\r\n        control,\r\n    })\r\n\r\n    return (\r\n        <Modal.Content className=\"flex flex-col overflow-hidden\">\r\n            <HidingArea.Root>\r\n                <HidingArea.Target>\r\n                    <div className=\"mb-4 flex gap-2.5\">\r\n                        <InputField\r\n                            label={t.GLOBAL.title()}\r\n                            placeholder={t.GLOBAL.title()}\r\n                            layoutClassName=\"flex-1\"\r\n                            {...titleField}\r\n                        />\r\n                        <NumberField\r\n                            label={t.HOME_SCREEN.max_items_to_show()}\r\n                            placeholder={t.HOME_SCREEN.max_items_to_show()}\r\n                            inputClassName=\"max-w-20\"\r\n                            {...maxItemsToShow}\r\n                            onChange={e => maxItemsToShow.onChange(Number(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-4 flex gap-6\">\r\n                        <ToggleWithLabel\r\n                            label={t.HOME_SCREEN.use_user_dummy_names()}\r\n                            checked={userDummyNames.value}\r\n                            onCheckedChange={userDummyNames.onChange}\r\n                            labelClassName=\"caption-s font-normal\"\r\n                        />\r\n                        <ToggleWithLabel\r\n                            label={t.HOME_SCREEN.columns_headings()}\r\n                            checked={columnTitleEnabled.value}\r\n                            onCheckedChange={columnTitleEnabled.onChange}\r\n                            labelClassName=\"caption-s font-normal\"\r\n                        />\r\n                    </div>\r\n                </HidingArea.Target>\r\n                <MetricSelection\r\n                    options={options}\r\n                    selected={selected}\r\n                    onChange={values => {\r\n                        setValue(`${id}.fields`, values.map(v => ({\r\n                            name: v,\r\n                            id: uuid(),\r\n                            title: options.find(o => o.value === v)?.text,\r\n                        })))\r\n                    }}\r\n                    expanded={HidingArea.hidden}\r\n                />\r\n            </HidingArea.Root>\r\n        </Modal.Content>\r\n    )\r\n}\r\n","import {useCallback, useMemo} from 'react'\r\n\r\nimport {MY_TEAM_CONFIGURABLE_COLUMNS} from '@bpinc/home-page-state-types'\r\nimport {useMetricsNames} from '@bpinc/lib-helpers-ui'\r\nimport type {MyTeamFields} from '@bpinc/lib-widgets-urls'\r\n\r\n\r\nexport function useMyTeamMetricsOptions() {\r\n    const metricsNames = useMetricsNames()\r\n\r\n    const getMyTeamFieldName = useCallback((columnName: MyTeamFields['name']) => {\r\n        return {\r\n            name: metricsNames.team_name.general,\r\n            acdState: metricsNames.acd_state.general,\r\n            reason: metricsNames.reason.general,\r\n            stateDuration: metricsNames.state_duration.general,\r\n            acdNextState: metricsNames.acd_next_state.general,\r\n            nextReason: metricsNames.next_reason.general,\r\n        }[columnName]\r\n    }, [\r\n        metricsNames.acd_next_state.general,\r\n        metricsNames.acd_state.general,\r\n        metricsNames.next_reason.general,\r\n        metricsNames.reason.general,\r\n        metricsNames.state_duration.general,\r\n        metricsNames.team_name.general,\r\n    ])\r\n\r\n    return useMemo(() => {\r\n        return MY_TEAM_CONFIGURABLE_COLUMNS.map(value => {\r\n            const name = getMyTeamFieldName(value)\r\n\r\n            return {value: value, text: name}\r\n        })\r\n    }, [getMyTeamFieldName])\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useCallback} from 'react'\r\nimport {partial} from 'lodash-es'\r\n\r\nimport {ButtonIcon, IconArrowLeft24, IconArrowRight24} from '@bpinc/lib-jskit-ui'\r\nimport type {StateSetter} from '@bpinc/lib-types-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ninterface SettingsSelectorProps {\r\n    currentFlippingWidgetsIds: string[]\r\n    activeWidgetId: string\r\n    setActiveWidgetId: StateSetter<string>\r\n}\r\n\r\n\r\nexport const SettingsSelector: FC<SettingsSelectorProps> = ({\r\n    currentFlippingWidgetsIds,\r\n    activeWidgetId,\r\n    setActiveWidgetId,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const handleClick = useCallback(\r\n        (direction: 'left' | 'right') => {\r\n            const currentActiveWidgetIndex =\r\n                currentFlippingWidgetsIds.indexOf(activeWidgetId) ?? 0\r\n\r\n            const nextActiveWidgetIndex =\r\n                (currentActiveWidgetIndex + (direction === 'right' ? 1 : -1)) %\r\n                currentFlippingWidgetsIds.length\r\n\r\n            const nextActiveWidgetId =\r\n                currentFlippingWidgetsIds[\r\n                    nextActiveWidgetIndex === -1\r\n                        ? currentFlippingWidgetsIds.length - 1\r\n                        : nextActiveWidgetIndex\r\n                ]\r\n\r\n            setActiveWidgetId(nextActiveWidgetId)\r\n        },\r\n        [activeWidgetId, currentFlippingWidgetsIds, setActiveWidgetId],\r\n    )\r\n\r\n    return (\r\n        <div className=\"flex items-center\">\r\n            <ButtonIcon\r\n                size=\"32\"\r\n                tooltip={t.GLOBAL.previous()}\r\n                onClick={partial(handleClick, 'left')}\r\n            >\r\n                <IconArrowLeft24 />\r\n            </ButtonIcon>\r\n            <ButtonIcon\r\n                size=\"32\"\r\n                tooltip={t.GLOBAL.next()}\r\n                onClick={partial(handleClick, 'right')}\r\n            >\r\n                <IconArrowRight24 />\r\n            </ButtonIcon>\r\n        </div>\r\n    )\r\n}\r\n","import {useCallback, useMemo} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\n\r\nimport {\r\n    MY_SERVICES_DETAILS_CONFIGURABLE_FIELDS,\r\n    MY_STATS_DETAILS_FIELDS,\r\n    MY_TEAM_CONFIGURABLE_COLUMNS,\r\n} from '@bpinc/home-page-state-types'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport type {\r\n    AgentWidget,\r\n    AgentWidgetConfigMyServices,\r\n    AgentWidgetConfigMyStats,\r\n    AgentWidgetConfigMyTeam,\r\n} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {isFlippingWidget} from '../../../../helpers'\r\n\r\n\r\ntype StatFieldFormType = {\r\n    id: string\r\n    name: string\r\n    sort?: 'ASC' | 'DESC'\r\n    title?: string\r\n}\r\n\r\ntype StatFieldsFormType = {\r\n    fields: StatFieldFormType[]\r\n}\r\n\r\ntype MyServicesFormDataType =\r\n    Pick<AgentWidgetConfigMyServices, 'id' | 'type' | 'maxItemsToShow' | 'title' | 'columnTitleEnabled'>\r\n    & StatFieldsFormType\r\ntype MyStatsFormDataType =\r\n    Pick<AgentWidgetConfigMyStats, 'id' | 'type' | 'title'>\r\n    & StatFieldsFormType\r\n type MyTeamFormDataType =\r\n    Pick<AgentWidgetConfigMyTeam, 'id' | 'type' | 'title' | 'columnTitleEnabled' | 'userDummyNames' | 'maxItemsToShow'>\r\n    & StatFieldsFormType\r\n\r\nexport type SettingsFromData = {\r\n    [id: string]: (MyServicesFormDataType | MyStatsFormDataType | MyTeamFormDataType)\r\n}\r\n\r\nexport function useSettingsFormData(widget: AgentWidget) {\r\n    const isFlipping = isFlippingWidget(widget)\r\n    const getMyServicesInitialData = useGetMyServicesInitialData()\r\n    const getMyStatsInitialData = useGetMyStatsInitialData()\r\n    const getMyTeamInitialData = useGetMyTeamInitialData()\r\n\r\n    const widgets = useMemo(() => isFlipping ? widget.widgets : [widget], [isFlipping, widget])\r\n    const initialFormData = useMemo(() => {\r\n        return widgets.reduce<SettingsFromData>((acc, w) => {\r\n            switch (w.type) {\r\n                case 'MY_SERVICES':\r\n                    acc[w.id] = getMyServicesInitialData(w)\r\n                    break\r\n                case 'MY_STATS':\r\n                    acc[w.id] = getMyStatsInitialData(w)\r\n                    break\r\n                case 'MY_TEAM':\r\n                    acc[w.id] = getMyTeamInitialData(w)\r\n                    break\r\n            }\r\n            return acc\r\n        }, {})\r\n    }, [getMyServicesInitialData, getMyStatsInitialData, getMyTeamInitialData, widgets])\r\n\r\n    const form = useForm<SettingsFromData>({\r\n        defaultValues: initialFormData,\r\n    })\r\n\r\n    const onSave = useCallback((onComplete: (result: AgentWidget) => void) =>\r\n        form.handleSubmit(data => {\r\n            const resultWidgets = Object.values(data).map(w => {\r\n                switch (w.type) {\r\n                    case 'MY_TEAM':\r\n                        return createResultConfig(\r\n                            w,\r\n                            MY_TEAM_CONFIGURABLE_COLUMNS,\r\n                        )\r\n                    case 'MY_STATS':\r\n                        return createResultConfig(\r\n                            w,\r\n                            MY_STATS_DETAILS_FIELDS,\r\n                        )\r\n                    case 'MY_SERVICES':\r\n                        return createResultConfig(\r\n                            w,\r\n                            MY_SERVICES_DETAILS_CONFIGURABLE_FIELDS,\r\n                        )\r\n                    default:\r\n                        throw new Error(\r\n                            `Unsupported widget type for widget: ${JSON.stringify(w, null, 2)}`,\r\n                        )\r\n                }\r\n            })\r\n\r\n            if (isFlipping) {\r\n                onComplete({\r\n                    ...widget,\r\n                    widgets: widgets.map(currWidget => {\r\n                        const updatedWidget = resultWidgets.find(\r\n                            ({id}) => id === currWidget.id,\r\n                        )\r\n                        return updatedWidget || currWidget\r\n                    }),\r\n                })\r\n            } else {\r\n                assertDefined(resultWidgets[0])\r\n                onComplete(resultWidgets[0])\r\n            }\r\n\r\n            function createResultConfig<Widget extends SettingsFromData[keyof SettingsFromData]>(\r\n                w: Widget,\r\n                configurableFields: Widget['fields'][number]['name'][],\r\n            ) {\r\n                const originalWidget = widgets.find(\r\n                    ({id}) => id === w.id,\r\n                )\r\n                assertDefined(originalWidget)\r\n                const fields = w.fields.filter(({name}) =>\r\n                    configurableFields.some(stat => stat === name),\r\n                )\r\n                return {\r\n                    ...originalWidget,\r\n                    ...w,\r\n                    fields,\r\n                }\r\n            }\r\n        }),\r\n    [form, isFlipping, widget, widgets],\r\n    )\r\n\r\n    return useMemo(() => ({\r\n        form,\r\n        onSave,\r\n    }), [form, onSave])\r\n}\r\n\r\nfunction useGetMyServicesInitialData() {\r\n    const t = useLocalizationState('t')\r\n\r\n    return useCallback((widget: AgentWidgetConfigMyServices): MyServicesFormDataType => {\r\n        return {\r\n            id: widget.id,\r\n            type: widget.type,\r\n            title: widget.title || t.HOME_PAGE_AGENT_WIDGETS.my_services(),\r\n            fields: widget.fields,\r\n            columnTitleEnabled: widget.columnTitleEnabled,\r\n            maxItemsToShow: widget.maxItemsToShow,\r\n        }\r\n    }, [t.HOME_SCREEN])\r\n}\r\n\r\nfunction useGetMyStatsInitialData() {\r\n    const t = useLocalizationState('t')\r\n\r\n    return useCallback((widget: AgentWidgetConfigMyStats): MyStatsFormDataType => {\r\n        return {\r\n            id: widget.id,\r\n            type: widget.type,\r\n            title: widget.title || t.HOME_PAGE_AGENT_WIDGETS.my_stats(),\r\n            fields: widget.fields,\r\n        }\r\n    }, [t.HOME_SCREEN])\r\n}\r\n\r\nfunction useGetMyTeamInitialData() {\r\n    const t = useLocalizationState('t')\r\n\r\n    return useCallback((widget: AgentWidgetConfigMyTeam): MyTeamFormDataType => {\r\n        return {\r\n            id: widget.id,\r\n            type: widget.type,\r\n            title: widget.title || t.HOME_PAGE_AGENT_WIDGETS.my_team(),\r\n            userDummyNames: widget.userDummyNames,\r\n            columnTitleEnabled: widget.columnTitleEnabled,\r\n            maxItemsToShow: widget.maxItemsToShow,\r\n            fields: widget.fields,\r\n        }\r\n    }, [t.HOME_SCREEN])\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useMemo, useState} from 'react'\r\nimport {DevTool} from '@hookform/devtools'\r\nimport {Button} from '@servicepattern/ui'\r\n\r\nimport {Modal} from '@bpinc/lib-jskit-ui'\r\nimport type {AgentWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\nimport {isFlippingWidget} from '../../../../helpers'\r\nimport {MyServicesConfigModalContent} from './MyServicesConfigModalContent'\r\nimport {MyStatsConfigModalContent} from './MyStatsConfigModalContent'\r\nimport {MyTeamConfigModalContent} from './MyTeamConfigModalContent'\r\nimport {SettingsSelector} from './SettingsSelector'\r\nimport {useSettingsFormData} from './useSettingsFormData'\r\n\r\n\r\ntype SettingsModalProps = CommonModalProps & {\r\n    widget: AgentWidget\r\n    updateWidget: (widget: AgentWidget) => void\r\n}\r\n\r\nexport const SettingsModal: FC<SettingsModalProps> = ({widget, updateWidget, onClose, ...restProps}) => {\r\n    const t = useLocalizationState('t')\r\n    const {\r\n        form: {\r\n            control,\r\n            setValue,\r\n            getValues,\r\n        },\r\n        onSave,\r\n    } = useSettingsFormData(widget)\r\n\r\n    const values = getValues()\r\n    const currentFlippingWidgetsIds = useMemo(() => Object.keys(values), [values])\r\n    const [activeWidgetId, setActiveWidgetId] = useState(() => isFlippingWidget(widget) && currentFlippingWidgetsIds.includes(widget.activeWidgetId)\r\n        ? widget.activeWidgetId\r\n        : currentFlippingWidgetsIds[0],\r\n    )\r\n    const activeWidget = useMemo(() => values[activeWidgetId], [activeWidgetId, values])\r\n\r\n    const handleSubmit = useMemo(() => onSave(result => {\r\n        updateWidget(result)\r\n        onClose()\r\n    }), [onClose, onSave, updateWidget])\r\n\r\n    const titleByType = {\r\n        MY_STATS: t.HOME_PAGE_AGENT_WIDGETS.my_stats(),\r\n        MY_TEAM: t.HOME_PAGE_AGENT_WIDGETS.my_team(),\r\n        MY_SERVICES: t.HOME_PAGE_AGENT_WIDGETS.my_services(),\r\n        BREAK_TIME_REMAINING: t.HOME_PAGE_AGENT_WIDGETS.my_break_time(),\r\n        FLIPPING: '',\r\n    }\r\n\r\n    const content = useMemo(() => {\r\n        switch (activeWidget?.type) {\r\n            case 'MY_TEAM':\r\n                return <MyTeamConfigModalContent id={activeWidgetId} control={control} setValue={setValue} />\r\n            case 'MY_STATS':\r\n                return <MyStatsConfigModalContent id={activeWidgetId} control={control} setValue={setValue} />\r\n            case 'MY_SERVICES':\r\n                return <MyServicesConfigModalContent id={activeWidgetId} control={control} setValue={setValue} />\r\n        }\r\n    }, [activeWidget, activeWidgetId, control, setValue])\r\n\r\n    return (\r\n        <Modal {...restProps} onClose={onClose} className=\"w-[712px]\">\r\n            <Modal.Header contentClassName=\"flex w-full items-center justify-between gap-4\">\r\n                <span>{titleByType[activeWidget.type]}</span>\r\n                {currentFlippingWidgetsIds?.length > 1 && (\r\n                    <SettingsSelector\r\n                        currentFlippingWidgetsIds={currentFlippingWidgetsIds}\r\n                        activeWidgetId={activeWidgetId}\r\n                        setActiveWidgetId={setActiveWidgetId}\r\n                    />\r\n                )}\r\n            </Modal.Header>\r\n            {content}\r\n            <Modal.Actions>\r\n                <Button onClick={() => onClose()} variant=\"neutral\">\r\n                    {t.GLOBAL.cancel()}\r\n                </Button>\r\n                <Button onClick={handleSubmit} variant=\"primary\">\r\n                    {t.GLOBAL.ok()}\r\n                </Button>\r\n            </Modal.Actions>\r\n            {process.env.NODE_ENV === 'development' && (\r\n                <DevTool control={control} />\r\n            )}\r\n        </Modal>\r\n    )\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {useTemplateConfigs} from './useTemplateConfigs'\r\n\r\n\r\nexport function useNewHomepageOptions() {\r\n    const configs = useTemplateConfigs()\r\n\r\n    const options = useMemo(() => {\r\n        return configs.map((template, index) => ({\r\n            value: index.toString(),\r\n            content: template.name,\r\n        })) || []\r\n    }, [configs])\r\n\r\n    return useMemo(() => ({\r\n        options,\r\n        configs,\r\n    }), [configs, options])\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport type {HomePageNewConfig} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport function useTemplateConfigs() {\r\n    const {t} = useLocalizationState()\r\n    return useMemo<HomePageNewConfig[]>(() => [\r\n        {\r\n            isGlobal: false,\r\n            isDefault: false,\r\n            name: t.HOME_PAGE_SUPERVISOR_TEMPLATES.empty_template(),\r\n            widgets: [],\r\n        },\r\n        {\r\n            isGlobal: false,\r\n            isDefault: false,\r\n            name: t.HOME_PAGE_SUPERVISOR_TEMPLATES.all_agents_template(),\r\n            widgets: [\r\n                {\r\n                    id: '1',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.all_agents_agents(),\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: 12,\r\n                    height: 12,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '1',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'acd_state',\r\n                                },\r\n                                {\r\n                                    id: '3',\r\n                                    statName: 'state_duration',\r\n                                },\r\n                                {\r\n                                    id: '4',\r\n                                    statName: 'agent_idle_time',\r\n                                },\r\n                                {\r\n                                    id: '5',\r\n                                    statName: 'agent_total_break_time',\r\n                                },\r\n                                {\r\n                                    id: '6',\r\n                                    statName: 'active_item_service_name',\r\n                                },\r\n                                {\r\n                                    id: '7',\r\n                                    statName: 'active_item_media_type',\r\n                                },\r\n                                {\r\n                                    id: '8',\r\n                                    statName: 'active_item_hold_duration',\r\n                                },\r\n                                {\r\n                                    id: '9',\r\n                                    statName: 'active_item_direction',\r\n                                },\r\n                                {\r\n                                    id: '10',\r\n                                    statName: 'active_item_is_flagged',\r\n                                },\r\n                                {\r\n                                    id: '11',\r\n                                    statName: 'active_item_talk_duration',\r\n                                },\r\n                                {\r\n                                    id: '12',\r\n                                    statName: 'active_item_state',\r\n                                },\r\n                                {\r\n                                    id: '13',\r\n                                    statName: 'calls_average_acw_time_per_day',\r\n                                },\r\n                                {\r\n                                    id: '14',\r\n                                    statName: 'in_calls_handled_per_day',\r\n                                },\r\n                                {\r\n                                    id: '15',\r\n                                    statName: 'in_calls_rejected_per_day',\r\n                                },\r\n                                {\r\n                                    id: '16',\r\n                                    statName: 'out_calls_handled_per_day',\r\n                                },\r\n                                {\r\n                                    id: '17',\r\n                                    statName: 'acd_next_state',\r\n                                },\r\n                                {\r\n                                    id: '18',\r\n                                    statName: 'team_name',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 150,\r\n                            order: [\r\n                                {\r\n                                    by: '1',\r\n                                    dir: 'ASC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    columtitle: true,\r\n                    agent_stats: {\r\n                        busy: true,\r\n                        ready: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            isGlobal: false,\r\n            isDefault: false,\r\n            name: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_template(),\r\n            widgets: [\r\n                {\r\n                    id: '1',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_queues(),\r\n                    x: 2,\r\n                    y: 0,\r\n                    width: 5,\r\n                    height: 6,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'service_grid',\r\n                        req: {\r\n                            id: '2',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'name',\r\n                                },\r\n                                {\r\n                                    id: '9',\r\n                                    statName: 'service_level_threshold_time',\r\n                                },\r\n                                {\r\n                                    id: '3',\r\n                                    statName: 'in_calls_abandoned_in_queue_per_day',\r\n                                },\r\n                                {\r\n                                    id: '4',\r\n                                    statName: 'in_max_wait_time',\r\n                                },\r\n                                {\r\n                                    id: '5',\r\n                                    statName: 'in_calls_waiting',\r\n                                },\r\n                                {\r\n                                    id: '6',\r\n                                    statName: 'agents_logged',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'in_calls_received_per_day',\r\n                                },\r\n                            ],\r\n                            service_ids: [],\r\n                            limit: 6,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    columtitle: true,\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: false,\r\n                    },\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_longest_calls(),\r\n                    x: 7,\r\n                    y: 0,\r\n                    width: 2,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    id: '2',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '9',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'state_duration',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 5,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_longest_not_ready(),\r\n                    x: 7,\r\n                    y: 3,\r\n                    width: 2,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    id: '3',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '10',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'state_duration',\r\n                                },\r\n                                {\r\n                                    id: '3',\r\n                                    statName: 'reason',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 5,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_longest_hold(),\r\n                    x: 7,\r\n                    y: 6,\r\n                    width: 2,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    id: '4',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '11',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'active_item_hold_duration',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 5,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_all_agents(),\r\n                    x: 9,\r\n                    y: 0,\r\n                    width: 3,\r\n                    height: 12,\r\n                    show_settings: true,\r\n                    id: '5',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '13',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'acd_state',\r\n                                },\r\n                                {\r\n                                    id: '3',\r\n                                    statName: 'in_calls_handled_per_day',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 70,\r\n                            order: [\r\n                                {\r\n                                    by: '1',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_waiting_in_all_queues(),\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: 2,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    id: '6',\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_calls_waiting',\r\n                            'in_max_wait_time',\r\n                        ],\r\n                    },\r\n                    value: 'in_calls_waiting',\r\n                    optValue: 'in_max_wait_time | sp_duration',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_positive_disposition_counts(),\r\n                    x: 5,\r\n                    y: 6,\r\n                    width: 2,\r\n                    height: 6,\r\n                    show_settings: true,\r\n                    id: '7',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '8',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'calls_dispositions_per_day',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 9,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_abandoned(),\r\n                    x: 0,\r\n                    y: 4,\r\n                    width: 2,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    id: '9',\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_calls_abandoned_in_queue_per_day',\r\n                            'in_calls_short_abandoned_in_queue_ratio_per_day',\r\n                        ],\r\n                    },\r\n                    value: 'in_calls_abandoned_in_queue_per_day',\r\n                    optValue: 'in_calls_short_abandoned_in_queue_ratio_per_day | sp_percent',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_queued(),\r\n                    x: 0,\r\n                    y: 8,\r\n                    width: 2,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    id: '10',\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_calls_queued_per_day',\r\n                            'in_calls_abandoned_in_queue_ratio_per_day',\r\n                        ],\r\n                    },\r\n                    value: 'in_calls_queued_per_day',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    optValue: 'in_calls_abandoned_in_queue_ratio_per_day | sp_percent',\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_longest_acw(),\r\n                    x: 7,\r\n                    y: 9,\r\n                    width: 2,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    id: '11',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '12',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'state_duration',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 5,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'ASC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    type: 'summary',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.contact_center_overview_agent_state_summary(),\r\n                    x: 2,\r\n                    y: 6,\r\n                    width: 3,\r\n                    height: 6,\r\n                    show_settings: true,\r\n                    id: '12',\r\n                    subscription: {\r\n                        type: 'summary',\r\n                        req: {\r\n                            id: '12',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'acd_state',\r\n                                },\r\n                            ],\r\n                            limit: 1000,\r\n                            order_by: '1',\r\n                            order_dir: 'ASC',\r\n                            filter_by: '1',\r\n                            filter_value: '',\r\n                            filter_operation: 'NE',\r\n                            team_ids: [],\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            isGlobal: false,\r\n            isDefault: false,\r\n            name: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_template(),\r\n            widgets: [\r\n                {\r\n                    id: '1',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_new_email(),\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_email_received_new_per_day',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_email_received_new_per_day',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '2',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_email_carried_over(),\r\n                    x: 3,\r\n                    y: 0,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_email_carried_over',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_email_carried_over',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '3',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_email_handled(),\r\n                    x: 0,\r\n                    y: 4,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_email_handled_new_per_day',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_email_handled_new_per_day',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '4',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_email_replied(),\r\n                    x: 0,\r\n                    y: 8,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_email_processed_replied_per_day',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_email_processed_replied_per_day',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '5',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_top_personal_queues(),\r\n                    x: 6,\r\n                    y: 0,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '5',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'in_email_waiting_in_personal_queues',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 25,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    id: '6',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_top_agents_by_email_handled(),\r\n                    x: 9,\r\n                    y: 0,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '6',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'in_email_handled_new_per_day',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 25,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    id: '7',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_email_services(),\r\n                    x: 6,\r\n                    y: 8,\r\n                    width: 6,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'service_grid',\r\n                        req: {\r\n                            id: '7',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'service_level_threshold_time',\r\n                                },\r\n                                {\r\n                                    id: '3',\r\n                                    statName: 'service_level_target',\r\n                                },\r\n                                {\r\n                                    id: '4',\r\n                                    statName: 'service_level_per_day',\r\n                                },\r\n                                {\r\n                                    id: '5',\r\n                                    statName: 'in_email_received_new_per_day',\r\n                                },\r\n                                {\r\n                                    id: '6',\r\n                                    statName: 'in_email_carried_over',\r\n                                },\r\n                                {\r\n                                    id: '7',\r\n                                    statName: 'in_email_waiting_in_personal_queues',\r\n                                },\r\n                                {\r\n                                    id: '8',\r\n                                    statName: 'in_email_processed_replied_per_day',\r\n                                },\r\n                                {\r\n                                    id: '9',\r\n                                    statName: 'in_email_processed_noreply_per_day',\r\n                                },\r\n                            ],\r\n                            service_ids: [],\r\n                            limit: 20,\r\n                            order: [\r\n                                {\r\n                                    by: '1',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: false,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_email_dispositioned_wo_reply(),\r\n                    x: 3,\r\n                    y: 8,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    id: '8',\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_email_processed_noreply_per_day',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_email_processed_noreply_per_day',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_email_in_personal_queues(),\r\n                    x: 3,\r\n                    y: 4,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    id: '9',\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_email_waiting_in_personal_queues',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_email_waiting_in_personal_queues',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_bottom_agents_by_email_handled(),\r\n                    x: 6,\r\n                    y: 4,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    id: '10',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '10',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'in_email_handled_new_per_day',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 20,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'ASC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.email_wallboard_top_break_time(),\r\n                    x: 9,\r\n                    y: 4,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    id: '11',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '11',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'agent_total_break_time',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 20,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            isGlobal: false,\r\n            isDefault: false,\r\n            name: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_template(),\r\n            widgets: [\r\n                {\r\n                    id: '1',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_in_queue_max_wait(),\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: 2,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_calls_waiting',\r\n                            'in_max_wait_time',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_calls_waiting',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    optValue: 'in_max_wait_time | sp_duration',\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '2',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_in_ivr(),\r\n                    x: 2,\r\n                    y: 0,\r\n                    width: 2,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_calls_in_ivr',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_calls_in_ivr',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '3',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_callbacks_in_queue(),\r\n                    x: 4,\r\n                    y: 0,\r\n                    width: 2,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_callbacks_waiting',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_callbacks_waiting',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 1,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '4',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_abandoned(),\r\n                    x: 6,\r\n                    y: 0,\r\n                    width: 2,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_calls_abandoned_in_queue_ratio_per_day',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_calls_abandoned_in_queue_ratio_per_day | sp_percent',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '5',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_service_queues(),\r\n                    x: 0,\r\n                    y: 3,\r\n                    width: 12,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'service_grid',\r\n                        req: {\r\n                            id: '5',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'in_calls_received_per_day',\r\n                                },\r\n                                {\r\n                                    id: '3',\r\n                                    statName: 'in_transfers_received_per_day',\r\n                                },\r\n                                {\r\n                                    id: '4',\r\n                                    statName: 'in_calls_queued_per_day',\r\n                                },\r\n                                {\r\n                                    id: '5',\r\n                                    statName: 'in_callbacks_waiting',\r\n                                },\r\n                                {\r\n                                    id: '6',\r\n                                    statName: 'in_calls_abandoned_percent_per_day',\r\n                                },\r\n                                {\r\n                                    id: '7',\r\n                                    statName: 'in_calls_short_abandoned_in_queue_ratio_per_day',\r\n                                },\r\n                                {\r\n                                    id: '8',\r\n                                    statName: 'in_calls_in_ivr',\r\n                                },\r\n                                {\r\n                                    id: '9',\r\n                                    statName: 'in_calls_waiting',\r\n                                },\r\n                                {\r\n                                    id: '10',\r\n                                    statName: 'in_max_wait_time',\r\n                                },\r\n                                {\r\n                                    id: '11',\r\n                                    statName: 'in_calls_duration_average_per_day',\r\n                                },\r\n                                {\r\n                                    id: '12',\r\n                                    statName: 'in_calls_handled_per_day',\r\n                                },\r\n                                {\r\n                                    id: '13',\r\n                                    statName: 'service_level_per_day',\r\n                                },\r\n                                {\r\n                                    id: '14',\r\n                                    statName: 'in_average_speed_of_answer',\r\n                                },\r\n                                {\r\n                                    id: '15',\r\n                                    statName: 'calls_average_acw_time_per_day',\r\n                                },\r\n                                {\r\n                                    id: '16',\r\n                                    statName: 'in_ewt',\r\n                                },\r\n                            ],\r\n                            service_ids: [],\r\n                            limit: 10,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    columtitle: true,\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: false,\r\n                    },\r\n                },\r\n                {\r\n                    id: '6',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_busy_agents(),\r\n                    x: 0,\r\n                    y: 7,\r\n                    width: 4,\r\n                    height: 5,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '6',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'active_item_service_name',\r\n                                },\r\n                                {\r\n                                    id: '3',\r\n                                    statName: 'state_duration',\r\n                                },\r\n                                {\r\n                                    id: '4',\r\n                                    statName: 'acd_next_state',\r\n                                },\r\n                                {\r\n                                    id: '5',\r\n                                    statName: 'active_item_talk_duration',\r\n                                },\r\n                                {\r\n                                    id: '6',\r\n                                    statName: 'active_item_hold_duration',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 18,\r\n                            order: [\r\n                                {\r\n                                    by: '3',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    columtitle: true,\r\n                    agent_stats: {\r\n                        busy: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                },\r\n                {\r\n                    type: 'gauge',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_estimated_wait_time(),\r\n                    x: 8,\r\n                    y: 0,\r\n                    width: 2,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    id: '7',\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_ewt',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_ewt | sp_duration',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_asa(),\r\n                    x: 10,\r\n                    y: 0,\r\n                    width: 2,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    id: '8',\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'in_average_speed_of_answer',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'in_average_speed_of_answer | sp_duration',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_top_not_ready_agents(),\r\n                    x: 6,\r\n                    y: 7,\r\n                    width: 3,\r\n                    height: 5,\r\n                    show_settings: true,\r\n                    id: '9',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '9',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'state_duration',\r\n                                },\r\n                                {\r\n                                    id: '3',\r\n                                    statName: 'reason',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 18,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    columtitle: true,\r\n                    agent_stats: {\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_top_after_call_work(),\r\n                    x: 4,\r\n                    y: 7,\r\n                    width: 2,\r\n                    height: 5,\r\n                    show_settings: true,\r\n                    id: '10',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '10',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'state_duration',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 18,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        after_call_work: true,\r\n                    },\r\n                    columtitle: true,\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_top_idle_time_agents(),\r\n                    x: 9,\r\n                    y: 7,\r\n                    width: 3,\r\n                    height: 2,\r\n                    show_settings: true,\r\n                    id: '11',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '11',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'agent_idle_time',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 6,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                    },\r\n                    columtitle: true,\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                },\r\n                {\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.inbound_wallboard_longest_hold(),\r\n                    x: 9,\r\n                    y: 9,\r\n                    width: 3,\r\n                    height: 3,\r\n                    show_settings: true,\r\n                    id: '12',\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '12',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'active_item_hold_duration',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 6,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    columtitle: true,\r\n                    agent_stats: {\r\n                        busy: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            isGlobal: false,\r\n            isDefault: false,\r\n            name: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_template(),\r\n            widgets: [\r\n                {\r\n                    id: '1',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_occupancy(),\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'agent_occupancy',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'agent_occupancy | sp_percent',\r\n                    maxThreshold: 120,\r\n                    warningThreshold: 70,\r\n                    alertThreshold: 50,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '2',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_outbound_calling_rate(),\r\n                    x: 3,\r\n                    y: 0,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'out_calls_current_call_rate',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'out_calls_current_call_rate',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '3',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_abandoned(),\r\n                    x: 6,\r\n                    y: 0,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'out_calls_abandoned_ratio_per_day',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'out_calls_abandoned_ratio_per_day | sp_percent',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '4',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_outb_in_q_now(),\r\n                    x: 9,\r\n                    y: 0,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'out_calls_waiting',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'out_calls_waiting',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '5',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_campaigns(),\r\n                    x: 0,\r\n                    y: 4,\r\n                    width: 6,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'service_grid',\r\n                        req: {\r\n                            id: '5',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'records_remaining',\r\n                                },\r\n                                {\r\n                                    id: '3',\r\n                                    statName: 'out_calls_current_call_rate',\r\n                                },\r\n                                {\r\n                                    id: '4',\r\n                                    statName: 'out_calls_in_progress',\r\n                                },\r\n                                {\r\n                                    id: '5',\r\n                                    statName: 'out_calls_duration_average_per_day',\r\n                                },\r\n                                {\r\n                                    id: '6',\r\n                                    statName: 'out_calls_answered_ratio_per_day',\r\n                                },\r\n                                {\r\n                                    id: '7',\r\n                                    statName: 'agent_occupancy',\r\n                                },\r\n                            ],\r\n                            service_ids: [],\r\n                            limit: 20,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: false,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    id: '6',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_top_successful_agents(),\r\n                    x: 6,\r\n                    y: 4,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '6',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'calls_dispositions_ratio_per_day',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 30,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    id: '7',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_top_agents_by_avg_call_duration(),\r\n                    x: 9,\r\n                    y: 4,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '7',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'out_calls_duration_average_per_day',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 30,\r\n                            order: [\r\n                                {\r\n                                    by: '2',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n                {\r\n                    id: '8',\r\n                    type: 'summary',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_agent_state_summary(),\r\n                    x: 0,\r\n                    y: 8,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'summary',\r\n                        req: {\r\n                            id: '8',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'acd_state',\r\n                                },\r\n                            ],\r\n                            limit: 1000,\r\n                            order_by: '1',\r\n                            order_dir: 'ASC',\r\n                            filter_by: '1',\r\n                            filter_value: '',\r\n                            filter_operation: 'NE',\r\n                            team_ids: [],\r\n                        },\r\n                    },\r\n                },\r\n                {\r\n                    id: '9',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_outbound_calls_on_agents(),\r\n                    x: 3,\r\n                    y: 8,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'out_calls_active_on_agents',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'out_calls_active_on_agents',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '10',\r\n                    type: 'single',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_records_completed_today(),\r\n                    x: 6,\r\n                    y: 8,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'stats_total',\r\n                        req: [\r\n                            'records_completed_per_day',\r\n                        ],\r\n                        service_ids: [],\r\n                    },\r\n                    value: 'records_completed_per_day',\r\n                    maxThreshold: 200,\r\n                    warningThreshold: 100,\r\n                    alertThreshold: 180,\r\n                    warning_sound: false,\r\n                },\r\n                {\r\n                    id: '11',\r\n                    type: 'grid',\r\n                    title: t.HOME_PAGE_SUPERVISOR_TEMPLATES.outbound_campaigns_top_break_time(),\r\n                    x: 9,\r\n                    y: 8,\r\n                    width: 3,\r\n                    height: 4,\r\n                    show_settings: true,\r\n                    subscription: {\r\n                        type: 'agent_grid',\r\n                        req: {\r\n                            id: '11',\r\n                            columns: [\r\n                                {\r\n                                    id: '1',\r\n                                    statName: 'first_last_name',\r\n                                },\r\n                                {\r\n                                    id: '2',\r\n                                    statName: 'agent_total_break_time',\r\n                                },\r\n                            ],\r\n                            team_ids: [],\r\n                            limit: 6,\r\n                            order: [\r\n                                {\r\n                                    by: '1',\r\n                                    dir: 'DESC',\r\n                                },\r\n                            ],\r\n                        },\r\n                    },\r\n                    agent_stats: {\r\n                        ready: true,\r\n                        busy: true,\r\n                        after_call_work: true,\r\n                        not_ready: true,\r\n                    },\r\n                    limit: {\r\n                        subteam: true,\r\n                        logged_in_only: true,\r\n                    },\r\n                    columtitle: true,\r\n                },\r\n            ],\r\n        },\r\n    ], [t.HOME_PAGE_SUPERVISOR_TEMPLATES])\r\n}\r\n","import React, {useCallback, useState} from 'react'\r\nimport {Button} from '@servicepattern/ui'\r\n\r\nimport {useHomePageStateMethods} from '@bpinc/home-page-state-context'\r\nimport {InlineAlert, Modal, SelectField} from '@bpinc/lib-jskit-ui'\r\nimport type {HomePageConfig} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\nimport {useNewHomepageOptions} from './useNewHomepageOptions'\r\n\r\n\r\ntype NewHomepageModalProps = CommonModalProps & {\r\n    onCreated: (config: HomePageConfig) => void\r\n}\r\n\r\nexport const NewHomepageModal: React.FC<NewHomepageModalProps> = ({\r\n    onClose: closeNewWallboardModal,\r\n    onCreated,\r\n    processing,\r\n    ...props\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const {createConfig} = useHomePageStateMethods()\r\n    const [showError, setShowError] = useState(false)\r\n    const [selectedTemplateIndex, setSelectedTemplateIndex] = useState<string | undefined>(undefined)\r\n\r\n    const {options, configs} = useNewHomepageOptions()\r\n\r\n    const isDisabled = !selectedTemplateIndex\r\n\r\n    const handleSelectChange = useCallback((value: string | undefined) => {\r\n        setSelectedTemplateIndex(value)\r\n    }, [])\r\n\r\n    const handleCreateNewConfig = useCallback(async () => {\r\n        setShowError(false)\r\n        processing.setTrue()\r\n        try {\r\n            const newConfig = await createConfig(configs[Number(selectedTemplateIndex)])\r\n            onCreated(newConfig)\r\n            closeNewWallboardModal()\r\n\r\n        } catch (e) {\r\n            setShowError(true)\r\n        }\r\n        processing.setFalse()\r\n    }, [closeNewWallboardModal, configs, createConfig, onCreated, processing, selectedTemplateIndex])\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            onClose={closeNewWallboardModal}\r\n        >\r\n            <Modal.Header>\r\n                {t.HOME_SCREEN.new_home_page_title()}\r\n            </Modal.Header>\r\n            <Modal.Content className=\"flex flex-col gap-4\">\r\n                {\r\n                    showError && (\r\n                        <InlineAlert\r\n                            variant=\"error\"\r\n                            title={t.HOME_SCREEN.create_error_title()}\r\n                            text={t.HOME_SCREEN.create_error_content()}\r\n                        />\r\n                    )\r\n                }\r\n                <SelectField\r\n                    label={t.HOME_SCREEN.new_home_page_type()}\r\n                    placeholder={t.HOME_SCREEN.new_home_page_select_placeholder()}\r\n                    options={options}\r\n                    value={selectedTemplateIndex}\r\n                    onChange={handleSelectChange}\r\n                />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={() => closeNewWallboardModal()} disabled={processing.value} variant=\"neutral\">\r\n                    {t.GLOBAL.cancel()}\r\n                </Button>\r\n                <Button\r\n                    onClick={handleCreateNewConfig}\r\n                    state={\r\n                        isDisabled\r\n                            ? 'disabled'\r\n                            : processing.value\r\n                                ? 'loading'\r\n                                : undefined\r\n                    }\r\n                    variant=\"primary\"\r\n                >\r\n                    {t.GLOBAL.create()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","import type {ReactElement, ReactFragment} from 'react'\r\nimport React, {\r\n    useCallback,\r\n    useEffect,\r\n    useLayoutEffect,\r\n    useMemo,\r\n    useState,\r\n} from 'react'\r\nimport {useSearchParams} from 'react-router-dom'\r\nimport produce from 'immer'\r\nimport {isEqual, noop} from 'lodash-es'\r\nimport {createContext} from 'use-context-selector'\r\n\r\nimport {useBrowserTabMetaInfo} from '@bpinc/ad-current-tab-data-context'\r\nimport {useDirectoryStateMethods} from '@bpinc/ad-directory-state-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {createUIStateSelectorHook} from '@bpinc/ad-state-context-factory'\r\nimport {useHomePageState, useHomePageStateMethods} from '@bpinc/home-page-state-context'\r\nimport {isAgentWidget, isAgentWidgets, isHomePageAgentConfig} from '@bpinc/home-page-state-types'\r\nimport {\r\n    isUrl,\r\n    TabsManager,\r\n    useAsRef,\r\n    useBoolean,\r\n    useDidUnmount,\r\n} from '@bpinc/lib-helpers'\r\nimport type {FCWithChildren, StateSetter} from '@bpinc/lib-types-helpers'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport {uuid} from '@bpinc/lib-uuid'\r\nimport type {\r\n    AgentFlippingWidget,\r\n    AgentSimpleWidget,\r\n    AgentWidget,\r\n    HomePageConfig,\r\n    HomePageWidget,\r\n    SupervisorWidget,\r\n} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {isFlippingWidget, makeLinkToHomePageApp} from '../helpers'\r\nimport {useOpenFlippingWidgetsModal} from './agent/modals'\r\nimport {useOpenRemoveWidgetModal} from './modals'\r\n\r\n\r\nexport type HomePageViewType = 'preview' | 'supervisor' | 'edit'\r\n\r\ntype User = {\r\n    id: string\r\n    teamId?: string\r\n}\r\ninterface HomePageUIContextValue {\r\n    activeConfig: HomePageConfig | undefined\r\n    setActiveConfig: StateSetter<HomePageConfig | undefined>\r\n    updateWidget: (updatedWidgetConfig: HomePageWidget) => void\r\n    addWidget: (newWidgetConfig: AgentWidget | SupervisorWidget) => void\r\n    setActiveFlippingWidget: (\r\n        widgetId: string,\r\n        newActiveWidgetId: string\r\n    ) => void\r\n    openFlippingWidgetsSettings: (\r\n        widget: AgentWidget\r\n    ) => void\r\n    openRemoveWidget: (widget: AgentWidget | SupervisorWidget) => void\r\n    selectedUser: User\r\n    setSelectedUser: StateSetter<User>\r\n    mode: HomePageViewType\r\n    setMode: (mode: HomePageViewType) => void\r\n    isDirty: boolean\r\n    appLink: string\r\n    isLoading: boolean\r\n    setIsLoading: StateSetter<boolean>\r\n    tabsManager: TabsManager | undefined\r\n    businessUserMode: boolean\r\n}\r\n\r\nconst HomePageUIContext = createContext<HomePageUIContextValue>({\r\n    activeConfig: undefined,\r\n    setActiveConfig: noop,\r\n    updateWidget: noop,\r\n    addWidget: noop,\r\n    openRemoveWidget: noop,\r\n    setActiveFlippingWidget: noop,\r\n    openFlippingWidgetsSettings: noop,\r\n    selectedUser: {id: ''},\r\n    setSelectedUser: noop,\r\n    mode: 'supervisor',\r\n    setMode: noop,\r\n    isDirty: false,\r\n    appLink: '',\r\n    isLoading: false,\r\n    setIsLoading: noop,\r\n    tabsManager: undefined,\r\n    businessUserMode: false,\r\n})\r\n\r\nHomePageUIContext.displayName = 'HomePageUIContext'\r\n\r\nexport const HomePageUIContextProvider: FCWithChildren<\r\n    ReactElement | ReactFragment\r\n> = ({children}) => {\r\n    const {t} = useLocalizationState()\r\n    const {\r\n        userId: selfUserId,\r\n        teamId: selfTeamId,\r\n        serverOrigin,\r\n    } = useSessionState(['userId', 'serverOrigin', 'teamId'])\r\n    const {getAgentTeams} = useDirectoryStateMethods()\r\n\r\n    const {privileges, isAgent, isSupervisor} = useSessionState()\r\n    const {value: businessUserMode, setTrue: enableBusinessUserMode, setFalse: disableBusinessUserMode} = useBoolean(false)\r\n    const isBusinessUser = !isAgent && !isSupervisor\r\n\r\n    const hasEditRights = useMemo(() => privileges.CUSTOMIZE_HOME_PAGE_VIEWS || privileges.PUSH_PULL_GLOBAL_HOME_PAGE_VIEWS, [privileges])\r\n\r\n    assertDefined(selfUserId)\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n    const pageParams = useMemo(() => ({\r\n        configId: searchParams.get('configId') ?? (window.history.state?.configId as string | undefined),\r\n        userId: searchParams.get('userId') ?? (window.history.state?.userId as string | undefined),\r\n        teamId: searchParams.get('teamId') ?? (window.history.state?.teamId as string | undefined),\r\n        edit: (searchParams.get('edit') ?? window.history.state?.edit) === 'true',\r\n    }), [searchParams])\r\n\r\n    const allConfigs = useHomePageState('configs')\r\n    const [activeConfig, setActiveConfig] = useState(\r\n        () => allConfigs.find(c => c.id === pageParams.configId),\r\n    )\r\n    useEffect(() => {\r\n        if ((!activeConfig || !isUrl(activeConfig.id)) && isBusinessUser) {\r\n            enableBusinessUserMode()\r\n            return\r\n        }\r\n        disableBusinessUserMode()\r\n    }, [activeConfig, isBusinessUser, allConfigs, setActiveConfig, enableBusinessUserMode, disableBusinessUserMode])\r\n\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [selectedUser, setSelectedUser] = useState<User>({\r\n        id: pageParams.userId || selfUserId,\r\n        teamId: pageParams.teamId || selfTeamId,\r\n    })\r\n    const [mode, setMode] = useState<HomePageViewType>(\r\n        (pageParams.edit && hasEditRights) ? 'edit' : 'supervisor',\r\n    )\r\n\r\n    const setModePublic = useCallback((newMode: HomePageViewType) => {\r\n        if (newMode === 'edit' && !hasEditRights) {\r\n            return\r\n        }\r\n        setMode(newMode)\r\n    }, [setMode, hasEditRights])\r\n\r\n    const tabsManager = useMemo(() => new TabsManager('home-page'), [])\r\n\r\n    const savedConfig = useMemo(\r\n        () => activeConfig ? allConfigs.find(({id}) => id === activeConfig?.id) : undefined,\r\n        [activeConfig, allConfigs],\r\n    )\r\n    const isDirty = useMemo(\r\n        () => !isEqual(activeConfig?.widgets, savedConfig?.widgets) || activeConfig?.name !== savedConfig?.name,\r\n        [activeConfig?.name, activeConfig?.widgets, savedConfig?.name, savedConfig?.widgets],\r\n    )\r\n\r\n    const appLink = useMemo(\r\n        () =>\r\n            makeLinkToHomePageApp({\r\n                serverOrigin,\r\n                configId: activeConfig?.id,\r\n                userId: selectedUser.id,\r\n                teamId: selectedUser.teamId,\r\n                edit: mode === 'edit',\r\n            }),\r\n        [activeConfig?.id, mode, selectedUser.id, selectedUser.teamId, serverOrigin],\r\n    )\r\n\r\n    const {\r\n        subscribeForAgentStats,\r\n        subscribeForTeamStats,\r\n        unsubscribeFromTeamStats,\r\n        subscribeForServiceStats,\r\n        unsubscribeFromAgentStats,\r\n        unsubscribeFromServicesStats,\r\n        getConfigs,\r\n    } = useHomePageStateMethods()\r\n\r\n    //Self teamId may be undefined on first render and appear later\r\n    useEffect(() => {\r\n        const teamChangedForSelfUser =\r\n            selectedUser.id === selfUserId &&\r\n            selfTeamId &&\r\n            !selectedUser.teamId\r\n        if (teamChangedForSelfUser) {\r\n            setSelectedUser(prev => ({\r\n                ...prev,\r\n                teamId: selfTeamId,\r\n            }))\r\n        }\r\n    }, [selectedUser.id, selectedUser.teamId, selfTeamId, selfUserId])\r\n\r\n    useEffect(function loadConfigs() {\r\n        const getData = async () => {\r\n            setIsLoading(true)\r\n            Promise.allSettled([getConfigs(), getAgentTeams()])\r\n            setIsLoading(false)\r\n        }\r\n        getData()\r\n    }, [getAgentTeams, getConfigs])\r\n\r\n    const activeConfigRef = useAsRef(activeConfig)\r\n    // Update active config if data on server updated\r\n    useEffect(function updateActiveConfig() {\r\n        const storedConfig = allConfigs.find(c => c.id === activeConfigRef.current?.id)\r\n        if (isEqual(activeConfigRef.current, storedConfig)) {\r\n            return\r\n        }\r\n        setActiveConfig(storedConfig)\r\n    }, [activeConfigRef, allConfigs])\r\n\r\n    // Clear search params after loading\r\n    useLayoutEffect(function clearSearchPrams() {\r\n        if (searchParams.size) {\r\n            setSearchParams(undefined)\r\n            window.history.replaceState(Object.fromEntries(searchParams), '')\r\n        }\r\n    }, [isLoading, searchParams, setSearchParams])\r\n\r\n    const {id: tabId, app} = useBrowserTabMetaInfo()\r\n\r\n    // Window name sets if tab open as an editor app,\r\n    // in case exiting editor mode we should clean window name to prevent open editor in this tab\r\n    useEffect(function clearWindowName() {\r\n        if (mode === 'supervisor' && window.name) {\r\n            window.name = ''\r\n        }\r\n    }, [mode])\r\n\r\n    const viewName = activeConfig?.isDefault ? t.HOME_SCREEN.home_tab() : activeConfig?.name || ''\r\n    // For standalone app tabb title should be set as a view name\r\n    useEffect(function setWindowTitle() {\r\n        if (app === 'home-page') {\r\n            window.document.title = viewName\r\n        }\r\n    }, [app, viewName])\r\n\r\n    // Subscribe for widgets data\r\n    useEffect(function subscribeForWidgetsData() {\r\n        if (!activeConfig || !activeConfig.widgets.length) {\r\n            return\r\n        }\r\n        assertDefined(selectedUser.teamId)\r\n        if (isHomePageAgentConfig(activeConfig)) {\r\n            subscribeForAgentStats(activeConfig, selectedUser.id, tabId)\r\n            subscribeForTeamStats(activeConfig, selectedUser.teamId, tabId)\r\n            subscribeForServiceStats(activeConfig, selectedUser.teamId, tabId)\r\n        }\r\n    }, [\r\n        activeConfig,\r\n        selectedUser.id,\r\n        selectedUser.teamId,\r\n        subscribeForAgentStats,\r\n        subscribeForServiceStats,\r\n        subscribeForTeamStats,\r\n        tabId,\r\n    ])\r\n\r\n    useDidUnmount(() => {\r\n        unsubscribeFromAgentStats(tabId)\r\n        unsubscribeFromServicesStats(tabId)\r\n        unsubscribeFromTeamStats(tabId)\r\n    })\r\n\r\n    const addWidget = useCallback((newWidgetConfig: AgentWidget | SupervisorWidget) => {\r\n        setActiveConfig(produce(draft => {\r\n            if (!draft) {\r\n                return\r\n            }\r\n            draft.widgets.push(newWidgetConfig)\r\n        }))\r\n    }, [])\r\n\r\n    const updateWidget = useCallback(\r\n        (updatedWidgetConfig: AgentWidget | SupervisorWidget) => {\r\n            setActiveConfig(\r\n                produce(draft => {\r\n                    assertDefined(draft)\r\n                    const widgetIndex =\r\n                        draft.widgets.findIndex(\r\n                            w => w.id === updatedWidgetConfig.id,\r\n                        ) ?? -1\r\n\r\n                    if (widgetIndex === -1) {\r\n                        return\r\n                    }\r\n\r\n                    draft.widgets[widgetIndex] = updatedWidgetConfig\r\n                }),\r\n            )\r\n        },\r\n        [],\r\n    )\r\n\r\n    const saveFlippingWidgets = React.useCallback(\r\n        (widget: AgentWidget, flippingWidgetIds: string[]) => {\r\n            setActiveConfig(produce(draft => {\r\n                if (!isFlippingWidget(widget)) {\r\n                    if (flippingWidgetIds.length === 1) {\r\n                        switchWidgets()\r\n                    } else if (flippingWidgetIds.length === 0) {\r\n                        deleteWidget()\r\n                    } else {\r\n                        createFlippingWidget()\r\n                    }\r\n                } else {\r\n                    if (flippingWidgetIds.length === 1) {\r\n                        convertFlippingToSimple()\r\n                    } else if (flippingWidgetIds.length === 0) {\r\n                        deleteWidget()\r\n                    } else {\r\n                        updateFlippingWidget()\r\n                    }\r\n                }\r\n\r\n                function deleteWidget() {\r\n                    assertDefined(draft)\r\n                    const indexToRemove = draft.widgets.findIndex(w => w.id === widget.id)\r\n                    draft.widgets.splice(indexToRemove, 1)\r\n                }\r\n\r\n\r\n                function switchWidgets() {\r\n                    assertDefined(draft)\r\n                    const targetWidget = draft.widgets.find(({id}) => flippingWidgetIds[0] === id)\r\n                    if (!targetWidget) {\r\n                        return\r\n                    }\r\n                    targetWidget.x = widget.x\r\n                    targetWidget.y = widget.y\r\n                    targetWidget.width = widget.width\r\n                    targetWidget.height = widget.height\r\n\r\n                    deleteWidget()\r\n                }\r\n\r\n                function createFlippingWidget() {\r\n                    assertDefined(draft)\r\n                    const newFlippingWidget: AgentFlippingWidget = {\r\n                        ...widget,\r\n                        id: uuid(),\r\n                        type: 'FLIPPING',\r\n                        activeWidgetId: widget.id,\r\n                        title: '',\r\n                        widgets: draft.widgets.filter(({id, type}) =>\r\n                            type !== 'FLIPPING' && (flippingWidgetIds.includes(id) || id === widget.id),\r\n                        ) as AgentSimpleWidget[],\r\n                    }\r\n\r\n                    const widgetsToRemove = [...flippingWidgetIds, widget.id]\r\n                    widgetsToRemove.forEach(id => {\r\n                        const indexToRemove = draft.widgets.findIndex(w => w.id === id)\r\n                        if (indexToRemove === -1) {\r\n                            return\r\n                        }\r\n                        draft.widgets.splice(indexToRemove, 1)\r\n                    })\r\n\r\n                    draft.widgets.push(newFlippingWidget)\r\n                }\r\n\r\n                function convertFlippingToSimple() {\r\n                    assertDefined(draft)\r\n                    if (!isFlippingWidget(widget)) {\r\n                        return\r\n                    }\r\n                    const simpleWidget = widget.widgets.find(({id}) => flippingWidgetIds[0] === id)\r\n                    if (!simpleWidget) {\r\n                        return\r\n                    }\r\n                    const newWidget: AgentSimpleWidget = {\r\n                        ...simpleWidget,\r\n                        width: widget.width,\r\n                        height: widget.height,\r\n                        x: widget.x,\r\n                        y: widget.y,\r\n                    }\r\n                    deleteWidget()\r\n                    draft.widgets.push(newWidget)\r\n                }\r\n\r\n                function updateFlippingWidget() {\r\n                    assertDefined(draft)\r\n                    const targetWidget = draft.widgets.find(({id}) => id === widget.id)\r\n                    if (!targetWidget || !isFlippingWidget(targetWidget)) {\r\n                        return\r\n                    }\r\n                    // Update current active widget\r\n                    if (!flippingWidgetIds.includes(targetWidget.activeWidgetId)) {\r\n                        targetWidget.activeWidgetId = flippingWidgetIds[0]\r\n                    }\r\n                    // Remove unselected widget from the flipping widget\r\n                    targetWidget.widgets = targetWidget.widgets.filter(({id}) => flippingWidgetIds.includes(id))\r\n                    // Add widgets to the flipping widget and remove them from draft\r\n                    flippingWidgetIds.forEach(id => {\r\n                        const widgetIndex = draft.widgets.findIndex(w => w.id === id)\r\n                        if (widgetIndex === -1) {\r\n                            return\r\n                        }\r\n                        const newWidget = draft.widgets[widgetIndex]\r\n                        if (isFlippingWidget(newWidget) || !isAgentWidget(newWidget)) {\r\n                            return\r\n                        }\r\n                        targetWidget.widgets.push(newWidget)\r\n                        draft.widgets.splice(widgetIndex, 1)\r\n                    })\r\n                }\r\n            }))\r\n        },\r\n        [],\r\n    )\r\n    const openRemoveWidgetModal = useOpenRemoveWidgetModal()\r\n    const removeWidget = useCallback(\r\n        (widget: AgentWidget | SupervisorWidget) => {\r\n            assertDefined(activeConfig)\r\n            const targetFlippingWidget = activeConfig.widgets.find(w => isFlippingWidget(w) && w.widgets.some(({id}) => id === widget.id))\r\n            // If the deleting widget isn't a flipping just remove it\r\n            if (!targetFlippingWidget) {\r\n                setActiveConfig(produce(draft => {\r\n                    assertDefined(draft)\r\n                    const removeWidgetIndex = draft.widgets.findIndex(({id}) => id === widget.id)\r\n                    draft.widgets.splice(removeWidgetIndex, 1)\r\n                }))\r\n                return\r\n            }\r\n            if (!isFlippingWidget(targetFlippingWidget)) {\r\n                return\r\n            }\r\n            saveFlippingWidgets(targetFlippingWidget, targetFlippingWidget.widgets.filter(({id}) => id !== widget.id).map(({id}) => id))\r\n        },\r\n        [activeConfig, saveFlippingWidgets],\r\n    )\r\n    const openRemoveWidget = useCallback((widget: AgentWidget | SupervisorWidget) => {\r\n        openRemoveWidgetModal(widget, () => removeWidget(widget))\r\n    }, [openRemoveWidgetModal, removeWidget])\r\n\r\n    const openFlippingWidgetsModal = useOpenFlippingWidgetsModal()\r\n\r\n    const openFlippingWidgetsSettings = useCallback(\r\n        (widget: AgentWidget) => {\r\n            if (!isAgentWidget(widget) || !activeConfig || !isAgentWidgets(activeConfig.widgets)) {\r\n                return\r\n            }\r\n            openFlippingWidgetsModal({\r\n                onSave: saveFlippingWidgets,\r\n                allWidgets: activeConfig.widgets,\r\n                widget,\r\n            })\r\n        },\r\n        [activeConfig, openFlippingWidgetsModal, saveFlippingWidgets],\r\n    )\r\n    const setActiveFlippingWidget = useCallback(\r\n        (widgetId: string, newActiveWidgetId: string) => {\r\n            setActiveConfig(produce(draft => {\r\n                assertDefined(draft)\r\n                const widget = draft.widgets.find(({id}) => id === widgetId)\r\n                if (!widget || !isFlippingWidget(widget)) {\r\n                    return\r\n                }\r\n                if (!widget.widgets.some(({id}) => id === newActiveWidgetId)) {\r\n                    return\r\n                }\r\n                widget.activeWidgetId = newActiveWidgetId\r\n            }))\r\n            //TODO: update config on server?\r\n        },\r\n        [],\r\n    )\r\n\r\n    const contextValue = useMemo<HomePageUIContextValue>(\r\n        () => ({\r\n            setActiveConfig,\r\n            activeConfig,\r\n            updateWidget,\r\n            addWidget,\r\n            openRemoveWidget,\r\n            selectedUser,\r\n            setSelectedUser,\r\n            openFlippingWidgetsSettings,\r\n            setActiveFlippingWidget,\r\n            mode,\r\n            setMode: setModePublic,\r\n            isDirty,\r\n            appLink,\r\n            isLoading,\r\n            setIsLoading,\r\n            tabsManager,\r\n            businessUserMode,\r\n        }),\r\n        [\r\n            activeConfig,\r\n            addWidget,\r\n            appLink,\r\n            isDirty,\r\n            isLoading,\r\n            mode,\r\n            openFlippingWidgetsSettings,\r\n            openRemoveWidget,\r\n            selectedUser,\r\n            setActiveFlippingWidget,\r\n            updateWidget,\r\n            tabsManager,\r\n            setModePublic,\r\n            businessUserMode,\r\n        ],\r\n    )\r\n\r\n    return (\r\n        <HomePageUIContext.Provider value={contextValue}>\r\n            {children}\r\n        </HomePageUIContext.Provider>\r\n    )\r\n}\r\n\r\nexport const {useHomePageUIState} = createUIStateSelectorHook(\r\n    HomePageUIContext,\r\n    'homePageUIState',\r\n)\r\n\r\n","import {useCallback} from 'react'\r\n\r\nimport type {AgentWidget, SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\n\r\nexport function useOpenRemoveWidgetModal() {\r\n    const {openModal} = useModalsStateMethods()\r\n    const {HOME_SCREEN, GLOBAL} = useLocalizationState('t')\r\n\r\n    return useCallback((widget: AgentWidget | SupervisorWidget, onRemove: () => void) => {\r\n        openModal({\r\n            title: HOME_SCREEN.delete_widget_title(),\r\n            body: HOME_SCREEN.delete_widget_content(widget.title || ''),\r\n            actions: {\r\n                ok: {\r\n                    title: GLOBAL.delete(),\r\n                    action: onRemove,\r\n                },\r\n                cancel: {\r\n                    title: GLOBAL.cancel(),\r\n                },\r\n            },\r\n        })\r\n    }, [GLOBAL, HOME_SCREEN, openModal])\r\n}\r\n\r\n","import {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {FlippingWidgetModal} from './FlippingWidgetsModal'\r\n\r\n\r\nexport function useOpenFlippingWidgetsModal() {\r\n    return useModalComponentOpener(FlippingWidgetModal)\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport type {AgentWidget} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {useHomePageUIState} from '../../HomePageUIContextProvider'\r\nimport {useOpenSettingsModal} from '../modals'\r\n\r\n\r\nexport function useOpenWidgetSettings() {\r\n    const openSettingsModal = useOpenSettingsModal()\r\n    const updateWidget = useHomePageUIState('updateWidget')\r\n\r\n    return useCallback((widget: AgentWidget) => {\r\n        openSettingsModal({\r\n            widget,\r\n            updateWidget,\r\n        })\r\n    }, [openSettingsModal, updateWidget])\r\n}\r\n\r\n","import {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {SettingsModal} from './SettingsModal'\r\n\r\n\r\nexport function useOpenSettingsModal() {\r\n    return useModalComponentOpener(SettingsModal)\r\n}\r\n","import {tw} from '@servicepattern/ui'\r\nimport {tv} from 'tailwind-variants'\r\n\r\n\r\nexport const controlButtonStyle = tv({\r\n    base: [\r\n        tw`flex h-10 w-10 items-center justify-center bg-primary-default hover:bg-primary-selected`,\r\n    ],\r\n})\r\n","import type {MouseEventHandler} from 'react'\r\n\r\nimport {Tooltip} from '@bpinc/lib-jskit-ui'\r\n\r\nimport {controlButtonStyle} from './style'\r\n\r\n\r\ntype ControlButtonProps = {\r\n    tooltip: string\r\n    onClick?: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\nexport function ControlButton({children, onClick, tooltip}: ControlButtonProps) {\r\n    const handleClick: MouseEventHandler<HTMLButtonElement> = e => {\r\n        e.stopPropagation()\r\n        onClick?.()\r\n    }\r\n\r\n    return (\r\n        <Tooltip content={tooltip}>\r\n            <button\r\n                type=\"button\"\r\n                className={controlButtonStyle()}\r\n                onClick={handleClick}\r\n            >\r\n                {children}\r\n            </button>\r\n        </Tooltip>\r\n    )\r\n}\r\n","import {BarChart, PieChart, ScatterChart} from 'echarts/charts'\r\nimport {\r\n    DatasetComponent,\r\n    GridComponent,\r\n    LegendComponent,\r\n    PolarComponent,\r\n    TitleComponent,\r\n    TooltipComponent,\r\n    TransformComponent,\r\n} from 'echarts/components'\r\nimport * as echarts from 'echarts/core'\r\nimport {LabelLayout, UniversalTransition} from 'echarts/features'\r\nimport {CanvasRenderer} from 'echarts/renderers'\r\n\r\n// Register the required components\r\necharts.use([\r\n    BarChart,\r\n    PieChart,\r\n    ScatterChart,\r\n    TitleComponent,\r\n    TooltipComponent,\r\n    GridComponent,\r\n    DatasetComponent,\r\n    TransformComponent,\r\n    LegendComponent,\r\n    PolarComponent,\r\n    LabelLayout,\r\n    UniversalTransition,\r\n    CanvasRenderer,\r\n])\r\n\r\n","import React, {\r\n    useCallback,\r\n    useEffect,\r\n    useMemo,\r\n    useRef,\r\n    useState,\r\n} from 'react'\r\nimport type {EChartsType} from 'echarts/core'\r\nimport {init} from 'echarts/core'\r\nimport type {ECBasicOption} from 'echarts/types/dist/shared'\r\nimport {debounce} from 'lodash-es'\r\n\r\nimport {useAsRef, useResizeObserver} from '@bpinc/lib-helpers'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport type {ECOption} from './types'\r\n\r\nimport './init'\r\n\r\n\r\ntype ChartProps = {\r\n    options: ECOption\r\n    onInit?: (instance: EChartsType) => void\r\n    className?: string\r\n}\r\n\r\nexport const Chart: React.FC<ChartProps> = ({options, className, onInit}) => {\r\n    const [containerElem, setContainerElem] = useState<HTMLDivElement | null>(null)\r\n    const chartRef = useRef<EChartsType | null>(null)\r\n    const onInitRef = useAsRef(onInit)\r\n\r\n    const createChart = useCallback(\r\n        (chartOptions: ECBasicOption) => {\r\n            if (!containerElem) {\r\n                return\r\n            }\r\n            chartRef.current = init(containerElem)\r\n            chartRef.current.setOption(chartOptions)\r\n            onInitRef.current?.(chartRef.current)\r\n        },\r\n        [containerElem, onInitRef],\r\n    )\r\n\r\n    const updateChart = useCallback(\r\n        (chartOptions: ECBasicOption) => {\r\n            chartRef.current?.setOption(chartOptions)\r\n        }, [])\r\n\r\n    //Create chart on mount and update on options change\r\n    useEffect(() => {\r\n        if (!chartRef.current) {\r\n            createChart(options)\r\n        } else {\r\n            updateChart(options)\r\n        }\r\n    }, [createChart, options, updateChart])\r\n\r\n    const resizeEntry = useResizeObserver(containerElem)\r\n    const handleResize = useMemo(() => {\r\n        //Debounce resize as it fires multiple times\r\n        return debounce((resizeEntryInner: ResizeObserverEntry) => {\r\n            chartRef.current?.resize({\r\n                width: resizeEntryInner.contentRect.width,\r\n                height: resizeEntryInner.contentRect.height,\r\n            },\r\n            )\r\n        }, 100)\r\n    }, [chartRef])\r\n\r\n    //Update chart on resize\r\n    useEffect(() => {\r\n        if (resizeEntry) {\r\n            handleResize(resizeEntry)\r\n        }\r\n\r\n        //Cancel debounce on unmount\r\n        return () => {\r\n            handleResize.cancel()\r\n        }\r\n    }, [resizeEntry, handleResize])\r\n\r\n    //Destroy chart on unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            if (chartRef.current) {\r\n                chartRef.current.dispose()\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return <div ref={setContainerElem} className={tcn('h-full w-full overflow-hidden', className)} />\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useMemo, useState} from 'react'\r\n\r\nimport type {ECOption} from '@bpinc/lib-echarts'\r\nimport {Chart} from '@bpinc/lib-echarts'\r\nimport {MS_IN_MINUTE, MS_IN_SECOND} from '@bpinc/lib-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype BreakTimeChartProps = {\r\n    total: number\r\n    current: number\r\n}\r\n\r\nexport const BreakTimeChart: FC<BreakTimeChartProps> = ({\r\n    total,\r\n    current,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const [highlightedIndex, setHighlightedIndex] = useState<number>(0)\r\n\r\n    const isExceeded = current > total\r\n    const exceeded = isExceeded\r\n        ? current - total\r\n        : 0\r\n    const remaining = isExceeded\r\n        ? 0\r\n        : total - current\r\n\r\n    const chartOptions = useMemo(() => {\r\n        const style = getComputedStyle(document.body)\r\n        const data = isExceeded\r\n            ? [{\r\n                name: t.HOME_SCREEN.breaktime_exceeded(),\r\n                value: exceeded,\r\n                itemStyle: {\r\n                    color: style.getPropertyValue('--various-orange'),\r\n                },\r\n            }, {\r\n                name: t.HOME_SCREEN.breaktime_permitted(),\r\n                value: total,\r\n                itemStyle: {\r\n                    color: style.getPropertyValue('--primary-600'),\r\n                },\r\n            }]\r\n            : [{\r\n                name: t.HOME_SCREEN.breaktime_reamaining(),\r\n                value: remaining,\r\n                itemStyle: {\r\n                    color: style.getPropertyValue('--primary-600'),\r\n                },\r\n            }, {\r\n                name: t.HOME_SCREEN.breaktime_used(),\r\n                value: current,\r\n                itemStyle: {\r\n                    color: style.getPropertyValue('--neutral-100'),\r\n                },\r\n                emphasis: {\r\n                    itemStyle: {\r\n                        color: style.getPropertyValue('--neutral-200'),\r\n                    },\r\n                },\r\n            }]\r\n\r\n        return {\r\n            legend: {\r\n                bottom: 0,\r\n                orient: 'horizontal',\r\n                left: 0,\r\n                height: 36,\r\n                type: 'scroll',\r\n                itemGap: 16,\r\n                itemWidth: 12,\r\n                itemHeight: 12,\r\n            },\r\n            title: {\r\n                text: [\r\n                    `{value|${t.HOME_SCREEN.breaktime_mins(Math.round(Number(data[highlightedIndex].value) * MS_IN_SECOND / MS_IN_MINUTE))}}`,\r\n                    `{name|${data[highlightedIndex].name}}`,\r\n                ].join('\\n'),\r\n                left: 'center',\r\n                bottom: '50%',\r\n                padding: [0, 0, -12, 0],\r\n                textStyle: {\r\n                    rich: {\r\n                        value: {\r\n                            fontSize: '20px',\r\n                            fontWeight: 600,\r\n                            lineHeight: 30,\r\n                            borderWidth: 1,\r\n                            textBorderWidth: 1,\r\n                            textBorderColor: style.getPropertyValue('--neutral-0'),\r\n                        },\r\n                        name: {\r\n                            fontSize: '12px',\r\n                            fontWeight: 400,\r\n                            lineHeight: 18,\r\n                            textBorderWidth: 1,\r\n                            textBorderColor: style.getPropertyValue('--neutral-0'),\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'pie',\r\n                    left: 'center',\r\n                    top: 10,\r\n                    bottom: 36,\r\n                    width: '100%',\r\n                    radius: ['50%', '85%'],\r\n                    avoidLabelOverlap: true,\r\n                    label: {\r\n                        minMargin: 10,\r\n                    },\r\n                    labelLine: {\r\n                        showAbove: true,\r\n                    },\r\n                    labelLayout: {\r\n                        moveOverlap: 'shiftY',\r\n                    },\r\n                    itemStyle: {\r\n                        borderColor: style.getPropertyValue('--neutral-0'),\r\n                        borderWidth: 1,\r\n                    },\r\n                    data,\r\n                },\r\n            ],\r\n            textStyle: {\r\n                fontFamily: '\"Noto Sans\", ui-sans-serif, system-ui, sans-serif',\r\n                fontSize: '12px',\r\n                fontWeight: 400,\r\n                lineHeight: 18,\r\n            },\r\n        } satisfies ECOption\r\n    }, [isExceeded, t.HOME_SCREEN, exceeded, total, remaining, current, highlightedIndex])\r\n\r\n    return (\r\n        <Chart\r\n            options={chartOptions}\r\n            onInit={chat => {\r\n                function setActiveData(activeName: string) {\r\n                    const dataNames = (chat.getOption() as typeof chartOptions).series[0].data.map<string>(d => d.name)\r\n                    setHighlightedIndex(dataNames.indexOf(activeName))\r\n                }\r\n\r\n                chat.on('highlight', data => {\r\n                    if (typeof data === 'object' && data && 'name' in data && typeof data.name === 'string') {\r\n                        setActiveData(data.name)\r\n                    }\r\n                })\r\n                chat.on('downplay', () => {\r\n                    setHighlightedIndex(0)\r\n                })\r\n                chat.on('mouseover', data => {\r\n                    setActiveData(data.name)\r\n                })\r\n                chat.on('mouseout', () => {\r\n                    setHighlightedIndex(0)\r\n                })\r\n            }}\r\n        />\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React from 'react'\r\n\r\nimport {formatDurationShort} from '@bpinc/lib-helpers'\r\nimport {useLiveStatTimer} from '@bpinc/lib-helpers-ui'\r\n\r\n\r\ninterface LiveStatTimerProps {\r\n    value: string | number | undefined\r\n}\r\n\r\nexport const LiveStatTimer: FC<LiveStatTimerProps> = ({\r\n    value,\r\n}) => {\r\n    const liveTimer = useLiveStatTimer(value)\r\n\r\n    return (\r\n        <>{formatDurationShort(liveTimer)}</>\r\n    )\r\n}\r\n\r\n","import React, {useMemo} from 'react'\r\nimport {createColumnHelper} from '@tanstack/react-table'\r\n\r\nimport type {MyServicesDetails} from '@bpinc/home-page-state-types'\r\nimport type {MyServicesDetailsFields} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {LiveStatTimer} from '../../../LiveStatTimer'\r\n\r\n\r\nconst columnHelper = createColumnHelper<MyServicesDetails>()\r\n\r\n\r\nconst TIME_FIELDS: MyServicesDetailsFields['name'][] = [\r\n    'callsAverageHandlingTimePerDay',\r\n    'inAverageSpeedOfAnswer',\r\n    'inEwt',\r\n    'inMaxWaitTime',\r\n    'inCallsWaiting',\r\n    'inMaxWaitTime',\r\n]\r\n\r\n\r\nconst PERCENT_FIELDS: MyServicesDetailsFields['name'][] = [\r\n    'serviceLevel',\r\n    'outCallsHandledPerDay',\r\n    'serviceLevelPerDay',\r\n    'outCallsUnattendedRatioPerDay',\r\n]\r\n\r\nexport function useMyServicesColumns(fields: MyServicesDetailsFields[]) {\r\n    return useMemo(() => fields.map(field => (\r\n        columnHelper.accessor(field.name, {\r\n            id: field.name,\r\n            header: field.title,\r\n            cell: ({getValue}) => (\r\n                <>\r\n                    {TIME_FIELDS.includes(field.name)\r\n                        ? <LiveStatTimer value={getValue()} />\r\n                        : PERCENT_FIELDS.includes(field.name)\r\n                            ? `${getValue() || 0}%`\r\n                            : getValue()}\r\n                </>\r\n            ),\r\n        })\r\n    )), [fields])\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useMemo, useState} from 'react'\r\nimport type {SortingState} from '@tanstack/react-table'\r\nimport {flexRender, getCoreRowModel, getSortedRowModel, useReactTable} from '@tanstack/react-table'\r\n\r\nimport {useHomePageState} from '@bpinc/home-page-state-context'\r\nimport {type TableSort, Table} from '@bpinc/lib-jskit-ui'\r\nimport {WithNoData} from '@bpinc/lib-ui-elements'\r\nimport type {AgentWidgetConfigMyServices} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {useHomePageUIState} from '../../../HomePageUIContextProvider'\r\nimport type {WidgetProps} from '../WidgetResolver'\r\nimport {useMyServicesColumns} from './useMyServicesColumns'\r\n\r\n\r\nexport const MyServicesTable: FC<WidgetProps<AgentWidgetConfigMyServices>> = ({\r\n    config,\r\n}) => {\r\n    const selectedUser = useHomePageUIState('selectedUser')\r\n    const subscriptionData = useHomePageState(s =>\r\n        selectedUser.teamId\r\n            ? s.subscriptionData.service[selectedUser.teamId]\r\n            : undefined,\r\n    )\r\n    const tableData = useMemo(() =>\r\n        subscriptionData?.myServicesDetails?.slice(0, config.maxItemsToShow) || [],\r\n    [config.maxItemsToShow, subscriptionData?.myServicesDetails])\r\n    const [sorting, setSorting] = useState<SortingState>([])\r\n\r\n    const table = useReactTable({\r\n        columns: useMyServicesColumns(config.fields),\r\n        data: tableData,\r\n        getRowId: row => row.id,\r\n        getCoreRowModel: getCoreRowModel(),\r\n        getSortedRowModel: getSortedRowModel(),\r\n        state: {\r\n            sorting,\r\n        },\r\n        onSortingChange: setSorting,\r\n    })\r\n\r\n    function getSortOrder(columnKey: string): TableSort | undefined {\r\n        const order = sorting.find(c => c.id === columnKey)\r\n        if (!order) {\r\n            return\r\n        }\r\n\r\n        return order.desc ? 'desc' : 'asc'\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex h-full w-full flex-auto flex-col overflow-hidden\">\r\n            <WithNoData\r\n                noData={!subscriptionData?.myServicesDetails?.length && !subscriptionData?.isLoading}\r\n                isLoading={subscriptionData?.isLoading}\r\n                className=\"overflow-hidden\"\r\n            >\r\n                <div className=\"flex flex-1 flex-col overflow-hidden\">\r\n                    <div className=\"overflow-auto\">\r\n                        <Table size=\"sm\" className=\"w-full\">\r\n                            {config.columnTitleEnabled && (\r\n                                <Table.Header sticky>\r\n                                    {table.getHeaderGroups().map(headerGroup => (\r\n                                        <Table.Row key={headerGroup.id}>\r\n                                            {headerGroup.headers.map(header => (\r\n                                                <Table.HeaderCell\r\n                                                    key={header.id}\r\n                                                    onClick={header.column.getToggleSortingHandler()}\r\n                                                    order={getSortOrder(header.id)}\r\n                                                    align=\"left\"\r\n                                                >\r\n                                                    {flexRender(\r\n                                                        header.column.columnDef.header,\r\n                                                        header.getContext(),\r\n                                                    )}\r\n                                                </Table.HeaderCell>\r\n                                            ))}\r\n                                        </Table.Row>\r\n                                    ))}\r\n                                </Table.Header>\r\n                            )}\r\n                            <Table.Body>\r\n                                {table.getRowModel().rows\r\n                                    .map(row => (\r\n                                        <Table.Row key={row.id}>\r\n                                            {row.getVisibleCells().map(cell => (\r\n                                                <Table.Cell key={cell.id} align=\"left\">\r\n                                                    {flexRender(\r\n                                                        cell.column.columnDef.cell,\r\n                                                        cell.getContext(),\r\n                                                    )}\r\n                                                </Table.Cell>\r\n                                            ))}\r\n                                        </Table.Row>\r\n                                    ))}\r\n                            </Table.Body>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            </WithNoData>\r\n        </div>\r\n    )\r\n}\r\n","import type {ReactNode} from 'react'\r\nimport React, {useMemo} from 'react'\r\n\r\nimport {useHomePageState} from '@bpinc/home-page-state-context'\r\nimport type {AgentWidgetConfigMyStats, MyStatsDetailsFields} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {useHomePageUIState} from '../../HomePageUIContextProvider'\r\nimport {LiveStatTimer} from '../../LiveStatTimer'\r\nimport type {WidgetProps} from './WidgetResolver'\r\n\r\n\r\ntype MyStatsViewDataType = {\r\n    field: MyStatsDetailsFields\r\n    value: ReactNode\r\n}\r\n\r\nconst contentStyles = `\r\n    @[100px]:grid-cols-1\r\n    @[260px]:grid-cols-2\r\n    @[400px]:grid-cols-3\r\n    @[500px]:grid-cols-4\r\n    @[600px]:grid-template-cols-[repeat(auto-fill,minmax(0px,125px))]\r\n    grid max-h-full gap-4 overflow-y-auto overflow-hidden`\r\n\r\nconst TIME_FIELDS: MyStatsDetailsFields['name'][] = [\r\n    'loginTime',\r\n    'agentAverageIdleTime',\r\n    'agentAveragePreviewTime',\r\n    'callsAverageHandlingTimePerDay',\r\n    'callsAverageAcwTimePerDay',\r\n    'agentTotalReadyTime',\r\n    'inCallsDurationAveragePerDay',\r\n    'inCallsDurationTotalPerDay',\r\n]\r\n\r\nexport const MyStats: React.FC<WidgetProps<AgentWidgetConfigMyStats>> = ({\r\n    config,\r\n}) => {\r\n    const selectedUser = useHomePageUIState('selectedUser')\r\n    const myStatsDetails = useHomePageState(\r\n        s => s?.subscriptionData.user[selectedUser.id]?.myStatsDetails,\r\n    )\r\n\r\n    const viewData = useMemo(\r\n        () =>\r\n            config.fields.map<MyStatsViewDataType>(field => {\r\n                const value = myStatsDetails?.[field.name]\r\n                if (TIME_FIELDS.includes(field.name)) {\r\n                    return {\r\n                        field,\r\n                        value: <LiveStatTimer value={value} />,\r\n                    }\r\n                }\r\n                return {\r\n                    field,\r\n                    value: value?.toString(),\r\n                }\r\n            }),\r\n        [config.fields, myStatsDetails],\r\n    )\r\n\r\n    return (\r\n        <div className=\"h-full w-full overflow-hidden @container\">\r\n            <div className={contentStyles}>\r\n                {viewData.map(({value, field}) => (\r\n                    <div key={field.id} className=\"overflow-hidden text-info\">\r\n                        <div className=\"caption-s text-neutral-disabled\">{field.title}</div>\r\n                        <div className=\"mt-1 body-l\">{value}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\nimport {createColumnHelper} from '@tanstack/react-table'\r\n\r\nimport type {MyTeamUserDetails} from '@bpinc/home-page-state-types'\r\nimport type {MyTeamFields} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {LiveStatTimer} from '../../../LiveStatTimer'\r\nimport {useAcdStateSorter} from './useAcdStateSorter'\r\nimport {useAgentStateCellRenderer} from './useAgentStateCellRenderer'\r\n\r\n\r\nconst columnHelper = createColumnHelper<MyTeamUserDetails>()\r\n\r\n\r\nexport function useMyTeamColumns(fields: MyTeamFields[]) {\r\n    const renderAgentStateCell = useAgentStateCellRenderer()\r\n    const acdSorter = useAcdStateSorter()\r\n\r\n    return useMemo(() => fields.map(field => (\r\n        columnHelper.accessor(field.name, {\r\n            id: field.name,\r\n            header: field.title,\r\n            cell: ({getValue, row}) => {\r\n                switch (field.name) {\r\n                    case 'stateDuration': {\r\n                        return <LiveStatTimer value={getValue()} />\r\n                    }\r\n                    case 'acdState':\r\n                    case 'reason': {\r\n                        const state = renderAgentStateCell(row.original)\r\n                        if (field.name === 'acdState') {\r\n                            return state\r\n                        }\r\n\r\n                        const showReason = state && row.original.acdState === 'not_ready'\r\n                        if (!showReason) {\r\n                            return null\r\n                        }\r\n\r\n                        return getValue()\r\n                    }\r\n                    case 'acdNextState':\r\n                    case 'nextReason': {\r\n                        const nextState = renderAgentStateCell(row.original, true)\r\n                        if (field.name === 'acdNextState') {\r\n                            return nextState\r\n                        }\r\n\r\n                        const showNextReason = nextState && row.original.acdNextState === 'not_ready'\r\n                        if (!showNextReason) {\r\n                            return null\r\n                        }\r\n\r\n                        return getValue()\r\n                    }\r\n                }\r\n\r\n                return getValue()\r\n            },\r\n            sortingFn: ['acdState', 'acdNextState'].includes(field.name) ? (rowA, rowB) => acdSorter(rowA.original, rowB.original) : 'auto',\r\n        })\r\n    )), [acdSorter, fields, renderAgentStateCell])\r\n}\r\n","import React, {useCallback, useMemo} from 'react'\r\n\r\nimport {createAgentStateOptionSelector, useAgentStateOptions} from '@bpinc/ad-agent-state-context'\r\nimport {isAcdState} from '@bpinc/ad-agent-state-types'\r\nimport {isMediaType} from '@bpinc/ad-transport-types'\r\nimport type {MyTeamUserDetails} from '@bpinc/home-page-state-types'\r\nimport {AgentStatusIcon, UserPresenceIcon} from '@bpinc/lib-agent-state-ui'\r\n\r\n\r\nexport function useAgentStateCellRenderer() {\r\n    const agentStateOptions = useAgentStateOptions()\r\n    const selectAgentStateOption = useMemo(\r\n        () => createAgentStateOptionSelector(),\r\n        [],\r\n    )\r\n\r\n    return useCallback(\r\n        (user: MyTeamUserDetails, nextState?: boolean) => {\r\n            const activeInteraction = nextState ? undefined : user.items?.find(\r\n                i => i.id === user.activeItemId,\r\n            )\r\n            const direction = nextState\r\n                ? undefined\r\n                : activeInteraction?.direction\r\n\r\n            const busyMediaType = isMediaType(activeInteraction?.mediaType)\r\n                ? activeInteraction?.mediaType\r\n                : undefined\r\n\r\n            return user.isAgent ? renderAgentCell() : renderUserCell()\r\n\r\n            function renderUserCell() {\r\n                if (nextState && !user.presenceState) {\r\n                    return null\r\n                }\r\n\r\n                return (\r\n                    <div className=\"flex justify-center\">\r\n                        <UserPresenceIcon\r\n                            busyMediaType={busyMediaType}\r\n                            direction={direction}\r\n                            itemState={activeInteraction?.state}\r\n                            presenceStatus={user.presenceState}\r\n                            className=\"!h-4 !w-4\"\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            function renderAgentCell() {\r\n                const stateField = nextState ? 'acdNextState' : 'acdState'\r\n                const state = user[stateField]\r\n                if (!isAcdState(state)) {\r\n                    return null\r\n                }\r\n\r\n                if (nextState && !(user?.acdState === 'busy' || user?.acdState === 'after_call_work')) {\r\n                    return null\r\n                }\r\n\r\n                const isOffline = user.presenceState === 'offline'\r\n\r\n                return (\r\n                    <div className=\"flex justify-center\">\r\n                        <AgentStatusIcon\r\n                            agentStatusOption={selectAgentStateOption(\r\n                                {\r\n                                    state,\r\n                                    notReadyReason: user.reason,\r\n                                },\r\n                                agentStateOptions,\r\n                            )}\r\n                            isLoggedOut={!user.isLogged}\r\n                            busyMediaType={\r\n                                nextState ? undefined : busyMediaType\r\n                            }\r\n                            isOffline={isOffline}\r\n                            direction={direction}\r\n                            className=\"!h-4 !w-4\"\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        [agentStateOptions, selectAgentStateOption],\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport type {MyTeamUserDetails} from '@bpinc/home-page-state-types'\r\nimport {useAgentStateTooltipGetter, useUserPresenceTooltipGetter} from '@bpinc/lib-agent-state-ui'\r\n\r\n\r\nexport function useAcdStateSorter() {\r\n    const getAgentStateTooltip = useAgentStateTooltipGetter()\r\n    const getUserPresenceTooltip = useUserPresenceTooltipGetter()\r\n\r\n    return useCallback((u1: MyTeamUserDetails, u2: MyTeamUserDetails) => {\r\n        if (u1.isAgent && !u2.isAgent) {\r\n            return -1\r\n        }\r\n\r\n        if (!u1.isAgent && u2.isAgent) {\r\n            return 1\r\n        }\r\n\r\n        if (u1.isAgent && u2.isAgent) {\r\n            const u1Tooltip =\r\n        getAgentStateTooltip({\r\n            isOffline: u1.presenceState === 'offline',\r\n            isLogged: u1.isLogged,\r\n            state: u1.acdState,\r\n            reason: u1.reason,\r\n        }) ?? ''\r\n            const u2Tooltip =\r\n        getAgentStateTooltip({\r\n            isOffline: u2.presenceState === 'offline',\r\n            isLogged: u2.isLogged,\r\n            state: u2.acdState,\r\n            reason: u2.reason,\r\n        }) ?? ''\r\n\r\n            return u1Tooltip.localeCompare(u2Tooltip, undefined, {\r\n                numeric: true,\r\n                sensitivity: 'base',\r\n            })\r\n        }\r\n\r\n        const u1Tooltip = getUserPresenceTooltip({presenceStatus: u1.presenceState})\r\n        const u2Tooltip = getUserPresenceTooltip({presenceStatus: u2.presenceState})\r\n\r\n        return u1Tooltip.localeCompare(u2Tooltip, undefined, {\r\n            numeric: true,\r\n            sensitivity: 'base',\r\n        })\r\n\r\n    }, [getAgentStateTooltip, getUserPresenceTooltip])\r\n}\r\n","import {useMemo} from 'react'\r\nimport {random} from 'lodash-es'\r\n\r\nimport {useHomePageState} from '@bpinc/home-page-state-context'\r\nimport type {MyTeamUserDetails} from '@bpinc/home-page-state-types'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useHomePageUIState} from '../../../HomePageUIContextProvider'\r\n\r\n\r\nconst SHUFFLE_FIELDS: (keyof MyTeamUserDetails)[] = ['userId', 'name', 'stateDuration', 'acdState']\r\nconst SHUFFLE_FIELD = SHUFFLE_FIELDS[random(0, SHUFFLE_FIELDS.length - 1)]\r\nconst SHUFFLE_ORDER = Boolean(random(0, 1))\r\n\r\nfunction usersDummyNamesSort(a: MyTeamUserDetails, b: MyTeamUserDetails) {\r\n    const aValue = a[SHUFFLE_FIELD] || ''\r\n    const bValue = b[SHUFFLE_FIELD] || ''\r\n    const [sortValueA, sortValueB] = SHUFFLE_ORDER ? [aValue, bValue] : [bValue, aValue]\r\n\r\n    return sortValueA.toString().localeCompare(sortValueB.toString())\r\n}\r\n\r\nexport function useMyTeamUsers(userDummyNames: boolean, maxItemToShow: number) {\r\n    const {HOME_SCREEN: messages} = useLocalizationState('t')\r\n    const selectedUser = useHomePageUIState('selectedUser')\r\n    const teamId = selectedUser.teamId ?? ''\r\n    const userId = selectedUser.id\r\n\r\n    const team = useHomePageState(\r\n        s => s.subscriptionData.team[teamId],\r\n    )\r\n\r\n    const users = useMemo(() => {\r\n        if (!team?.myTeamUserDetails) {\r\n            return []\r\n        }\r\n        const filteredUsers = team?.myTeamUserDetails?.filter(u => u.isLogged && u.userId !== userId) || []\r\n        if (!userDummyNames) {\r\n            return filteredUsers\r\n        }\r\n\r\n        return filteredUsers\r\n            .sort(usersDummyNamesSort)\r\n            .slice(0, maxItemToShow)\r\n            .map((u, i) => {\r\n                return {\r\n                    ...u,\r\n                    name: messages.my_team_dummy_name(i + 1),\r\n                }\r\n            })\r\n    }, [team?.myTeamUserDetails, userDummyNames, maxItemToShow, userId, messages])\r\n\r\n    return {users, isLoading: team?.isLoading || false}\r\n}\r\n","import {useCallback, useMemo} from 'react'\r\n\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport type {AgentSimpleWidget, AgentWidget} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {isFlippingWidget} from '../../../helpers'\r\nimport {useHomePageUIState} from '../../HomePageUIContextProvider'\r\n\r\n\r\nexport function useActiveWidget(config: AgentWidget) {\r\n    const setActiveFlippingWidget = useHomePageUIState('setActiveFlippingWidget')\r\n    const isFlipping = isFlippingWidget(config)\r\n    const activeConfig = useMemo<AgentSimpleWidget>(() => {\r\n        if (isFlipping) {\r\n            const result = config.widgets.find(({id}) => id === config.activeWidgetId)\r\n            assertDefined(result)\r\n            return result\r\n        }\r\n        return config\r\n    }, [config, isFlipping])\r\n\r\n    const setActiveWidget = useCallback((direction: 'next' | 'prev') => {\r\n        if (!isFlipping) {\r\n            return\r\n        }\r\n        const currentActiveIndex = config.widgets.findIndex(({id}) => id === config.activeWidgetId)\r\n        let nextActiveIndex: number | undefined\r\n        if (direction === 'next') {\r\n            nextActiveIndex = currentActiveIndex === config.widgets.length - 1 ? 0 : currentActiveIndex + 1\r\n        } else {\r\n            nextActiveIndex = currentActiveIndex === 0 ? config.widgets.length - 1 : currentActiveIndex - 1\r\n        }\r\n        const nextConfig = config.widgets[nextActiveIndex]\r\n        assertDefined(nextConfig)\r\n        setActiveFlippingWidget(config.id, nextConfig.id)\r\n    }, [config, isFlipping, setActiveFlippingWidget])\r\n\r\n    return useMemo(() => ({\r\n        activeConfig,\r\n        setActiveWidget: isFlipping ? setActiveWidget : undefined,\r\n    }), [activeConfig, isFlipping, setActiveWidget])\r\n}\r\n","import React from 'react'\r\nimport {partial} from 'lodash-es'\r\n\r\nimport type {AgentHomeScreenWidgetType} from '@bpinc/home-page-state-types'\r\nimport {\r\n    ButtonIcon,\r\n    IconArrowLeft24,\r\n    IconArrowRight24,\r\n    IconCombine,\r\n    IconConfigure24,\r\n    IconDelete24,\r\n} from '@bpinc/lib-jskit-ui'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport type {AgentSimpleWidget, AgentWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {BpWallboardWidgetResolverEditProps, BpWallboardWidgetResolverViewProps} from '../../bp-wallboard'\r\nimport {ControlButton} from '../../ControlButton'\r\nimport {useHomePageUIState} from '../../HomePageUIContextProvider'\r\nimport {BreakTimeRemaining} from './BreakTimeRemaining'\r\nimport {MyServicesTable} from './MyServicesTable'\r\nimport {MyStats} from './MyStats'\r\nimport {MyTeamTable} from './MyTeamTable'\r\nimport {useActiveWidget} from './useActiveWidget'\r\nimport {useOpenWidgetSettings} from './useOpenWidgetSettings'\r\n\r\n\r\nconst WIDGETS_CONFIG: Record<Exclude<AgentHomeScreenWidgetType, 'FLIPPING'>, React.FC<any>> = {\r\n    BREAK_TIME_REMAINING: BreakTimeRemaining,\r\n    MY_SERVICES: MyServicesTable,\r\n    MY_STATS: MyStats,\r\n    MY_TEAM: MyTeamTable,\r\n}\r\n\r\nexport type WidgetProps<Widget extends AgentWidget> = {\r\n    config: Widget\r\n}\r\n\r\nexport function WidgetResolverEdit(\r\n    props: BpWallboardWidgetResolverEditProps<AgentWidget>,\r\n) {\r\n    const {config, cellSize, Card, className, removeWidget, hasSettings} = props\r\n    const {activeConfig, setActiveWidget} = useActiveWidget(config)\r\n    const Widget = WIDGETS_CONFIG[activeConfig.type]\r\n    return (\r\n        <Card\r\n            {...props}\r\n            header={<WidgetHeaderView activeWidget={activeConfig} setActiveWidget={setActiveWidget} />}\r\n            controls={<WidgetEditControls\r\n                activeWidget={activeConfig}\r\n                config={config}\r\n                setActiveWidget={setActiveWidget}\r\n                removeWidget={removeWidget}\r\n                hasSettings={hasSettings}\r\n            />}\r\n            className={tcn(className, 'group')}\r\n        >\r\n            <Widget config={activeConfig} cellSize={cellSize} editMode />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function WidgetResolverView(\r\n    props: BpWallboardWidgetResolverViewProps<AgentWidget>,\r\n) {\r\n    const {config, cellSize, Card, className} = props\r\n    const {activeConfig, setActiveWidget} = useActiveWidget(config)\r\n    const Widget = WIDGETS_CONFIG[activeConfig.type]\r\n    return (\r\n        <Card\r\n            {...props}\r\n            header={<WidgetHeaderView activeWidget={activeConfig} setActiveWidget={setActiveWidget} />}\r\n            className={tcn(className, 'group')}\r\n        >\r\n            <Widget config={activeConfig} cellSize={cellSize} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction WidgetHeaderView({\r\n    activeWidget,\r\n    setActiveWidget,\r\n}: {\r\n    setActiveWidget?: (direction: 'next' | 'prev') => void\r\n    activeWidget: AgentSimpleWidget\r\n}) {\r\n    const {t} = useLocalizationState()\r\n    const titleByType = {\r\n        MY_STATS: t.HOME_PAGE_AGENT_WIDGETS.my_stats(),\r\n        MY_TEAM: t.HOME_PAGE_AGENT_WIDGETS.my_team(),\r\n        MY_SERVICES: t.HOME_PAGE_AGENT_WIDGETS.my_services(),\r\n        BREAK_TIME_REMAINING: t.HOME_PAGE_AGENT_WIDGETS.my_break_time(),\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex w-full items-center justify-between gap-4\">\r\n            <div className=\"truncate text-primary-on-primary\">{activeWidget.title || titleByType[activeWidget.type]}</div>\r\n            {\r\n                setActiveWidget && (\r\n                    <div className=\"flex items-center\">\r\n                        <ButtonIcon\r\n                            size=\"32\"\r\n                            tooltip={t.GLOBAL.previous()}\r\n                            onClick={() => setActiveWidget('prev')}\r\n                        >\r\n                            <IconArrowLeft24 />\r\n                        </ButtonIcon>\r\n                        <ButtonIcon\r\n                            size=\"32\"\r\n                            tooltip={t.GLOBAL.next()}\r\n                            onClick={() => setActiveWidget('next')}\r\n                        >\r\n                            <IconArrowRight24 />\r\n                        </ButtonIcon>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype WidgetEditControlsProps = {\r\n    config: AgentWidget\r\n    removeWidget?: (config: AgentSimpleWidget) => void\r\n    setActiveWidget?: (direction: 'next' | 'prev') => void\r\n    activeWidget: AgentSimpleWidget\r\n    hasSettings: boolean\r\n}\r\n\r\nfunction WidgetEditControls({\r\n    removeWidget,\r\n    config,\r\n    activeWidget,\r\n    hasSettings,\r\n}: WidgetEditControlsProps) {\r\n    const {t} = useLocalizationState()\r\n    const openSettings = useOpenWidgetSettings()\r\n    const {openFlippingWidgetsSettings} = useHomePageUIState(['openFlippingWidgetsSettings'])\r\n    return (\r\n        <div className=\"flex\">\r\n            <ControlButton\r\n                onClick={() => openFlippingWidgetsSettings(config)}\r\n                tooltip={t.HOME_SCREEN.flip_widget()}\r\n            >\r\n                <IconCombine className=\"icon-neutral-reversed\" />\r\n            </ControlButton>\r\n            {hasSettings && (\r\n                <ControlButton\r\n                    tooltip={t.HOME_SCREEN.configure_widget()}\r\n                    onClick={partial(openSettings, config)}\r\n                >\r\n                    <IconConfigure24 className=\"icon-neutral-reversed\" />\r\n                </ControlButton>\r\n            )}\r\n            <ControlButton\r\n                onClick={() => removeWidget?.(activeWidget)}\r\n                tooltip={t.HOME_SCREEN.delete_widget_title()}\r\n            >\r\n                <IconDelete24 className=\"icon-neutral-reversed\" />\r\n            </ControlButton>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useAppConfigState} from '@bpinc/ad-app-config-state-context'\r\nimport {useHomePageState} from '@bpinc/home-page-state-context'\r\nimport {MS_IN_MINUTE, MS_IN_SECOND} from '@bpinc/lib-helpers'\r\nimport type {AgentWidgetConfigBreakTime} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {BreakTimeChart} from '../../charts/BreakTimeChart'\r\nimport {useHomePageUIState} from '../../HomePageUIContextProvider'\r\nimport type {WidgetProps} from './WidgetResolver'\r\n\r\n\r\nexport const BreakTimeRemaining: React.FC<WidgetProps<AgentWidgetConfigBreakTime>> = () => {\r\n    const totalBreakTime = useAppConfigState('agentDailyBreakTime') * MS_IN_MINUTE / MS_IN_SECOND\r\n    const selectedUser = useHomePageUIState('selectedUser')\r\n    const currentBreakTime = useHomePageState(\r\n        s => s?.subscriptionData.user[selectedUser.id]?.agentTotalBreakTime,\r\n    ) ?? 0\r\n\r\n    return (\r\n        <BreakTimeChart total={totalBreakTime} current={currentBreakTime} />\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useState} from 'react'\r\nimport type {SortingState} from '@tanstack/react-table'\r\nimport {flexRender, getCoreRowModel, getSortedRowModel, useReactTable} from '@tanstack/react-table'\r\n\r\nimport type {TableSort} from '@bpinc/lib-jskit-ui'\r\nimport {Table} from '@bpinc/lib-jskit-ui'\r\nimport {WithNoData} from '@bpinc/lib-ui-elements'\r\nimport type {AgentWidgetConfigMyTeam} from '@bpinc/lib-widgets-urls'\r\n\r\nimport type {WidgetProps} from '../WidgetResolver'\r\nimport {useMyTeamColumns} from './useMyTeamColumns'\r\nimport {useMyTeamUsers} from './useMyTeamUsers'\r\n\r\n\r\nexport const MyTeamTable: FC<WidgetProps<AgentWidgetConfigMyTeam>> = React.memo(\r\n    ({config}) => {\r\n        const {users, isLoading} = useMyTeamUsers(config.userDummyNames, config.maxItemsToShow)\r\n        const [sorting, setSorting] = useState<SortingState>([])\r\n\r\n        const table = useReactTable({\r\n            columns: useMyTeamColumns(config.fields),\r\n            data: users,\r\n            getRowId: row => row.userId,\r\n            getCoreRowModel: getCoreRowModel(),\r\n            getSortedRowModel: getSortedRowModel(),\r\n            state: {\r\n                sorting,\r\n            },\r\n            onSortingChange: setSorting,\r\n        })\r\n\r\n        function getSortOrder(columnKey: string): TableSort | undefined {\r\n            const order = sorting.find(c => c.id === columnKey)\r\n            if (!order) {\r\n                return\r\n            }\r\n\r\n            return order.desc ? 'desc' : 'asc'\r\n        }\r\n\r\n        return (\r\n            <div className=\"flex h-full w-full flex-auto flex-col overflow-hidden\">\r\n                <WithNoData\r\n                    noData={!users}\r\n                    isLoading={isLoading}\r\n                    className=\"overflow-hidden\"\r\n                >\r\n                    <div className=\"flex flex-1 flex-col overflow-hidden\">\r\n                        <div className=\"overflow-auto\">\r\n                            <Table size=\"sm\" className=\"w-full\">\r\n                                {config.columnTitleEnabled && (\r\n                                    <Table.Header sticky>\r\n                                        {table.getHeaderGroups().map(headerGroup => (\r\n                                            <Table.Row key={headerGroup.id}>\r\n                                                {headerGroup.headers.map(header => (\r\n                                                    <Table.HeaderCell\r\n                                                        key={header.id}\r\n                                                        onClick={header.column.getToggleSortingHandler()}\r\n                                                        order={getSortOrder(header.id)}\r\n                                                        align=\"left\"\r\n                                                    >\r\n                                                        {flexRender(\r\n                                                            header.column.columnDef.header,\r\n                                                            header.getContext(),\r\n                                                        )}\r\n                                                    </Table.HeaderCell>\r\n                                                ))}\r\n                                            </Table.Row>\r\n                                        ))}\r\n                                    </Table.Header>\r\n                                )}\r\n                                <Table.Body>\r\n                                    {table.getRowModel().rows\r\n                                        .map(row => (\r\n                                            <Table.Row key={row.id}>\r\n                                                {row.getVisibleCells().map(cell => (\r\n                                                    <Table.Cell key={cell.id} align=\"left\">\r\n                                                        {flexRender(\r\n                                                            cell.column.columnDef.cell,\r\n                                                            cell.getContext(),\r\n                                                        )}\r\n                                                    </Table.Cell>\r\n                                                ))}\r\n                                            </Table.Row>\r\n                                        ))}\r\n                                </Table.Body>\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n                </WithNoData>\r\n            </div>\r\n        )\r\n    },\r\n)\r\n","import React, {useCallback, useState} from 'react'\r\n\r\nimport type {AgentWidget, SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {isFlippingWidget} from '../../helpers'\r\nimport type {BpWallboardWidgetResolverEditProps} from '../bp-wallboard'\r\nimport {BpWallboard} from '../bp-wallboard'\r\nimport {useOpenWidgetSettings} from './widgets/useOpenWidgetSettings'\r\nimport {WidgetResolverEdit, WidgetResolverView} from './widgets/WidgetResolver'\r\nimport {useOpenCreateWidgetsModal} from './modals'\r\n\r\n\r\nconst WIDGETS_WITH_NO_SETTINGS: AgentWidget['type'][] = ['BREAK_TIME_REMAINING']\r\n\r\ntype AgentsWallboardProps = {\r\n    widgets: AgentWidget[]\r\n    minCardSize: BpWallboardWidgetResolverEditProps<SupervisorWidget>['minCardSize']\r\n    gridSize: BpWallboardWidgetResolverEditProps<SupervisorWidget>['gridSize']\r\n    removeWidget: (widget: AgentWidget) => void\r\n    updateWidget: (widget: AgentWidget) => void\r\n    editMode: boolean\r\n}\r\n\r\nexport const AgentWallboard: React.FC<AgentsWallboardProps> = ({\r\n    widgets,\r\n    minCardSize,\r\n    gridSize,\r\n    removeWidget,\r\n    updateWidget,\r\n    editMode}) => {\r\n    const [cellSize, setCellSize] = useState({width: 0, height: 0})\r\n    const openSettings = useOpenWidgetSettings()\r\n    const openCreateWidgetModal = useOpenCreateWidgetsModal()\r\n    const hideWidgetSettings = useCallback((widget: AgentWidget) => {\r\n        if (isFlippingWidget(widget)) {\r\n            const activeWidget = widget.widgets.find(w => w.id === widget.activeWidgetId)\r\n\r\n            if (!activeWidget) {\r\n                return false\r\n            }\r\n\r\n            return WIDGETS_WITH_NO_SETTINGS.includes(activeWidget.type)\r\n        }\r\n\r\n        return WIDGETS_WITH_NO_SETTINGS.includes(widget.type)\r\n    }, [])\r\n\r\n    return (\r\n        <BpWallboard\r\n            widgets={widgets}\r\n            cellSize={cellSize}\r\n            setCellSize={setCellSize}\r\n            gridSize={gridSize}\r\n            minCardSize={minCardSize}\r\n            editMode={editMode}\r\n            WidgetResolverEdit={WidgetResolverEdit}\r\n            hideWidgetSettings={hideWidgetSettings}\r\n            WidgetResolverView={WidgetResolverView}\r\n            createEmptyWidget={openCreateWidgetModal}\r\n            removeWidget={removeWidget}\r\n            openSettings={openSettings}\r\n            updateWidget={updateWidget}\r\n        />\r\n    )\r\n}\r\n\r\n","import {useCallback} from 'react'\r\n\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport type {BpWallboardSelectedCellsRequired} from '../../../bp-wallboard'\r\nimport {useHomePageUIState} from '../../../HomePageUIContextProvider'\r\nimport {CreateWidgetModal} from './CreateWidgetModal'\r\n\r\n\r\nexport function useOpenCreateWidgetsModal() {\r\n    const openCreateWidgetModal = useModalComponentOpener(CreateWidgetModal)\r\n    const addWidget = useHomePageUIState('addWidget')\r\n\r\n    return useCallback(\r\n        (selectedCells: BpWallboardSelectedCellsRequired) =>\r\n            openCreateWidgetModal({selectedCells, addWidget}),\r\n        [addWidget, openCreateWidgetModal],\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useLocalSettings} from '@bpinc/ad-local-settings-context'\r\nimport type {HomePageConfig} from '@bpinc/lib-widgets-urls'\r\n\r\n\r\nexport function useUnsavedConfigsMethods() {\r\n    const localSettings = useLocalSettings()\r\n\r\n    const getUnsavedConfig = useCallback(() => localSettings.get('homePageUnsavedConfigs'), [localSettings])\r\n\r\n    const storeUnsavedConfig = useCallback(async (activeConfig: HomePageConfig) => {\r\n        const configs = await localSettings.get('homePageUnsavedConfigs')\r\n        await localSettings.set('homePageUnsavedConfigs', {...(configs || {}), [activeConfig.id]: activeConfig})\r\n    }, [localSettings])\r\n\r\n\r\n    const removeUnsavedConfig = useCallback(async (activeConfig: HomePageConfig) => {\r\n        const unsavedConfigs = await localSettings.get('homePageUnsavedConfigs')\r\n        if (!unsavedConfigs) {\r\n            return\r\n        }\r\n        delete unsavedConfigs[activeConfig.id]\r\n        await localSettings.set('homePageUnsavedConfigs', unsavedConfigs)\r\n    }, [localSettings])\r\n\r\n    return {\r\n        getUnsavedConfig,\r\n        removeUnsavedConfig,\r\n        storeUnsavedConfig,\r\n    }\r\n}\r\n","import {tw} from '@servicepattern/ui'\r\nimport {tv} from 'tailwind-variants'\r\n\r\n\r\nexport const headerStyles = tv({\r\n    base: [\r\n        tw`flex min-h-16 items-center justify-between gap-2 px-4 py-3 bg-primary-background`,\r\n        tw`mx-px border border-action`,\r\n    ],\r\n})\r\n\r\nexport const buttonsContainerStyles = tv({\r\n    base: [\r\n        tw`flex flex-1 items-center justify-end gap-2`,\r\n    ],\r\n})\r\n\r\nexport const selectFieldStyles = tv({\r\n    base: [\r\n        tw`ml-6 `,\r\n    ],\r\n    variants: {\r\n        isOpen: {\r\n            true: [\r\n                tw`min-w-[195px]`,\r\n            ],\r\n        },\r\n    },\r\n})\r\n\r\nexport const selectFieldFrameStyles = tv({\r\n    base: [\r\n        tw`bg-transparent hover:bg-dark-on-white-1`,\r\n    ],\r\n    variants: {\r\n        isOpen: {\r\n            false: [\r\n                tw`!border-transparent`,\r\n            ],\r\n        },\r\n    },\r\n})\r\n","import type {ChangeEvent, FC} from 'react'\r\nimport React, {useCallback, useEffect, useState} from 'react'\r\nimport {Button} from '@servicepattern/ui'\r\n\r\nimport {useHomePageStateMethods} from '@bpinc/home-page-state-context'\r\nimport {useDidUnmount} from '@bpinc/lib-helpers'\r\nimport {InputField} from '@bpinc/lib-jskit-ui'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {useHomePageUIState} from '../HomePageUIContextProvider'\r\nimport {useOpenRestoreUnsavedConfig} from '../useRestoreUnsavedConfig'\r\nimport {useUnsavedConfigsMethods} from '../useUnsavedConfigsMethods'\r\nimport {buttonsContainerStyles, headerStyles} from './styles'\r\n\r\n\r\nexport const EditorHeader: FC = () => {\r\n    const {t} = useLocalizationState()\r\n    const {openModal} = useModalsStateMethods()\r\n    const {storeUnsavedConfig, removeUnsavedConfig} = useUnsavedConfigsMethods()\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const {setMode, mode, isDirty, activeConfig, setActiveConfig} =\r\n    useHomePageUIState([\r\n        'activeConfig',\r\n        'setActiveConfig',\r\n        'mode',\r\n        'setMode',\r\n        'isDirty',\r\n    ])\r\n\r\n    useOpenRestoreUnsavedConfig()\r\n\r\n    //Show confirm on trying close or reload tab if we have unsaved changes\r\n    useEffect(function checksBeforeUnload() {\r\n        function checkDirtyBeforeClose(e: BeforeUnloadEvent) {\r\n            if (!isDirty || !activeConfig) {\r\n                return\r\n            }\r\n            storeUnsavedConfig(activeConfig)\r\n            e.preventDefault()\r\n            e.returnValue = ''\r\n        }\r\n\r\n        window.addEventListener('beforeunload', checkDirtyBeforeClose)\r\n        return () => {\r\n            window.removeEventListener('beforeunload', checkDirtyBeforeClose)\r\n        }\r\n    }, [activeConfig, isDirty, storeUnsavedConfig])\r\n\r\n    useDidUnmount(() => {\r\n        if (!isDirty || !activeConfig) {\r\n            return\r\n        }\r\n        storeUnsavedConfig(activeConfig)\r\n    })\r\n\r\n    const previewButtonLabel = mode === 'preview' ? t.HOME_SCREEN.header_close_preview_btn() : t.HOME_SCREEN.header_preview_btn()\r\n    const {updateConfig} = useHomePageStateMethods()\r\n    const changeHomePageName = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value\r\n        assertDefined(activeConfig)\r\n        setActiveConfig({...activeConfig, name: value})\r\n    }, [activeConfig, setActiveConfig])\r\n\r\n    const saveHomePageConfig = useCallback(async () => {\r\n        try {\r\n            assertDefined(activeConfig)\r\n            setIsSaving(true)\r\n            await updateConfig({\r\n                id: activeConfig.id,\r\n                widgets: activeConfig.widgets,\r\n                name: activeConfig.name,\r\n                isDefault: activeConfig.isDefault,\r\n            })\r\n\r\n            removeUnsavedConfig(activeConfig)\r\n        } catch (e) {\r\n            openModal({\r\n                theme: 'error',\r\n                title: t.HOME_SCREEN.update_error_title(),\r\n                body: t.HOME_SCREEN.update_error_content(activeConfig?.name || t.GLOBAL.unknown()),\r\n                actions: {\r\n                    ok: {\r\n                        title: t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk(),\r\n                    },\r\n                },\r\n            })\r\n        }\r\n        setIsSaving(false)\r\n    }, [activeConfig, openModal, removeUnsavedConfig, t.GLOBAL, t.HOME_SCREEN, t.WINDOW_POPUP_TITLES_AND_MESSAGES, updateConfig])\r\n\r\n    const changePreviewMode = useCallback(() => {\r\n        setMode('preview')\r\n    }, [setMode])\r\n\r\n    const goBack = useCallback(() => {\r\n        setMode('edit')\r\n    }, [setMode])\r\n\r\n    const viewName = activeConfig?.isDefault ? t.HOME_SCREEN.home_tab() : activeConfig?.name || ''\r\n\r\n    return (\r\n        <header className={headerStyles()}>\r\n            {mode === 'preview'\r\n                ? <h2 className=\"m-0 flex-1 truncate heading-m\">{viewName}</h2>\r\n                : (\r\n                    <InputField\r\n                        layoutClassName=\"max-w-1/3 w-full p-0\"\r\n                        value={viewName}\r\n                        onChange={changeHomePageName}\r\n                        disabled={isSaving || activeConfig?.isDefault}\r\n                        id=\"wallboard-name-input\"\r\n                    />\r\n                )\r\n            }\r\n            <div className={buttonsContainerStyles()}>\r\n                <Button\r\n                    onClick={mode === 'preview' ? goBack : changePreviewMode}\r\n                    variant=\"secondary\"\r\n                    disabled={isSaving}\r\n                    state={\r\n                        !isSaving\r\n                            ? 'disabled'\r\n                            : undefined\r\n                    }\r\n                >\r\n                    {previewButtonLabel}\r\n                </Button>\r\n                <Button\r\n                    onClick={saveHomePageConfig}\r\n                    variant=\"primary\"\r\n                    state={\r\n                        !isDirty\r\n                            ? 'disabled'\r\n                            : isSaving\r\n                                ? 'loading'\r\n                                : undefined\r\n                    }\r\n                >\r\n                    {t.HOME_SCREEN.header_save_btn()}\r\n                </Button>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\n\r\nimport type {HomePageConfig} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {useHomePageUIState} from './HomePageUIContextProvider'\r\nimport {useUnsavedConfigsMethods} from './useUnsavedConfigsMethods'\r\n\r\n\r\nexport function useOpenRestoreUnsavedConfig() {\r\n    const {openModal} = useModalsStateMethods()\r\n    const {HOME_SCREEN, GLOBAL} = useLocalizationState('t')\r\n    const [unsavedConfig, setUnsavedConfig] = useState<HomePageConfig | undefined>(undefined)\r\n    const {getUnsavedConfig, removeUnsavedConfig} = useUnsavedConfigsMethods()\r\n    const {activeConfig, setActiveConfig} = useHomePageUIState(['activeConfig', 'setActiveConfig'])\r\n    const activeConfigId = activeConfig?.id\r\n\r\n    useEffect(function loadUnsavedConfigs() {\r\n        const getData = async () => {\r\n            if (!activeConfigId) {\r\n                return\r\n            }\r\n            const configs = await getUnsavedConfig()\r\n            if (configs && configs[activeConfigId]) {\r\n                setUnsavedConfig(configs[activeConfigId])\r\n            }\r\n        }\r\n        getData()\r\n    }, [activeConfigId, getUnsavedConfig])\r\n\r\n    useEffect(function openRestoreConfigModal() {\r\n        if (!unsavedConfig) {\r\n            return\r\n        }\r\n        openModal({\r\n            title: HOME_SCREEN.restore_unsaved_config_title(),\r\n            body: HOME_SCREEN.restore_unsaved_config_content(),\r\n            actions: {\r\n                ok: {\r\n                    title: GLOBAL.restore(),\r\n                    action: async () => {\r\n                        setUnsavedConfig(undefined)\r\n                        setActiveConfig(unsavedConfig)\r\n                    },\r\n                },\r\n                cancel: {\r\n                    title: GLOBAL.cancel(),\r\n                    action: async () => {\r\n                        await removeUnsavedConfig(unsavedConfig)\r\n                        setUnsavedConfig(undefined)\r\n                    },\r\n                },\r\n            },\r\n        })\r\n    }, [GLOBAL, HOME_SCREEN, openModal, removeUnsavedConfig, setActiveConfig, unsavedConfig])\r\n}\r\n\r\n","import {useEffect, useMemo, useState} from 'react'\r\nimport {throttle} from 'lodash-es'\r\nimport uuid from 'uuid/v4'\r\n\r\nimport {useDirectoryState, useDirectoryStateMethods} from '@bpinc/ad-directory-state-context'\r\nimport type {DirectoryStateUserObject} from '@bpinc/ad-directory-state-types'\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst HOME_PAGE_USERS_SEARCH_ID = `HOME_PAGE_USERS_SEARCH_ID_${uuid()}`\r\n\r\nexport function useAgentsOptions(search: string, mySubteamOnly: boolean) {\r\n    const {t} = useLocalizationState()\r\n    const {userId: selfUserId, teamId: selfTeamId} = useSessionState(['userId', 'teamId'])\r\n    const {findContacts, fetchLoggedUsers, getAgentTeams} = useDirectoryStateMethods()\r\n    const searchResult = useDirectoryState('searchResults')[HOME_PAGE_USERS_SEARCH_ID]\r\n    const [isUsersLoading, setIsUsersLoading] = useState(true)\r\n    const [allUsers, setAllUsers] = useState<DirectoryStateUserObject[]>([])\r\n    const {formatFullName} = useFormatting()\r\n\r\n    const myTeamUsers = useMemo(() => {\r\n        return allUsers.reduce<string[]>((result, user) => {\r\n            if (user.teamId === selfTeamId) {\r\n                result.push(user.userId)\r\n            }\r\n            return result\r\n        }, [])\r\n    }, [allUsers, selfTeamId])\r\n\r\n    useEffect(() => {\r\n        async function getAllUsers() {\r\n            const directoryData = await getAgentTeams()\r\n            const teams = directoryData.map(x => x.id)\r\n            const users = await fetchLoggedUsers(teams)\r\n            setAllUsers(users)\r\n            setIsUsersLoading(false)\r\n        }\r\n        getAllUsers()\r\n    }, [getAgentTeams, fetchLoggedUsers])\r\n\r\n    const throttleSearchContact = useMemo(() => throttle((query: string) => findContacts(query, HOME_PAGE_USERS_SEARCH_ID), 500), [])\r\n    useEffect(() => {\r\n        throttleSearchContact(search)\r\n    }, [search, throttleSearchContact])\r\n\r\n    return useMemo(() => {\r\n        const options = allUsers\r\n            .map(u => {\r\n                const fullName = formatFullName(u.firstName, u.lastName)\r\n                return {\r\n                    value: u.userId,\r\n                    content: u.userId === selfUserId ? t.HOME_SCREEN.me(fullName) : fullName,\r\n                }\r\n            })\r\n            //Hide users from options by filters\r\n            .filter(option => {\r\n                if (search && !searchResult?.data?.users.some(({userId}) => userId === option.value)) {\r\n                    return false\r\n                }\r\n                if (mySubteamOnly && !myTeamUsers.includes(option.value)) {\r\n                    return false\r\n                }\r\n\r\n                return true\r\n            })\r\n            //Sort users to set the current user first\r\n            .sort((u1, u2) => Number(u2.value === selfUserId) - Number(u1.value === selfUserId))\r\n\r\n        return {\r\n            options,\r\n            allUsers,\r\n            isLoading: searchResult?.isLoading || isUsersLoading || false,\r\n        }\r\n    }, [\r\n        t.HOME_SCREEN,\r\n        allUsers,\r\n        formatFullName,\r\n        isUsersLoading,\r\n        mySubteamOnly,\r\n        myTeamUsers,\r\n        search,\r\n        searchResult?.data?.users,\r\n        searchResult?.isLoading,\r\n        selfUserId,\r\n    ])\r\n}\r\n","import React, {useState} from 'react'\r\nimport {isUndefined} from 'lodash-es'\r\n\r\nimport {useBoolean} from '@bpinc/lib-helpers'\r\nimport {type SelectFieldProps, SelectField, ToggleWithLabel} from '@bpinc/lib-jskit-ui'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useAgentsOptions} from './useAgentsOptions'\r\n\r\n\r\ntype AgentsSelectorProps = Omit<SelectFieldProps, 'onChange' | 'options' | 'contentHeader' | 'withSearch' | 'onSearchChange'> & {\r\n    onChange: (user: {\r\n        id: string\r\n        teamId: string | undefined\r\n        firstName: string | undefined\r\n        lastName: string | undefined\r\n    }) => void\r\n}\r\n\r\nexport const AgentsSelector: React.FC<AgentsSelectorProps> = ({value, onChange, open, ...restProps}) => {\r\n    const {HOME_SCREEN} = useLocalizationState('t')\r\n    const [search, setSearch] = useState('')\r\n    const {value: mySubteamOnly, toggle: toggleSubteam} = useBoolean(false)\r\n    const {options, allUsers, isLoading} = useAgentsOptions(search, mySubteamOnly)\r\n\r\n    const toggleElem = (\r\n        <div>\r\n            <ToggleWithLabel\r\n                containerClassName=\"h-9 pl-3\"\r\n                label={HOME_SCREEN.my_subteam_only_label()}\r\n                labelPosition=\"right\"\r\n                onCheckedChange={toggleSubteam}\r\n                size=\"sm\"\r\n            />\r\n        </div>\r\n    )\r\n\r\n    const handleChange = (userId?: string) => {\r\n        if (typeof userId !== 'string') {\r\n            throw new Error('Unexpected value type')\r\n        }\r\n\r\n        const user = allUsers.find(u => u.userId === userId)\r\n        assertDefined(user)\r\n        onChange({\r\n            id: user.userId,\r\n            teamId: user.teamId,\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <SelectField\r\n            value={value}\r\n            onSearchChange={setSearch}\r\n            onChange={handleChange}\r\n            withSearch\r\n            options={options}\r\n            contentHeader={toggleElem}\r\n            open={open}\r\n            loading={isUndefined(open) ? isLoading : (open && isLoading)}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\nimport {AgentsSelector} from '../AgentsSelector'\r\nimport {useHomePageUIState} from '../HomePageUIContextProvider'\r\nimport {selectFieldFrameStyles, selectFieldStyles} from './styles'\r\n\r\n\r\nexport const AgentsDropdown: React.FC = () => {\r\n    const [isOpen, setIsOpen] = useState<boolean>(false)\r\n    const {selectedUser, setSelectedUser} = useHomePageUIState(['selectedUser', 'setSelectedUser'])\r\n\r\n    return (\r\n        <AgentsSelector\r\n            layoutClassName={selectFieldStyles({isOpen})}\r\n            fieldClassName={selectFieldFrameStyles({isOpen})}\r\n            value={selectedUser.id}\r\n            onChange={user => setSelectedUser({id: user.id, teamId: user.teamId})}\r\n            open={isOpen}\r\n            onOpenChange={setIsOpen}\r\n        />\r\n    )\r\n}\r\n","import {useCallback, useMemo} from 'react'\r\n\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useHomePageStateMethods} from '@bpinc/home-page-state-context'\r\nimport {type BooleanManager, downloadJsonFile, readFromJsonFile} from '@bpinc/lib-helpers'\r\nimport type {MoreOption} from '@bpinc/lib-jskit-ui'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport type {HomePageConfig} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {makeLinkToHomePageApp} from '../../helpers'\r\nimport {useHomePageUIState} from '../HomePageUIContextProvider'\r\nimport {useOpenNewHomepageModal} from '../modals'\r\nimport {useOpenRemoveHomepageModal} from '../modals/useOpenRemoveHomepageModal'\r\n\r\n\r\ninterface UseMenuOptions {\r\n    showMenuOptions: BooleanManager\r\n}\r\n\r\nexport function useMenuOptions({\r\n    showMenuOptions,\r\n}: UseMenuOptions): MoreOption[] {\r\n    const {privileges} = useSessionState()\r\n    const serverOrigin = useSessionState('serverOrigin')\r\n    const {createConfig, duplicateConfig, toggleConfigIsGlobal} = useHomePageStateMethods()\r\n    const {\r\n        activeConfig,\r\n        setMode,\r\n        setActiveConfig,\r\n        selectedUser,\r\n        mode,\r\n        setIsLoading,\r\n        tabsManager,\r\n    } = useHomePageUIState([\r\n        'activeConfig',\r\n        'setMode',\r\n        'setActiveConfig',\r\n        'selectedUser',\r\n        'mode',\r\n        'setIsLoading',\r\n        'tabsManager',\r\n    ])\r\n\r\n    const {openModal} = useModalsStateMethods()\r\n    const openNewHomepageModal = useOpenNewHomepageModal()\r\n    const openRemoveHomepageModal = useOpenRemoveHomepageModal()\r\n\r\n    const handleCreateNewWallboard = useCallback(() => {\r\n        openNewHomepageModal({\r\n            onCreated: (newConfig: HomePageConfig) => {\r\n                const newHomePageLink = makeLinkToHomePageApp({\r\n                    serverOrigin,\r\n                    configId: newConfig.id,\r\n                    userId: selectedUser.id,\r\n                    teamId: selectedUser.teamId,\r\n                    edit: true,\r\n                })\r\n                tabsManager?.openOrFocus(newHomePageLink, newConfig.id)\r\n            },\r\n        })\r\n    }, [openNewHomepageModal, selectedUser.id, selectedUser.teamId, serverOrigin, tabsManager])\r\n\r\n\r\n    const handleEdit = useCallback(() => {\r\n        assertDefined(activeConfig)\r\n\r\n        const editPage = makeLinkToHomePageApp({\r\n            serverOrigin,\r\n            configId: activeConfig.id,\r\n            userId: selectedUser.id,\r\n            teamId: selectedUser.teamId,\r\n            edit: true,\r\n        })\r\n\r\n        tabsManager?.openOrFocus(editPage, activeConfig.id)\r\n        showMenuOptions.setFalse()\r\n    }, [activeConfig, selectedUser.id, selectedUser.teamId, serverOrigin, showMenuOptions, tabsManager])\r\n\r\n    const {t} = useLocalizationState()\r\n\r\n    const handleDuplicate = useCallback(async () => {\r\n        assertDefined(activeConfig?.id)\r\n        setIsLoading(true)\r\n        try {\r\n            const copiedConfig = await duplicateConfig(activeConfig.id)\r\n\r\n            const copiedConfigLink = makeLinkToHomePageApp({\r\n                serverOrigin,\r\n                configId: copiedConfig.id,\r\n                userId: selectedUser.id,\r\n                teamId: selectedUser.teamId,\r\n                edit: mode === 'edit',\r\n            })\r\n\r\n            tabsManager?.openOrFocus(copiedConfigLink, copiedConfig.id)\r\n        } catch (error) {\r\n            openModal({\r\n                theme: 'error',\r\n                title: t.HOME_SCREEN.menu_duplicate(),\r\n                body: t.HOME_SCREEN.duplicate_error(activeConfig.name),\r\n                actions: {\r\n                    ok: {\r\n                        title: t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk(),\r\n                    },\r\n                },\r\n            })\r\n        }\r\n        setIsLoading(false)\r\n        showMenuOptions.setFalse()\r\n    }, [\r\n        activeConfig,\r\n        duplicateConfig,\r\n        mode,\r\n        openModal,\r\n        selectedUser.id,\r\n        selectedUser.teamId,\r\n        serverOrigin,\r\n        setIsLoading,\r\n        showMenuOptions,\r\n        t.HOME_SCREEN,\r\n        t.WINDOW_POPUP_TITLES_AND_MESSAGES,\r\n        tabsManager,\r\n    ])\r\n\r\n    const handleDelete = useCallback(async () => {\r\n        assertDefined(activeConfig)\r\n        showMenuOptions.setFalse()\r\n        openRemoveHomepageModal(activeConfig)\r\n    }, [activeConfig, openRemoveHomepageModal, showMenuOptions])\r\n\r\n\r\n    const handleToggleIsGlobal = useCallback(async () => {\r\n        assertDefined(activeConfig)\r\n        assertDefined(activeConfig.id)\r\n        showMenuOptions.setFalse()\r\n        setIsLoading(true)\r\n        try {\r\n            await toggleConfigIsGlobal(activeConfig.id)\r\n        } catch (e) {\r\n            openModal({\r\n                theme: 'error',\r\n                title: activeConfig?.isGlobal\r\n                    ? t.HOME_SCREEN.menu_pull_from_global()\r\n                    : t.HOME_SCREEN.menu_push_to_global(),\r\n                body: activeConfig?.isGlobal\r\n                    ? t.HOME_SCREEN.pull_from_global_error(activeConfig.name)\r\n                    : t.HOME_SCREEN.push_to_global_error(activeConfig.name),\r\n                actions: {\r\n                    ok: {\r\n                        title: t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk(),\r\n                    },\r\n                },\r\n            })\r\n        }\r\n        setIsLoading(false)\r\n    }, [activeConfig, showMenuOptions, setIsLoading, toggleConfigIsGlobal, openModal, t.HOME_SCREEN, t.WINDOW_POPUP_TITLES_AND_MESSAGES])\r\n\r\n    const handleExport = useCallback(() => {\r\n        assertDefined(activeConfig)\r\n        showMenuOptions.setFalse()\r\n\r\n        downloadJsonFile(activeConfig, 'config.json')\r\n        showMenuOptions.setFalse()\r\n    }, [showMenuOptions, activeConfig])\r\n\r\n    const handleImport = useCallback(async () => {\r\n        setIsLoading(true)\r\n        showMenuOptions.setFalse()\r\n        try {\r\n            const parsedConfig = await readFromJsonFile<HomePageConfig>()\r\n            assertDefined(parsedConfig)\r\n            const {id: _, ...newConfig} = parsedConfig\r\n            const importedConfig = await createConfig(newConfig)\r\n            setActiveConfig(importedConfig)\r\n            setMode('edit')\r\n        } catch (e) {\r\n            openModal({\r\n                theme: 'error',\r\n                title: t.HOME_SCREEN.menu_import(),\r\n                body: t.HOME_SCREEN.import_error(),\r\n                actions: {\r\n                    ok: {\r\n                        title: t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk(),\r\n                    },\r\n                },\r\n            })\r\n        }\r\n        setIsLoading(false)\r\n    }, [setIsLoading, showMenuOptions, createConfig, setActiveConfig, setMode, openModal, t.HOME_SCREEN, t.WINDOW_POPUP_TITLES_AND_MESSAGES])\r\n\r\n    const isDefault = activeConfig?.isDefault\r\n\r\n    return useMemo(() => {\r\n        const options: MoreOption[] = []\r\n        if (privileges.CUSTOMIZE_HOME_PAGE_VIEWS) {\r\n            options.push(\r\n                {\r\n                    content: t.HOME_SCREEN.menu_new(),\r\n                    key: t.HOME_SCREEN.menu_new(),\r\n                    onSelect: handleCreateNewWallboard,\r\n                },\r\n                {\r\n                    content: t.HOME_SCREEN.menu_edit(),\r\n                    key: t.HOME_SCREEN.menu_edit(),\r\n                    onSelect: handleEdit,\r\n                },\r\n            )\r\n        }\r\n\r\n        if (isDefault) {\r\n            return options\r\n        }\r\n        if (privileges.CUSTOMIZE_HOME_PAGE_VIEWS) {\r\n            options.push(\r\n                {\r\n                    content: t.HOME_SCREEN.menu_duplicate(),\r\n                    key: t.HOME_SCREEN.menu_duplicate(),\r\n                    onSelect: handleDuplicate,\r\n                },\r\n                {\r\n                    content: t.HOME_SCREEN.menu_delete(),\r\n                    key: t.HOME_SCREEN.menu_delete(),\r\n                    onSelect: handleDelete,\r\n                },\r\n                {\r\n                    content: t.HOME_SCREEN.menu_export(),\r\n                    key: t.HOME_SCREEN.menu_export(),\r\n                    onSelect: handleExport,\r\n                },\r\n                {\r\n                    content: t.HOME_SCREEN.menu_import(),\r\n                    key: t.HOME_SCREEN.menu_import(),\r\n                    onSelect: handleImport,\r\n                },\r\n            )\r\n        }\r\n\r\n        if (privileges.PUSH_PULL_GLOBAL_HOME_PAGE_VIEWS) {\r\n            options.push(\r\n                {\r\n                    content: activeConfig?.isGlobal\r\n                        ? t.HOME_SCREEN.menu_pull_from_global()\r\n                        : t.HOME_SCREEN.menu_push_to_global(),\r\n                    key: activeConfig?.isGlobal\r\n                        ? t.HOME_SCREEN.menu_pull_from_global()\r\n                        : t.HOME_SCREEN.menu_push_to_global(),\r\n                    onSelect: handleToggleIsGlobal,\r\n                },\r\n            )\r\n        }\r\n        return options\r\n    }, [\r\n        t.HOME_SCREEN,\r\n        handleCreateNewWallboard,\r\n        handleEdit,\r\n        isDefault,\r\n        privileges.CUSTOMIZE_HOME_PAGE_VIEWS,\r\n        privileges.PUSH_PULL_GLOBAL_HOME_PAGE_VIEWS,\r\n        handleDuplicate,\r\n        handleDelete,\r\n        handleExport,\r\n        handleImport,\r\n        activeConfig?.isGlobal,\r\n        handleToggleIsGlobal,\r\n    ])\r\n}\r\n","import {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {NewHomepageModal} from './NewHomepageModal'\r\n\r\n\r\nexport function useOpenNewHomepageModal() {\r\n    return useModalComponentOpener(NewHomepageModal)\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {useHomePageStateMethods} from '@bpinc/home-page-state-context'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport type {HomePageConfig} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalsStateMethods} from '@bpinc/state-modals-context'\r\n\r\nimport {useHomePageUIState} from '../HomePageUIContextProvider'\r\n\r\n\r\nexport function useOpenRemoveHomepageModal() {\r\n    const {openModal} = useModalsStateMethods()\r\n    const {HOME_SCREEN, GLOBAL, WINDOW_POPUP_TITLES_AND_MESSAGES} = useLocalizationState('t')\r\n    const {deleteConfig} = useHomePageStateMethods()\r\n    const setActiveConfig = useHomePageUIState('setActiveConfig')\r\n\r\n\r\n    return useCallback((config: HomePageConfig) => {\r\n        openModal({\r\n            theme: 'warning',\r\n            title: HOME_SCREEN.delete_homepage_title(),\r\n            body: HOME_SCREEN.delete_homepage_content(config.name),\r\n            actions: {\r\n                ok: {\r\n                    title: GLOBAL.delete(),\r\n                    action: async () => {\r\n                        assertDefined(config.id)\r\n                        try {\r\n                            await deleteConfig(config.id)\r\n                            setActiveConfig(undefined)\r\n                        } catch (err) {\r\n                            openModal({\r\n                                theme: 'error',\r\n                                title: GLOBAL.delete(),\r\n                                body: HOME_SCREEN.delete_error(config.name),\r\n                                actions: {\r\n                                    ok: {\r\n                                        title: WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk(),\r\n                                    },\r\n                                },\r\n                            })\r\n                        }\r\n                    },\r\n                },\r\n                cancel: {\r\n                    title: GLOBAL.cancel(),\r\n                },\r\n            },\r\n        })\r\n    }, [GLOBAL, HOME_SCREEN, WINDOW_POPUP_TITLES_AND_MESSAGES, deleteConfig, openModal, setActiveConfig])\r\n}\r\n\r\n","import type {FC} from 'react'\r\nimport React from 'react'\r\n\r\nimport {useBoolean} from '@bpinc/lib-helpers'\r\nimport {GlobeIcon, MoreOptions} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useHomePageUIState} from '../HomePageUIContextProvider'\r\nimport {AgentsDropdown} from './AgentsDropdown'\r\nimport {useMenuOptions} from './useMenuOptions'\r\n\r\n\r\nexport const SupervisorHeader: FC = () => {\r\n    const {t} = useLocalizationState()\r\n    const showMenuOptions = useBoolean()\r\n    const activeConfig = useHomePageUIState('activeConfig')\r\n    const menuOptions = useMenuOptions({showMenuOptions})\r\n\r\n    const isDefault = activeConfig?.isDefault\r\n\r\n    return (\r\n        <header className=\"flex items-center justify-between pb-2 pl-6 pr-8 pt-4 bg-secondary-container-variant1\">\r\n            <div className=\"flex items-center\">\r\n                <h2 className=\"heading-m text-primary-on-primary\">{isDefault ? t.HOME_SCREEN.home_tab() : activeConfig?.name}</h2>\r\n                {activeConfig?.isGlobal && !isDefault && <GlobeIcon className=\"ml-4\" />}\r\n                {isDefault && <AgentsDropdown /> }\r\n            </div>\r\n            <div className=\"flex\">\r\n                {(menuOptions.length > 0) && (\r\n                    <MoreOptions\r\n                        buttonProps={{\r\n                            tooltip: t.HOME_SCREEN.menu(),\r\n                        }}\r\n                        align=\"end\"\r\n                        options={menuOptions}\r\n                    />\r\n                )}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React from 'react'\r\n\r\nimport type {HomePageViewType} from '../HomePageUIContextProvider'\r\nimport {EditorHeader} from './EditorHeader'\r\nimport {SupervisorHeader} from './SupervisorHeader'\r\n\r\n\r\ninterface SupervisorWallboardHeaderProps {\r\n    mode: HomePageViewType\r\n}\r\n\r\nexport const Header: FC<SupervisorWallboardHeaderProps> = ({\r\n    mode,\r\n}) => {\r\n    if (mode === 'supervisor') {\r\n        return <SupervisorHeader />\r\n    }\r\n\r\n    return <EditorHeader />\r\n}\r\n","import {atom} from 'jotai'\r\nimport {noop} from 'lodash-es'\r\n\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\n\r\n\r\ntype AlertNotifyType = {\r\n    start: () => { stop: () => void }\r\n}\r\n\r\nexport const audioNotifyAtom = atom<AlertNotifyType | null>(null)\r\nexport const updatingWidgetDataAtom = atom<{\r\n    widget: SupervisorWidget | null\r\n    updateWidget: (widget: SupervisorWidget) => void\r\n}>({\r\n            widget: null,\r\n            updateWidget: noop,\r\n        })\r\n","import React, {useEffect, useMemo, useRef} from 'react'\r\nimport {useSetAtom} from 'jotai'\r\nimport {throttle} from 'lodash-es'\r\n\r\nimport {audioNotifyAtom} from '../atoms'\r\nimport notificationMp3 from './sounds/notification.mp3'\r\nimport notificationWav from './sounds/notification.wav'\r\n\r\n\r\nexport const AudioAlert = () => {\r\n    const audioRef = useRef<HTMLAudioElement>(null)\r\n\r\n    const notify = useMemo(() => throttle(() => {\r\n        audioRef.current?.play()\r\n    }, 10000, {leading: true}), [])\r\n    const setAudioNotify = useSetAtom(audioNotifyAtom)\r\n\r\n    useEffect(() => {\r\n        setAudioNotify({\r\n            start: () => {\r\n                notify()\r\n                const id = setInterval(() => notify(), 10000)\r\n\r\n                return {\r\n                    stop: () => clearInterval(id),\r\n                }\r\n            },\r\n        })\r\n    }, [notify, setAudioNotify])\r\n\r\n    return (\r\n        <audio ref={audioRef}>\r\n            <source src={notificationWav} />\r\n            <source src={notificationMp3} />\r\n        </audio>\r\n    )\r\n}\r\n","import {cloneDeep, uniq} from 'lodash-es'\r\nimport {createSelector} from 'reselect'\r\n\r\nimport type {SupervisorWidget, SupervisorWidgetsSubscriptionRequest} from '@bpinc/lib-widgets-urls'\r\n\r\n\r\nexport const getWidgetsSubscriptionData = createSelector(\r\n    (widgets: SupervisorWidget[]) => widgets,\r\n    widgets => widgets.reduce<Record<string, SupervisorWidgetsSubscriptionRequest>>((result, widget) => {\r\n        const subscription = createSubscriptionRequest(widget)\r\n        if (subscription) {\r\n            result[widget.id] = subscription\r\n        }\r\n        return result\r\n    }, {}),\r\n)\r\n\r\n\r\nfunction createSubscriptionRequest(config: SupervisorWidget) {\r\n    if (!('subscription' in config) || !config.subscription || !config.subscription.type) {\r\n        return\r\n    }\r\n\r\n    const widgetSubscription: SupervisorWidgetsSubscriptionRequest = {}\r\n\r\n    switch (config.subscription.type) {\r\n        case 'stats_total': {\r\n            widgetSubscription.stats_totals = uniq(config.subscription.req)\r\n            widgetSubscription.stats_totals_service_ids = config.subscription.service_ids\r\n            widgetSubscription.stats_totals_dispositions = config.subscription.dispositions\r\n            break\r\n        }\r\n        case 'agent_grid':\r\n        case 'break_time':\r\n        case 'dispositions':\r\n        case 'my_stats':\r\n        case 'satisfaction':\r\n        case 'summary': {\r\n            widgetSubscription.agent_grids = []\r\n\r\n            const tempAgent = cloneDeep(config.subscription.req)\r\n            tempAgent.limit = 1000\r\n\r\n            let totalContactsIndex = -1\r\n            tempAgent.columns.forEach((column, i) => {\r\n                removeRedundantData(column)\r\n\r\n                if (column.statName == 'name') {\r\n                    column.statName = 'first_last_name'\r\n                }\r\n                if (column.statName == 'total_contacts') {\r\n                    column.statName = 'in_calls_handled_per_day'\r\n                    totalContactsIndex = i\r\n                }\r\n            })\r\n\r\n            if (config.type === 'grid') {\r\n                tempAgent.my_subteam_only = config.limit?.subteam\r\n                tempAgent.logged_in_agents_only = config.limit?.logged_in_only\r\n            }\r\n            if (totalContactsIndex != -1) {\r\n                addColumn(\r\n                    tempAgent.columns,\r\n                    totalContactsIndex + 1,\r\n                    {\r\n                        id: (totalContactsIndex + 2).toString(),\r\n                        statName: 'out_calls_handled_per_day',\r\n                    },\r\n                )\r\n            }\r\n\r\n            addColumn(\r\n                tempAgent.columns,\r\n                tempAgent.columns.length - 1,\r\n                {\r\n                    id: (tempAgent.columns.length + 1).toString(),\r\n                    statName: 'acd_state',\r\n                },\r\n            )\r\n\r\n            widgetSubscription.agent_grids.push(tempAgent)\r\n\r\n            if (config.subscription.type === 'my_stats') {\r\n                widgetSubscription['teams_stats'] = [\r\n                    'team_success_ratio_per_day',\r\n                    'in_calls_handled_per_day',\r\n                    'out_calls_handled_per_day',\r\n                    'calls_average_handling_time_per_day',\r\n                ]\r\n            }\r\n\r\n            break\r\n        }\r\n        case 'service_grid': {\r\n            widgetSubscription.service_grids = []\r\n\r\n            const tempService = cloneDeep(config.subscription.req)\r\n            tempService.limit = 1000\r\n\r\n            let indexCallsHandledPerDay = -1\r\n            tempService.columns.forEach(column => {\r\n                removeRedundantData(column)\r\n\r\n                if (column.statName === 'calls_handled_per_day') {\r\n                    indexCallsHandledPerDay = parseInt(column.id || '0')\r\n                    column.statName = 'in_calls_handled_per_day'\r\n                }\r\n            })\r\n\r\n            if (indexCallsHandledPerDay > -1) {\r\n                addColumn(\r\n                    tempService.columns,\r\n                    tempService.columns.length - 1,\r\n                    {\r\n                        id: (tempService.columns.length + 1).toString(),\r\n                        statName: 'out_calls_handled_per_day',\r\n                    },\r\n                )\r\n            }\r\n\r\n            widgetSubscription.service_grids.push(tempService)\r\n            break\r\n        }\r\n    }\r\n    return widgetSubscription\r\n}\r\n\r\n\r\nfunction addColumn<T>(columns: T[], index: number, column: T) {\r\n    columns.splice(index + 1, 0, column)\r\n}\r\n\r\nfunction removeRedundantData<T extends object>(column: T) {\r\n    if ('dir' in column) {\r\n        delete column.dir\r\n    }\r\n\r\n    if ('coltitle' in column) {\r\n        delete column.coltitle\r\n    }\r\n\r\n    if ('order' in column) {\r\n        delete column.order\r\n    }\r\n}\r\n","import type {SupervisorWidgetsSubscriptionRequest} from '@bpinc/lib-widgets-urls'\r\n\r\n\r\nexport const queryKey = {\r\n    subscribe: (\r\n        subscriptionData?:\r\n        | Record<number, SupervisorWidgetsSubscriptionRequest>\r\n        | undefined,\r\n    ) =>\r\n        subscriptionData\r\n            ? [\r\n                'subscribe',\r\n                //This is a hack to make sure that the query key is unique for each subscription\r\n                //The subscription data is an object with the widget id as the key and the subscription data as the value\r\n                //If subscription data hasn't changed, the query key will be the same and the query won't be refetched\r\n                Object.entries(subscriptionData || {}).reduce(\r\n                    (acc, [key, value]) => acc + key + JSON.stringify(value),\r\n                    '',\r\n                ),\r\n            ]\r\n            : ['subscribe'],\r\n    subscribe_data: () => ['subscribe-data'],\r\n}\r\n","import {getMetricsByApplicable} from '@bpinc/ad-transport-types'\r\nimport type {AgentStatsType, ServiceStatsType, TotalStatsType} from '@bpinc/lib-widgets-urls'\r\n\r\n\r\nexport type AllStatsType = TotalStatsType | AgentStatsType | ServiceStatsType\r\nexport type StatsFormatType = 'duration' | 'percent'\r\n\r\nexport type StatsConfigType = {\r\n    statsSingle: StatsType<TotalStatsType>\r\n    statsAgent: StatsType<AgentStatsType>\r\n    statsService: StatsType<ServiceStatsType>\r\n}\r\n\r\nexport type StatsConfigTypeKeys = keyof StatsConfigType\r\n\r\n\r\ntype StatsType<StatKind extends AllStatsType> = Partial<{[Key in StatKind]: StatsDataType}>\r\n\r\nexport type StatsDataType = {\r\n    format?: StatsFormatType\r\n    align?: 'left'\r\n    alertInverted?: boolean\r\n}\r\n\r\n\r\nexport const MAP_STATS_NAMES = {\r\n    statsSingle: getMetricsByApplicable(['supervisor_stats_total']),\r\n    statsAgent: getMetricsByApplicable(['supervisor_stats_agent']),\r\n    statsService: getMetricsByApplicable(['supervisor_stats_service']),\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {useMetricsNames} from '@bpinc/lib-helpers-ui'\r\n\r\nimport {MAP_STATS_NAMES} from './types'\r\n\r\n\r\nexport function useStatsOptions(type: keyof typeof MAP_STATS_NAMES) {\r\n    const metricsNames = useMetricsNames()\r\n\r\n    return useMemo(() => {\r\n        const statsData = MAP_STATS_NAMES[type]\r\n\r\n        return statsData.map(key => {\r\n            return ({text: metricsNames[key].general, value: key})\r\n        })\r\n    }, [metricsNames, type])\r\n}\r\n\r\n","import {assertDefined, assertTrue} from '@bpinc/lib-types-helpers'\r\nimport type {SupervisorWidget, SupervisorWidgetAgentGridSubscriptionData} from '@bpinc/lib-widgets-urls'\r\n\r\n\r\nexport function assertCorrectWidget(widget: SupervisorWidget | null, currentWidgetId: string): asserts widget is SupervisorWidget {\r\n    assertDefined(widget)\r\n    assertTrue(widget.id === currentWidgetId, 'Wrong widget id for update')\r\n}\r\n\r\nexport function getAgentGridSubscriptionDefaults() {\r\n    return {\r\n        filter_by: '1',\r\n        filter_operation: 'NE',\r\n        filter_value: '',\r\n        limit: 1000,\r\n        order_by: '1',\r\n        order_dir: 'ASC',\r\n        team_ids: [],\r\n    }\r\n}\r\n\r\nexport function createDispositionsWidgetSubscription(widgetId: string, userId: string): SupervisorWidgetAgentGridSubscriptionData {\r\n    return {\r\n        type: 'dispositions',\r\n        req: {\r\n            ...getAgentGridSubscriptionDefaults(),\r\n            columns: [\r\n                {\r\n                    id: '1',\r\n                    statName: 'top_dispositions_per_day',\r\n                },\r\n            ],\r\n            id: widgetId,\r\n            user_id: userId,\r\n        },\r\n    }\r\n}\r\n\r\nexport function createSatisfactionWidgetSubscription(widgetId: string, userId: string): SupervisorWidgetAgentGridSubscriptionData {\r\n    return {\r\n        type: 'satisfaction',\r\n        req: {\r\n            ...getAgentGridSubscriptionDefaults(),\r\n            columns: [\r\n                {\r\n                    id: '1',\r\n                    statName: 'agent_fcr',\r\n                },\r\n                {\r\n                    id: '2',\r\n                    statName: 'agent_nps',\r\n                },\r\n                {\r\n                    id: '3',\r\n                    statName: 'agent_csat',\r\n                },\r\n            ],\r\n            id: widgetId,\r\n            user_id: userId,\r\n        },\r\n    }\r\n}\r\n\r\nexport function createBreakTimeWidgetSubscription(widgetId: string, userId: string): SupervisorWidgetAgentGridSubscriptionData {\r\n    return {\r\n        type: 'break_time',\r\n        req: {\r\n            ...getAgentGridSubscriptionDefaults(),\r\n            columns: [\r\n                {\r\n                    id: '1',\r\n                    statName: 'agent_total_break_time',\r\n                },\r\n            ],\r\n            id: widgetId,\r\n            user_id: userId,\r\n        },\r\n    }\r\n}\r\n\r\nexport function createMyStatsWidgetSubscription(widgetId: string, userId: string): SupervisorWidgetAgentGridSubscriptionData {\r\n    return {\r\n        type: 'my_stats',\r\n        req: {\r\n            ...getAgentGridSubscriptionDefaults(),\r\n            columns: [\r\n                {\r\n                    id: '1',\r\n                    statName: 'in_calls_handled_per_day',\r\n                },\r\n                {\r\n                    id: '2',\r\n                    statName: 'out_calls_handled_per_day',\r\n                },\r\n                {\r\n                    id: '3',\r\n                    statName: 'agent_success_ratio_per_day',\r\n                },\r\n                {id: '4',\r\n                    statName: 'calls_average_handling_time_per_day'},\r\n            ],\r\n            id: widgetId,\r\n            user_id: userId,\r\n        },\r\n    }\r\n}\r\n","import React, {useCallback, useMemo, useState} from 'react'\r\n\r\nimport {MultiSelectField} from '@bpinc/lib-jskit-ui'\r\nimport type {SupervisorAgentStats} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst ALL_STATES = 'all_states'\r\n\r\ntype AgentStatesSelectProps = {\r\n    value: SupervisorAgentStats | undefined\r\n    onChange: (teams: SupervisorAgentStats) => void\r\n}\r\n\r\nexport const AgentStatesSelect: React.FC<AgentStatesSelectProps> = ({onChange, value}) => {\r\n    const {t} = useLocalizationState()\r\n    const [search, setSearch] = useState('')\r\n    const allStatesSelected = useMemo(() => value ? Object.values(value).every(Boolean) : false, [value])\r\n\r\n    const allSatesOptions = useMemo(() => [{\r\n        value: 'busy',\r\n        content: t.HOME_SCREEN.agent_state_busy(),\r\n    }, {\r\n        value: 'ready',\r\n        content: t.HOME_SCREEN.agent_state_ready(),\r\n    }, {\r\n        value: 'after_call_work',\r\n        content: t.HOME_SCREEN.agent_state_after_call_work(),\r\n    }, {\r\n        value: 'not_ready',\r\n        content: t.HOME_SCREEN.agent_state_not_ready(),\r\n    }] satisfies {value: keyof SupervisorAgentStats; content: string}[], [t.HOME_SCREEN])\r\n\r\n    const options = useMemo(() => {\r\n        return [\r\n            {value: ALL_STATES, content: t.HOME_SCREEN.all_states()},\r\n            ...(allStatesSelected ? [] : allSatesOptions),\r\n        ].filter(({content}) => content.toLowerCase().includes(search.toLowerCase()))\r\n    }, [allSatesOptions, allStatesSelected, search, t.HOME_SCREEN])\r\n\r\n    const selectValue = useMemo(() =>\r\n        allStatesSelected\r\n            ? [ALL_STATES]\r\n            : Object.entries(value || {}).filter(([_, v]) => v).map(([key]) => key)\r\n    , [allStatesSelected, value])\r\n\r\n\r\n    const handleSelect = useCallback((newSelectedTeams: string[]) => {\r\n        if (newSelectedTeams.includes(ALL_STATES)) {\r\n            onChange({\r\n                ready: true,\r\n                not_ready: true,\r\n                busy: true,\r\n                after_call_work: true,\r\n            })\r\n            return\r\n        }\r\n        onChange(newSelectedTeams.reduce<SupervisorAgentStats>((acc, option) => {\r\n            if (option in acc) {\r\n                acc[option as keyof SupervisorAgentStats] = true\r\n            }\r\n            return acc\r\n        }, {\r\n            ready: false,\r\n            not_ready: false,\r\n            busy: false,\r\n            after_call_work: false,\r\n        }))\r\n    }, [onChange])\r\n\r\n    return (\r\n        <MultiSelectField\r\n            label={t.HOME_SCREEN.show_states()}\r\n            options={options}\r\n            withSearch\r\n            onSearchChange={setSearch}\r\n            value={selectValue}\r\n            onChange={handleSelect}\r\n        />\r\n    )\r\n}\r\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\r\n\r\nimport {useDirectoryState, useDirectoryStateMethods} from '@bpinc/ad-directory-state-context'\r\nimport {MultiSelectField} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst ALL_TEAMS = 'all_teams'\r\n\r\ntype TeamsSelectProps = {\r\n    value: string[]\r\n    onChange: (teams: string[]) => void\r\n}\r\n\r\nexport const TeamsSelect: React.FC<TeamsSelectProps> = ({onChange, value}) => {\r\n    const {t} = useLocalizationState()\r\n    const {getAgentTeams} = useDirectoryStateMethods()\r\n    const {teams, isTeamsLoading} = useDirectoryState(['teams', 'isTeamsLoading'])\r\n    const [search, setSearch] = useState('')\r\n    const allTeamsSelected = useMemo(() => (teams || []).every(s => value.includes(s.id)), [teams, value])\r\n\r\n    useEffect(() => {\r\n        getAgentTeams()\r\n    }, [getAgentTeams])\r\n\r\n    const options = useMemo(() => {\r\n        const teamsOptions = (teams || []).map(team => ({\r\n            value: team.id,\r\n            content: team.name,\r\n        }))\r\n\r\n        return [\r\n            {value: ALL_TEAMS, content: t.HOME_SCREEN.all_teams()},\r\n            ...(allTeamsSelected ? [] : teamsOptions),\r\n        ].filter(({content}) => content.toLowerCase().includes(search.toLowerCase()))\r\n    }, [teams, allTeamsSelected, search, t.HOME_SCREEN])\r\n\r\n    const selectValue = useMemo(() => {\r\n        if (isTeamsLoading) {\r\n            return []\r\n        }\r\n\r\n        return allTeamsSelected\r\n            ? [ALL_TEAMS]\r\n            : value\r\n    }, [allTeamsSelected, isTeamsLoading, value])\r\n\r\n\r\n    const handleSelect = useCallback((newSelectedTeams: string[]) => {\r\n        if (newSelectedTeams.includes(ALL_TEAMS)) {\r\n            onChange(teams?.map(({id}) => id) || [])\r\n            return\r\n        }\r\n        onChange(newSelectedTeams)\r\n    }, [teams, onChange])\r\n\r\n    return (\r\n        <MultiSelectField\r\n            label={t.HOME_SCREEN.show_teams()}\r\n            options={options}\r\n            disabled={isTeamsLoading}\r\n            withSearch\r\n            onSearchChange={setSearch}\r\n            value={selectValue}\r\n            onChange={handleSelect}\r\n        />\r\n    )\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport type {MAP_STATS_NAMES} from '../../stats/types'\r\n\r\n\r\nexport function useCreateDefaultColumns(type: keyof typeof MAP_STATS_NAMES): ColumnFieldType[] {\r\n    const statName = type === 'statsAgent' ? 'first_last_name' : 'name'\r\n\r\n    return useMemo(() => [{\r\n        id: '1',\r\n        statName,\r\n        dir: type === 'statsAgent' ? 'DESC' : 'ASC',\r\n    }], [statName, type])\r\n}\r\n\r\nexport type ColumnFieldType = {\r\n    id?: string\r\n    statName?: string\r\n    dir?: 'DESC' | 'ASC' | 'EMPT'\r\n    coltitle?: string\r\n}\r\n\r\nexport type ColumnsFiledType = {\r\n    columns: ColumnFieldType[]\r\n}\r\n\r\n","import React, {useMemo} from 'react'\r\nimport {useController, useForm, useWatch} from 'react-hook-form'\r\nimport {Button} from '@servicepattern/ui'\r\nimport {useAtomValue} from 'jotai'\r\nimport {cloneDeep, pick} from 'lodash-es'\r\n\r\nimport {useDirectoryState} from '@bpinc/ad-directory-state-context'\r\nimport {\r\n    CheckboxWithLabel,\r\n    InputField,\r\n    Modal,\r\n    NumberField,\r\n    ToggleWithLabel,\r\n} from '@bpinc/lib-jskit-ui'\r\nimport {truthy} from '@bpinc/lib-types-helpers'\r\nimport type {\r\n    SupervisorAgentStats,\r\n    SupervisorWidgetAgentGridSubscriptionData,\r\n    SupervisorWidgetConfigGrid,\r\n} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps, ModalBase} from '@bpinc/state-modals-types'\r\n\r\nimport {HidingArea} from '../../../HidingArea'\r\nimport {MetricSelection} from '../../../MetricSelection'\r\nimport {updatingWidgetDataAtom} from '../../atoms'\r\nimport {useStatsOptions} from '../../stats/useStatsOptions'\r\nimport {assertCorrectWidget} from '../helpers'\r\nimport {AgentStatesSelect} from '../shared/AgentStatesSelect'\r\nimport {TeamsSelect} from '../shared/TeamsSelect'\r\nimport type {ColumnsFiledType} from '../shared/utils'\r\nimport {useCreateDefaultColumns} from '../shared/utils'\r\nimport type {FormValues} from '../types'\r\n\r\n\r\ntype Limit = Required<SupervisorWidgetConfigGrid>['limit']\r\n\r\ntype AgentGridModalSettingsFormValues = ColumnsFiledType & {\r\n    title: string\r\n    teamIds: string[]\r\n    agentStats?: SupervisorAgentStats\r\n    columnTitleEnabled: boolean\r\n    maxItemsToShow: number\r\n    limit?: Limit\r\n}\r\n\r\n\r\nexport interface AgentGridWidgetSettingsModalParams extends ModalBase {\r\n    type: 'agent_grid_settings'\r\n    replacingWidgetId: string\r\n    formValues?: ConfigAgentGrid\r\n    onSaved?: () => void\r\n}\r\n\r\ntype AgentGridModalProps = CommonModalProps & {\r\n    replacingWidgetId: string\r\n    formValues?: ConfigAgentGrid\r\n    onSaved?: () => void\r\n}\r\n\r\ntype ConfigAgentGrid = SupervisorWidgetConfigGrid & {subscription: SupervisorWidgetAgentGridSubscriptionData}\r\n\r\nexport function assertFormValuesValidForConfigAgentGrid(\r\n    fv: FormValues,\r\n): asserts fv is ConfigAgentGrid {\r\n    if (!(\r\n        'subscription' in fv &&\r\n        'title' in fv &&\r\n        'columtitle' in fv &&\r\n        'agent_stats' in fv &&\r\n        'limit' in fv &&\r\n        typeof fv.subscription === 'object' &&\r\n        fv.subscription !== null &&\r\n        'type' in fv.subscription &&\r\n        fv.subscription.type !== 'service_grid'\r\n    )) {\r\n        throw new Error('Form values is not valid for config agent grid')\r\n    }\r\n}\r\n\r\n\r\nconst convertToForm = (config: ConfigAgentGrid): Partial<AgentGridModalSettingsFormValues> => {\r\n    const newColumns = config?.subscription?.req?.columns.map((col, index) => {\r\n        const existingOrder = config?.subscription?.req?.order?.find(({by}) => {\r\n            return Number(by) === index + 1\r\n        })\r\n        return {\r\n            ...col,\r\n            dir: (existingOrder?.dir as 'DESC' | 'ASC') || 'EMPT',\r\n            order: index + 1,\r\n        }\r\n    })\r\n    return {\r\n        title: config?.title,\r\n        columnTitleEnabled: config?.columtitle,\r\n        teamIds: cloneDeep(config?.subscription?.req?.team_ids),\r\n        agentStats: cloneDeep(config?.agent_stats),\r\n        limit: cloneDeep(config?.limit),\r\n        maxItemsToShow: cloneDeep(config?.subscription?.req?.limit),\r\n        columns: newColumns,\r\n    }\r\n}\r\n\r\ntype FormWidgetConfig = Pick<SupervisorWidgetConfigGrid, 'title' | 'columtitle' | 'agent_stats' | 'limit' | 'subscription'>\r\n\r\nconst convertToBackend = (formValues: AgentGridModalSettingsFormValues, id: string): FormWidgetConfig => {\r\n    const newOrder = formValues.columns.reduce<{ by: string; dir: 'ASC' | 'DESC' }[]>((acc, column, index) => {\r\n        if (column.dir && column.dir !== 'EMPT') {\r\n            return [...acc, {by: String(index + 1), dir: column.dir}]\r\n        }\r\n        return acc\r\n    }, [])\r\n    return {\r\n        title: formValues.title || '',\r\n        columtitle: formValues.columnTitleEnabled,\r\n        agent_stats: formValues.agentStats,\r\n        limit: formValues.limit,\r\n        subscription: {\r\n            type: 'agent_grid',\r\n            req: {\r\n                id,\r\n                team_ids: formValues.teamIds,\r\n                limit: formValues.maxItemsToShow,\r\n                columns: formValues.columns.map((col, ind) => ({...col, id: String(ind + 1)})),\r\n                order: newOrder,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nconst DEFAULT_COLUMN_MAX = 6\r\n\r\nexport const AgentGridModal: React.FC<AgentGridModalProps> = ({\r\n    onClose,\r\n    replacingWidgetId,\r\n    onSaved,\r\n    formValues,\r\n    ...commonModalProps\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n\r\n    const formValuesParsed = useMemo(() => {\r\n        if (formValues) {\r\n            return convertToForm(formValues)\r\n        }\r\n\r\n    }, [formValues])\r\n\r\n    const defaultColumns = useCreateDefaultColumns('statsAgent')\r\n    const {teams} = useDirectoryState(['teams'])\r\n\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n        setValue,\r\n    } = useForm<AgentGridModalSettingsFormValues>({\r\n\r\n        defaultValues: {\r\n            title: formValuesParsed?.title || t.HOME_PAGE_SUPERVISOR_WIDGETS.agent_grid(),\r\n            teamIds: formValuesParsed?.teamIds || teams.map(({id}) => id),\r\n            agentStats: {\r\n                busy: formValuesParsed?.agentStats?.busy !== false,\r\n                ready: formValuesParsed?.agentStats?.ready !== false,\r\n                after_call_work: formValuesParsed?.agentStats?.after_call_work !== false,\r\n                not_ready: formValuesParsed?.agentStats?.not_ready !== false,\r\n            },\r\n            limit: {\r\n                subteam: formValuesParsed?.limit?.subteam || false,\r\n                logged_in_only: formValuesParsed?.limit?.logged_in_only || false,\r\n            },\r\n            columnTitleEnabled: formValuesParsed?.columnTitleEnabled !== false,\r\n            maxItemsToShow: formValuesParsed?.maxItemsToShow || DEFAULT_COLUMN_MAX,\r\n            columns: formValuesParsed?.columns || defaultColumns,\r\n        },\r\n    })\r\n\r\n    const {field: titleField} = useController({\r\n        name: 'title',\r\n        control,\r\n    })\r\n\r\n    const {field: maxItemsToShow} = useController({\r\n        name: 'maxItemsToShow',\r\n        control,\r\n    })\r\n\r\n    const {field: columnTitleEnabled} = useController({\r\n        name: 'columnTitleEnabled',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: teamIdsField,\r\n    } = useController({\r\n        name: 'teamIds',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: agentStatesField,\r\n    } = useController({\r\n        name: 'agentStats',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: limitSubteamField,\r\n    } = useController({\r\n        name: 'limit.subteam',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: limitLoggedInOnlyField,\r\n    } = useController({\r\n        name: 'limit.logged_in_only',\r\n        control,\r\n    })\r\n\r\n    const {widget, updateWidget} = useAtomValue(updatingWidgetDataAtom)\r\n\r\n    const save = useMemo(() => handleSubmit(async formData => {\r\n        assertCorrectWidget(widget, replacingWidgetId)\r\n        updateWidget({\r\n            type: 'grid',\r\n            ...convertToBackend(formData, widget.id),\r\n            ...pick(\r\n                widget,\r\n                'id',\r\n                'x',\r\n                'y',\r\n                'width',\r\n                'height',\r\n                'show_settings',\r\n            ),\r\n        })\r\n\r\n        onSaved?.()\r\n        onClose()\r\n    }), [handleSubmit, widget, replacingWidgetId, updateWidget, onSaved, onClose])\r\n\r\n    const options = useStatsOptions('statsAgent')\r\n    const columns = useWatch({\r\n        control,\r\n        name: 'columns',\r\n    })\r\n    const selected = useMemo(() => truthy(columns.map(c => c.statName)), [columns])\r\n\r\n    return (\r\n        <Modal\r\n            {...commonModalProps}\r\n            className=\"max-w-[712px]\"\r\n            onClose={onClose}\r\n        >\r\n            <Modal.Header>\r\n                {t.HOME_PAGE_SUPERVISOR_WIDGETS.agent_grid()}\r\n            </Modal.Header>\r\n            <Modal.Content className=\"flex flex-col overflow-hidden\">\r\n                <HidingArea.Root>\r\n                    <HidingArea.Target>\r\n                        <div className=\"mb-4 flex flex-col gap-4\">\r\n                            <div className=\"flex gap-2.5\">\r\n                                <InputField\r\n                                    label={t.GLOBAL.title()}\r\n                                    placeholder={t.GLOBAL.title()}\r\n                                    layoutClassName=\"flex-1\"\r\n                                    {...titleField}\r\n                                />\r\n                                <NumberField\r\n                                    label={t.HOME_SCREEN.max_items_to_show()}\r\n                                    placeholder={t.HOME_SCREEN.max_items_to_show()}\r\n                                    inputClassName=\"max-w-20\"\r\n                                    {...maxItemsToShow}\r\n                                    onChange={e => maxItemsToShow.onChange(Number(e.target.value))}\r\n                                />\r\n                            </div>\r\n                            <ToggleWithLabel\r\n                                label={t.HOME_SCREEN.columns_headings()}\r\n                                checked={columnTitleEnabled.value}\r\n                                onCheckedChange={columnTitleEnabled.onChange}\r\n                                labelClassName=\"caption-s font-normal\"\r\n                            />\r\n                            <TeamsSelect value={teamIdsField.value} onChange={teamIdsField.onChange} />\r\n                            <div className=\"flex gap-2.5\">\r\n                                <div className=\"max-w-1/2 flex-1\">\r\n                                    <AgentStatesSelect value={agentStatesField.value} onChange={agentStatesField.onChange} />\r\n                                </div>\r\n\r\n                                <CheckboxWithLabel\r\n                                    label={t.HOME_SCREEN.limit_my_subteam()}\r\n                                    checked={limitSubteamField.value}\r\n                                    onCheckedChange={limitSubteamField.onChange}\r\n                                    containerClassName=\"grow-0 shirnk-0\"\r\n                                />\r\n                                <CheckboxWithLabel\r\n                                    label={t.HOME_SCREEN.limit_logged_in()}\r\n                                    checked={limitLoggedInOnlyField.value}\r\n                                    onCheckedChange={limitLoggedInOnlyField.onChange}\r\n                                    containerClassName=\"grow-0 shirnk-0\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </HidingArea.Target>\r\n                    <MetricSelection\r\n                        options={options}\r\n                        selected={selected}\r\n                        onChange={values => {\r\n                            setValue(`columns`, values.map(v => ({\r\n                                statName: v,\r\n                            })))\r\n                        }}\r\n                        expanded={HidingArea.hidden}\r\n                    />\r\n                </HidingArea.Root>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={() => onClose()} variant=\"secondary\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonCancel()}\r\n                </Button>\r\n                <Button\r\n                    onClick={save}\r\n                    variant=\"primary\"\r\n                >\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","import {tw} from '@servicepattern/ui'\r\nimport {tv} from 'tailwind-variants'\r\n\r\n\r\nexport const optionContainerStyles = tv({\r\n    base: [\r\n        tw`group/option`,\r\n        tw`flex flex-1 flex-col items-center justify-start gap-0.5`,\r\n        tw`min-h-[110px] rounded-xs border p-2 border-disabled`,\r\n        tw`cursor-pointer outline-none`,\r\n        tw`focus-visible:border-primary`,\r\n    ],\r\n    variants: {\r\n        selected: {\r\n            true: [\r\n                tw`border-2 !border-primary p-[7px]`,\r\n            ],\r\n        },\r\n    },\r\n\r\n})\r\n\r\nexport const previewElemStyles = tv({\r\n    base: [\r\n        tw`h-16 w-16 group-hover/option:icon-primary group-focus-visible/option:icon-primary`,\r\n    ],\r\n    variants: {\r\n        selected: {\r\n            true: [\r\n                tw`icon-primary`,\r\n            ],\r\n            false: [\r\n                tw`icon-disabled `,\r\n            ],\r\n        },\r\n    },\r\n\r\n})\r\n","import React, {useCallback} from 'react'\r\n\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {SupervisorWidgetView} from '../../../../types'\r\nimport type {WidgetViewOption} from '../../types'\r\nimport {optionContainerStyles, previewElemStyles} from './styles'\r\n\r\n\r\ntype OptionProps = {\r\n    option: WidgetViewOption\r\n    onSelect: (type: SupervisorWidgetView) => void\r\n    selected: boolean\r\n}\r\n\r\nexport const Option: React.FC<OptionProps> = ({\r\n    option,\r\n    selected,\r\n    onSelect,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n\r\n\r\n    const handleClick = useCallback(() => {\r\n        onSelect(option.type)\r\n    }, [option.type, onSelect])\r\n\r\n    const title = t.HOME_PAGE_SUPERVISOR_WIDGETS[option.type]()\r\n    const Icon = option.icon\r\n\r\n    return (\r\n        <button\r\n            className={optionContainerStyles({selected})}\r\n            onClick={handleClick}\r\n        >\r\n            <Icon className={previewElemStyles({selected})} />\r\n            <div className=\"flex flex-auto items-center text-center body\">\r\n                {title}\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {EmptyWidgetSettingsModal} from './EmptyWidgetSettingsModal'\r\n\r\n\r\ninterface Props {\r\n    onClose?: () => void\r\n    widget?: SupervisorWidget | null\r\n}\r\nexport const useHandleCancelWidgetModal = ({onClose, widget}: Props) => {\r\n    const openEmptyWidgetSettingsModal = useModalComponentOpener(EmptyWidgetSettingsModal)\r\n    return useCallback(() => {\r\n        if (widget && widget.type === 'empty' && !document.querySelector('[data-id=\"settings-widgets\"]')) {\r\n            openEmptyWidgetSettingsModal({\r\n                replacingWidgetId: widget.id,\r\n            })\r\n            onClose?.()\r\n        }\r\n        onClose?.()\r\n    }, [onClose, openEmptyWidgetSettingsModal, widget])\r\n}\r\n","import React, {useCallback, useState} from 'react'\r\nimport {Button} from '@servicepattern/ui'\r\n\r\nimport {useFormatting} from '@bpinc/ad-formatting-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {Modal} from '@bpinc/lib-jskit-ui'\r\nimport {assertDefined} from '@bpinc/lib-types-helpers'\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\nimport {AgentsSelector} from '../../AgentsSelector'\r\nimport {useHandleCancelWidgetModal} from './useHandleCancelWidgetModal'\r\n\r\n\r\ntype SelectUserModalProps = CommonModalProps & {\r\n    onSelected?: (userId: string, userName: string) => void\r\n    currentWidgetConfig?: SupervisorWidget\r\n}\r\n\r\nexport const SelectUserModal: React.FC<SelectUserModalProps> = ({\r\n    onClose,\r\n    onSelected,\r\n    currentWidgetConfig,\r\n    ...rest\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const {userId, lastName, firstName} = useSessionState(['userId', 'firstName', 'lastName'])\r\n    assertDefined(userId)\r\n    const {formatFullName} = useFormatting()\r\n    const [selectedUser, setSelectedUser] = useState({id: userId, lastName, firstName})\r\n\r\n    const handleOk = useCallback(() => {\r\n        onSelected?.(selectedUser.id, formatFullName(selectedUser.firstName, selectedUser.lastName))\r\n        onClose()\r\n    }, [formatFullName, onClose, onSelected, selectedUser])\r\n\r\n    const handleCancelWidgetModal = useHandleCancelWidgetModal({onClose, widget: currentWidgetConfig})\r\n\r\n    return (\r\n        <Modal\r\n            onClose={onClose}\r\n            {...rest}\r\n        >\r\n            <Modal.Header>\r\n                {t.HOME_SCREEN.agent_select_title()}\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <AgentsSelector\r\n                    label={t.HOME_SCREEN.agent_select_label()}\r\n                    placeholder={t.HOME_SCREEN.agent_select_label()}\r\n                    onChange={user => setSelectedUser({\r\n                        id: user.id,\r\n                        firstName: user.firstName,\r\n                        lastName: user.lastName,\r\n                    })}\r\n                    value={selectedUser.id}\r\n                />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={handleCancelWidgetModal} variant=\"neutral\">\r\n                    {t.GLOBAL.cancel()}\r\n                </Button>\r\n                <Button onClick={handleOk} variant=\"primary\">\r\n                    {t.GLOBAL.ok()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {updatingWidgetDataAtom} from '../../../../atoms'\r\nimport {createBreakTimeWidgetSubscription} from '../../../helpers'\r\nimport {SelectUserModal} from '../../../SelectUserModal'\r\n\r\n\r\nexport const useBreakTimeWidget = ({\r\n    onSaved,\r\n}: {\r\n    onSaved: () => void\r\n}) => {\r\n    const {updateWidget} = useAtomValue(updatingWidgetDataAtom)\r\n    const openSelectUserModal = useModalComponentOpener(SelectUserModal)\r\n    const {t} = useLocalizationState()\r\n\r\n    return useCallback((currentWidgetConfig: SupervisorWidget) => {\r\n        openSelectUserModal({\r\n            onSelected: (userId, userName) => {\r\n                updateWidget({\r\n                    ...currentWidgetConfig,\r\n                    type: 'break_time',\r\n                    title: t.HOME_PAGE_SUPERVISOR_WIDGETS_NAMES.break_time(userName),\r\n                    subscription: createBreakTimeWidgetSubscription(currentWidgetConfig.id, userId),\r\n                    userName,\r\n                    user_id: userId,\r\n                })\r\n            },\r\n            currentWidgetConfig,\r\n        })\r\n        onSaved()\r\n    }, [onSaved, openSelectUserModal, t.HOME_PAGE_SUPERVISOR_WIDGETS_NAMES, updateWidget])\r\n}\r\n","import {useCallback} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport {updatingWidgetDataAtom} from '../../../../atoms'\r\nimport {assertCorrectWidget} from '../../../helpers'\r\n\r\n\r\nexport const useCreateTimeWidget = ({\r\n    onSaved,\r\n    replacingWidgetId,\r\n}: {\r\n    onSaved: () => void\r\n    replacingWidgetId: string\r\n}) => {\r\n    const {updateWidget, widget} = useAtomValue(updatingWidgetDataAtom)\r\n\r\n    return useCallback(() => {\r\n        assertCorrectWidget(widget, replacingWidgetId)\r\n        updateWidget({\r\n            ...widget,\r\n            type: 'datetime',\r\n        })\r\n        onSaved()\r\n    }, [widget, replacingWidgetId, updateWidget, onSaved])\r\n}\r\n","import {useCallback} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {updatingWidgetDataAtom} from '../../../../atoms'\r\nimport {createDispositionsWidgetSubscription} from '../../../helpers'\r\nimport {SelectUserModal} from '../../../SelectUserModal'\r\n\r\n\r\nexport const useDispositionsWidget = ({\r\n    onSaved,\r\n}: {\r\n    onSaved: () => void\r\n}) => {\r\n    const {updateWidget} = useAtomValue(updatingWidgetDataAtom)\r\n    const openSelectUserModal = useModalComponentOpener(SelectUserModal)\r\n    const {t} = useLocalizationState()\r\n\r\n    return useCallback((currentWidgetConfig: SupervisorWidget) => {\r\n        openSelectUserModal({\r\n            onSelected: (userId, userName) => {\r\n                updateWidget({\r\n                    ...currentWidgetConfig,\r\n                    type: 'dispositions',\r\n                    title: t.HOME_PAGE_SUPERVISOR_WIDGETS_NAMES.dispositions(userName),\r\n                    subscription: createDispositionsWidgetSubscription(currentWidgetConfig.id, userId),\r\n                    user_id: userId,\r\n                    userName,\r\n                })\r\n            },\r\n            currentWidgetConfig,\r\n        })\r\n        onSaved()\r\n    }, [onSaved, openSelectUserModal, t.HOME_PAGE_SUPERVISOR_WIDGETS_NAMES, updateWidget])\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {SelectField} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nexport type ImageWidgetStyle = 'cover' | 'contain'\r\n\r\ntype ImageStyleSelectProps = {\r\n    value: ImageWidgetStyle\r\n    onChange: (value: ImageWidgetStyle) => void\r\n}\r\n\r\nexport const ImageStyleSelect: React.FC<ImageStyleSelectProps> = ({\r\n    value,\r\n    onChange,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n\r\n    const options = useMemo(() => [\r\n        {\r\n            value: 'cover',\r\n            content: t.HOME_PAGE_WIDGET_IMAGE.style_cover(),\r\n        },\r\n        {\r\n            value: 'contain',\r\n            content: t.HOME_PAGE_WIDGET_IMAGE.style_contain(),\r\n        },\r\n    ], [t])\r\n\r\n    return (\r\n        <SelectField\r\n            label={t.HOME_PAGE_WIDGET_IMAGE.style()}\r\n            placeholder={t.HOME_PAGE_WIDGET_IMAGE.style()}\r\n            onChange={v => onChange(v as ImageWidgetStyle)}\r\n            value={value}\r\n            options={options}\r\n        />\r\n    )\r\n}\r\n","export const getFileDataUrl = (file: File) => new Promise<string>(resolve => {\r\n    const reader = new FileReader()\r\n\r\n    reader.onload = () => {\r\n        // as string because of readAsDataURL\r\n        resolve(reader.result as string)\r\n    }\r\n\r\n    reader.readAsDataURL(file)\r\n})\r\n","import type {ChangeEventHandler} from 'react'\r\nimport React, {useCallback, useRef} from 'react'\r\nimport {Button} from '@servicepattern/ui'\r\n\r\nimport {FieldFrame, FieldLayout, IconUpload16} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {getFileDataUrl} from './getFileDataUrl'\r\n\r\n\r\ntype SelectImageProps = {\r\n    imageName: string\r\n    onChange: (data: { imageUrl: string; imageName: string }) => void\r\n}\r\n\r\nexport const SelectImage: React.FC<SelectImageProps> = ({\r\n    onChange,\r\n    imageName,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const ref = useRef<HTMLInputElement>(null)\r\n    const handleUploadFiles: ChangeEventHandler<HTMLInputElement> = useCallback(async event => {\r\n        const file = event.target.files?.[0]\r\n\r\n        if (!file) {\r\n            return\r\n        }\r\n\r\n        const newImageUrl = await getFileDataUrl(file)\r\n        const newImageName = file.name\r\n\r\n        onChange({\r\n            imageUrl: newImageUrl,\r\n            imageName: newImageName,\r\n        })\r\n    }, [onChange])\r\n\r\n    return (\r\n        <FieldLayout label={t.HOME_PAGE_WIDGET_IMAGE.image()}>\r\n            <FieldFrame\r\n                rightPrefixClassName=\"p-0\"\r\n                rightPrefix={\r\n                    <Button\r\n                        className=\"!size-9\"\r\n                        onClick={() => {\r\n                            ref.current?.click()\r\n                        }}\r\n                        variant=\"primary\"\r\n                        icon={<IconUpload16 className=\"icon-reversed\" />}\r\n                    />\r\n                }\r\n            >\r\n                {imageName}\r\n                <input\r\n                    tabIndex={-1}\r\n                    ref={ref}\r\n                    className=\"absolute inset-0 opacity-0\"\r\n                    type=\"file\"\r\n                    title=\"\"\r\n                    onChange={handleUploadFiles}\r\n                />\r\n            </FieldFrame>\r\n        </FieldLayout>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\nimport {useController, useForm} from 'react-hook-form'\r\nimport {Button} from '@servicepattern/ui'\r\nimport {useAtomValue} from 'jotai'\r\nimport {pick} from 'lodash-es'\r\n\r\nimport {Modal} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps, ModalBase} from '@bpinc/state-modals-types'\r\n\r\nimport {updatingWidgetDataAtom} from '../../atoms'\r\nimport {assertCorrectWidget} from '../helpers'\r\nimport type {FormValues} from '../types'\r\nimport type {ImageWidgetStyle} from './ImageStyleSelect'\r\nimport {ImageStyleSelect} from './ImageStyleSelect'\r\nimport {SelectImage} from './SelectImage'\r\n\r\n\r\nexport interface ImageWidgetSettingsModalFormValues {\r\n    style: ImageWidgetStyle\r\n    imageName: string\r\n    imageUrl: string\r\n}\r\n\r\nexport function assertFormValuesValidForImageWidgetSettingsModal(\r\n    fv: FormValues,\r\n): asserts fv is ImageWidgetSettingsModalFormValues {\r\n    if (!(\r\n        'style' in fv &&\r\n        'imageName' in fv &&\r\n        'imageUrl' in fv\r\n    )) {\r\n        throw new Error('Form values is not valid for image widget settings modal')\r\n    }\r\n}\r\n\r\n\r\nexport interface ImageWidgetSettingsModalParams extends ModalBase {\r\n    type: 'image_widget_settings'\r\n    replacingWidgetId: string\r\n    formValues?: ImageWidgetSettingsModalFormValues\r\n    onSaved?: () => void\r\n}\r\n\r\ntype ImageSettingsModalProps = CommonModalProps & {\r\n    replacingWidgetId: string\r\n    formValues?: ImageWidgetSettingsModalFormValues\r\n    onSaved?: () => void\r\n}\r\n\r\nexport const ImageSettingsModal: React.FC<ImageSettingsModalProps> = ({\r\n    replacingWidgetId,\r\n    onClose,\r\n    onSaved,\r\n    formValues,\r\n    ...commonModalProps\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const {widget, updateWidget} = useAtomValue(updatingWidgetDataAtom)\r\n\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n    } = useForm<ImageWidgetSettingsModalFormValues>({\r\n        defaultValues: {\r\n            style: formValues?.style || 'cover',\r\n            imageName: formValues?.imageName || '',\r\n            imageUrl: formValues?.imageUrl || '',\r\n        },\r\n    })\r\n\r\n    const save = useMemo(() => handleSubmit(async formData => {\r\n        assertCorrectWidget(widget, replacingWidgetId)\r\n        updateWidget({\r\n            type: 'image',\r\n            ...formData,\r\n            ...pick(\r\n                widget,\r\n                'id',\r\n                'x',\r\n                'y',\r\n                'width',\r\n                'height',\r\n                'title',\r\n                'show_settings',\r\n            ),\r\n        })\r\n\r\n        onSaved?.()\r\n        onClose()\r\n    }), [handleSubmit, widget, replacingWidgetId, updateWidget, onSaved, onClose])\r\n\r\n    const {field: imageNameField} = useController({\r\n        name: 'imageName',\r\n        control,\r\n    })\r\n\r\n    const {field: imageUrlField} = useController({\r\n        name: 'imageUrl',\r\n        control,\r\n    })\r\n\r\n    const {field: styleField} = useController({\r\n        name: 'style',\r\n        control,\r\n    })\r\n\r\n    return (\r\n        <Modal\r\n            {...commonModalProps}\r\n            onClose={onClose}\r\n        >\r\n            <Modal.Header>\r\n                {t.HOME_PAGE_SUPERVISOR_WIDGETS.image()}\r\n            </Modal.Header>\r\n            <Modal.Content className=\"flex flex-col gap-4\">\r\n                <SelectImage\r\n                    imageName={imageNameField.value}\r\n                    onChange={({imageUrl, imageName}) => {\r\n                        imageUrlField.onChange(imageUrl)\r\n                        imageNameField.onChange(imageName)\r\n                    }}\r\n                />\r\n                <ImageStyleSelect value={styleField.value} onChange={styleField.onChange} />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={() => onClose()} variant=\"neutral\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonCancel()}\r\n                </Button>\r\n                <Button\r\n                    onClick={save}\r\n                    variant=\"primary\"\r\n                >\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, {useCallback, useMemo, useState} from 'react'\r\n\r\nimport {useServicesDispositionsState} from '@bpinc/ad-services-dispositions-context'\r\nimport {MultiSelectField} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\nconst ALL_SERVICES = 'all_services'\r\n\r\ntype ServicesSelectProps = {\r\n    value: string[]\r\n    onChange: (services: string[]) => void\r\n}\r\n\r\nexport const ServicesSelect: React.FC<ServicesSelectProps> = ({onChange, value}) => {\r\n    const {t} = useLocalizationState()\r\n    const {services} = useServicesDispositionsState(['services'])\r\n    const [search, setSearch] = useState('')\r\n    const allServicesSelected = useMemo(() => Object.values(services).every(s => value.includes(s.id)), [services, value])\r\n\r\n    const options = useMemo(() => {\r\n        const servicesOptions = Object.values(services).map(service => ({\r\n            value: service.id,\r\n            content: service.name,\r\n        }))\r\n\r\n        return [\r\n            {value: ALL_SERVICES, content: t.HOME_SCREEN.all_services()},\r\n            ...(allServicesSelected ? [] : servicesOptions),\r\n        ].filter(({content}) => content.toLowerCase().includes(search.toLowerCase()))\r\n    }, [services, allServicesSelected, search, t.HOME_SCREEN])\r\n\r\n    const selectValue = useMemo(() => {\r\n        return allServicesSelected\r\n            ? [ALL_SERVICES]\r\n            : value\r\n    }, [allServicesSelected, value])\r\n\r\n\r\n    const handleSelect = useCallback((newSelectedServices: string[]) => {\r\n        if (newSelectedServices.includes(ALL_SERVICES)) {\r\n            onChange(Object.values(services).map(({id}) => id) || [])\r\n            return\r\n        }\r\n        onChange(newSelectedServices)\r\n    }, [services, onChange])\r\n\r\n    return (\r\n        <MultiSelectField\r\n            label={t.HOME_SCREEN.show_services()}\r\n            options={options}\r\n            withSearch\r\n            onSearchChange={setSearch}\r\n            value={selectValue}\r\n            onChange={handleSelect}\r\n        />\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\nimport {useController, useForm, useWatch} from 'react-hook-form'\r\nimport {Button} from '@servicepattern/ui'\r\nimport {useAtomValue} from 'jotai'\r\nimport {cloneDeep, pick} from 'lodash-es'\r\n\r\nimport {useServicesDispositionsState} from '@bpinc/ad-services-dispositions-context'\r\nimport {InputField, Modal, NumberField, ToggleWithLabel} from '@bpinc/lib-jskit-ui'\r\nimport {truthy} from '@bpinc/lib-types-helpers'\r\nimport type {SupervisorWidgetConfigGrid, SupervisorWidgetServicesGridSubscriptionData} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps, ModalBase} from '@bpinc/state-modals-types'\r\n\r\nimport {HidingArea} from '../../../HidingArea'\r\nimport {MetricSelection} from '../../../MetricSelection'\r\nimport {updatingWidgetDataAtom} from '../../atoms'\r\nimport {useStatsOptions} from '../../stats/useStatsOptions'\r\nimport {assertCorrectWidget} from '../helpers'\r\nimport {ServicesSelect} from '../shared/ServicesSelect'\r\nimport type {ColumnsFiledType} from '../shared/utils'\r\nimport {useCreateDefaultColumns} from '../shared/utils'\r\nimport type {FormValues} from '../types'\r\n\r\n\r\ntype ServiceGridModalSettingsFormValues = {\r\n    title: string\r\n    serviceIds: string[]\r\n    columnTitleEnabled: boolean\r\n    maxItemsToShow: number\r\n} & ColumnsFiledType\r\n\r\ntype ConfigServiceGrid = SupervisorWidgetConfigGrid & {subscription: SupervisorWidgetServicesGridSubscriptionData}\r\n\r\nexport function assertFormValuesValidForConfigServiceGrid(\r\n    fv: FormValues,\r\n): asserts fv is ConfigServiceGrid {\r\n    if (!(\r\n        'title' in fv &&\r\n        'columtitle' in fv &&\r\n        'limit' in fv &&\r\n        'service_ids' in fv &&\r\n        'columns' in fv &&\r\n        'subscription' in fv &&\r\n        typeof fv.subscription === 'object' &&\r\n        fv.subscription !== null &&\r\n        'type' in fv.subscription &&\r\n        fv.subscription.type === 'service_grid'\r\n    )) {\r\n        throw new Error('Form values is not valid for config service grid')\r\n    }\r\n}\r\n\r\nexport interface ServiceGridWidgetSettingsModalParams extends ModalBase {\r\n    type: 'service_grid_settings'\r\n    replacingWidgetId: string\r\n    formValues?: ConfigServiceGrid\r\n    onSaved?: () => void\r\n}\r\n\r\ntype ServiceGridModalProps = CommonModalProps & {\r\n    replacingWidgetId: string\r\n    formValues?: ConfigServiceGrid\r\n    onSaved?: () => void\r\n}\r\n\r\nconst convertToForm = (config: ConfigServiceGrid): Partial<ServiceGridModalSettingsFormValues> => {\r\n    const newColumns = config?.subscription?.req?.columns.map((col, index) => {\r\n        const existingOrder = config?.subscription?.req?.order?.find(({by}) => {\r\n            return Number(by) === index + 1\r\n        })\r\n        return {\r\n            ...col,\r\n            dir: (existingOrder?.dir as 'DESC' | 'ASC') || 'EMPT',\r\n            order: index + 1,\r\n        }\r\n    })\r\n    return {\r\n        title: config?.title,\r\n        columnTitleEnabled: config?.columtitle,\r\n        serviceIds: cloneDeep(config?.subscription?.req?.service_ids),\r\n        maxItemsToShow: cloneDeep(config?.subscription?.req?.limit),\r\n        columns: newColumns,\r\n    }\r\n\r\n}\r\n\r\ntype FormWidgetConfig = Pick<SupervisorWidgetConfigGrid, 'title' | 'columtitle' | 'subscription'>\r\n\r\nconst convertToBackend = (formValues: ServiceGridModalSettingsFormValues, id: string): FormWidgetConfig => {\r\n    const newOrder = formValues.columns.reduce<{ by: string; dir: 'ASC' | 'DESC' }[]>((acc, column, index) => {\r\n        if (column.dir && column.dir !== 'EMPT') {\r\n            return [...acc, {by: String(index + 1), dir: column.dir}]\r\n        }\r\n        return acc\r\n    }, [])\r\n    return {\r\n        title: formValues.title || '',\r\n        columtitle: formValues.columnTitleEnabled,\r\n        subscription: {\r\n            type: 'service_grid',\r\n            req: {\r\n                id,\r\n                service_ids: formValues.serviceIds,\r\n                limit: formValues.maxItemsToShow,\r\n                columns: formValues.columns.map((col, ind) => ({...col, id: String(ind + 1)})),\r\n                order: newOrder,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nconst DEFAULT_COLUMN_MAX = 6\r\n\r\nexport const ServiceGridModal: React.FC<ServiceGridModalProps> = ({\r\n    onClose,\r\n    replacingWidgetId,\r\n    onSaved,\r\n    formValues,\r\n    ...commonModalProps\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const {services} = useServicesDispositionsState(['services'])\r\n\r\n    const formValuesParsed = useMemo(() => {\r\n        if (formValues) {\r\n            return convertToForm(formValues)\r\n        }\r\n\r\n    }, [formValues])\r\n\r\n    const defaultColumns = useCreateDefaultColumns('statsService')\r\n\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n        setValue,\r\n    } = useForm<ServiceGridModalSettingsFormValues>({\r\n        defaultValues: {\r\n            title: formValuesParsed?.title || t.HOME_PAGE_SUPERVISOR_WIDGETS.service_grid(),\r\n            serviceIds: formValuesParsed?.serviceIds || Object.values(services).map(({id}) => id),\r\n            columnTitleEnabled: formValuesParsed?.columnTitleEnabled !== false,\r\n            maxItemsToShow: formValuesParsed?.maxItemsToShow || DEFAULT_COLUMN_MAX,\r\n            columns: formValuesParsed?.columns || defaultColumns,\r\n        },\r\n    })\r\n\r\n    const {field: titleField} = useController({\r\n        name: 'title',\r\n        control,\r\n    })\r\n\r\n    const {field: maxItemsToShow} = useController({\r\n        name: 'maxItemsToShow',\r\n        control,\r\n    })\r\n\r\n    const {field: columnTitleEnabled} = useController({\r\n        name: 'columnTitleEnabled',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: serviceIdsField,\r\n    } = useController({\r\n        name: 'serviceIds',\r\n        control,\r\n    })\r\n\r\n    const {widget, updateWidget} = useAtomValue(updatingWidgetDataAtom)\r\n\r\n    const save = useMemo(() => handleSubmit(async formData => {\r\n        assertCorrectWidget(widget, replacingWidgetId)\r\n        updateWidget({\r\n            type: 'grid',\r\n            ...convertToBackend(formData, widget.id),\r\n            ...pick(\r\n                widget,\r\n                'id',\r\n                'x',\r\n                'y',\r\n                'width',\r\n                'height',\r\n                'show_settings',\r\n            ),\r\n        })\r\n\r\n        onSaved?.()\r\n        onClose()\r\n    }), [handleSubmit, widget, replacingWidgetId, updateWidget, onSaved, onClose])\r\n\r\n    const options = useStatsOptions('statsService')\r\n    const columns = useWatch({\r\n        control,\r\n        name: 'columns',\r\n    })\r\n    const selected = useMemo(() => truthy(columns.map(c => c.statName)), [columns])\r\n\r\n    return (\r\n        <Modal\r\n            {...commonModalProps}\r\n            className=\"max-w-[712px]\"\r\n            onClose={onClose}\r\n        >\r\n            <Modal.Header role=\"heading\">\r\n                {t.HOME_PAGE_SUPERVISOR_WIDGETS.service_grid()}\r\n            </Modal.Header>\r\n            <Modal.Content className=\"flex flex-col overflow-hidden\">\r\n                <HidingArea.Root>\r\n                    <HidingArea.Target>\r\n                        <div className=\"mb-4 flex flex-col gap-4\">\r\n                            <div className=\"flex gap-2.5\">\r\n                                <InputField\r\n                                    label={t.GLOBAL.title()}\r\n                                    placeholder={t.GLOBAL.title()}\r\n                                    layoutClassName=\"flex-1\"\r\n                                    {...titleField}\r\n                                />\r\n                                <NumberField\r\n                                    label={t.HOME_SCREEN.max_items_to_show()}\r\n                                    placeholder={t.HOME_SCREEN.max_items_to_show()}\r\n                                    inputClassName=\"max-w-20\"\r\n                                    {...maxItemsToShow}\r\n                                    onChange={e => maxItemsToShow.onChange(Number(e.target.value))}\r\n                                />\r\n                            </div>\r\n                            <ToggleWithLabel\r\n                                label={t.HOME_SCREEN.columns_headings()}\r\n                                checked={columnTitleEnabled.value}\r\n                                onCheckedChange={columnTitleEnabled.onChange}\r\n                                labelClassName=\"caption-s font-normal\"\r\n                            />\r\n                            <ServicesSelect value={serviceIdsField.value} onChange={serviceIdsField.onChange} />\r\n                        </div>\r\n                    </HidingArea.Target>\r\n                    <MetricSelection\r\n                        options={options}\r\n                        selected={selected}\r\n                        onChange={values => {\r\n                            setValue(`columns`, values.map(v => ({\r\n                                statName: v,\r\n                            })))\r\n                        }}\r\n                        expanded={HidingArea.hidden}\r\n                    />\r\n                </HidingArea.Root>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={() => onClose()} variant=\"secondary\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonCancel()}\r\n                </Button>\r\n                <Button\r\n                    onClick={save}\r\n                    variant=\"primary\"\r\n                >\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\nimport {useController, useForm} from 'react-hook-form'\r\nimport {Button} from '@servicepattern/ui'\r\nimport {useAtomValue} from 'jotai'\r\nimport {pick} from 'lodash-es'\r\n\r\nimport {InputField, Modal, TextAreaField} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps, ModalBase} from '@bpinc/state-modals-types'\r\n\r\nimport {updatingWidgetDataAtom} from '../../atoms'\r\nimport {assertCorrectWidget} from '../helpers'\r\nimport type {FormValues} from '../types'\r\n\r\n\r\ninterface TextWidgetFormValues {\r\n    title: string\r\n    text: string\r\n}\r\n\r\nexport interface TextWidgetSettingsModalParams extends ModalBase {\r\n    type: 'text_widget_settings'\r\n    replacingWidgetId: string\r\n    formValues?: TextWidgetFormValues\r\n    onSaved?: () => void\r\n}\r\n\r\nexport function assertFormValuesValidForTextWidgetSettingsModal(\r\n    fv: FormValues,\r\n): asserts fv is TextWidgetFormValues {\r\n    if (!(\r\n        'title' in fv &&\r\n        'text' in fv\r\n    )) {\r\n        throw new Error('Form values are not valid for text widget settings modal')\r\n    }\r\n}\r\n\r\ntype TextSettingsModalProps = CommonModalProps & {\r\n    replacingWidgetId: string\r\n    formValues?: TextWidgetFormValues\r\n    onSaved?: () => void\r\n}\r\n\r\nexport const TextSettingsModal: React.FC<TextSettingsModalProps> = ({\r\n    replacingWidgetId,\r\n    onClose,\r\n    onSaved,\r\n    formValues,\r\n    ...commonModalProps\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n\r\n    const {widget, updateWidget} = useAtomValue(updatingWidgetDataAtom)\r\n\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n    } = useForm<TextWidgetFormValues>({\r\n        defaultValues: {\r\n            title: formValues?.title || t.HOME_PAGE_SUPERVISOR_WIDGETS.text(),\r\n            text: formValues?.text || '',\r\n        },\r\n    })\r\n\r\n    const save = useMemo(() => handleSubmit(async formData => {\r\n        assertCorrectWidget(widget, replacingWidgetId)\r\n        updateWidget({\r\n            type: 'text',\r\n            ...formData,\r\n            ...pick(\r\n                widget,\r\n                'id',\r\n                'x',\r\n                'y',\r\n                'width',\r\n                'height',\r\n                'show_settings',\r\n            ),\r\n        })\r\n\r\n        onSaved?.()\r\n        onClose()\r\n    }), [handleSubmit, widget, replacingWidgetId, updateWidget, onSaved, onClose])\r\n\r\n\r\n    const {field: titleField} = useController({\r\n        name: 'title',\r\n        control,\r\n    })\r\n\r\n    const {field: textField} = useController({\r\n        name: 'text',\r\n        control,\r\n    })\r\n\r\n    return (\r\n        <Modal\r\n            {...commonModalProps}\r\n            onClose={onClose}\r\n        >\r\n            <Modal.Header>\r\n                {t.HOME_SCREEN.text()}\r\n            </Modal.Header>\r\n            <Modal.Content className=\"flex flex-col gap-4\">\r\n                <InputField\r\n                    label={t.GLOBAL.title()}\r\n                    placeholder={t.GLOBAL.title()}\r\n                    {...titleField}\r\n                />\r\n                <TextAreaField\r\n                    label={t.HOME_SCREEN.text()}\r\n                    placeholder={t.HOME_SCREEN.text()}\r\n                    minRows={3}\r\n                    {...textField}\r\n                />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={() => onClose()} variant=\"neutral\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonCancel()}\r\n                </Button>\r\n                <Button\r\n                    onClick={save}\r\n                    variant=\"primary\"\r\n                >\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {updatingWidgetDataAtom} from '../../../../atoms'\r\nimport {createMyStatsWidgetSubscription} from '../../../helpers'\r\nimport {SelectUserModal} from '../../../SelectUserModal'\r\n\r\n\r\nexport const useMyStatsWidget = ({\r\n    onSaved,\r\n}: {\r\n    onSaved: () => void\r\n}) => {\r\n    const {updateWidget} = useAtomValue(updatingWidgetDataAtom)\r\n    const {t} = useLocalizationState()\r\n    const openSelectUserModal = useModalComponentOpener(SelectUserModal)\r\n\r\n    return useCallback((currentWidgetConfig: SupervisorWidget) => {\r\n        openSelectUserModal({\r\n            onSelected: (userId, userName) => {\r\n                updateWidget({\r\n                    ...currentWidgetConfig,\r\n                    type: 'my_stats',\r\n                    title: t.HOME_PAGE_SUPERVISOR_WIDGETS_NAMES.my_stats(userName),\r\n                    user_id: userId,\r\n                    userName,\r\n                    subscription: createMyStatsWidgetSubscription(currentWidgetConfig.id, userId),\r\n                })\r\n            },\r\n            currentWidgetConfig,\r\n        })\r\n        onSaved()\r\n    }, [openSelectUserModal, onSaved, t.HOME_PAGE_SUPERVISOR_WIDGETS_NAMES, updateWidget])\r\n}\r\n","import {useCallback} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {updatingWidgetDataAtom} from '../../../../atoms'\r\nimport {createSatisfactionWidgetSubscription} from '../../../helpers'\r\nimport {SelectUserModal} from '../../../SelectUserModal'\r\n\r\n\r\nexport const useSatisfactionWidget = ({\r\n    onSaved,\r\n}: {\r\n    onSaved: () => void\r\n}) => {\r\n    const {updateWidget} = useAtomValue(updatingWidgetDataAtom)\r\n    const openSelectUserModal = useModalComponentOpener(SelectUserModal)\r\n    const {t} = useLocalizationState()\r\n\r\n    return useCallback((currentWidgetConfig: SupervisorWidget) => {\r\n        openSelectUserModal({\r\n            onSelected: (userId, userName) => {\r\n                updateWidget({\r\n                    ...currentWidgetConfig,\r\n                    type: 'satisfaction',\r\n                    title: t.HOME_PAGE_SUPERVISOR_WIDGETS_NAMES.satisfaction(userName),\r\n                    subscription: createSatisfactionWidgetSubscription(currentWidgetConfig.id, userId),\r\n                    user_id: userId,\r\n                    userName,\r\n                })\r\n            },\r\n            currentWidgetConfig,\r\n        })\r\n        onSaved()\r\n    }, [onSaved, openSelectUserModal, t.HOME_PAGE_SUPERVISOR_WIDGETS_NAMES, updateWidget])\r\n}\r\n","import type {StatsConfigType} from './types'\r\n\r\n\r\nexport const STATS_CONFIG: StatsConfigType = {\r\n    statsSingle: {\r\n        agent_fcr: {\r\n            format: 'percent',\r\n        },\r\n        agent_nps: {\r\n            format: 'percent',\r\n        },\r\n        agent_average_idle_time: {\r\n            format: 'duration',\r\n        },\r\n        agent_average_preview_time: {\r\n            format: 'duration',\r\n        },\r\n        agent_occupancy: {\r\n            format: 'percent',\r\n        },\r\n        calls_average_handling_time_per_day: {\r\n            format: 'duration',\r\n        },\r\n        calls_dispositions_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        in_average_speed_of_answer: {\r\n            format: 'duration',\r\n        },\r\n        in_calls_abandoned_in_queue_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        in_calls_abandoned_percent_per_day: {\r\n            format: 'percent',\r\n        },\r\n        in_calls_duration_average_per_day: {\r\n            format: 'duration',\r\n        },\r\n        in_calls_duration_total_per_day: {\r\n            format: 'duration',\r\n        },\r\n        in_calls_handled_percent_per_day: {\r\n            format: 'percent',\r\n        },\r\n        in_calls_short_abandoned_in_queue_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        in_ewt: {\r\n            format: 'duration',\r\n        },\r\n        in_max_wait_time: {\r\n            format: 'duration',\r\n        },\r\n        out_calls_abandoned_in_ivr_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        out_calls_abandoned_in_queue_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        out_calls_abandoned_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        out_calls_answered_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        out_calls_duration_average_per_day: {\r\n            format: 'duration',\r\n        },\r\n        out_calls_duration_total_per_day: {\r\n            format: 'duration',\r\n        },\r\n        out_calls_in_ivr: {\r\n            format: 'percent',\r\n        },\r\n        out_calls_unattended_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        out_campaign_duration_forecast: {\r\n            format: 'duration',\r\n        },\r\n        records_attempted_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        records_completed_ratio: {\r\n            format: 'percent',\r\n        },\r\n        records_completed_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        records_dialable: {\r\n            alertInverted: true,\r\n        },\r\n        records_skipped_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        service_level: {\r\n            format: 'percent',\r\n        },\r\n        service_level_target: {\r\n            format: 'percent',\r\n        },\r\n        service_level_per_day: {\r\n            format: 'percent',\r\n        },\r\n    },\r\n    statsAgent: {\r\n        agent_fcr: {\r\n            format: 'percent',\r\n        },\r\n        agent_nps: {\r\n            format: 'percent',\r\n        },\r\n        acd_next_state: {\r\n            align: 'left',\r\n        },\r\n        acd_state: {\r\n            align: 'left',\r\n        },\r\n        active_item_direction: {\r\n            align: 'left',\r\n        },\r\n        active_item_hold_duration: {\r\n            format: 'duration',\r\n        },\r\n        active_item_media_type: {\r\n            align: 'left',\r\n        },\r\n        active_item_party_name: {\r\n            align: 'left',\r\n        },\r\n        active_item_qm_monitor_mode: {\r\n            align: 'left',\r\n        },\r\n        active_item_service_name: {\r\n            align: 'left',\r\n        },\r\n        active_item_state: {\r\n            align: 'left',\r\n        },\r\n        active_item_talk_duration: {\r\n            format: 'duration',\r\n        },\r\n        agent_average_idle_time: {\r\n            format: 'duration',\r\n        },\r\n        agent_average_preview_time: {\r\n            format: 'duration',\r\n        },\r\n        agent_preview_duration: {\r\n            format: 'duration',\r\n        },\r\n        agent_total_break_time: {\r\n            format: 'duration',\r\n        },\r\n        calls_average_handling_time_per_day: {\r\n            format: 'duration',\r\n        },\r\n        calls_dispositions_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        first_last_name: {\r\n            align: 'left',\r\n        },\r\n        in_calls_duration_average_per_day: {\r\n            format: 'duration',\r\n        },\r\n        in_calls_duration_total_per_day: {\r\n            format: 'duration',\r\n        },\r\n        last_first_name: {\r\n            align: 'left',\r\n        },\r\n        login_time: {\r\n            format: 'duration',\r\n        },\r\n        next_reason: {\r\n            align: 'left',\r\n        },\r\n        out_calls_duration_average_per_day: {\r\n            format: 'duration',\r\n        },\r\n        out_calls_duration_total_per_day: {\r\n            format: 'duration',\r\n        },\r\n        reason: {\r\n            align: 'left',\r\n        },\r\n        records_skipped_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        state_duration: {\r\n            format: 'duration',\r\n        },\r\n        team_name: {\r\n            align: 'left',\r\n        },\r\n    },\r\n    statsService: {\r\n        agent_fcr: {\r\n            format: 'percent',\r\n        },\r\n        agent_nps: {\r\n            format: 'percent',\r\n        },\r\n        agent_average_idle_time: {\r\n            format: 'duration',\r\n        },\r\n        agent_average_preview_time: {\r\n            format: 'duration',\r\n        },\r\n        agent_occupancy: {\r\n            format: 'percent',\r\n        },\r\n        calls_average_handling_time_per_day: {\r\n            format: 'duration',\r\n        },\r\n        calls_dispositions_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        in_average_speed_of_answer: {\r\n            format: 'duration',\r\n        },\r\n        in_calls_abandoned_in_queue_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        in_calls_abandoned_percent_per_day: {\r\n            format: 'percent',\r\n        },\r\n        in_calls_duration_average_per_day: {\r\n            format: 'duration',\r\n        },\r\n        in_calls_duration_total_per_day: {\r\n            format: 'duration',\r\n        },\r\n        in_calls_handled_percent_per_day: {\r\n            format: 'percent',\r\n        },\r\n        in_calls_short_abandoned_in_queue_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        in_ewt: {\r\n            format: 'duration',\r\n        },\r\n        in_max_wait_time: {\r\n            format: 'duration',\r\n        },\r\n        name: {\r\n            align: 'left',\r\n        },\r\n        out_calls_abandoned_in_ivr_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        out_calls_abandoned_in_queue_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        out_calls_abandoned_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        out_calls_answered_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        out_calls_duration_average_per_day: {\r\n            format: 'duration',\r\n        },\r\n        out_calls_duration_total_per_day: {\r\n            format: 'duration',\r\n        },\r\n        out_calls_in_ivr: {\r\n            format: 'percent',\r\n        },\r\n        out_calls_unattended_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        out_campaign_duration_forecast: {\r\n            format: 'duration',\r\n        },\r\n        records_attempted_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        records_completed_ratio: {\r\n            format: 'percent',\r\n        },\r\n        records_completed_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        records_dialable: {\r\n            alertInverted: true,\r\n        },\r\n        records_skipped_ratio_per_day: {\r\n            format: 'percent',\r\n        },\r\n        service_level: {\r\n            format: 'percent',\r\n        },\r\n        service_level_target: {\r\n            format: 'percent',\r\n        },\r\n        service_level_per_day: {\r\n            format: 'percent',\r\n        },\r\n    },\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport {STATS_CONFIG} from './config'\r\nimport type {StatsConfigType, StatsConfigTypeKeys, StatsDataType} from './types'\r\n\r\n\r\nexport function useGetStatsConfig() {\r\n    return useCallback(\r\n        <ConfigType extends StatsConfigTypeKeys, Stat extends keyof StatsConfigType[ConfigType]>\r\n        (type: ConfigType, stat: Stat) => {\r\n            const statData = getStatData()\r\n            return {\r\n                format: statData?.format,\r\n                align: statData?.align,\r\n                alertInverted: statData?.alertInverted,\r\n            }\r\n\r\n            function getStatData() {\r\n                return STATS_CONFIG[type][stat] as StatsDataType | undefined\r\n            }\r\n        }, [])\r\n}\r\n\r\n","import {useMemo, useState} from 'react'\r\n\r\nimport {useStatsOptions} from '../../stats/useStatsOptions'\r\n\r\n\r\nexport function useSingleStatsOptions() {\r\n    const [search, setSearch] = useState('')\r\n    const singleOptions = useStatsOptions('statsSingle')\r\n\r\n    const options = useMemo(() => {\r\n        return singleOptions\r\n            .filter(({text}) => text.toLowerCase().includes(search.toLowerCase()))\r\n            .map(({text, value}) => ({value, content: text}))\r\n    }, [search, singleOptions])\r\n\r\n    return {\r\n        options,\r\n        onSearchChange: setSearch,\r\n    }\r\n}\r\n\r\n","import React, {useMemo} from 'react'\r\nimport {useController, useForm} from 'react-hook-form'\r\nimport {Button} from '@servicepattern/ui'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport {useServicesDispositionsState} from '@bpinc/ad-services-dispositions-context'\r\nimport {\r\n    InputField,\r\n    Modal,\r\n    NumberField,\r\n    RadioGroup,\r\n    SelectField,\r\n    ToggleWithLabel,\r\n} from '@bpinc/lib-jskit-ui'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {truthy} from '@bpinc/lib-types-helpers'\r\nimport type {SupervisorWidgetConfigGauge, SupervisorWidgetConfigSingle, TotalStatsType} from '@bpinc/lib-widgets-urls'\r\nimport type {MessagesDeclaration} from '@bpinc/state-localization'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\nimport {updatingWidgetDataAtom} from '../../atoms'\r\nimport {useGetStatsConfig} from '../../stats/useGetStatsConfig'\r\nimport type {SupervisorWidgetTypes} from '../../types'\r\nimport {assertCorrectWidget} from '../helpers'\r\nimport {ServicesSelect} from '../shared/ServicesSelect'\r\nimport {useHandleCancelWidgetModal} from '../useHandleCancelWidgetModal'\r\nimport {useSingleStatsOptions} from './useSingleStatsOptions'\r\n\r\n\r\ntype SingleOrGaugeUpdateType = Omit<SupervisorWidgetConfigGauge | SupervisorWidgetConfigSingle, 'id' | 'x' | 'y' | 'width' | 'height' | 'show_settings'>\r\ntype SingleOrGaugeWidgetsTypes = Extract<SupervisorWidgetTypes, 'gauge' | 'single'>\r\n\r\ntype SingleOrGaugeSettingsModalFormValues = {\r\n    type: SingleOrGaugeWidgetsTypes\r\n    title: string\r\n    value: TotalStatsType\r\n    optValue?: TotalStatsType\r\n    alertThreshold: number\r\n    warningThreshold: number\r\n    maxThreshold: number\r\n    warningSound: boolean\r\n    serviceIds: string[]\r\n    dispositions: string[]\r\n}\r\n\r\ntype SingleOrGaugeSettingsModalProps = CommonModalProps & {\r\n    replacingWidgetId: string\r\n    widgetType: SingleOrGaugeWidgetsTypes\r\n    onSaved?: () => void\r\n}\r\n\r\nexport const SingleOrGaugeSettingsModal: React.FC<SingleOrGaugeSettingsModalProps> = ({\r\n    replacingWidgetId,\r\n    onClose,\r\n    onSaved,\r\n    widgetType,\r\n    ...commonModalProps\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const {widget, updateWidget} = useAtomValue(updatingWidgetDataAtom)\r\n    const {options: valueOptions, onSearchChange: onValueSearchChange} = useSingleStatsOptions()\r\n    const {options: optValueOptions, onSearchChange: onOptValueSearchChange} = useSingleStatsOptions()\r\n    const getStatsConfig = useGetStatsConfig()\r\n    const {services} = useServicesDispositionsState(['services'])\r\n    const serviceIds = useMemo(() => Object.values(services).map(({id}) => id) || [], [services])\r\n\r\n\r\n    const defaultValues = useMemo(() => {\r\n        assertCorrectWidget(widget, replacingWidgetId)\r\n        if (widget.type !== 'single' && widget.type !== 'gauge') {\r\n            return getWidgetDefaultFormData(widgetType, t, serviceIds)\r\n        }\r\n\r\n        return {\r\n            type: widget.type,\r\n            title: widget.title,\r\n            serviceIds: [...(widget.subscription?.service_ids || [])],\r\n            dispositions: [...(widget.subscription?.dispositions || [])],\r\n            alertThreshold: widget.alertThreshold,\r\n            warningThreshold: widget.warningThreshold,\r\n            warningSound: widget.warning_sound,\r\n            maxThreshold: widget.maxThreshold,\r\n            value: widget.value ? convertValueToStatType(widget.value) : undefined,\r\n            optValue: widget.optValue ? convertValueToStatType(widget.optValue) : undefined,\r\n        }\r\n\r\n        function convertValueToStatType(value: string): TotalStatsType {\r\n            return value.split('|')[0].trim() as TotalStatsType\r\n        }\r\n    }, [widget, replacingWidgetId, widgetType, t, serviceIds])\r\n\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n    } = useForm<SingleOrGaugeSettingsModalFormValues>({\r\n        defaultValues,\r\n    })\r\n\r\n    const {\r\n        field: titleField,\r\n    } = useController({\r\n        name: 'title',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: typeField,\r\n    } = useController({\r\n        name: 'type',\r\n        control,\r\n        defaultValue: 'gauge',\r\n    })\r\n\r\n    const {\r\n        field: valueField,\r\n    } = useController({\r\n        name: 'value',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: optValueField,\r\n    } = useController({\r\n        name: 'optValue',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: warningThresholdField,\r\n    } = useController({\r\n        name: 'warningThreshold',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: alertThresholdField,\r\n    } = useController({\r\n        name: 'alertThreshold',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: maxThresholdField,\r\n    } = useController({\r\n        name: 'maxThreshold',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: warningSoundField,\r\n    } = useController({\r\n        name: 'warningSound',\r\n        control,\r\n    })\r\n\r\n    const {\r\n        field: serviceIdsField,\r\n    } = useController({\r\n        name: 'serviceIds',\r\n        control,\r\n    })\r\n\r\n    const handleCancelWidgetModal = useHandleCancelWidgetModal({onClose, widget})\r\n\r\n    const handleSave = useMemo(() => handleSubmit(async (formData: SingleOrGaugeSettingsModalFormValues) => {\r\n        const valueFormat = getStatsConfig('statsSingle', formData.value).format\r\n\r\n        const reqData = truthy([formData.value, formData.optValue])\r\n\r\n        const data: SingleOrGaugeUpdateType = {\r\n            type: formData.type,\r\n            title: formData.title,\r\n            value: convertStatToValue(formData.value, valueFormat),\r\n            optValue: formData.optValue\r\n                ? convertStatToValue(formData.optValue, getStatsConfig('statsSingle', formData.optValue).format)\r\n                : undefined,\r\n            warning_sound: formData.warningSound,\r\n            alertThreshold: formData.alertThreshold,\r\n            warningThreshold: formData.warningThreshold,\r\n            maxThreshold: valueFormat == 'percent' ? 100 : formData.maxThreshold,\r\n            subscription: {\r\n                type: 'stats_total',\r\n                req: reqData,\r\n                service_ids: formData.serviceIds,\r\n                dispositions: formData.dispositions,\r\n            },\r\n        }\r\n        assertCorrectWidget(widget, replacingWidgetId)\r\n        updateWidget({\r\n            id: widget.id,\r\n            x: widget.x,\r\n            y: widget.y,\r\n            width: widget.width,\r\n            height: widget.height,\r\n            show_settings: widget.show_settings,\r\n            ...data,\r\n        })\r\n\r\n        onSaved?.()\r\n        onClose()\r\n\r\n        function convertStatToValue(stat: TotalStatsType, format: string | undefined) {\r\n            if (!format) {\r\n                return stat\r\n            }\r\n\r\n            return `${stat} | sp_${format}`\r\n        }\r\n    }), [handleSubmit, getStatsConfig, widget, replacingWidgetId, updateWidget, onSaved, onClose])\r\n\r\n    return (\r\n        <Modal\r\n            {...commonModalProps}\r\n            onClose={onClose}\r\n        >\r\n            <Modal.Header>\r\n                {typeField.value === 'gauge'\r\n                    ? t.HOME_PAGE_SINGLE_OR_GAUGE_WIDGET.name_gauge()\r\n                    : t.HOME_PAGE_SINGLE_OR_GAUGE_WIDGET.name_single()}\r\n            </Modal.Header>\r\n            <Modal.Content className=\"flex flex-col gap-4\">\r\n                <InputField\r\n                    label={t.GLOBAL.title()}\r\n                    placeholder={t.GLOBAL.title()}\r\n                    {...titleField}\r\n                />\r\n                <RadioGroup className=\"flex items-center gap-4\" value={typeField.value} onValueChange={typeField.onChange}>\r\n                    <RadioGroup.ItemWithLabel size=\"24\" value=\"gauge\" label={t.HOME_PAGE_SINGLE_OR_GAUGE_WIDGET.name_gauge()} />\r\n                    <RadioGroup.ItemWithLabel size=\"24\" value=\"single\" label={t.HOME_PAGE_SINGLE_OR_GAUGE_WIDGET.name_single()} />\r\n                </RadioGroup>\r\n                <SelectField\r\n                    label={t.HOME_PAGE_SINGLE_OR_GAUGE_WIDGET.primary_statistic()}\r\n                    options={valueOptions}\r\n                    withSearch\r\n                    clearable\r\n                    onSearchChange={onValueSearchChange}\r\n                    value={valueField.value}\r\n                    onChange={value => valueField.onChange(value ?? null)}\r\n                />\r\n                <ServicesSelect value={serviceIdsField.value} onChange={serviceIdsField.onChange} />\r\n                <div className=\"flex w-full gap-4\">\r\n                    {typeField.value === 'gauge' && (\r\n                        <NumberField\r\n                            label={t.HOME_PAGE_SINGLE_OR_GAUGE_WIDGET.warning_threshold()}\r\n                            {...warningThresholdField}\r\n                            onChange={e => warningThresholdField.onChange(Number(e.target.value))}\r\n                        />\r\n                    )}\r\n                    <NumberField\r\n                        label={t.HOME_PAGE_SINGLE_OR_GAUGE_WIDGET.alert_threshold()}\r\n                        layoutClassName={tcn({'w-full': typeField.value === 'single'})}\r\n                        {...alertThresholdField}\r\n                        onChange={e => alertThresholdField.onChange(Number(e.target.value))}\r\n                    />\r\n                    {typeField.value === 'gauge' && (\r\n                        <NumberField\r\n                            label={t.HOME_PAGE_SINGLE_OR_GAUGE_WIDGET.max_threshold()}\r\n                            {...maxThresholdField}\r\n                            onChange={e => maxThresholdField.onChange(Number(e.target.value))}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <ToggleWithLabel\r\n                    label={t.HOME_PAGE_SINGLE_OR_GAUGE_WIDGET.enable_warning_sound()}\r\n                    labelClassName=\"font-medium\"\r\n                    checked={warningSoundField.value}\r\n                    onCheckedChange={warningSoundField.onChange}\r\n                />\r\n                {typeField.value === 'single' && (\r\n                    <SelectField\r\n                        label={t.HOME_PAGE_SINGLE_OR_GAUGE_WIDGET.secondary_statistic()}\r\n                        options={optValueOptions}\r\n                        withSearch\r\n                        clearable\r\n                        onSearchChange={onOptValueSearchChange}\r\n                        value={optValueField.value}\r\n                        onChange={value => optValueField.onChange(value ?? null)}\r\n                    />\r\n                )}\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={handleCancelWidgetModal} variant=\"neutral\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonCancel()}\r\n                </Button>\r\n                <Button\r\n                    onClick={handleSave}\r\n                    variant=\"primary\"\r\n                >\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonOk()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst getWidgetDefaultFormData = (\r\n    type: SingleOrGaugeWidgetsTypes,\r\n    t: MessagesDeclaration,\r\n    serviceIds: string[],\r\n): SingleOrGaugeSettingsModalFormValues => {\r\n    const title = type === 'gauge' ? t.HOME_PAGE_SUPERVISOR_WIDGETS.gauge() : t.HOME_PAGE_SUPERVISOR_WIDGETS.single()\r\n\r\n    return {\r\n        type,\r\n        title,\r\n        serviceIds,\r\n        value: 'in_calls_active_on_agents',\r\n        optValue: undefined,\r\n        alertThreshold: 180,\r\n        warningThreshold: 100,\r\n        maxThreshold: 200,\r\n        warningSound: false,\r\n        dispositions: [],\r\n    }\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport type {SupervisorWidgetTypes} from '../../../../types'\r\nimport {SingleOrGaugeSettingsModal} from '../../../SingleOrGaugeSettingsModal'\r\n\r\n\r\nexport const useSingleOrGaugeWidget = ({\r\n    onSaved,\r\n}: {\r\n    onSaved: () => void\r\n}) => {\r\n    const openSingleOrGaugeSettingsModal = useModalComponentOpener(SingleOrGaugeSettingsModal)\r\n\r\n    return useCallback((widgetType: Extract<SupervisorWidgetTypes, 'gauge' | 'single'>, widget: SupervisorWidget) => {\r\n        openSingleOrGaugeSettingsModal({\r\n            widgetType,\r\n            replacingWidgetId: widget.id,\r\n            onSaved,\r\n        })\r\n        onSaved()\r\n\r\n    }, [onSaved, openSingleOrGaugeSettingsModal])\r\n}\r\n","import React, {useMemo} from 'react'\r\nimport {useController, useForm} from 'react-hook-form'\r\nimport {Button} from '@servicepattern/ui'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport {InputField, Modal} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\nimport {updatingWidgetDataAtom} from '../../atoms'\r\nimport {assertCorrectWidget, getAgentGridSubscriptionDefaults} from '../helpers'\r\nimport {TeamsSelect} from '../shared/TeamsSelect'\r\nimport {useHandleCancelWidgetModal} from '../useHandleCancelWidgetModal'\r\n\r\n\r\ninterface FormValues {\r\n    title: string\r\n    teams: string[]\r\n}\r\n\r\ntype SummarySettingsModalProps = CommonModalProps & {\r\n    replacingWidgetId: string\r\n}\r\n\r\ntype SummarySubscription = {\r\n    teams: string[]\r\n    id: string\r\n}\r\nfunction getSummarySubscription({id, teams}: SummarySubscription) {\r\n    return {\r\n        type: 'summary' as const,\r\n        req: {\r\n            ...getAgentGridSubscriptionDefaults(),\r\n            columns: [\r\n                {\r\n                    id: '1',\r\n                    statName: 'acd_state',\r\n                },\r\n            ],\r\n            id,\r\n            team_ids: teams,\r\n        },\r\n    }\r\n}\r\nexport const SummarySettingsModal: React.FC<SummarySettingsModalProps> = ({\r\n    onClose,\r\n    replacingWidgetId,\r\n    ...props\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const {widget, updateWidget} = useAtomValue(updatingWidgetDataAtom)\r\n\r\n    const emptyValues: FormValues = useMemo(\r\n        () => ({\r\n            title: t.HOME_PAGE_SUPERVISOR_WIDGETS.summary(),\r\n            teams: [],\r\n        }),\r\n        [t.HOME_PAGE_SUPERVISOR_WIDGETS],\r\n    )\r\n\r\n    const defaultValues = useMemo(() => {\r\n        assertCorrectWidget(widget, replacingWidgetId)\r\n        if (widget.type !== 'summary') {\r\n            return emptyValues\r\n        }\r\n\r\n        return {\r\n            title: widget.title || emptyValues.title,\r\n            teams:\r\n                widget.subscription.req.team_ids ||\r\n                emptyValues.teams,\r\n        }\r\n    }, [widget, replacingWidgetId, emptyValues])\r\n\r\n    const {control, handleSubmit} = useForm<FormValues>({\r\n        defaultValues,\r\n    })\r\n\r\n    const {field: titleField} = useController({\r\n        name: 'title',\r\n        control,\r\n    })\r\n\r\n    const {field: teamsField} = useController({\r\n        name: 'teams',\r\n        control,\r\n    })\r\n\r\n    const handleSave = useMemo(\r\n        () =>\r\n            handleSubmit(async (formData: FormValues) => {\r\n                assertCorrectWidget(widget, replacingWidgetId)\r\n                updateWidget({\r\n                    ...widget,\r\n                    title: formData.title,\r\n                    type: 'summary',\r\n                    subscription: getSummarySubscription({id: widget.id, teams: formData.teams}),\r\n                })\r\n\r\n                onClose()\r\n            }),\r\n        [handleSubmit, widget, replacingWidgetId, updateWidget, onClose],\r\n    )\r\n    const handleCancelWidgetModal = useHandleCancelWidgetModal({onClose, widget})\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            onClose={onClose}\r\n        >\r\n            <Modal.Header>\r\n                {t.HOME_SCREEN.select_teams()}\r\n            </Modal.Header>\r\n            <Modal.Content className=\"flex flex-col gap-4\">\r\n                <InputField\r\n                    label={t.GLOBAL.title()}\r\n                    placeholder={t.GLOBAL.title()}\r\n                    {...titleField}\r\n                />\r\n                <TeamsSelect value={teamsField.value} onChange={teamsField.onChange} />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={handleCancelWidgetModal} variant=\"neutral\">\r\n                    {t.GLOBAL.cancel()}\r\n                </Button>\r\n                <Button onClick={handleSave} variant=\"primary\">\r\n                    {t.GLOBAL.ok()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgBreakTime = function SvgBreakTime(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 27.931 39.141\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.421 9.951c.071-1.879.929-3.363 2.298-4.593.415-.373.83-.746 1.226-1.138.752-.745 1.122-1.664 1.187-2.713.015-.246.02-.493.044-.738.046-.473.376-.779.815-.769.445.01.77.36.771.851.001 1.748-.552 3.284-1.782 4.545-.48.491-.985.959-1.5 1.414-1.008.89-1.47 2.011-1.472 3.34l-.002.156c-.017.545-.343.912-.807.91-.485-.002-.811-.392-.795-.954.003-.104.011-.208.017-.311zM16.748 4.967c-.045 1.442-.634 2.541-1.611 3.456-.113.106-.225.217-.349.309-.838.623-1.27 1.436-1.242 2.499.012.462-.357.783-.796.776-.44-.007-.767-.338-.776-.802-.024-1.274.444-2.348 1.334-3.247.191-.193.381-.393.597-.557.881-.669 1.297-1.545 1.27-2.654-.01-.418.335-.731.738-.761.355-.027.734.242.81.597.033.15.021.309.025.384zM24.745 19.573c-1.076-.351-2.189-.414-3.308-.385-.298.008-.366-.043-.291-.357a53.828 53.828 0 0 1 1.129-4.12c.198-.614-.143-1.09-.786-1.127-.091-.005-.182-.002-.273-.002H.997c-.065 0-.13-.002-.195 0-.579.026-.918.483-.764 1.041.076.274.175.542.255.815 1.568 5.35 2.315 10.847 2.88 16.373.182 1.782.289 3.571.47 5.353.088.863.577 1.479 1.381 1.833.088.039.212.023.257.142h11.614c.578-.17 1.079-.446 1.426-.965.324-.485.406-1.028.44-1.59.117-1.892.305-3.778.498-5.663.063-.621.078-.603.701-.67 1.554-.168 3.07-.498 4.49-1.172 2.048-.972 3.342-2.494 3.471-4.848.124-2.232-1.056-3.966-3.176-4.658zm-6.685 7.685c-.418 3.181-.701 6.374-.932 9.573-.036.5-.269.705-.78.706H5.984c-.523 0-.744-.214-.782-.746-.198-2.837-.436-5.67-.794-8.491-.553-4.363-1.223-8.706-2.539-12.92-.015-.047-.012-.1-.019-.166h18.657a52.222 52.222 0 0 0-.844 3.05c-.709 2.966-1.205 5.971-1.603 8.994zm8.238-2.605c-.235 1.556-1.256 2.412-2.576 3.011-1.262.573-2.614.812-3.976 1.001-.314.044-.2-.162-.184-.281.154-1.195.304-2.392.484-3.584.182-1.204.406-2.401.59-3.605.05-.331.173-.465.517-.424.269.032.544.006.816.006.61.018 1.215.064 1.815.191 1.905.405 2.807 1.747 2.514 3.685z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgBreakTime);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"dd32f00f1641e9ea790f8d37e9f0fd2e.svg\";","import {useCallback} from 'react'\r\n\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {SummarySettingsModal} from '../../../SummarySettingsModal'\r\n\r\n\r\nexport const useSummaryWidget = ({\r\n    onSaved,\r\n}: {\r\n    onSaved: () => void\r\n}) => {\r\n    const openSummarySettingsModal = useModalComponentOpener(SummarySettingsModal)\r\n\r\n    return useCallback((widgetConfig: SupervisorWidget) => {\r\n\r\n        openSummarySettingsModal({\r\n            replacingWidgetId: widgetConfig.id,\r\n        })\r\n        onSaved()\r\n\r\n    }, [onSaved, openSummarySettingsModal])\r\n}\r\n","import {useCallback} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {updatingWidgetDataAtom} from '../../../../atoms'\r\nimport type {SupervisorWidgetView} from '../../../../types'\r\nimport {AgentGridModal, assertFormValuesValidForConfigAgentGrid} from '../../../AgentGridModal'\r\nimport {assertCorrectWidget} from '../../../helpers'\r\nimport {\r\n    assertFormValuesValidForImageWidgetSettingsModal,\r\n    ImageSettingsModal,\r\n} from '../../../ImageSettingsModal/ImageSettingsModal'\r\nimport {assertFormValuesValidForConfigServiceGrid, ServiceGridModal} from '../../../ServiceGridModal'\r\nimport {\r\n    assertFormValuesValidForTextWidgetSettingsModal,\r\n    TextSettingsModal,\r\n} from '../../../TextSettingsModal/TextSettingsModal'\r\nimport type {FormValues} from '../../../types'\r\nimport {useBreakTimeWidget} from './useBreakTimeWidget'\r\nimport {useCreateTimeWidget} from './useCreateTimeWidget'\r\nimport {useDispositionsWidget} from './useDispositionsWidget'\r\nimport {useMyStatsWidget} from './useMyStatsWidget'\r\nimport {useSatisfactionWidget} from './useSatisfactionWidget'\r\nimport {useSingleOrGaugeWidget} from './useSingleOrGaugeWidget'\r\nimport {useSummaryWidget} from './useSummaryWidget'\r\n\r\n\r\nconst exhaustiveCheck = (optionType: never) => {\r\n    throw new Error(`Unhandled option type: ${optionType}`)\r\n}\r\n\r\nexport const useHandleWidgetSelect = ({\r\n    onSaved,\r\n    replacingWidgetId,\r\n}: {\r\n    onSaved: () => void\r\n    replacingWidgetId: string\r\n}) => {\r\n    const openAgentGridModal = useModalComponentOpener(AgentGridModal)\r\n    const openServiceGridModal = useModalComponentOpener(ServiceGridModal)\r\n    const openImageSettingsModal = useModalComponentOpener(ImageSettingsModal)\r\n    const openTextSettingsModal = useModalComponentOpener(TextSettingsModal)\r\n    const {widget} = useAtomValue(updatingWidgetDataAtom)\r\n\r\n    const createTimeWidget = useCreateTimeWidget({\r\n        onSaved,\r\n        replacingWidgetId,\r\n    })\r\n\r\n    const createBreakTimeWidget = useBreakTimeWidget({\r\n        onSaved,\r\n    })\r\n\r\n    const createSingleOrGaugeWidget = useSingleOrGaugeWidget({\r\n        onSaved,\r\n    })\r\n\r\n    const createDispositionsWidget = useDispositionsWidget({\r\n        onSaved,\r\n    })\r\n\r\n    const createMyStatsWidget = useMyStatsWidget({\r\n        onSaved,\r\n    })\r\n\r\n    const createSummaryWidget = useSummaryWidget({\r\n        onSaved,\r\n    })\r\n\r\n    const createSatisfactionWidget = useSatisfactionWidget({\r\n        onSaved,\r\n    })\r\n\r\n    return useCallback((widgetType: SupervisorWidgetView, formValues?: FormValues) => {\r\n        assertCorrectWidget(widget, replacingWidgetId)\r\n        switch (widgetType) {\r\n            case 'image': {\r\n                if (formValues) {\r\n                    assertFormValuesValidForImageWidgetSettingsModal(formValues)\r\n                }\r\n\r\n                openImageSettingsModal({\r\n                    replacingWidgetId,\r\n                    onSaved,\r\n                    formValues,\r\n                })\r\n            }\r\n\r\n                break\r\n\r\n            case 'single':\r\n            case 'gauge':\r\n                createSingleOrGaugeWidget(widgetType, widget)\r\n                break\r\n\r\n            case 'agent_grid': {\r\n                if (formValues) {\r\n                    assertFormValuesValidForConfigAgentGrid(formValues)\r\n                }\r\n\r\n                openAgentGridModal({\r\n                    replacingWidgetId,\r\n                    formValues,\r\n                    onSaved,\r\n                })\r\n            }\r\n                break\r\n\r\n            case 'service_grid': {\r\n                if (formValues) {\r\n                    assertFormValuesValidForConfigServiceGrid(formValues)\r\n                }\r\n\r\n                openServiceGridModal({\r\n                    replacingWidgetId,\r\n                    formValues,\r\n                    onSaved,\r\n                })\r\n                break\r\n            }\r\n\r\n            case 'summary':\r\n                createSummaryWidget(widget)\r\n                break\r\n\r\n            case 'text': {\r\n                if (formValues) {\r\n                    assertFormValuesValidForTextWidgetSettingsModal(formValues)\r\n                }\r\n\r\n                openTextSettingsModal({\r\n                    replacingWidgetId,\r\n                    formValues,\r\n                    onSaved,\r\n                })\r\n                break\r\n            }\r\n            case 'datetime':\r\n                createTimeWidget()\r\n                break\r\n\r\n            case 'break_time':\r\n                createBreakTimeWidget(widget)\r\n                break\r\n            case 'dispositions':\r\n                createDispositionsWidget(widget)\r\n                break\r\n            case 'my_stats':\r\n                createMyStatsWidget(widget)\r\n                break\r\n            case 'satisfaction':\r\n                createSatisfactionWidget(widget)\r\n                break\r\n            default:\r\n                exhaustiveCheck(widgetType)\r\n                break\r\n        }\r\n    }, [\r\n        widget,\r\n        openAgentGridModal,\r\n        openImageSettingsModal,\r\n        openTextSettingsModal,\r\n        openServiceGridModal,\r\n        replacingWidgetId,\r\n        onSaved,\r\n        createSingleOrGaugeWidget,\r\n        createSummaryWidget,\r\n        createTimeWidget,\r\n        createBreakTimeWidget,\r\n        createDispositionsWidget,\r\n        createMyStatsWidget,\r\n        createSatisfactionWidget,\r\n    ])\r\n}\r\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgDatetime = function SvgDatetime(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 40.001 40.001\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.88 1.688C9.876 1.703 1.643 10.02 1.682 20.07c.04 10.204 8.274 18.343 18.536 18.32 9.976-.022 18.205-8.336 18.179-18.367C38.371 9.821 30.14 1.671 19.88 1.688zm.169 35.108c-9.26.004-16.764-7.491-16.768-16.749-.004-9.267 7.482-16.76 16.749-16.765 9.267-.005 16.76 7.478 16.769 16.746.008 9.254-7.494 16.764-16.75 16.768z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.832 11.993c0 1.818.004 3.635-.005 5.453-.001.237.062.353.287.465a2.359 2.359 0 0 1 1.136 3.039 2.362 2.362 0 0 1-2.949 1.351c-.235-.079-.363-.04-.531.13a949.724 949.724 0 0 1-4.486 4.491c-.383.382-.789.422-1.138.132-.401-.334-.42-.819-.023-1.219 1.068-1.08 2.146-2.151 3.219-3.225.45-.45.894-.906 1.352-1.347.141-.135.162-.24.099-.432-.395-1.192.078-2.369 1.184-2.924.228-.114.278-.239.278-.472-.007-3.609-.006-7.219-.004-10.828 0-.57.257-.895.718-.93.505-.038.857.284.861.824.009 1.22.003 2.441.004 3.661-.002.61-.002 1.22-.002 1.831z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgDatetime);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"818ea044bc6a6150de1dedf4465ec8df.svg\";","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgDispositions = function SvgDispositions(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 39.904 33.536\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.811 0C26.226.01 13.64.008 1.055.008.229.008 0 .24 0 1.076v31.37c0 .84.244 1.081 1.094 1.081 12.573 0 25.145-.002 37.718.009.49 0 .847-.135 1.093-.555V.556C39.661.132 39.299 0 38.811 0zm-.494 31.491c0 .346-.073.453-.44.453-11.948-.011-23.896-.01-35.844-.001-.357 0-.447-.089-.447-.446.01-9.819.01-19.638.001-29.457 0-.345.071-.454.44-.453 5.974.013 11.948.009 17.922.009s11.948.003 17.922-.008c.358-.001.447.091.446.447-.009 9.818-.009 19.637 0 29.456z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.157 7.979c2.543 0 5.087.005 7.63-.007.284-.001.398.057.365.359-.045.408.169.957-.085 1.19-.222.203-.762.066-1.162.066-4.775.003-9.55-.001-14.325.01-.314.001-.447-.06-.408-.396.046-.394-.164-.911.085-1.157.229-.227.74-.061 1.127-.062 2.257-.005 4.515-.003 6.773-.003zm.002 15.966c2.546 0 5.092.006 7.638-.008.299-.002.379.08.356.366a8.558 8.558 0 0 0-.002 1.013c.008.193-.065.26-.247.237-.051-.006-.104-.001-.156-.001-5.053 0-10.106-.004-15.158.009-.353.001-.454-.094-.418-.431.03-.283.027-.573 0-.856-.027-.287.089-.336.35-.335 2.545.01 5.091.006 7.637.006zM15.155 17.558c-2.53 0-5.061-.007-7.591.009-.335.002-.427-.093-.391-.409.044-.382-.161-.896.08-1.117.208-.19.714-.063 1.087-.063 4.788-.002 9.576.002 14.365-.008.333-.001.491.05.447.428-.043.37.12.879-.07 1.086-.219.239-.731.071-1.115.072-2.27.005-4.541.002-6.812.002zM33.602 7.401c.013.142-.085.31-.197.471-.703 1.012-1.403 2.025-2.111 3.032-.372.529-.805.587-1.326.189-.629-.481-1.256-.963-1.881-1.448-.433-.336-.519-.802-.224-1.186.276-.36.759-.407 1.177-.1.376.276.753.554 1.106.858.196.168.277.117.406-.069.515-.747 1.041-1.487 1.571-2.223.249-.346.609-.471.951-.336.334.131.517.379.528.812zm-.001 7.953c.015.155-.074.326-.187.488-.711 1.022-1.418 2.046-2.135 3.064-.36.512-.788.568-1.296.18-.629-.48-1.256-.963-1.88-1.45-.444-.346-.536-.801-.251-1.182.292-.39.772-.423 1.236-.078.302.225.612.442.889.694.286.26.454.272.686-.089.454-.709.963-1.383 1.459-2.065.309-.425.724-.515 1.114-.263.235.151.356.368.365.701zm-.002 7.997c.011.149-.074.308-.179.46-.71 1.023-1.417 2.048-2.133 3.067-.359.51-.804.573-1.298.196-.65-.496-1.298-.995-1.942-1.498-.39-.305-.466-.762-.2-1.133.262-.368.733-.446 1.138-.159.392.277.77.574 1.14.879.184.152.281.165.432-.058.517-.762 1.06-1.507 1.597-2.254.234-.325.566-.42.93-.292.335.117.514.381.515.792z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgDispositions);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"c7a776da806f6fa0bc0f4ad3f561a362.svg\";","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgGauge = function SvgGauge(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 36.716 36.704\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.383 0C8.259 0-.016 8.266 0 18.364.016 28.41 8.267 36.7 18.254 36.704c10.185.004 18.484-8.252 18.462-18.367C36.693 8.246 28.449 0 18.383 0zm-.052 35.11c-9.203-.013-16.74-7.564-16.732-16.766C1.607 9.11 9.15 1.582 18.383 1.594c9.212.012 16.737 7.55 16.734 16.763-.003 9.22-7.563 16.765-16.786 16.753z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.26 12.734c-.651-.369-1.48-.663-2.05-1.337-.226-.268-.124-.629.115-.89.239-.262.559-.365.879-.191.577.314 1.143.652 1.693 1.012.311.204.336.538.224.87-.105.311-.435.537-.861.536zm4.728-4.665c-.289.014-.5-.126-.645-.358a40.392 40.392 0 0 1-.897-1.493.785.785 0 0 1 .276-1.081c.368-.225.835-.124 1.084.266.313.489.618.985.893 1.496.299.557-.082 1.162-.711 1.17zm12.721-.001c-.59-.018-.985-.602-.717-1.117.285-.549.614-1.077.952-1.596.229-.351.683-.431 1.033-.23.363.208.525.664.319 1.039a30.216 30.216 0 0 1-.957 1.592.654.654 0 0 1-.63.312zm3.854 16.561c0-.586.586-.995 1.108-.728.562.288 1.1.627 1.626.976.357.237.41.668.184 1.031-.232.371-.623.51-1.003.302a29.582 29.582 0 0 1-1.595-.954.678.678 0 0 1-.32-.627zm-20.41-.006c.005.316-.149.541-.41.699-.464.281-.925.566-1.396.834-.461.262-.887.15-1.13-.275-.232-.406-.119-.815.322-1.091.47-.294.943-.588 1.429-.854a.783.783 0 0 1 1.185.687zM19.145 4.731c0 .298.014.597-.003.894-.025.448-.346.73-.797.724-.432-.006-.754-.283-.768-.711a30.455 30.455 0 0 1-.003-1.788.781.781 0 0 1 .778-.762.801.801 0 0 1 .794.75c.002.026.004.052.004.078v.817c-.002-.002-.004-.002-.005-.002zM4.826 19.058c-.298 0-.596.01-.893-.002-.443-.019-.746-.339-.755-.776-.008-.44.282-.777.729-.791.607-.019 1.216-.02 1.823.001.447.016.719.349.707.803-.011.431-.292.729-.719.764a1.015 1.015 0 0 1-.078.002h-.815l.001-.001zm27.091 0c-.298 0-.596.01-.893-.002-.452-.019-.739-.325-.746-.773-.007-.454.265-.778.717-.793.607-.02 1.216-.019 1.823.001.427.014.71.339.718.763a.772.772 0 0 1-.728.804 1.017 1.017 0 0 1-.078.003h-.815l.002-.003zm-.88-8.263c-.214-.414-.617-.518-1.185-.299-3.331 1.282-6.667 2.553-9.99 3.857-1.099.432-2.25.736-3.245 1.438-1.157.816-1.702 2.093-1.331 3.411.383 1.362 1.618 2.325 3.189 2.344.67-.153 1.509-.373 2.182-.949 2.119-1.814 4.221-3.649 6.329-5.476 1.255-1.088 2.511-2.174 3.764-3.264.39-.339.48-.688.287-1.062zm-7.491 5.196c-1.324 1.148-2.655 2.288-3.973 3.445-.51.447-1.076.618-1.728.441-.634-.172-1.021-.687-1.071-1.375-.053-.734.253-1.32.891-1.575 1.634-.653 3.278-1.284 4.918-1.92 1.062-.412 2.125-.82 3.19-1.224.114-.043.222-.145.394-.069-.881.765-1.75 1.522-2.621 2.277z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgGauge);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"ada5af7d090f1b34038d2471a69aec54.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgGrid = function SvgGrid(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 33.519 33.519\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.419 0H1.093C.239 0 0 .236 0 1.081v31.365c0 .825.246 1.073 1.061 1.073h31.326c.905 0 1.133-.225 1.133-1.119V1.113C33.519.235 33.288 0 32.419 0zM10.377 21.196c.002.253-.032.354-.327.353a875.237 875.237 0 0 0-8.102-.001c-.295.001-.364-.079-.363-.368.011-2.947.011-5.894.001-8.842-.001-.282.059-.375.36-.374 2.701.012 5.401.012 8.102 0 .288-.001.332.093.33.35-.012 1.48-.006 2.96-.006 4.44s-.006 2.962.005 4.442zm0 10.406c.001.245-.049.331-.316.33-2.715-.01-5.43-.009-8.145-.001-.253.001-.331-.063-.33-.324.009-2.715.009-5.43 0-8.145-.001-.259.072-.324.326-.321 1.364.013 2.728.006 4.092.006 1.351 0 2.702.007 4.053-.006.251-.002.322.059.321.317-.01 2.714-.009 5.429-.001 8.144zm-.345-21.224c-2.7-.01-5.399-.01-8.099 0-.266.001-.351-.059-.348-.338.015-1.363.007-2.725.007-4.088 0-1.324.007-2.648-.006-3.972-.002-.285.043-.402.375-.401 2.687.015 5.373.014 8.06.001.302-.001.359.085.358.369-.011 2.7-.012 5.399.001 8.099 0 .285-.088.331-.348.33zm1.935 1.996c-.001-.318.069-.409.4-.409 6.389.011 12.778.011 19.166 0 .331 0 .402.096.4.413-.012 2.922-.013 5.843.001 8.765.001.324-.08.407-.405.405-3.194-.013-6.389-.008-9.583-.008-3.181 0-6.363-.007-9.544.01-.37.002-.436-.11-.435-.45.014-2.909.013-5.817 0-8.726zm19.967 19.168c.001.302-.069.391-.384.391-6.4-.01-12.801-.01-19.201 0-.315 0-.383-.093-.382-.392a984.79 984.79 0 0 0 0-8.062c-.001-.274.07-.34.341-.339 3.22.01 6.439.006 9.659.006 3.194 0 6.387.004 9.581-.007.3-.001.388.068.387.38a894.012 894.012 0 0 0-.001 8.023zm.002-21.518c.002.307-.094.355-.372.354-3.22-.01-6.44-.006-9.661-.006-3.181 0-6.363-.006-9.544.009-.337.002-.393-.096-.392-.408.013-2.662.013-5.324 0-7.986-.002-.323.082-.408.407-.407 6.388.01 12.777.009 19.165.002.293 0 .398.055.396.379-.014 2.688-.013 5.376.001 8.063z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgGrid);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"1afcfab1ee4ea9a284fe547b5aedcc81.svg\";","var _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgImage = function SvgImage(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 39.916 33.537\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M.334 0C-.015 0 .006.152.006.388.009 11.282.011 22.177 0 33.072c0 .362.064.465.451.465 13.155-.012 26.31-.01 39.465-.01V.013C26.722.012 13.528.013.334 0zm37.995 31.492c0 .346-.073.453-.441.453-11.949-.011-23.898-.01-35.847-.001-.357 0-.447-.09-.446-.447.01-9.819.01-19.637.001-29.456 0-.346.072-.454.441-.453 5.973.012 11.948.009 17.923.009 5.975 0 11.949.003 17.924-.008.358-.001.447.091.446.447-.01 9.818-.01 19.637-.001 29.456z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.939 4.389c0-.324-.08-.403-.403-.403-10.378.009-20.756.01-31.134-.002-.358 0-.416.102-.416.431.01 5.681.007 11.362.007 17.042 0 2.559.009 5.117-.01 7.676-.003.359.103.418.432.417 5.183-.011 10.365-.008 15.548-.008s10.365-.003 15.548.008c.333.001.43-.064.43-.419-.013-8.247-.012-16.494-.002-24.742zM5.937 5.594c9.351.008 18.702.007 28.053.002.229 0 .338.023.337.304-.01 4.623-.007 9.247-.008 13.87 0 .064-.008.128-.016.245-.704-.278-1.385-.545-2.065-.815-1.239-.492-2.481-.974-3.712-1.483-.43-.177-.802-.161-1.219.053-1.716.879-3.448 1.726-5.166 2.601-.254.13-.373.117-.546-.128-2.395-3.374-4.802-6.74-7.207-10.107-.531-.743-.995-.764-1.585-.074l-6.937 8.109c-.064.075-.13.148-.262.297v-7.702c0-1.61.007-3.221-.007-4.831-.003-.271.066-.342.34-.341zm27.999 22.345c-4.663-.008-9.326-.005-13.989-.005-4.65 0-9.3-.004-13.95.008-.322.001-.405-.073-.402-.4.017-2.104.012-4.208.003-6.312a.825.825 0 0 1 .224-.588c2.489-2.894 4.974-5.791 7.446-8.699.218-.256.29-.196.452.032 2.334 3.275 4.675 6.544 7.015 9.814.47.657.71.722 1.435.359 1.829-.915 3.658-1.831 5.482-2.757.214-.108.389-.135.618-.042a600.12 600.12 0 0 0 5.731 2.295c.241.095.329.204.327.472-.014 1.818-.017 3.637.002 5.455.003.329-.112.369-.394.368z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.336 8.8a3.18 3.18 0 0 0-3.18 3.192 3.198 3.198 0 0 0 3.201 3.177c1.753-.008 3.19-1.45 3.186-3.198-.004-1.753-1.443-3.176-3.207-3.171zm.04 4.774a1.587 1.587 0 0 1-1.625-1.584 1.59 1.59 0 0 1 1.606-1.605 1.573 1.573 0 0 1 1.579 1.585 1.574 1.574 0 0 1-1.56 1.604z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgImage);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"6a2dd6417e27daffa4004223d3e33e39.svg\";","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgSatisfaction = function SvgSatisfaction(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 274.45 380.24\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M185.36 215.84c-.17-3.48-.38-7-.51-10.45-.15-4.2 2.14-7.15 5.7-7.44 3.82-.31 6.83 2.22 7.14 6.52.5 6.83.85 13.69.95 20.54 0 2.74.9 3.25 3.48 3 5.71-.55 11.46-.78 17.19-1.07 4.9-.25 8 2.13 8.14 6.19s-2.55 6.68-7.5 7c-6 .37-12 .7-18 .88-2 0-2.54.67-2.37 2.62.48 5.84.78 11.69 1.15 17.54.31 4.89-2 8.05-5.94 8.32s-6.56-2.29-6.92-7.4c-.42-5.84-.85-11.69-1-17.54-.06-2.24-.58-3-2.95-2.8-6.1.5-12.22.7-18.33 1.05-4.67.27-7.72-1.91-8-5.81s2.59-6.78 7.4-7.05c6.11-.34 12.22-.7 18.33-.88 2 0 2.9-.54 2.67-2.75-.35-3.47-.44-7-.65-10.45Zm-42.84 56.05c-3.16-15.35-7-30.54-11.34-45.59-7-24.14-15.07-47.89-25.41-70.83-1.25-2.77-2.78-5-6.13-5.25s-5.66 1.65-7.19 4.44a58.25 58.25 0 0 0-3.23 6.71c-11.14 28.51-19.36 57.93-27 87.53-2.48 9.64-4.55 19.37-6.14 28.87-.16 4.07 2.26 7 5.8 7.31a6.6 6.6 0 0 0 7-5.89c1.57-10.47 4.24-20.7 6.73-31 .46-1.91 1.14-2.64 3.16-2.75 13.47-.71 26.93-1.48 40.38-2.45 2.62-.18 3.35.72 4 3 2.45 9.38 4.87 18.77 6.78 28.29 1 5 3.76 7.22 7.87 6.49 3.92-.66 5.73-4.01 4.72-8.88Zm-27-41.39c-11 .6-21.93 1.3-32.9 2-1.49.09-2.86.36-2.2-2 5.38-18.75 10.74-37.51 17.68-55.76.08-.21.35-.35.62-.59 7.22 17.58 13.3 35.55 19 53.65.76 2.44-.27 2.6-2.23 2.7Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.41 114.37a7.62 7.62 0 0 0-2.38-5.9q-53.19-53-106.28-106.08A7.64 7.64 0 0 0 159.84 0Q82.07.12 4.29 0C1 0 0 .63 0 4.15q.18 93 .09 185.92T0 376c0 3.36.77 4.26 4.22 4.25q133.05-.15 266.12 0c3.21 0 4.1-.63 4.1-4q-.16-130.95-.03-261.88ZM167.74 28.2a1.3 1.3 0 0 1 .14-.59l78.91 78.81h-76.06c-1.62 0-3.08.36-3.07-2.3.11-25.3.07-50.61.08-75.92Zm91.44 332.52c0 3.36-.76 4.33-4.26 4.33q-117.69-.17-235.37 0c-3.4 0-4.34-.79-4.33-4.27q.18-85.29.08-170.57t-.08-170.59c0-3.61.86-4.49 4.49-4.48q64.28.21 128.55 0c3.58 0 4.21 1.07 4.2 4.34-.12 32.79 0 65.59-.14 98.38 0 3.07.73 3.94 3.88 3.93 32.85-.12 65.71 0 98.57-.17 3.74 0 4.42 1.07 4.42 4.56q-.19 117.27-.01 234.54Z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgSatisfaction);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"eefba393e948d600ed812676cd1694bd.svg\";","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgSingleStatistic = function SvgSingleStatistic(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 31.953 39.916\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.945 4.329c0-.078.002-.156 0-.234-.015-.58-.32-.892-.893-.898a65.217 65.217 0 0 0-2.027.003c-.222.005-.284-.062-.279-.281.014-.597.005-1.195.005-1.792 0-.889-.239-1.125-1.137-1.125H2.285c-.494 0-.987-.005-1.481.002C.372.01.069.281.01.705c-.016.115-.009.233-.009.35v34.603c0 .065-.002.13 0 .195.022.551.334.861.885.866.649.005 1.299.015 1.948-.005.275-.008.385.039.369.35-.03.57.018 1.144-.017 1.714-.03.499.118.877.547 1.138h27.674c.425-.264.546-.645.545-1.14-.01-11.482-.007-22.964-.007-34.447zM2.039 35.135c-.368 0-.435-.109-.435-.45.009-10.885.01-21.77-.001-32.654 0-.358.092-.442.444-.442 8.222.01 16.443.011 24.665-.001.367 0 .438.107.437.45-.011 5.455-.008 10.911-.008 16.366 0 5.429-.004 10.859.009 16.288.001.36-.095.442-.446.442-8.221-.011-16.443-.011-24.665.001zm28.295-13.577c0 5.443-.004 10.885.01 16.328.001.369-.11.434-.449.434-8.222-.009-16.444-.009-24.666 0-.322 0-.477-.046-.431-.412a4.46 4.46 0 0 0 .002-.895c-.02-.249.068-.298.303-.296 1.325.012 2.65.006 3.975.006h18.626c.782 0 1.048-.267 1.048-1.055 0-10.145.003-20.289-.01-30.434 0-.385.1-.493.468-.453.358.039.835-.111 1.052.07.23.192.07.684.07 1.044.004 5.22.002 10.441.002 15.663z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.423 15.171h-2.481c-.818 0-1.637-.013-2.455.007-.278.007-.324-.101-.311-.338a6.946 6.946 0 0 0-.002-.935c-.022-.273.063-.344.338-.342 1.975.013 3.949.007 5.924.007.481 0 .962.012 1.442-.005.224-.008.279.064.278.282-.007 2.481-.007 4.963-.001 7.444.001.199-.044.279-.257.268-.426-.022-.97.134-1.248-.074-.267-.2-.077-.775-.08-1.184-.011-1.294-.004-2.589-.004-3.897-.189.029-.257.167-.351.261-2.191 2.181-4.383 4.362-6.562 6.555-.232.234-.352.207-.566-.013-.761-.782-1.543-1.543-2.316-2.313-.589-.586-.588-.587-1.188.014-1.396 1.396-2.795 2.79-4.185 4.192-.166.167-.267.223-.447.013a8.904 8.904 0 0 0-.77-.772c-.143-.131-.127-.209.003-.338 1.935-1.923 3.867-3.849 5.792-5.782.183-.184.28-.13.433.024.915.922 1.839 1.835 2.757 2.754.123.123.198.23.385.042 1.922-1.934 3.855-3.857 5.872-5.87z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgSingleStatistic);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"6c6dee2209c6e99bb5bd84de17c9ae08.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgStateSummary = function SvgStateSummary(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 37.513 37.555\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.403 9.881a16.482 16.482 0 0 0-1.06-2.118c-2.082-3.504-4.997-6.059-8.745-7.661-.541-.231-.929-.068-1.162.477-.203.476-.415.95-.581 1.44-.102.301-.22.31-.493.199C21.067.461 16.701.314 12.325 1.831 4.188 4.651-1.065 12.883.183 21.708c.579 4.098 2.35 7.609 5.282 10.51 5.394 5.339 13.449 6.871 20.327 3.691 7.081-3.273 10.56-9.026 10.922-15.567-.007-3.622-.47-5.973-1.427-8.222-.104-.244-.082-.352.185-.443.477-.163.94-.367 1.407-.557.603-.246.771-.64.524-1.239zM8.169 5.858c2.68-2.093 5.756-3.186 9.145-3.423.328-.023.248.173.248.336.002 2 .002 4 .002 6v1.636c0 2.493-.008 4.987.008 7.48.002.372-.058.498-.474.497-5.013-.018-10.026-.015-15.038-.005-.343.001-.448-.051-.415-.437.425-4.977 2.594-9.016 6.524-12.084zm21.168 25.941c-3.4 2.897-7.331 4.297-11.791 4.107-7.563-.323-13.993-5.805-15.568-13.219a14.995 14.995 0 0 1-.317-2.232c-.03-.5-.034-.5.482-.5h7.716c2.598 0 5.196.002 7.794-.004.234-.001.406.052.58.227 3.705 3.716 7.415 7.428 11.134 11.13.22.22.186.307-.03.491zm2.21-2.337c-.178.239-.4.447-.564.694-.182.274-.3.197-.492.004-2.427-2.439-4.862-4.87-7.295-7.303-1.267-1.267-2.53-2.538-3.806-3.796a.772.772 0 0 1-.246-.611c.008-2.597.005-5.194.005-7.791 0-2.623.005-5.246-.006-7.869-.001-.292.056-.36.364-.339 1.813.126 3.557.53 5.244 1.202.284.113.324.214.206.498a4545.23 4545.23 0 0 0-5.094 12.301c-.088.213-.202.423-.172.67.066.552.608.853 1.173.625 1.02-.412 2.033-.841 3.049-1.261 3.18-1.315 6.361-2.626 9.537-3.949.231-.096.306-.043.388.172 2.287 6.002 1.544 11.589-2.291 16.753zm3.77-19.428c-.502.157-.984.373-1.484.539-.456.151-.889.447-1.353.638-3.431 1.414-6.861 2.83-10.292 4.245-.044.018-.089.034-.207.079l4.348-10.508c.381-.92.774-1.835 1.137-2.762.103-.263.179-.327.455-.187 3.351 1.698 5.869 4.216 7.549 7.578.117.234.062.311-.153.378z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgStateSummary);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"aa2caead10cc28315432a2b0c603880d.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgStats = function SvgStats(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 36.787 36.726\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.787 36.726c-.066-.15-.032-.308-.032-.461-.002-11.952-.004-23.903.005-35.855 0-.315-.061-.411-.396-.41-3.455.014-6.91.015-10.365 0-.359-.002-.438.094-.437.443.01 11.938.008 23.877.008 35.815 0 .156-.004.312-.006.467l11.223.001zM27.571 1.598c2.403.009 4.805.011 7.208-.002.304-.002.38.076.379.38-.01 5.468-.007 10.937-.007 16.405 0 5.429-.004 10.859.008 16.288.001.357-.056.474-.449.471a503.867 503.867 0 0 0-7.169-.004c-.283.001-.369-.058-.369-.359.009-10.937.009-21.874-.001-32.811 0-.332.12-.369.4-.368zm-16.347 9.179c0-.321-.072-.405-.399-.404-3.454.013-6.908.015-10.362-.001-.369-.002-.436.109-.436.451.009 8.481.008 16.962.006 25.443 0 .154.034.312-.032.461h11.223c-.002-.156-.006-.312-.006-.467-.001-8.495-.003-16.989.006-25.483zM9.206 35.136a721.806 721.806 0 0 0-7.209-.002c-.272.001-.37-.039-.37-.35.011-7.483.01-14.965.001-22.448 0-.296.075-.359.362-.358 2.416.013 4.832.014 7.247-.001.318-.002.375.097.375.389-.01 3.741-.006 7.483-.006 11.224 0 3.715-.005 7.431.008 11.146.002.334-.09.402-.408.4zM24.005 36.726c-.006-.142-.016-.284-.017-.427-.001-5.57-.004-11.14.008-16.71.001-.34-.076-.428-.423-.427-3.453.015-6.906.015-10.359 0-.347-.001-.424.086-.423.427.012 5.57.008 11.14.008 16.71 0 .142-.011.284-.016.427h11.222zm-9.226-15.978c2.415.015 4.83.014 7.246.001.297-.002.36.078.359.366-.01 4.558-.009 9.117-.001 13.675 0 .264-.056.348-.336.346a812.741 812.741 0 0 0-7.324-.001c-.258.001-.32-.071-.319-.323.01-2.299.006-4.597.006-6.896 0-2.26.005-4.52-.006-6.779-.002-.294.057-.391.375-.389z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgStats);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"8a0e1ac93be77efa978428f82e1b8849.svg\";","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nimport { forwardRef } from \"react\";\nvar SvgText = function SvgText(_ref, ref) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"var(--tw-svg-color, #0D363F)\",\n    viewBox: \"0 0 36.805 33.535\",\n    ref: ref,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.407 1.6c-5.974 0-11.948-.003-17.922.008-.357.001-.482-.087-.445-.447C.072.853.054.538.044.227.038.057.099-.011.267.007c.077.008.156.001.234.001 11.935 0 23.871.002 35.806-.009.367 0 .518.071.463.458-.052.367.16.864-.087 1.077-.213.183-.693.064-1.054.064-5.741.003-11.482.002-17.222.002zm0 15.96c-5.973 0-11.946-.003-17.92.008-.344.001-.49-.067-.448-.438.035-.308.014-.623.004-.934-.006-.171.059-.237.226-.22.077.008.156.001.234.001 11.933 0 23.867.002 35.8-.009.366 0 .513.069.467.459-.042.358.113.841-.07 1.053-.211.245-.706.076-1.076.076-5.738.005-11.478.004-17.217.004zm-.021 15.967c-5.974 0-11.948-.003-17.922.008-.337.001-.469-.068-.422-.42.05-.381-.162-.895.09-1.114.218-.19.717-.065 1.092-.065 11.688-.001 23.377.001 35.065-.011.397 0 .529.095.483.489-.035.295-.015.597-.004.895.006.172-.058.235-.225.218-.09-.009-.182-.002-.273-.002-5.962.002-11.923.002-17.884.002zM12.793 7.981c4.131 0 8.262.004 12.392-.008.321-.001.44.073.404.401-.044.395.166.927-.085 1.153-.218.196-.739.063-1.126.063-7.963.001-15.925-.001-23.888.008-.338 0-.502-.057-.45-.435.052-.381-.163-.897.089-1.117.216-.19.716-.064 1.09-.064 3.858-.002 7.716-.001 11.574-.001zm.012 17.574c-4.118 0-8.236-.004-12.353.007-.314.001-.449-.064-.411-.4.045-.396-.166-.93.087-1.157.22-.196.742-.06 1.13-.06 7.963-.001 15.926.001 23.888-.008.341 0 .493.064.444.434-.05.381.16.882-.082 1.121-.222.219-.716.059-1.09.06-3.871.005-7.742.003-11.613.003z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/forwardRef(SvgText);\nexport { ForwardRef as ReactComponent };\nexport default __webpack_public_path__ + \"bc4de686c8f7f29e21c97b2015a2c118.svg\";","import type {WidgetViewOption} from '../types'\r\nimport {ReactComponent as BreakTimeIcon} from './icons/breakTime.svg'\r\nimport {ReactComponent as DatetimeIcon} from './icons/datetime.svg'\r\nimport {ReactComponent as DispositionsIcon} from './icons/dispositions.svg'\r\nimport {ReactComponent as GaugeIcon} from './icons/gauge.svg'\r\nimport {ReactComponent as GridIcon} from './icons/grid.svg'\r\nimport {ReactComponent as ImageIcon} from './icons/image.svg'\r\nimport {ReactComponent as SatisfactionIcon} from './icons/satisfaction.svg'\r\nimport {ReactComponent as SingleStatisticIcon} from './icons/singleStatistic.svg'\r\nimport {ReactComponent as StateSummaryIcon} from './icons/stateSummary.svg'\r\nimport {ReactComponent as StatsIcon} from './icons/stats.svg'\r\nimport {ReactComponent as TextIcon} from './icons/text.svg'\r\n\r\n\r\nexport const standardWidgets: Array<WidgetViewOption> = [\r\n    {type: 'single', icon: SingleStatisticIcon},\r\n    {type: 'agent_grid', icon: GridIcon},\r\n    {type: 'service_grid', icon: GridIcon},\r\n    {type: 'summary', icon: StateSummaryIcon},\r\n    {type: 'gauge', icon: GaugeIcon},\r\n    {type: 'text', icon: TextIcon},\r\n    {type: 'datetime', icon: DatetimeIcon},\r\n    {type: 'image', icon: ImageIcon},\r\n]\r\n\r\nexport const userWidgets: Array<WidgetViewOption> = [\r\n    {type: 'break_time', icon: BreakTimeIcon},\r\n    {type: 'dispositions', icon: DispositionsIcon},\r\n    {type: 'my_stats', icon: StatsIcon},\r\n    {type: 'satisfaction', icon: SatisfactionIcon},\r\n]\r\n","import React from 'react'\r\n\r\nimport type {SupervisorWidgetView} from '../../../types'\r\nimport type {WidgetViewOption} from '../types'\r\nimport {Option} from './Option'\r\n\r\n\r\ninterface WidgetOptionsGroupProps {\r\n    title: string\r\n    widgets: WidgetViewOption[]\r\n    onSelect: (type: SupervisorWidgetView) => void\r\n    selectedType: SupervisorWidgetView\r\n}\r\n\r\nexport const WidgetOptionsGroup: React.FC<WidgetOptionsGroupProps> = ({title, widgets, onSelect, selectedType}) => {\r\n    return (\r\n        <>\r\n            <h4 className=\"mb-2 heading-xs\">{title}</h4>\r\n            <div className=\"mb-2 grid grid-cols-4 gap-5\">\r\n                {widgets.map(it => (\r\n                    <Option\r\n                        key={it.type}\r\n                        option={it}\r\n                        selected={selectedType === it.type}\r\n                        onSelect={onSelect}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {SupervisorWidgetView} from '../../../types'\r\nimport {standardWidgets, userWidgets} from './optionsList'\r\nimport {WidgetOptionsGroup} from './WidgetOptionsGroup'\r\n\r\n\r\nconst options = [\r\n    {title: 'standard_widgets', widgets: standardWidgets},\r\n    {title: 'user_widgets', widgets: userWidgets},\r\n] as const\r\n\r\nexport const DefaultSelectedWidget = standardWidgets[0].type\r\n\r\nexport const Options: React.FC<{\r\n    onSelect: (type: SupervisorWidgetView) => void\r\n    selectedType: SupervisorWidgetView\r\n}> = ({selectedType, onSelect}) => {\r\n    const {t} = useLocalizationState()\r\n\r\n    return (\r\n        <div>\r\n            {options.map(option => (\r\n                <WidgetOptionsGroup\r\n                    key={option.title}\r\n                    title={t.HOME_SCREEN[option.title]()}\r\n                    widgets={option.widgets}\r\n                    selectedType={selectedType}\r\n                    onSelect={onSelect}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback, useState} from 'react'\r\nimport {Button} from '@servicepattern/ui'\r\n\r\nimport {Modal} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\nimport type {CommonModalProps} from '@bpinc/state-modals-types'\r\n\r\nimport type {SupervisorWidgetView} from '../../types'\r\nimport {DefaultSelectedWidget, Options, useHandleWidgetSelect} from './Options'\r\n\r\n\r\ntype EmptyWidgetSettingsModalProps = CommonModalProps & {\r\n    replacingWidgetId: string\r\n}\r\n\r\nexport const EmptyWidgetSettingsModal: React.FC<EmptyWidgetSettingsModalProps> = ({\r\n    replacingWidgetId,\r\n    onClose,\r\n    ...commonModalProps\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const [selectedType, setSelectedType] = useState<SupervisorWidgetView>(DefaultSelectedWidget)\r\n\r\n    const onWidgetSelected = useHandleWidgetSelect({\r\n        onSaved: onClose,\r\n        replacingWidgetId,\r\n    })\r\n\r\n    const handleSave = useCallback(() => {\r\n        onWidgetSelected(selectedType)\r\n    }, [onWidgetSelected, selectedType])\r\n\r\n    return (\r\n        <Modal\r\n            data-id=\"settings-widgets\"\r\n            {...commonModalProps}\r\n            onClose={onClose}\r\n            className=\"max-w-[560px] flex-col\"\r\n        >\r\n            <Modal.Header>\r\n                {t.HOME_SCREEN.select_widget()}\r\n            </Modal.Header>\r\n            <Modal.Content className=\"overflow-auto\">\r\n                <Options\r\n                    selectedType={selectedType}\r\n                    onSelect={setSelectedType}\r\n                />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button onClick={() => onClose()} variant=\"neutral\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.window_buttonCancel()}\r\n                </Button>\r\n                <Button onClick={handleSave} variant=\"primary\">\r\n                    {t.WINDOW_POPUP_TITLES_AND_MESSAGES.button_save()}\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\nimport {useSetAtom} from 'jotai'\r\nimport {noop} from 'lodash-es'\r\n\r\nimport type {\r\n    SupervisorWidget,\r\n    SupervisorWidgetAgentGridSubscriptionData,\r\n    SupervisorWidgetConfigGrid,\r\n    SupervisorWidgetServicesGridSubscriptionData,\r\n} from '@bpinc/lib-widgets-urls'\r\nimport {useModalComponentOpener} from '@bpinc/state-modals-context'\r\n\r\nimport {AgentGridModal} from './settings-modals/AgentGridModal'\r\nimport {\r\n    EmptyWidgetSettingsModal,\r\n    useBreakTimeWidget,\r\n    useDispositionsWidget,\r\n    useMyStatsWidget,\r\n    useSatisfactionWidget,\r\n    useSingleOrGaugeWidget,\r\n    useSummaryWidget,\r\n} from './settings-modals/EmptyWidgetSettingsModal'\r\nimport {ImageSettingsModal} from './settings-modals/ImageSettingsModal'\r\nimport {ServiceGridModal} from './settings-modals/ServiceGridModal'\r\nimport {TextSettingsModal} from './settings-modals/TextSettingsModal'\r\nimport {updatingWidgetDataAtom} from './atoms'\r\n\r\n\r\ntype ConfigAgentGrid = SupervisorWidgetConfigGrid & {\r\n    subscription: SupervisorWidgetAgentGridSubscriptionData\r\n}\r\ntype ConfigServiceGrid = SupervisorWidgetConfigGrid & {\r\n    subscription: SupervisorWidgetServicesGridSubscriptionData\r\n}\r\n\r\ntype Params = {\r\n    updateWidget: (widget: SupervisorWidget) => void\r\n}\r\n\r\n\r\nexport function useOpenWidgetSettings({updateWidget}: Params) {\r\n    const setUpdateWidgetAtom = useSetAtom(updatingWidgetDataAtom)\r\n\r\n    const openEmptyWidgetSettingsModal = useModalComponentOpener(EmptyWidgetSettingsModal)\r\n\r\n    const openServiceGridModal = useModalComponentOpener(ServiceGridModal)\r\n    const openAgentGridModal = useModalComponentOpener(AgentGridModal)\r\n    const openImageSettingsModal = useModalComponentOpener(ImageSettingsModal)\r\n    const openTextSettingsModal = useModalComponentOpener(TextSettingsModal)\r\n\r\n    const updateDispositionsWidget = useDispositionsWidget({onSaved: noop})\r\n    const updateSingleOrGaugeWidget = useSingleOrGaugeWidget({onSaved: noop})\r\n    const updateBreakTimeWidget = useBreakTimeWidget({onSaved: noop})\r\n    const updateMyStatsWidget = useMyStatsWidget({onSaved: noop})\r\n    const updateSatisfaction = useSatisfactionWidget({onSaved: noop})\r\n    const updateSummaryWidget = useSummaryWidget({onSaved: noop})\r\n\r\n\r\n    return useCallback(\r\n        (widget: SupervisorWidget) => {\r\n            setUpdateWidgetAtom({updateWidget, widget})\r\n            switch (widget.type) {\r\n                case 'break_time':\r\n                    updateBreakTimeWidget(widget)\r\n                    break\r\n                case 'dispositions':\r\n                    updateDispositionsWidget(widget)\r\n                    break\r\n                case 'gauge':\r\n                case 'single':\r\n                    updateSingleOrGaugeWidget(widget.type, widget)\r\n                    break\r\n                case 'grid':\r\n                    switch (widget.subscription.type) {\r\n                        case 'agent_grid':\r\n                            openAgentGridModal({\r\n                                replacingWidgetId: widget.id,\r\n                                formValues: widget as ConfigAgentGrid,\r\n                            })\r\n                            break\r\n                        case 'service_grid':\r\n                            openServiceGridModal({\r\n                                replacingWidgetId: widget.id,\r\n                                formValues: widget as ConfigServiceGrid,\r\n                            })\r\n                            break\r\n                    }\r\n                    break\r\n                case 'image':\r\n                    openImageSettingsModal({\r\n                        replacingWidgetId: widget.id,\r\n                        formValues: widget,\r\n                    })\r\n                    break\r\n                case 'my_stats':\r\n                    updateMyStatsWidget(widget)\r\n                    break\r\n                case 'satisfaction':\r\n                    updateSatisfaction(widget)\r\n                    break\r\n                case 'summary':\r\n                    updateSummaryWidget(widget)\r\n                    break\r\n                case 'text':\r\n                    openTextSettingsModal({\r\n                        replacingWidgetId: widget.id,\r\n                        formValues: widget,\r\n                    })\r\n                    break\r\n                default:\r\n                    openEmptyWidgetSettingsModal({\r\n                        replacingWidgetId: widget.id,\r\n                    })\r\n            }\r\n        },\r\n        [\r\n            setUpdateWidgetAtom,\r\n            updateWidget,\r\n            updateBreakTimeWidget,\r\n            updateDispositionsWidget,\r\n            updateSingleOrGaugeWidget,\r\n            openImageSettingsModal,\r\n            updateMyStatsWidget,\r\n            updateSatisfaction,\r\n            updateSummaryWidget,\r\n            openTextSettingsModal,\r\n            openEmptyWidgetSettingsModal,\r\n            openAgentGridModal,\r\n            openServiceGridModal,\r\n        ],\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useMemo} from 'react'\r\nimport {isUndefined} from 'lodash-es'\r\n\r\nimport {useAppConfigState} from '@bpinc/ad-app-config-state-context'\r\nimport {MS_IN_MINUTE, MS_IN_SECOND} from '@bpinc/lib-helpers'\r\nimport {WithNoData} from '@bpinc/lib-ui-elements'\r\nimport type {SupervisorWidgetConfigBreakTime} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {BreakTimeChart} from '../../../charts/BreakTimeChart'\r\nimport type {WidgetProps} from '../../types'\r\n\r\n\r\nexport const BreakTimeWidget: FC<WidgetProps<SupervisorWidgetConfigBreakTime>> = ({\r\n    config,\r\n    subscriptionData,\r\n}) => {\r\n    const totalBreakTime = useAppConfigState('agentDailyBreakTime') * MS_IN_MINUTE / MS_IN_SECOND\r\n\r\n    const breakTimeData = useMemo(() => {\r\n        if (!subscriptionData) {\r\n            return undefined\r\n        }\r\n        const breakTimeSubscriptionConfig =\r\n            config.subscription?.req.columns.find(c => c.statName === 'agent_total_break_time')\r\n\r\n        if (!breakTimeSubscriptionConfig?.id) {\r\n            return undefined\r\n        }\r\n\r\n        return Number(subscriptionData?.agent_grids?.[0].values?.[0]?.[Number(breakTimeSubscriptionConfig.id)] ?? 0)\r\n    }, [config.subscription?.req.columns, subscriptionData])\r\n\r\n    const currentBreakTime = breakTimeData ?? 0\r\n    const isLoading = !subscriptionData\r\n\r\n    return (\r\n        <WithNoData noData={isUndefined(breakTimeData)} isLoading={isLoading}>\r\n            <BreakTimeChart total={totalBreakTime} current={currentBreakTime} />\r\n        </WithNoData>\r\n    )\r\n}\r\n","import {getMomentUTC, MS_IN_DAY, MS_IN_HOUR, MS_IN_SECOND} from '@bpinc/lib-helpers'\r\n\r\nimport type {StatsFormatType} from './types'\r\n\r\n\r\nexport function formatStatValue(value: string | number | undefined, format: StatsFormatType | undefined) {\r\n    if (!format) {\r\n        return value?.toString() || ''\r\n    }\r\n    switch (format) {\r\n        case 'percent':\r\n            return presentFormatter(value)\r\n        case 'duration': {\r\n            return durationFormatter(value)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction durationFormatter(value: string | number | undefined) {\r\n    if (value === undefined || value === '') {\r\n        return ''\r\n    }\r\n\r\n    const resultInMs = parseInt(value.toString()) * MS_IN_SECOND\r\n    if (resultInMs >= MS_IN_DAY) {\r\n        return `${Math.floor(resultInMs / MS_IN_DAY)}d ${getMomentUTC(resultInMs, 'HH:mm:ss')}`\r\n    } else if (resultInMs >= MS_IN_HOUR) {\r\n        return getMomentUTC(resultInMs, 'HH:mm:ss')\r\n    } else {\r\n        return getMomentUTC(resultInMs, 'mm:ss')\r\n    }\r\n}\r\n\r\nfunction presentFormatter(value: string | number | undefined) {\r\n    if (value === undefined || value === '') {\r\n        return ''\r\n    }\r\n    const numberValue = parseInt(value.toString())\r\n\r\n    if (numberValue > 0 && numberValue < 1) {\r\n        return `${numberValue * 100}%`\r\n    }\r\n    return `${numberValue}%`\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {type ECOption, Chart} from '@bpinc/lib-echarts'\r\n\r\n\r\nconst CENTER = ['50%', '55%']\r\nconst RADIUS = '90%'\r\n\r\ntype GaugeChartProps = {\r\n    value: number\r\n    inverted: boolean\r\n    getFormattedValue: (value: number) => string\r\n    alertThreshold: number\r\n    warningThreshold: number\r\n    maxThreshold: number\r\n}\r\nexport const GaugeChart = ({value, warningThreshold, alertThreshold, maxThreshold, inverted, getFormattedValue}: GaugeChartProps) => {\r\n    const options = useMemo(() => {\r\n        const style = getComputedStyle(document.body)\r\n        const maxAmount = inverted ? warningThreshold : maxThreshold\r\n        const [minValue, maxValue] = inverted ? [maxAmount, 0] : [0, maxAmount]\r\n\r\n        function getGaugeColor() {\r\n            if (inverted) {\r\n                if (value < alertThreshold) {\r\n                    return style.getPropertyValue('--various-orange')\r\n                } else if (value < warningThreshold) {\r\n                    return style.getPropertyValue('--primary-600')\r\n                }\r\n                return style.getPropertyValue('--primary-600')\r\n            }\r\n            if (value < warningThreshold) {\r\n                return style.getPropertyValue('--primary-600')\r\n            } else if (value < alertThreshold) {\r\n                return style.getPropertyValue('--various-orange')\r\n            }\r\n            return style.getPropertyValue('--error-550')\r\n        }\r\n\r\n        return {\r\n            polar: {\r\n                center: CENTER,\r\n                radius: RADIUS,\r\n            },\r\n            angleAxis: {\r\n                type: 'value',\r\n                startAngle: 210,\r\n                endAngle: -30,\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n            },\r\n            radiusAxis: {\r\n                min: 0,\r\n                max: 1,\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'pie',\r\n                    radius: ['65%', RADIUS],\r\n                    center: CENTER,\r\n                    startAngle: 210,\r\n                    endAngle: -30,\r\n                    silent: true,\r\n                    labelLine: {\r\n                        show: false,\r\n                    },\r\n                    data: [\r\n                        {\r\n                            value: value,\r\n                            itemStyle: {\r\n                                color: getGaugeColor(),\r\n                            },\r\n                        },\r\n                        {\r\n                            value: value < maxValue ? Math.abs(maxValue - value) : 0,\r\n                            itemStyle: {\r\n                                color: style.getPropertyValue('--neutral-100'),\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    type: 'scatter',\r\n                    coordinateSystem: 'polar',\r\n                    symbolSize: 0,\r\n                    silent: true,\r\n                    data: [{\r\n                        value: [0.75, 0],\r\n                        label: {\r\n                            show: true,\r\n                            position: 'bottom',\r\n                            formatter: () => getFormattedValue(minValue),\r\n                            distance: 15,\r\n                        },\r\n                    }, {\r\n                        value: [0.75, 180],\r\n                        label: {\r\n                            show: true,\r\n                            position: 'bottom',\r\n                            formatter: () => getFormattedValue(maxValue),\r\n                            distance: 15,\r\n                        },\r\n                    }, {\r\n                        value: [0.2, 90],\r\n                        label: {\r\n                            show: true,\r\n                            position: 'bottom',\r\n                            formatter: () => getFormattedValue(value),\r\n                            fontWeight: 600,\r\n                        },\r\n                    }],\r\n                },\r\n            ],\r\n            textStyle: {\r\n                fontFamily: '\"Noto Sans\", ui-sans-serif, system-ui, sans-serif',\r\n                fontSize: 16,\r\n                fontWeight: 400,\r\n                lineHeight: 18,\r\n            },\r\n        } satisfies ECOption\r\n    }, [inverted, warningThreshold, maxThreshold, value, alertThreshold, getFormattedValue])\r\n\r\n    return (\r\n        <Chart options={options} />\r\n    )\r\n}\r\n","import {cloneDeep} from 'lodash-es'\r\n\r\nimport type {AcdState} from '@bpinc/ad-transport-types'\r\nimport {acdStates} from '@bpinc/ad-transport-types'\r\nimport {toHHMMSS} from '@bpinc/lib-helpers'\r\nimport {uuid} from '@bpinc/lib-uuid'\r\nimport type {\r\n    AgentGridValuesColumn,\r\n    AgentStatsType,\r\n    ServiceStatsType,\r\n    SupervisorWidgetConfigGrid,\r\n} from '@bpinc/lib-widgets-urls'\r\nimport type {MessagesDeclaration} from '@bpinc/state-localization'\r\n\r\nimport type {StatsConfigType, StatsConfigTypeKeys} from '../../stats/types'\r\n\r\n\r\nfunction mapAcdState(state: string, t: MessagesDeclaration) {\r\n    switch (state) {\r\n        case 'busy':\r\n            return t.HOME_SCREEN.agent_state_busy()\r\n        case 'ready':\r\n            return t.HOME_SCREEN.agent_state_ready()\r\n        case 'after_call_work':\r\n            return t.HOME_SCREEN.agent_state_after_call_work()\r\n        case 'not_ready':\r\n            return t.HOME_SCREEN.agent_state_not_ready()\r\n        default:\r\n            return t.HOME_SCREEN.agent_state_logged_out()\r\n    }\r\n}\r\ntype StatType<\r\n    ConfigType extends StatsConfigTypeKeys,\r\n    Stat extends keyof StatsConfigType[ConfigType]\r\n> = (\r\n    type: ConfigType,\r\n    stat: Stat\r\n) => {\r\n    format?: 'duration' | 'percent' | undefined\r\n    align?: 'left'\r\n    alertInverted?: boolean\r\n}\r\ntype GridData = {\r\n    value: string\r\n    id: string\r\n    alignLeft: boolean\r\n}[][]\r\n\r\ntype ProcessGridDataPrams = {\r\n    config: SupervisorWidgetConfigGrid\r\n    dataGrids: AgentGridValuesColumn[] | undefined\r\n    t: MessagesDeclaration\r\n    getStatsConfig: StatType<'statsService', ServiceStatsType> & StatType<'statsAgent', AgentStatsType>\r\n}\r\n\r\nexport function processGridData({config, dataGrids: dataGridsRaw, getStatsConfig, t}: ProcessGridDataPrams): GridData | undefined {\r\n    const type = config.subscription.type\r\n    const {columns: configuredColumns, limit: maxItemsToShow, id: reqId} = cloneDeep(config.subscription.req)\r\n    const dataGrids = cloneDeep(dataGridsRaw || [])\r\n    const targetDataGrid = dataGrids.find(grid => grid?.id === reqId)\r\n\r\n    const currentData = dataGrids.filter(item => item.id === reqId)[0]\r\n    if (type == 'service_grid' && currentData && Array.isArray(currentData.values)) {\r\n        currentData.values = currentData.values.slice(0, maxItemsToShow)\r\n    }\r\n    if (type == 'agent_grid' && currentData && Array.isArray(currentData.values)) {\r\n        const stateCol = configuredColumns.length + 1\r\n        let currentValues = currentData.values.filter(item => {\r\n            const state = item[stateCol] as AcdState\r\n            return acdStates.includes(state)\r\n        })\r\n        currentValues = currentValues.map(item => {\r\n            delete item[stateCol]\r\n            return item\r\n        })\r\n        currentValues = currentValues.slice(0, maxItemsToShow)\r\n\r\n        const totalContacts = configuredColumns.find(column => column.statName === 'total_contacts')\r\n        if (totalContacts) {\r\n            currentValues.forEach(value => {\r\n                const id = parseInt(totalContacts?.id ? totalContacts.id : '0')\r\n                const v1 = value[id]\r\n                const v2 = value[id + 1]\r\n                value[id] = '' + parseInt(v1) + parseInt(v2)\r\n                delete value[id + 1]\r\n            })\r\n        }\r\n        currentData.values = currentValues\r\n    }\r\n    const alignLeft: boolean[] = []\r\n    configuredColumns.forEach(column => {\r\n        const statsConfig = type === 'service_grid'\r\n            ? getStatsConfig('statsService', column.statName as ServiceStatsType)\r\n            : getStatsConfig('statsAgent', column.statName as AgentStatsType)\r\n\r\n        alignLeft.push(statsConfig?.align === 'left')\r\n        const tempId = parseInt(column?.id || '')\r\n        const widgetSubscriptionType = type\r\n        if (\r\n            (widgetSubscriptionType === 'agent_grid' && column.statName && statsConfig === undefined) ||\r\n            (widgetSubscriptionType === 'service_grid' && column.statName && statsConfig === undefined)\r\n        ) {\r\n            console.warn('Widget: \\'' + config.title + '\\' uses unknown statistic name: ' + column.statName)\r\n            return\r\n        }\r\n\r\n        if (\r\n            (widgetSubscriptionType === 'agent_grid' && column.statName && statsConfig.format === 'duration') ||\r\n            (widgetSubscriptionType === 'service_grid' && column.statName && statsConfig.format === 'duration')\r\n        ) {\r\n            targetDataGrid?.values?.forEach(val => {\r\n                if (val[tempId] === null) {\r\n                    val[tempId] = '0'\r\n                }\r\n                val[tempId] = toHHMMSS(Number(val[tempId]))\r\n            })\r\n        }\r\n\r\n        if (\r\n            (widgetSubscriptionType == 'agent_grid' && statsConfig.format == 'percent') ||\r\n            (widgetSubscriptionType == 'service_grid' && statsConfig.format == 'percent')\r\n        ) {\r\n            targetDataGrid?.values?.forEach(val => {\r\n                if (val[tempId] == null) {\r\n                    val[tempId] = '0'\r\n                }\r\n                val[tempId] = val[tempId] + ' %'\r\n            })\r\n        }\r\n\r\n        if (\r\n            (widgetSubscriptionType === 'agent_grid' && statsConfig.align) ||\r\n            (widgetSubscriptionType === 'service_grid' && statsConfig.align)\r\n        ) {\r\n            targetDataGrid?.values?.forEach(val => {\r\n                if (val[tempId] === null || val[tempId] === '0') {\r\n                    val[tempId] = ''\r\n                }\r\n            })\r\n        }\r\n\r\n        if (column.statName === 'acd_state') {\r\n            targetDataGrid?.values?.forEach(val => {\r\n                val[Number(column.id)] = mapAcdState(val[Number(column.id)], t)\r\n            })\r\n        }\r\n    })\r\n\r\n    const result = targetDataGrid?.values?.map(obj => {\r\n        return Object.values(obj).map((prop, i) => {\r\n            return {\r\n                value: prop == null ? '0' : prop,\r\n                id: uuid(),\r\n                alignLeft: alignLeft[i],\r\n            }\r\n        })\r\n    })\r\n\r\n    return result\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {useMetricsNames} from '@bpinc/lib-helpers-ui'\r\nimport {Table} from '@bpinc/lib-jskit-ui'\r\nimport {WithNoData} from '@bpinc/lib-ui-elements'\r\nimport type {AgentStatsType, ServiceStatsType, SupervisorWidgetConfigGrid} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {StatsDataType} from '../../stats/types'\r\nimport {useGetStatsConfig} from '../../stats/useGetStatsConfig'\r\nimport type {WidgetProps} from '../../types'\r\nimport {processGridData} from './utils'\r\n\r\n\r\nexport const GridWidget: React.FC<WidgetProps<SupervisorWidgetConfigGrid>> = ({\r\n    config,\r\n    subscriptionData,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const getStatsConfig = useGetStatsConfig()\r\n    const subscriptionType = config.subscription.type\r\n    const metricsNames = useMetricsNames()\r\n\r\n    const titleList = useMemo(() => {\r\n        if (!config.columtitle) {\r\n            return\r\n        }\r\n\r\n        return config.subscription.req.columns.map(col => {\r\n            let statData: StatsDataType | undefined = undefined\r\n            if (col.coltitle) {\r\n                switch (subscriptionType) {\r\n                    case 'agent_grid':\r\n                        statData = getStatsConfig('statsAgent', col.statName as AgentStatsType)\r\n                        break\r\n                    case 'service_grid':\r\n                        statData = getStatsConfig('statsService', col.statName as ServiceStatsType)\r\n                        break\r\n                }\r\n            }\r\n\r\n\r\n            return {\r\n                id: col.id,\r\n                title: metricsNames[col.statName as (AgentStatsType | ServiceStatsType)]?.general || col.coltitle || '',\r\n                alignLeft: statData?.align === 'left',\r\n            }\r\n        })\r\n    }, [config.columtitle, config.subscription.req.columns, metricsNames, subscriptionType, getStatsConfig])\r\n\r\n    const columnsList = useMemo(() => {\r\n        if (!subscriptionData) {\r\n            return\r\n        }\r\n\r\n        switch (subscriptionType) {\r\n            case 'agent_grid':\r\n                return processGridData({\r\n                    config,\r\n                    t,\r\n                    getStatsConfig,\r\n                    dataGrids: subscriptionData?.agent_grids,\r\n                })\r\n            case 'service_grid':\r\n                return processGridData({\r\n                    config,\r\n                    t,\r\n                    getStatsConfig,\r\n                    dataGrids: subscriptionData?.service_grids,\r\n                })\r\n        }\r\n    }, [subscriptionData, subscriptionType, config, t, getStatsConfig])\r\n\r\n    const isLoading = !subscriptionData\r\n\r\n    return (\r\n        <WithNoData\r\n            noData={!columnsList?.length}\r\n            isLoading={isLoading}\r\n            className=\"!justify-start\"\r\n        >\r\n            <div className=\"h-full w-full overflow-auto\">\r\n                <Table size=\"sm\" className=\"w-full\">\r\n                    {titleList?.length && (\r\n                        <Table.Header sticky>\r\n                            <Table.Row>\r\n                                {titleList.map(\r\n                                    ({title, alignLeft, id}) => (\r\n                                        <Table.HeaderCell\r\n                                            key={id}\r\n                                            align={alignLeft ? 'left' : 'right'}\r\n                                        >\r\n                                            {title}\r\n                                        </Table.HeaderCell>\r\n                                    ),\r\n                                )}\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                    )}\r\n                    <Table.Body>\r\n                        {columnsList?.map((elems, i) => (\r\n                            <Table.Row key={i}>\r\n                                {elems.map(data => (\r\n                                    <Table.Cell key={data.id} align={data.alignLeft ? 'left' : 'right'}>\r\n                                        {data.value}\r\n                                    </Table.Cell>\r\n                                ))}\r\n                            </Table.Row>\r\n                        ))}\r\n                    </Table.Body>\r\n                </Table>\r\n            </div>\r\n        </WithNoData>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport type {BarSeriesOption} from '@bpinc/lib-echarts'\r\nimport {type ECOption, Chart} from '@bpinc/lib-echarts'\r\n\r\nimport type {MyStatsOption} from './useMyStatsOptions'\r\n\r\n\r\ntype MyStatChartProps = {\r\n    data: MyStatsOption[]\r\n}\r\n\r\nexport const MyStatChart = ({data}: MyStatChartProps) => {\r\n    const options = useMemo(() => {\r\n        const style = getComputedStyle(document.body)\r\n\r\n        return {\r\n            legend: {\r\n                bottom: 0,\r\n                orient: 'horizontal',\r\n                left: 0,\r\n                height: 36,\r\n                type: 'scroll',\r\n                itemGap: 16,\r\n                itemWidth: 12,\r\n                itemHeight: 12,\r\n            },\r\n            grid: data.map((d, index) => ({\r\n                left: 100,\r\n                right: '15%',\r\n                height: `${1 / data.length * 100 - 6}%`,\r\n                top: `${index / data.length * 100 - 4 * index}%`,\r\n            })),\r\n            xAxis: data.map((d, index) => ({\r\n                type: 'value',\r\n                gridIndex: index,\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    show: false,\r\n                },\r\n            })),\r\n            yAxis: data.map((d, index) => ({\r\n                type: 'category',\r\n                gridIndex: index,\r\n                inverse: true,\r\n                data: [d.name],\r\n                axisLabel: {\r\n                    margin: 10,\r\n                    fontWeight: 600,\r\n                    overflow: 'break',\r\n                    width: 100,\r\n                    lineHeight: 18,\r\n                },\r\n            })),\r\n            series: data.reduce<BarSeriesOption[]>((acc, d, index) => {\r\n                d.data.forEach(v => {\r\n                    acc.push({\r\n                        type: 'bar',\r\n                        name: v.name,\r\n                        xAxisIndex: index,\r\n                        yAxisIndex: index,\r\n                        barCategoryGap: '15%',\r\n                        data: [\r\n                            {\r\n                                name: v.name,\r\n                                groupId: v.name,\r\n                                value: v.value,\r\n                            },\r\n                        ],\r\n                        label: {\r\n                            show: true,\r\n                            position: 'right',\r\n                            formatter: ({value}) => typeof value === 'number' ? d.formatter(value) : '',\r\n                        },\r\n                    })\r\n                })\r\n                return acc\r\n            }, []),\r\n            color: [style.getPropertyValue('--primary-600'), style.getPropertyValue('--various-blue')],\r\n            textStyle: {\r\n                fontFamily: '\"Noto Sans\", ui-sans-serif, system-ui, sans-serif',\r\n                fontSize: 12,\r\n                fontWeight: 400,\r\n                lineHeight: 18,\r\n            },\r\n        } satisfies ECOption\r\n    }, [data])\r\n\r\n    return (\r\n        <Chart options={options} />\r\n    )\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {toMMSS} from '@bpinc/lib-helpers'\r\nimport type {SupervisorWidgetConfigMyStats, SupervisorWidgetsSubscriptionDataItem} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\n\r\ntype MyStatsData = {\r\n    inCalls: { agentValue: number; teamValue: number }\r\n    outCalls: { agentValue: number; teamValue: number }\r\n    successRatio: { agentValue: number; teamValue: number }\r\n    averageHandlingTime: { agentValue: number; teamValue: number }\r\n}\r\n\r\nconst myStatsDefaultData = {\r\n    inCalls: {agentValue: 0, teamValue: 0},\r\n    outCalls: {agentValue: 0, teamValue: 0},\r\n    successRatio: {agentValue: 0, teamValue: 0},\r\n    averageHandlingTime: {agentValue: 0, teamValue: 0},\r\n}\r\n\r\ninterface MyStatPrams {\r\n    subscriptionData: SupervisorWidgetsSubscriptionDataItem | undefined\r\n    config: SupervisorWidgetConfigMyStats\r\n}\r\n\r\nexport type MyStatsOption = {\r\n    name: string\r\n    formatter: (value: number) => string\r\n    data: {\r\n        name: string\r\n        value: number\r\n    }[]\r\n}\r\n\r\nexport function useMyStatsOptions({subscriptionData, config}: MyStatPrams) {\r\n    const {t} = useLocalizationState()\r\n    const myStatsData = useMemo(() => {\r\n        if (!subscriptionData) {\r\n            return undefined\r\n        }\r\n\r\n        return (config.subscription?.req.columns ?? []).reduce<MyStatsData>(\r\n            (result, column) => {\r\n                const agentValue = Number(\r\n                    subscriptionData?.agent_grids?.[0].values?.[0]?.[\r\n                        Number(column.id ?? 0)\r\n                    ] ?? 0,\r\n                )\r\n\r\n                switch (column.statName) {\r\n                    case 'in_calls_handled_per_day': {\r\n                        const teamValue = Number(\r\n                            subscriptionData?.team_stats\r\n                                ?.in_calls_handled_per_day ?? 0,\r\n                        )\r\n                        result.inCalls = {agentValue, teamValue}\r\n                        break\r\n                    }\r\n                    case 'out_calls_handled_per_day': {\r\n                        const teamValue = Number(\r\n                            subscriptionData?.team_stats\r\n                                ?.out_calls_handled_per_day ?? 0,\r\n                        )\r\n                        result.outCalls = {agentValue, teamValue}\r\n                        break\r\n                    }\r\n                    case 'agent_success_ratio_per_day': {\r\n                        const teamValue = Number(\r\n                            subscriptionData?.team_stats\r\n                                ?.team_success_ratio_per_day ?? 0,\r\n                        )\r\n                        result.successRatio = {agentValue, teamValue}\r\n                        break\r\n                    }\r\n                    case 'calls_average_handling_time_per_day': {\r\n                        const teamValue = Number(\r\n                            subscriptionData?.team_stats\r\n                                ?.calls_average_handling_time_per_day ?? 0,\r\n                        )\r\n                        result.averageHandlingTime = {agentValue, teamValue}\r\n                        break\r\n                    }\r\n                }\r\n\r\n                return result\r\n            },\r\n            {...myStatsDefaultData},\r\n        )\r\n    }, [config.subscription?.req.columns, subscriptionData])\r\n\r\n    return useMemo<MyStatsOption[] | undefined>(() => {\r\n        if (!myStatsData) {\r\n            return undefined\r\n        }\r\n\r\n        return [{\r\n            name: t.HOME_PAGE_MY_STATS_WIDGET.handled(),\r\n            formatter: (value: number) => `${value}`,\r\n            data: [\r\n                {\r\n                    name: t.HOME_PAGE_MY_STATS_WIDGET.my_stats(),\r\n                    value: myStatsData.inCalls.agentValue + myStatsData.outCalls.agentValue,\r\n                },\r\n                {\r\n                    name: t.HOME_PAGE_MY_STATS_WIDGET.teams_stats(),\r\n                    value: myStatsData.inCalls.teamValue + myStatsData.outCalls.teamValue,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            name: t.HOME_PAGE_MY_STATS_WIDGET.average_handling_time(),\r\n            formatter: (value: number) => toMMSS(value),\r\n            data: [\r\n                {\r\n                    name: t.HOME_PAGE_MY_STATS_WIDGET.my_stats(),\r\n                    value: myStatsData.averageHandlingTime.agentValue,\r\n                },\r\n                {\r\n                    name: t.HOME_PAGE_MY_STATS_WIDGET.teams_stats(),\r\n                    value: myStatsData.averageHandlingTime.teamValue,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            name: t.HOME_PAGE_MY_STATS_WIDGET.successful_interactions(),\r\n            formatter: (value: number) => `${value}%`,\r\n            data: [\r\n                {\r\n                    name: t.HOME_PAGE_MY_STATS_WIDGET.my_stats(),\r\n                    value: myStatsData.successRatio.agentValue,\r\n                },\r\n                {\r\n                    name: t.HOME_PAGE_MY_STATS_WIDGET.teams_stats(),\r\n                    value: myStatsData.successRatio.teamValue,\r\n                },\r\n            ],\r\n        }]\r\n    }, [myStatsData, t.HOME_PAGE_MY_STATS_WIDGET])\r\n}\r\n","import type {FC} from 'react'\r\nimport React from 'react'\r\n\r\nimport {WithNoData} from '@bpinc/lib-ui-elements'\r\nimport type {SupervisorWidgetConfigMyStats} from '@bpinc/lib-widgets-urls'\r\n\r\nimport type {WidgetProps} from '../../types'\r\nimport {MyStatChart} from './MyStatChart'\r\nimport {useMyStatsOptions} from './useMyStatsOptions'\r\n\r\n\r\nexport const MyStatsWidget: FC<WidgetProps<SupervisorWidgetConfigMyStats>> = ({\r\n    config,\r\n    subscriptionData,\r\n}) => {\r\n    const options = useMyStatsOptions({config, subscriptionData})\r\n    const isLoading = !subscriptionData\r\n\r\n    return (\r\n        <WithNoData\r\n            noData={!options}\r\n            isLoading={isLoading}\r\n            className=\"flex flex-auto flex-col !items-start\"\r\n        >\r\n            {options && (\r\n                <MyStatChart data={options} />\r\n            )}\r\n        </WithNoData>\r\n    )\r\n}\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {type ECOption, Chart} from '@bpinc/lib-echarts'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\n\r\nconst CENTER = ['50%', '65%']\r\nconst RADIUS = '100%'\r\n\r\ninterface SatisfactionChartProps {\r\n    value: number\r\n    minValue: number\r\n    maxValue: number\r\n    title: string | undefined\r\n    getFormattedValue: (value: number) => string\r\n    className?: string\r\n}\r\nexport const SatisfactionChart = ({value, maxValue, minValue, title, getFormattedValue, className}: SatisfactionChartProps) => {\r\n    const options = useMemo(() => {\r\n        const style = getComputedStyle(document.body)\r\n\r\n        return {\r\n            title: {\r\n                text: title,\r\n                left: 'center',\r\n                top: -5,\r\n                textStyle: {\r\n                    fontWeight: 600,\r\n                    fontSize: 12,\r\n                    textBorderWidth: 1,\r\n                    textBorderColor: style.getPropertyValue('--neutral-0'),\r\n                },\r\n            },\r\n            polar: {\r\n                center: CENTER,\r\n                radius: RADIUS,\r\n            },\r\n            angleAxis: {\r\n                type: 'value',\r\n                startAngle: 180,\r\n                endAngle: 0,\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n            },\r\n            radiusAxis: {\r\n                min: 0,\r\n                max: 1,\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'pie',\r\n                    radius: ['60%', RADIUS],\r\n                    center: CENTER,\r\n                    startAngle: 180,\r\n                    endAngle: 360,\r\n                    silent: true,\r\n                    labelLine: {\r\n                        show: false,\r\n                    },\r\n                    data: [{\r\n                        value: Math.abs(minValue - value),\r\n                    },\r\n                    {\r\n                        value: Math.abs(maxValue - value),\r\n                    }],\r\n                },\r\n                {\r\n                    type: 'scatter',\r\n                    coordinateSystem: 'polar',\r\n                    symbolSize: 0,\r\n                    silent: true,\r\n                    data: [{\r\n                        value: [0.8, 0],\r\n                        label: {\r\n                            show: true,\r\n                            position: 'bottom',\r\n                            formatter: () => getFormattedValue(minValue),\r\n                        },\r\n                    }, {\r\n                        value: [0.8, 180],\r\n                        label: {\r\n                            show: true,\r\n                            position: 'bottom',\r\n                            formatter: () => getFormattedValue(maxValue),\r\n                        },\r\n                    }, {\r\n                        value: [0.4, 90],\r\n                        label: {\r\n                            show: true,\r\n                            position: 'bottom',\r\n                            formatter: () => getFormattedValue(value),\r\n                        },\r\n                    }],\r\n                },\r\n            ],\r\n            color: [style.getPropertyValue('--various-orange'), style.getPropertyValue('--neutral-100')],\r\n            textStyle: {\r\n                fontFamily: '\"Noto Sans\", ui-sans-serif, system-ui, sans-serif',\r\n                fontSize: 12,\r\n                fontWeight: 400,\r\n                lineHeight: 18,\r\n            },\r\n        } satisfies ECOption\r\n    }, [title, minValue, value, maxValue, getFormattedValue])\r\n\r\n    return (\r\n        <div\r\n            className={tcn('absolute flex h-1/2 w-1/2 flex-col items-center justify-center overflow-hidden p-1', className)}\r\n        >\r\n            <Chart options={options} />\r\n        </div>\r\n    )\r\n\r\n}\r\n","import {useMemo} from 'react'\r\n\r\nimport {useMetricsNames} from '@bpinc/lib-helpers-ui'\r\nimport type {AgentGridValuesColumn, SupervisorWidgetConfigSatisfaction} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {formatStatValue} from '../../stats/helpers'\r\nimport {useGetStatsConfig} from '../../stats/useGetStatsConfig'\r\n\r\n\r\ntype StatName = 'agent_fcr' | 'agent_nps' | 'agent_csat'\r\n\r\ninterface StatOptions {\r\n    minValue: number\r\n    maxValue: number\r\n}\r\n\r\nconst satisfactionOption: Record<StatName, StatOptions> = {\r\n    agent_fcr: {\r\n        minValue: 0,\r\n        maxValue: 100,\r\n    },\r\n    agent_nps: {\r\n        minValue: -100,\r\n        maxValue: 100,\r\n    },\r\n    agent_csat: {\r\n        minValue: 0,\r\n        maxValue: 10,\r\n    },\r\n}\r\n\r\nexport const useSatisfactionOption = (\r\n    statName: StatName,\r\n    config: SupervisorWidgetConfigSatisfaction,\r\n    grids: AgentGridValuesColumn[] | undefined,\r\n) => {\r\n    const metricsNames = useMetricsNames()\r\n    const getStatsConfig = useGetStatsConfig()\r\n    const {columns: configuredColumns, id: reqId} = config.subscription.req\r\n    const targetCol = configuredColumns?.find(c => c.statName === statName)?.id\r\n    const targetDataGrid = grids?.find(grid => grid?.id === reqId)\r\n    const value = Number(targetDataGrid?.values?.[0]?.[Number(targetCol)] ?? 0)\r\n\r\n    return useMemo(() => {\r\n        return {\r\n            value,\r\n            maxValue: satisfactionOption[statName].maxValue,\r\n            minValue: satisfactionOption[statName].minValue,\r\n            getFormattedValue: (rawValue: number) => {\r\n                return formatStatValue(rawValue, getStatsConfig('statsAgent', statName)?.format)\r\n            },\r\n            title: metricsNames[statName]?.general,\r\n        }\r\n    }, [value, statName, metricsNames, getStatsConfig])\r\n}\r\n","import React from 'react'\r\n\r\nimport {WithNoData} from '@bpinc/lib-ui-elements'\r\nimport type {SupervisorWidgetConfigSatisfaction} from '@bpinc/lib-widgets-urls'\r\n\r\nimport type {WidgetProps} from '../../types'\r\nimport {SatisfactionChart} from './SatisfactionChart'\r\nimport {useSatisfactionOption} from './useSatisfactionOption'\r\n\r\n\r\nexport const SatisfactionWidget: React.FC<WidgetProps<SupervisorWidgetConfigSatisfaction>> = (\r\n    {\r\n        config,\r\n        subscriptionData,\r\n    },\r\n) => {\r\n    const resolutionOptions = useSatisfactionOption('agent_fcr', config, subscriptionData?.agent_grids)\r\n    const netPromoterScoreOptions = useSatisfactionOption('agent_nps', config, subscriptionData?.agent_grids)\r\n    const demeanorOptions = useSatisfactionOption('agent_csat', config, subscriptionData?.agent_grids)\r\n    const isLoading = !subscriptionData\r\n\r\n    return (\r\n        <WithNoData\r\n            className=\"-m-1 h-full\"\r\n            noData={!subscriptionData}\r\n            isLoading={isLoading}\r\n        >\r\n            <SatisfactionChart\r\n                {...resolutionOptions}\r\n                className=\"left-0 top-1/2\"\r\n            />\r\n            <SatisfactionChart\r\n                {...netPromoterScoreOptions}\r\n                className=\"left-1/2 top-1/2\"\r\n            />\r\n            <SatisfactionChart\r\n                {...demeanorOptions}\r\n                className=\"bottom-1/4 left-1/4 top-0\"\r\n            />\r\n        </WithNoData>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport type {SupervisorWidgetConfigBase} from '@bpinc/lib-widgets-urls'\r\n\r\nimport type {WidgetProps} from '../../types'\r\n\r\n\r\nexport const Unknown: React.FC<WidgetProps<SupervisorWidgetConfigBase>> = ({\r\n    config,\r\n}) => {\r\n    return (\r\n        <div className=\"h-full overflow-auto p-2\">\r\n                Unknown widget type\r\n            <pre>{JSON.stringify(config, null, 2)}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useMemo} from 'react'\r\nimport {partial} from 'lodash-es'\r\n\r\nimport {IconConfigure24, IconDelete24} from '@bpinc/lib-jskit-ui'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport type {SupervisorWidget, SupervisorWidgetsSubscriptionDataItem} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {BpWallboardWidgetResolverEditProps, BpWallboardWidgetResolverViewProps} from '../../bp-wallboard'\r\nimport {ControlButton} from '../../ControlButton'\r\nimport {useHomePageUIState} from '../../HomePageUIContextProvider'\r\nimport type {SupervisorWidgetTypes} from '../types'\r\nimport {useOpenWidgetSettings} from '../useOpenWidgetSettings'\r\nimport {BreakTimeWidget} from './BreakTime'\r\nimport {DateTimeWidget} from './DateTime'\r\nimport {DispositionsWidget} from './Dispositions'\r\nimport {EmptyWidget} from './Empty'\r\nimport {GaugeWidget} from './Gauge'\r\nimport {GridWidget} from './Grid'\r\nimport {ImageWidget} from './Image'\r\nimport {MyStatsWidget} from './MyStats'\r\nimport {SatisfactionWidget} from './Satisfaction'\r\nimport {SingleWidget} from './Single'\r\nimport {SummaryWidget} from './Summary'\r\nimport {TextWidget} from './Text'\r\nimport {Unknown} from './Unknown'\r\n\r\n\r\nconst WIDGETS_CONFIG: Record<SupervisorWidgetTypes, React.FC<any> | null> = {\r\n    grid: GridWidget,\r\n    datetime: DateTimeWidget,\r\n    empty: EmptyWidget,\r\n    gauge: GaugeWidget,\r\n    image: ImageWidget,\r\n    news: null, //Not available in Home Page\r\n    single: SingleWidget,\r\n    text: TextWidget,\r\n    summary: SummaryWidget,\r\n    break_time: BreakTimeWidget,\r\n    dispositions: DispositionsWidget,\r\n    my_stats: MyStatsWidget,\r\n    satisfaction: SatisfactionWidget,\r\n    agenda: null, //Not available in Home Page\r\n    time_series: null, //Not available in Home Page\r\n}\r\n\r\nexport function EditWidgetResolver(\r\n    props: BpWallboardWidgetResolverEditProps<SupervisorWidget>,\r\n) {\r\n    const {Card, config, subscriptionData, removeWidget} = props\r\n\r\n    const {type} = config\r\n    const Widget = WIDGETS_CONFIG[type] || Unknown\r\n    const cardStyles = useCardStyles(props)\r\n\r\n    return (\r\n        <Card\r\n            {...props}\r\n            className={cardStyles}\r\n            controls={<WidgetEditControls config={config} removeWidget={removeWidget} />}\r\n            header={<WidgetHeaderView config={config} />}\r\n        >\r\n            <Widget config={config} subscriptionData={subscriptionData} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport function ViewWidgetResolver(\r\n    props: BpWallboardWidgetResolverViewProps<SupervisorWidget>,\r\n) {\r\n    const {Card, config, subscriptionData} = props\r\n\r\n    const {type} = config\r\n    const Widget = WIDGETS_CONFIG[type] || Unknown\r\n\r\n    const cardStyles = useCardStyles(props)\r\n\r\n\r\n    return (\r\n        <Card {...props} className={cardStyles} header={<WidgetHeaderView config={config} />}>\r\n            <Widget config={config} subscriptionData={subscriptionData} />\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nfunction WidgetHeaderView({\r\n    config,\r\n}: {\r\n    config: SupervisorWidget\r\n}) {\r\n    return (\r\n        <span className=\"truncate text-primary-on-primary\">\r\n            {config.title}\r\n        </span>\r\n    )\r\n}\r\n\r\nfunction useCardStyles<W extends SupervisorWidget>({\r\n    config,\r\n    subscriptionData,\r\n}:\r\n| BpWallboardWidgetResolverViewProps<W>\r\n| BpWallboardWidgetResolverEditProps<W>) {\r\n    const isAlertedSingle = useMemo(() => {\r\n        if (config.type !== 'single') {\r\n            return false\r\n        }\r\n\r\n        if (\r\n            !config.alertThreshold ||\r\n            !subscriptionData ||\r\n            !config.subscription?.req[0]\r\n        ) {\r\n            return false\r\n        }\r\n        const subscription: SupervisorWidgetsSubscriptionDataItem = subscriptionData\r\n\r\n        const value = parseInt(\r\n            subscription.stats_totals?.[config.subscription.req[0]] || '0',\r\n        )\r\n        return value >= config.alertThreshold\r\n    }, [config, subscriptionData])\r\n\r\n    return useMemo(() => {\r\n        switch (config.type) {\r\n            case 'single':\r\n                if (isAlertedSingle) {\r\n                    return tcn('group [&>div]:border-[--wallboard-alerted-border] [&>div]:bg-[--wallboard-alerted-background]')\r\n                }\r\n        }\r\n        return tcn('group')\r\n    }, [isAlertedSingle, config.type])\r\n}\r\n\r\n\r\ntype WidgetEditControlsProps = {\r\n    config: SupervisorWidget\r\n    removeWidget?: (config: SupervisorWidget) => void\r\n}\r\n\r\nfunction WidgetEditControls({\r\n    removeWidget,\r\n    config,\r\n}: WidgetEditControlsProps) {\r\n    const {t} = useLocalizationState()\r\n    const updateWidget = useHomePageUIState('updateWidget')\r\n    const openSettings = useOpenWidgetSettings({updateWidget})\r\n    return (\r\n        <div className=\"flex\">\r\n            <ControlButton\r\n                tooltip={t.HOME_SCREEN.configure_widget()}\r\n                onClick={partial(openSettings, config)}\r\n            >\r\n                <IconConfigure24 className=\"icon-neutral-reversed\" />\r\n            </ControlButton>\r\n            <ControlButton\r\n                onClick={() => removeWidget?.(config)}\r\n                tooltip={t.HOME_SCREEN.delete_widget_title()}\r\n            >\r\n                <IconDelete24 className=\"icon-neutral-reversed\" />\r\n            </ControlButton>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport dayjs from 'dayjs'\r\n\r\n\r\nexport const DateTimeWidget: React.FC = () => {\r\n    const [now, setNow] = useState(Date.now())\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setNow(Date.now())\r\n        }, 1000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [])\r\n\r\n    const date = dayjs(now).format('D MMMM YYYY')\r\n    const time = dayjs(now).format('HH:mm:ss')\r\n\r\n    return (\r\n        <div className=\"flex h-full w-full flex-col justify-center text-center\">\r\n            <svg\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                viewBox=\"0 0 200 100\"\r\n            >\r\n                <text\r\n                    x=\"100\"\r\n                    y=\"35\"\r\n                    fontSize=\"24\"\r\n                    textAnchor=\"middle\"\r\n                    className=\"fill-primary-850\"\r\n                >\r\n                    {date}\r\n                </text>\r\n                <text\r\n                    x=\"100\"\r\n                    y=\"75\"\r\n                    fontSize=\"24\"\r\n                    textAnchor=\"middle\"\r\n                    className=\"fill-primary-850\"\r\n                >\r\n                    {time}\r\n                </text>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport const EmptyWidget: React.FC = () => {\r\n    return (\r\n        <div className=\"flex h-full w-full items-center justify-center\" />\r\n    )\r\n}\r\n\r\n","import React, {useEffect, useMemo} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\n\r\nimport {WithNoData} from '@bpinc/lib-ui-elements'\r\nimport type {SupervisorWidgetConfigGauge} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {audioNotifyAtom} from '../../atoms'\r\nimport {formatStatValue} from '../../stats/helpers'\r\nimport {useGetStatsConfig} from '../../stats/useGetStatsConfig'\r\nimport type {WidgetProps} from '../../types'\r\nimport {GaugeChart} from './GaugeChart'\r\n\r\n\r\nexport const GaugeWidget: React.FC<WidgetProps<SupervisorWidgetConfigGauge>> = ({\r\n    config,\r\n    subscriptionData,\r\n}) => {\r\n    const getStatsConfig = useGetStatsConfig()\r\n    const audioAlert = useAtomValue(audioNotifyAtom)\r\n\r\n    const statConfig = useMemo(() => {\r\n        if (!config.subscription?.req) {\r\n            return undefined\r\n        }\r\n        return getStatsConfig('statsSingle', config.subscription.req[0])\r\n    }, [config.subscription?.req, getStatsConfig])\r\n\r\n\r\n    const gaugeValue = useMemo(() => {\r\n        if (!subscriptionData || !config.subscription) {\r\n            return undefined\r\n        }\r\n\r\n        const stat = config.subscription.req[0]\r\n        const value = subscriptionData.stats_totals?.[stat]\r\n        return Number(value ?? 0)\r\n    }, [config.subscription, subscriptionData])\r\n\r\n    useEffect(() => {\r\n        if (!config.warning_sound) {\r\n            return\r\n        }\r\n        const inverted = statConfig?.alertInverted || false\r\n        const value = gaugeValue || 0\r\n        const shouldNotify =\r\n            (!inverted && value >= config.alertThreshold) ||\r\n            (inverted && value <= config.alertThreshold)\r\n\r\n        if (!shouldNotify || !audioAlert) {\r\n            return\r\n        }\r\n\r\n        const {stop} = audioAlert.start()\r\n\r\n        return () => {\r\n            stop()\r\n        }\r\n    }, [audioAlert, config.alertThreshold, config.warning_sound, gaugeValue, statConfig?.alertInverted])\r\n\r\n    // const options: Highcharts.Options | undefined = useMemo(() => {\r\n    //     if (gaugeValue === undefined) {\r\n    //         return undefined\r\n    //     }\r\n    //\r\n    //     return gaugeChartOptions({\r\n    //         value: gaugeValue,\r\n    //         config,\r\n    //         inverted: statConfig?.alertInverted || false,\r\n    //         getFormattedValue: value => {\r\n    //             return formatStatValue(value, statConfig?.format)\r\n    //         },\r\n    //     })\r\n    // }, [config, gaugeValue, statConfig])\r\n\r\n    const isLoading = !subscriptionData\r\n    const noData = gaugeValue === undefined || !statConfig\r\n\r\n    return (\r\n        <WithNoData noData={noData} isLoading={isLoading} className=\"h-full\">\r\n            {/*<Chart options={options} />*/}\r\n            {!noData && (\r\n                <GaugeChart\r\n                    value={gaugeValue}\r\n                    alertThreshold={config.alertThreshold}\r\n                    maxThreshold={config.maxThreshold}\r\n                    warningThreshold={config.warningThreshold}\r\n                    inverted={statConfig.alertInverted || false}\r\n                    getFormattedValue={v => formatStatValue(v, statConfig.format)}\r\n                />\r\n            )}\r\n        </WithNoData>\r\n    )\r\n}\r\n","import type {CSSProperties} from 'react'\r\nimport React, {useMemo} from 'react'\r\n\r\nimport type {SupervisorWidgetConfigImage} from '@bpinc/lib-widgets-urls'\r\n\r\nimport type {WidgetProps} from '../../types'\r\n\r\n\r\nexport const ImageWidget: React.FC<WidgetProps<SupervisorWidgetConfigImage>> = ({\r\n    config,\r\n}) => {\r\n    const style = useMemo<CSSProperties>(() => ({\r\n        backgroundImage: `url(${config.imageUrl})`,\r\n        backgroundSize: config.style,\r\n    }), [config.imageUrl, config.style])\r\n\r\n    return (\r\n        <div\r\n            className=\"h-full bg-center bg-no-repeat\"\r\n            style={style}\r\n        />\r\n    )\r\n}\r\n\r\n","import React, {useEffect, useMemo} from 'react'\r\nimport {useAtomValue} from 'jotai'\r\nimport {isUndefined} from 'lodash-es'\r\n\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\nimport {WithNoData} from '@bpinc/lib-ui-elements'\r\nimport type {SupervisorWidgetConfigGauge} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {audioNotifyAtom} from '../../atoms'\r\nimport {formatStatValue} from '../../stats/helpers'\r\nimport {useGetStatsConfig} from '../../stats/useGetStatsConfig'\r\nimport type {WidgetProps} from '../../types'\r\n\r\n\r\nexport const SingleWidget: React.FC<WidgetProps<SupervisorWidgetConfigGauge>> = ({\r\n    config,\r\n    subscriptionData,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const getStatsConfig = useGetStatsConfig()\r\n    const audioAlert = useAtomValue(audioNotifyAtom)\r\n\r\n    const valueStatConfig = useMemo(() => {\r\n        if (!config.subscription?.req) {\r\n            return undefined\r\n        }\r\n        return getStatsConfig('statsSingle', config.subscription.req[0])\r\n    }, [config.subscription?.req, getStatsConfig])\r\n\r\n    const value = useMemo(() => {\r\n        if (!subscriptionData || !config.subscription?.req[0]) {\r\n            return undefined\r\n        }\r\n\r\n        const stat = config.subscription.req[0]\r\n        return subscriptionData.stats_totals?.[stat]\r\n    }, [config.subscription?.req, subscriptionData])\r\n\r\n    useEffect(() => {\r\n        if (!config.warning_sound || !value) {\r\n            return\r\n        }\r\n        const inverted = valueStatConfig?.alertInverted || false\r\n        const parsedValue = parseInt(value)\r\n        const shouldNotify =\r\n            (!inverted && parsedValue >= config.alertThreshold) ||\r\n            (inverted && parsedValue <= config.alertThreshold)\r\n\r\n        if (!shouldNotify || !audioAlert) {\r\n            return\r\n        }\r\n\r\n        const {stop} = audioAlert.start()\r\n\r\n        return () => {\r\n            stop()\r\n        }\r\n    }, [\r\n        audioAlert,\r\n        config.alertThreshold,\r\n        config.warning_sound,\r\n        value,\r\n        valueStatConfig?.alertInverted,\r\n    ])\r\n\r\n    const valueFormatted = useMemo(() => {\r\n        if (!value) {\r\n            return undefined\r\n        }\r\n\r\n        return formatStatValue(value, valueStatConfig?.format)\r\n    }, [value, valueStatConfig?.format])\r\n\r\n    const optValueSubscription = config.subscription?.req[1]\r\n    const optValueFormatted = useMemo(() => {\r\n        if (!subscriptionData || !optValueSubscription) {\r\n            return undefined\r\n        }\r\n\r\n        const statConfig = getStatsConfig('statsSingle', optValueSubscription)\r\n        return formatStatValue(\r\n            subscriptionData.stats_totals?.[optValueSubscription],\r\n            statConfig.format,\r\n        )\r\n    }, [getStatsConfig, optValueSubscription, subscriptionData])\r\n\r\n    const noData = isUndefined(value && optValueSubscription ? optValueSubscription : true)\r\n    const isLoading = !subscriptionData\r\n\r\n    return (\r\n        <div className=\"h-full w-full body-m text-primary-on-primary\">\r\n            <WithNoData\r\n                isLoading={isLoading}\r\n                noData={noData}\r\n                className={tcn('h-full', {'justify-start': !noData})}\r\n            >\r\n                <div className=\"h-full\">\r\n                    <svg\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        viewBox=\"0 0 200 100\"\r\n                    >\r\n                        <text\r\n                            x=\"100\"\r\n                            y={optValueFormatted ? '45' : '60'}\r\n                            fontSize=\"32\"\r\n                            textAnchor=\"middle\"\r\n                            className={tcn('fill-primary-850', {'fill-neutral-500': !valueFormatted})}\r\n                        >\r\n                            {valueFormatted || t.GLOBAL.no_available()}\r\n                        </text>\r\n                        {optValueSubscription && (\r\n                            <text\r\n                                x=\"100\"\r\n                                y=\"85\"\r\n                                fontSize=\"18\"\r\n                                textAnchor=\"middle\"\r\n                                className={tcn('fill-primary-850', {'fill-neutral-500': !optValueFormatted})}\r\n                            >\r\n                                {optValueFormatted || t.GLOBAL.no_available()}\r\n                            </text>\r\n                        )}\r\n                    </svg>\r\n                </div>\r\n            </WithNoData>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport type {SupervisorWidgetConfigText} from '@bpinc/lib-widgets-urls'\r\n\r\nimport type {WidgetProps} from '../../types'\r\n\r\n\r\nexport const TextWidget: React.FC<WidgetProps<SupervisorWidgetConfigText>> = ({\r\n    config,\r\n}) => {\r\n\r\n    return (\r\n        <div className=\"h-full overflow-y-auto whitespace-break-spaces body text-primary-on-primary\">\r\n            {config.text}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useMemo} from 'react'\r\n\r\nimport {type ECOption, type PieSeriesOption, Chart} from '@bpinc/lib-echarts'\r\nimport {WithNoData} from '@bpinc/lib-ui-elements'\r\nimport type {SupervisorWidgetConfigSummary} from '@bpinc/lib-widgets-urls'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport type {WidgetProps} from '../../types'\r\n\r\n\r\nexport const SummaryWidget: React.FC<WidgetProps<SupervisorWidgetConfigSummary>> = ({\r\n    config,\r\n    subscriptionData,\r\n}) => {\r\n    const {t} = useLocalizationState()\r\n    const summaryData = useMemo(() => {\r\n        if (!subscriptionData) {\r\n            return undefined\r\n        }\r\n\r\n        const summaryConfigId = config.subscription.req.columns.find(\r\n            c => c.statName === 'acd_state',\r\n        )?.id\r\n\r\n        if (!summaryConfigId) {\r\n            return undefined\r\n        }\r\n\r\n        const states = subscriptionData?.agent_grids?.[0].values?.map(\r\n            value => value[+summaryConfigId],\r\n        )\r\n\r\n        if (!states) {\r\n            return undefined\r\n        }\r\n\r\n        const keys = ['busy', 'ready', 'after_call_work', 'not_ready'] as const\r\n        const values = states.reduce<Record<(typeof keys)[number], number>>(\r\n            (acc, state) => {\r\n                const stateKey = keys.find(key => key === state)\r\n                if (stateKey) {\r\n                    acc[stateKey] = acc[stateKey] + 1\r\n                }\r\n                return acc\r\n            },\r\n        {\r\n            'busy': 0,\r\n            'ready': 0,\r\n            'after_call_work': 0,\r\n            'not_ready': 0,\r\n        })\r\n\r\n        return keys.map(key => ({\r\n            value: values[key],\r\n            name: t.HOME_SCREEN[`agent_state_${key}`](),\r\n        }))\r\n    }, [\r\n        config.subscription.req.columns,\r\n        subscriptionData,\r\n        t.HOME_SCREEN,\r\n    ])\r\n\r\n    const options = useMemo(() => {\r\n        const style = getComputedStyle(document.body)\r\n        const allEmpty = summaryData?.reduce<boolean>((acc, {value}) => acc && !value, true)\r\n        const data: PieSeriesOption['data'] = summaryData?.map(({name, value}) => ({\r\n            name,\r\n            value,\r\n            label: {\r\n                show: Boolean(value) || allEmpty,\r\n            },\r\n        }))\r\n\r\n        return {\r\n            legend: {\r\n                bottom: 0,\r\n                orient: 'horizontal',\r\n                left: 0,\r\n                height: 36,\r\n                type: 'scroll',\r\n                itemGap: 16,\r\n                itemWidth: 12,\r\n                itemHeight: 12,\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'pie',\r\n                    left: 'center',\r\n                    top: 10,\r\n                    bottom: 36,\r\n                    width: '100%',\r\n                    radius: ['50%', '85%'],\r\n                    avoidLabelOverlap: true,\r\n                    label: {\r\n                        minMargin: 10,\r\n                        formatter: ({value, name}) => `${name}: ${value}`,\r\n                    },\r\n                    labelLine: {\r\n                        showAbove: true,\r\n                        maxSurfaceAngle: 0,\r\n                    },\r\n                    data,\r\n                },\r\n            ],\r\n            color: [\r\n                style.getPropertyValue('--various-purple'),\r\n                style.getPropertyValue('--primary-600'),\r\n                style.getPropertyValue('--various-blue'),\r\n                style.getPropertyValue('--various-orange'),\r\n            ],\r\n            textStyle: {\r\n                fontFamily: '\"Noto Sans\", ui-sans-serif, system-ui, sans-serif',\r\n                fontSize: '12px',\r\n                fontWeight: 400,\r\n                lineHeight: 18,\r\n            },\r\n        } satisfies ECOption\r\n    }, [summaryData])\r\n\r\n    return (\r\n        <WithNoData noData={!summaryData} isLoading={!subscriptionData}>\r\n            <Chart options={options} />\r\n        </WithNoData>\r\n    )\r\n}\r\n","import type {FC} from 'react'\r\nimport React, {useMemo} from 'react'\r\n\r\nimport type {ECOption} from '@bpinc/lib-echarts'\r\nimport {Chart} from '@bpinc/lib-echarts'\r\nimport type {KVArray} from '@bpinc/lib-transport-conversion'\r\nimport {convertKVArray} from '@bpinc/lib-transport-conversion'\r\nimport {WithNoData} from '@bpinc/lib-ui-elements'\r\nimport type {SupervisorWidgetConfigDispositions} from '@bpinc/lib-widgets-urls'\r\n\r\nimport type {WidgetProps} from '../../types'\r\n\r\n\r\ntype DispositionsData = KVArray<DispositionItem>\r\n\r\ntype DispositionItem = {\r\n    count: number\r\n    name: string\r\n}\r\nexport const DispositionsWidget: FC<WidgetProps<SupervisorWidgetConfigDispositions>> = ({\r\n    config,\r\n    subscriptionData,\r\n}) => {\r\n    const dispositionsData = useMemo(() => {\r\n        if (!subscriptionData) {\r\n            return undefined\r\n        }\r\n\r\n        const dispositionsSubscriptionConfig =\r\n            config.subscription?.req.columns.find(\r\n                c => c.statName === 'top_dispositions_per_day',\r\n            )\r\n\r\n        if (!dispositionsSubscriptionConfig?.id) {\r\n            return undefined\r\n        }\r\n\r\n        const stringifiedData =\r\n            subscriptionData?.agent_grids?.[0].values?.[0]?.[\r\n                +dispositionsSubscriptionConfig.id\r\n            ]\r\n\r\n        if (!stringifiedData) {\r\n            return undefined\r\n        }\r\n\r\n        try {\r\n            const parsedData: DispositionsData = JSON.parse(stringifiedData)\r\n            return convertKVArray(parsedData, (item: DispositionItem) => ({\r\n                name: item.name,\r\n                value: Number(item.count),\r\n            }))\r\n        } catch (error) {\r\n            return undefined\r\n        }\r\n    }, [config.subscription?.req.columns, subscriptionData])\r\n\r\n    const options = useMemo(() => {\r\n        if (!dispositionsData?.length) {\r\n            return undefined\r\n        }\r\n\r\n        const style = getComputedStyle(document.body)\r\n\r\n        return {\r\n            grid: {\r\n                left: 100,\r\n                right: '15%',\r\n            },\r\n            xAxis: {\r\n                type: 'value',\r\n                axisLine: {\r\n                    show: false,\r\n                },\r\n                axisTick: {\r\n                    show: false,\r\n                },\r\n                splitLine: {\r\n                    show: false,\r\n                },\r\n                axisLabel: {\r\n                    show: false,\r\n                },\r\n            },\r\n            yAxis: {\r\n                type: 'category',\r\n                inverse: true,\r\n                data: dispositionsData.map(d => d.name),\r\n                axisLabel: {\r\n                    margin: 10,\r\n                    fontWeight: 600,\r\n                    overflow: 'break',\r\n                    width: 100,\r\n                    lineHeight: 18,\r\n                },\r\n            },\r\n            series: {\r\n                type: 'bar',\r\n                data: dispositionsData.map(d => ({\r\n                    name: d.name,\r\n                    value: d.value,\r\n                })),\r\n                barWidth: '70%',\r\n                label: {\r\n                    show: true,\r\n                    position: 'right',\r\n                },\r\n            },\r\n            color: [style.getPropertyValue('--various-blue')],\r\n            textStyle: {\r\n                fontFamily: '\"Noto Sans\", ui-sans-serif, system-ui, sans-serif',\r\n                fontSize: 12,\r\n                fontWeight: 400,\r\n                lineHeight: 18,\r\n            },\r\n        } satisfies ECOption\r\n    }, [dispositionsData])\r\n\r\n    return (\r\n        <WithNoData noData={!options} isLoading={!subscriptionData}>\r\n            {options && <Chart options={options} />}\r\n        </WithNoData>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {BpWallboard} from '../bp-wallboard'\r\nimport {AudioAlert} from './AudioAlert'\r\nimport {useWidgetsSubscriptionQuery} from './queries'\r\nimport type {Size} from './types'\r\nimport {useCreateEmptyWidget} from './useCreateEmptyWidget'\r\nimport {useOpenWidgetSettings} from './useOpenWidgetSettings'\r\nimport {EditWidgetResolver, ViewWidgetResolver} from './widgets'\r\n\r\n\r\ntype SupervisorWallboardProps = {\r\n    widgets: SupervisorWidget[]\r\n    editMode: boolean\r\n    updateWidget: (widget: SupervisorWidget) => void\r\n    addWidget: (widget: SupervisorWidget) => void\r\n    removeWidget: (widget: SupervisorWidget) => void\r\n    minCardSize: Size\r\n    gridSize: Size\r\n}\r\n\r\nexport const SupervisorWallboard: React.FC<SupervisorWallboardProps> = ({\r\n    editMode,\r\n    widgets,\r\n    updateWidget,\r\n    removeWidget,\r\n    minCardSize,\r\n    gridSize,\r\n    addWidget,\r\n}) => {\r\n    const [cellSize, setCellSize] = useState<Size>({width: 0, height: 0})\r\n    const {data: subscriptionData} = useWidgetsSubscriptionQuery(widgets)\r\n    const openSettings = useOpenWidgetSettings({updateWidget})\r\n    const createEmptyWidget = useCreateEmptyWidget({addWidget, minCardSize, openSettings})\r\n\r\n    return (\r\n        <>\r\n            <BpWallboard\r\n                editMode={editMode}\r\n                subscriptionData={subscriptionData}\r\n                createEmptyWidget={createEmptyWidget}\r\n                widgets={widgets}\r\n                cellSize={cellSize}\r\n                setCellSize={setCellSize}\r\n                minCardSize={minCardSize}\r\n                gridSize={gridSize}\r\n                WidgetResolverEdit={EditWidgetResolver}\r\n                WidgetResolverView={ViewWidgetResolver}\r\n                openSettings={openSettings}\r\n                removeWidget={removeWidget}\r\n                updateWidget={updateWidget}\r\n            />\r\n            <AudioAlert />\r\n        </>\r\n    )\r\n}\r\n\r\n","import {useQuery, useQueryClient} from '@tanstack/react-query'\r\n\r\nimport {MS_IN_SECOND} from '@bpinc/lib-helpers'\r\nimport type {SupervisorWidget} from '@bpinc/lib-widgets-urls'\r\nimport {SupervisorWidgetsApiServices} from '@bpinc/lib-widgets-urls'\r\n\r\nimport {getWidgetsSubscriptionData} from '../selectors'\r\nimport {queryKey} from './query-keys'\r\n\r\n\r\nexport function useWidgetsSubscriptionQuery(widgets: SupervisorWidget[]) {\r\n    // Get subscription data from widgets\r\n    const subscriptionData = getWidgetsSubscriptionData(widgets)\r\n    const queryClient = useQueryClient()\r\n\r\n    // Create subscription\r\n    const {data: resubscribed, isRefetching} = useQuery({\r\n        queryKey: queryKey.subscribe(subscriptionData),\r\n        queryFn: async () => {\r\n            // Cancel previous subscription queries\r\n            await queryClient.cancelQueries({queryKey: queryKey.subscribe()})\r\n            // Clear previous subscription data\r\n            await queryClient.resetQueries({queryKey: queryKey.subscribe_data()})\r\n            // Delete previous subscription\r\n            await SupervisorWidgetsApiServices.deleteSupervisorWidgetsSubscription()\r\n            // Create new subscription\r\n            await SupervisorWidgetsApiServices.createSupervisorWidgetsSubscription({requestBody: subscriptionData})\r\n            return true\r\n        },\r\n        gcTime: MS_IN_SECOND * 5,\r\n        staleTime: MS_IN_SECOND * 5,\r\n        // Refetch only if subscription data exists\r\n        enabled: !!Object.keys(subscriptionData).length,\r\n    })\r\n\r\n    // Get subscription data\r\n    return useQuery({\r\n        queryKey: queryKey.subscribe_data(),\r\n        queryFn: SupervisorWidgetsApiServices.getSupervisorWidgetsSubscriptionData,\r\n        // Refetch every 5 seconds\r\n        refetchInterval: MS_IN_SECOND * 5,\r\n        retry(failureCount) {\r\n            if (failureCount > 2) {\r\n                queryClient.invalidateQueries({queryKey: queryKey.subscribe(subscriptionData)})\r\n                return false\r\n            }\r\n\r\n            return true\r\n        },\r\n        // Refetch only if subscription was created\r\n        enabled: !!resubscribed && !isRefetching,\r\n    })\r\n}\r\n\r\n","import {useCallback} from 'react'\r\n\r\nimport {uuid} from '@bpinc/lib-uuid'\r\nimport type {SupervisorWidget, SupervisorWidgetConfigEmpty} from '@bpinc/lib-widgets-urls'\r\n\r\nimport type {Size} from './types'\r\n\r\n\r\ntype Prams = {\r\n    addWidget: (widget: SupervisorWidget) => void\r\n    minCardSize: Size\r\n    openSettings: (widget: SupervisorWidget) => void\r\n}\r\n\r\nexport function useCreateEmptyWidget({addWidget, minCardSize, openSettings}: Prams) {\r\n\r\n    return useCallback(({start, end}: {\r\n        start: {x: number; y: number}\r\n        end: {x: number; y: number}\r\n    }) => {\r\n        if (!start || !end) {\r\n            return\r\n        }\r\n\r\n        const id = uuid()\r\n        const widget: SupervisorWidgetConfigEmpty = {\r\n            id,\r\n            type: 'empty',\r\n            title: 'New Card',\r\n            x: start.x,\r\n            y: start.y,\r\n            width: Math.max(end.x - start.x + 1, minCardSize.width),\r\n            height: Math.max(end.y - start.y + 1, minCardSize.height),\r\n            show_settings: true,\r\n        }\r\n\r\n        addWidget(widget)\r\n        openSettings(widget)\r\n    }, [addWidget, openSettings, minCardSize])\r\n}\r\n","import React from 'react'\r\n\r\nimport {useBrowserTabMetaInfo} from '@bpinc/ad-current-tab-data-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {isHomePageAgentConfig, isHomePageSupervisorConfig} from '@bpinc/home-page-state-types'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport {AgentWallboard} from './agent'\r\nimport {Header} from './Header'\r\nimport {useHomePageUIState} from './HomePageUIContextProvider'\r\nimport {SupervisorWallboard} from './supervisor'\r\n\r\n\r\nconst GRID_SIZE = {\r\n    width: 12,\r\n    height: 12,\r\n}\r\n\r\nconst MIN_CARD_SIZE = {\r\n    width: 2,\r\n    height: 2,\r\n}\r\n\r\nexport const HomePageContent: React.FC = React.memo(() => {\r\n    const {\r\n        activeConfig,\r\n        updateWidget,\r\n        mode,\r\n        addWidget,\r\n        openRemoveWidget,\r\n    } = useHomePageUIState(['activeConfig', 'updateWidget', 'mode', 'addWidget', 'openRemoveWidget'])\r\n    const isSupervisor = useSessionState('isSupervisor')\r\n    const isEditMode = mode === 'edit'\r\n    const {app} = useBrowserTabMetaInfo()\r\n\r\n    return (\r\n        <>\r\n            {isSupervisor && <Header mode={mode} />}\r\n            <section\r\n                className={tcn(\r\n                    'flex flex-auto shrink-0 flex-col overflow-hidden py-2 pl-3 pr-5 bg-secondary-container-variant1',\r\n                    {\r\n                        'pr-3': app === 'home-page',\r\n                    },\r\n                )}\r\n            >\r\n                {isHomePageAgentConfig(activeConfig) ? (\r\n                    <AgentWallboard\r\n                        widgets={activeConfig.widgets}\r\n                        minCardSize={MIN_CARD_SIZE}\r\n                        gridSize={GRID_SIZE}\r\n                        editMode={isEditMode}\r\n                        removeWidget={openRemoveWidget}\r\n                        updateWidget={updateWidget}\r\n                    />\r\n                ) : isHomePageSupervisorConfig(activeConfig) ? (\r\n                    <SupervisorWallboard\r\n                        widgets={activeConfig.widgets}\r\n                        editMode={isEditMode}\r\n                        updateWidget={updateWidget}\r\n                        addWidget={addWidget}\r\n                        removeWidget={openRemoveWidget}\r\n                        minCardSize={MIN_CARD_SIZE}\r\n                        gridSize={GRID_SIZE}\r\n                    />\r\n                ) : null}\r\n            </section>\r\n        </>\r\n    )\r\n})\r\n","import React, {useRef} from 'react'\r\nimport {TabsList, TabsTrigger} from '@servicepattern/ui'\r\n\r\nimport {useBrowserTabMetaInfo} from '@bpinc/ad-current-tab-data-context'\r\nimport {useHomePageState} from '@bpinc/home-page-state-context'\r\nimport {\r\n    type MoreOption,\r\n    ButtonDropdown,\r\n    ButtonIcon,\r\n    IconPlus24,\r\n    IconTabConfigure,\r\n} from '@bpinc/lib-jskit-ui'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useHomePageUIState} from './HomePageUIContextProvider'\r\nimport type {HomePageTab} from './useHomePageTabs'\r\n\r\n\r\ntype TabsHeaderProps = {\r\n    activeTabId: string\r\n    tabs: HomePageTab[]\r\n    onTabClose: (tabId: string) => void\r\n    tabOptions: MoreOption[]\r\n}\r\n\r\nexport const TabsHeader: React.FC<TabsHeaderProps> = ({activeTabId, tabs, onTabClose, tabOptions}) => {\r\n    const {app} = useBrowserTabMetaInfo()\r\n    const appLink = useHomePageUIState('appLink')\r\n    const {t} = useLocalizationState()\r\n\r\n    const controlsRef = useRef<HTMLDivElement>(null)\r\n\r\n    const hasMultipleConfigs = useHomePageState(s => s.configs.length > 1)\r\n\r\n    return (\r\n        <div\r\n            className=\"flex justify-between gap-1 border-b pl-6 pr-8 bg-primary-background border-default\"\r\n        >\r\n            <div className=\"flex justify-start gap-1\">\r\n                <TabsList className=\"-mb-px border-b-transparent\">\r\n                    {tabs.map(tab => (\r\n                        <TabsTrigger\r\n                            key={tab.id}\r\n                            value={tab.id}\r\n                            triggerClassName=\"py-2 h-full\"\r\n                            isSelected={activeTabId === tab.id}\r\n                            closable={tab.closeable}\r\n                            onClose={() => {\r\n                                onTabClose(tab.id)\r\n                            }}\r\n                        >\r\n                            {tab.title}\r\n                        </TabsTrigger>\r\n                    ))}\r\n                </TabsList>\r\n\r\n                {hasMultipleConfigs && (\r\n                    <div className=\"mt-px shrink-0 self-center\" ref={controlsRef}>\r\n                        <ButtonDropdown\r\n                            align=\"start\"\r\n                            withChevron={false}\r\n                            className=\"px-1\"\r\n                            modal={false}\r\n                            options={\r\n                                <>\r\n                                    {\r\n                                        tabOptions.map(({key, content: optionContent, onSelect}) => (\r\n                                            <ButtonDropdown.Item key={key} onClick={e => onSelect?.(e, key)}>\r\n                                                {optionContent}\r\n                                            </ButtonDropdown.Item>\r\n                                        ))\r\n                                    }\r\n                                </>\r\n                            }\r\n                            button={{variant: 'ghost', size: 'sm'}}\r\n                        >\r\n                            <IconPlus24 />\r\n                        </ButtonDropdown>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"flex border-l border-default\">\r\n                {app !== 'home-page' && (\r\n                    <a\r\n                        href={appLink}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        <ButtonIcon size=\"40\" tooltip={t.HOME_SCREEN.full_screen()}>\r\n                            <IconTabConfigure />\r\n                        </ButtonIcon>\r\n                    </a>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {TabsContent, TabsRoot} from '@servicepattern/ui'\r\n\r\nimport {isUrl} from '@bpinc/lib-helpers'\r\nimport {Loader} from '@bpinc/lib-jskit-ui'\r\nimport {Iframe} from '@bpinc/lib-ui-elements'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {HomePageContent} from './HomePageContent'\r\nimport {useHomePageUIState} from './HomePageUIContextProvider'\r\nimport {TabsHeader} from './TabsHeader'\r\nimport {useHomePageTabs} from './useHomePageTabs'\r\n\r\n\r\nexport const HomePageTabs: React.FC = React.memo(() => {\r\n    const {t} = useLocalizationState()\r\n    const {isLoading, businessUserMode, mode} = useHomePageUIState(['isLoading', 'businessUserMode', 'mode'])\r\n    const {tabs, activeTabId, onTabClose, tabOptions, onTabChange} = useHomePageTabs()\r\n\r\n    // https://docs.google.com/document/d/1W3OBg15UsDyCtNY1E2Z261Vnoi0E9qH_Sov0N7r7ad8/edit#bookmark=id.urusx1yirscg\r\n    if (businessUserMode && tabs.length === 0) {\r\n        return (\r\n            <div>\r\n                <h2 className=\"m-4 flex-1 truncate heading-l\">{t.HOME_SCREEN.home_page_welcome()}</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TabsRoot className=\"flex flex-auto flex-col\" value={activeTabId} onValueChange={onTabChange}>\r\n                {\r\n                    mode === 'supervisor' && (\r\n                        <TabsHeader\r\n                            activeTabId={activeTabId}\r\n                            tabs={tabs}\r\n                            tabOptions={tabOptions}\r\n                            onTabClose={onTabClose}\r\n                        />\r\n                    )\r\n                }\r\n                <TabsContent className=\"flex flex-auto flex-col\" value={activeTabId}>\r\n                    {isUrl(activeTabId)\r\n                        ? <Iframe src={activeTabId} className=\"flex-auto border-none\" />\r\n                        : <HomePageContent />\r\n                    }\r\n                </TabsContent>\r\n                {isLoading && <Loader size=\"56\" className=\"z-[100]\" />}\r\n            </TabsRoot>\r\n        </>\r\n    )\r\n})\r\n","import {useCallback, useEffect, useMemo, useState} from 'react'\r\nimport {useSearchParams} from 'react-router-dom'\r\n\r\nimport {useLocalStorageForState} from '@bpinc/ad-local-settings-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\nimport {useHomePageState} from '@bpinc/home-page-state-context'\r\nimport type {MoreOption} from '@bpinc/lib-jskit-ui'\r\nimport {truthy} from '@bpinc/lib-types-helpers'\r\nimport {useLocalizationState} from '@bpinc/state-localization-context'\r\n\r\nimport {useHomePageUIState} from './HomePageUIContextProvider'\r\n\r\n\r\nexport type HomePageTab = {\r\n    id: string\r\n    title: string\r\n    closeable?: boolean\r\n}\r\n\r\nexport function useHomePageTabs() {\r\n    const {t} = useLocalizationState()\r\n    const [searchParams] = useSearchParams()\r\n    const nonCallCasesUrls = useSessionState('nonCallCasesUrls')\r\n    const configs = useHomePageState('configs')\r\n    const {activeConfig, setActiveConfig, businessUserMode} = useHomePageUIState(['setActiveConfig', 'activeConfig', 'businessUserMode'])\r\n    const [openTabsIds, setOpenTabsIds] = useState<string[]>([])\r\n    const defaultId = searchParams.get('configId') || activeConfig?.id || 'home'\r\n    const [activeTabId, setActiveTabId] = useState<string>(() => defaultId)\r\n\r\n    useLocalStorageForState(\r\n        openTabsIds,\r\n        'homePageOpenTabsIds',\r\n        setOpenTabsIds,\r\n        [],\r\n    )\r\n\r\n    useLocalStorageForState(\r\n        activeTabId,\r\n        'homePageActiveTabId',\r\n        tabId => {\r\n            if (searchParams.get('configId')) {\r\n                return\r\n            }\r\n            setActiveTabId(tabId)\r\n        },\r\n        defaultId,\r\n    )\r\n\r\n    const allTabs = useMemo<HomePageTab[]>(\r\n        function() {\r\n            if (businessUserMode) {\r\n                return truthy([\r\n                    ...(nonCallCasesUrls?.map(url => ({\r\n                        id: url,\r\n                        title: t.HOME_SCREEN.home_page_welcome(),\r\n                        closeable: false,\r\n                    })) ?? []),\r\n                ])\r\n            }\r\n\r\n            const defaultConfig = configs.find(c => c.isDefault)\r\n            const globalConfigs = configs.filter(c => !c.isDefault && c.isGlobal)\r\n            const restConfigs = configs.filter(c => !c.isDefault && !c.isGlobal)\r\n\r\n            return truthy([\r\n                defaultConfig ? {\r\n                    id: defaultConfig.id || 'home',\r\n                    title: t.HOME_SCREEN.home_tab(),\r\n                    closeable: false,\r\n                } : undefined,\r\n                ...(nonCallCasesUrls?.map(url => ({\r\n                    id: url,\r\n                    title: t.HOME_SCREEN.home_page_welcome(),\r\n                    closeable: false,\r\n                })) ?? []),\r\n                ...(globalConfigs.map(c => ({\r\n                    id: c.id,\r\n                    title: c.name,\r\n                    closeable: false,\r\n                }))),\r\n                ...(restConfigs.map(c => ({\r\n                    id: c.id,\r\n                    title: c.name,\r\n                    closeable: true,\r\n                }))),\r\n            ])\r\n        },\r\n        [configs, nonCallCasesUrls, t.HOME_SCREEN, businessUserMode],\r\n    )\r\n\r\n    const tabs = useMemo(() => {\r\n        const nonClosable = allTabs.filter(c => !c.closeable)\r\n        const openTabs = truthy(openTabsIds.map(tabId => allTabs.find(c => c.id === tabId && c.closeable)))\r\n\r\n        return [...nonClosable, ...openTabs]\r\n    }, [allTabs, openTabsIds])\r\n\r\n    const tabOptions = useMemo<MoreOption[]>(() => allTabs\r\n        .filter(tab => tab.closeable)\r\n        .map(tab => ({\r\n            key: tab.id,\r\n            content: tab.title,\r\n            onSelect: () => {\r\n                setOpenTabsIds(currentTabs => {\r\n                    setActiveTabId(tab.id)\r\n                    if (currentTabs.includes(tab.id)) {\r\n                        return currentTabs\r\n                    }\r\n                    return [...currentTabs, tab.id]\r\n                })\r\n            },\r\n        }),\r\n        ), [allTabs])\r\n\r\n    const onTabChange = useCallback((tabId: string) => {\r\n        setActiveTabId(tabId)\r\n    }, [])\r\n\r\n    const onTabClose = useCallback((tabId: string) => {\r\n        setOpenTabsIds(currentTabs => currentTabs.filter(id => id !== tabId))\r\n        if (activeTabId !== tabId) {\r\n            return\r\n        }\r\n\r\n        const previousTab = tabs.find((_, i) => tabs[i + 1]?.id === tabId)\r\n        if (!previousTab) {\r\n            return\r\n        }\r\n\r\n        onTabChange(previousTab.id)\r\n    }, [activeTabId, onTabChange, tabs])\r\n\r\n    useEffect(() => {\r\n        if (!configs.length || nonCallCasesUrls?.includes(activeTabId)) {\r\n            return\r\n        }\r\n        setActiveConfig(configs.find(c => activeTabId === 'home'\r\n            ? c.isDefault\r\n            : c.id === activeTabId,\r\n        ))\r\n    }, [activeTabId, configs, nonCallCasesUrls, setActiveConfig])\r\n\r\n    useEffect(() => {\r\n        if (!configs.length || allTabs?.some(tab => tab.id === activeTabId)) {\r\n            return\r\n        }\r\n        if (!allTabs || !allTabs.length) {\r\n            return\r\n        }\r\n        setActiveTabId(allTabs[0].id)\r\n    }, [activeTabId, allTabs, configs.length])\r\n\r\n    useEffect(() => {\r\n        if (!activeConfig || activeConfig.isDefault || activeConfig.isGlobal) {\r\n            return\r\n        }\r\n        setOpenTabsIds(currentTabs => {\r\n            if (currentTabs.includes(activeConfig.id)) {\r\n                return currentTabs\r\n            }\r\n            return [...currentTabs, activeConfig.id]\r\n        })\r\n    }, [activeConfig])\r\n\r\n    return {tabs, activeTabId, onTabChange, tabOptions, onTabClose}\r\n}\r\n","import React from 'react'\r\n\r\nimport {HomePageTabs} from './HomePageTabs'\r\nimport {HomePageUIContextProvider} from './HomePageUIContextProvider'\r\n\r\n\r\nexport const HomePageBase: React.FC = React.memo(() => {\r\n    return (\r\n        <div\r\n            data-testid=\"home-page\"\r\n            className=\"flex flex-auto flex-col overflow-hidden\"\r\n        >\r\n            <HomePageUIContextProvider>\r\n                <HomePageTabs />\r\n            </HomePageUIContextProvider>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nimport {useUIState} from '@bpinc/ad-ui-context'\r\nimport {tcn} from '@bpinc/lib-tailwind-classnames'\r\n\r\nimport {HomePageBase} from '../components/HomePageBase'\r\nimport {useAppConfigCheckers} from './hooks/useAppConfigChecker'\r\n\r\n\r\nexport const App: React.FC = () => {\r\n    const {isTabNavHighlighted} = useUIState()\r\n    useAppConfigCheckers()\r\n\r\n    return (\r\n        <div\r\n            className={tcn('flex h-full w-full flex-col', {\r\n                '[&_*:focus-within]:!outline-none [&_*:focus]:!outline-none': !isTabNavHighlighted,\r\n                '[&_*:focus-within]:!outline-0 [&_*:focus]:!outline-0': !isTabNavHighlighted,\r\n            })}\r\n        >\r\n            <HomePageBase />\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect} from 'react'\r\n\r\nimport {useAppConfigStateMethods} from '@bpinc/ad-app-config-state-context'\r\nimport {useSessionState} from '@bpinc/ad-session-context'\r\n\r\n\r\nexport function useAppConfigCheckers() {\r\n    const {checkWhetherToRenderReportProblemButton} = useAppConfigStateMethods()\r\n    const {isLoggedIn, tenantId} = useSessionState()\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn && tenantId) {\r\n\r\n            checkWhetherToRenderReportProblemButton(tenantId)\r\n        }\r\n    }, [checkWhetherToRenderReportProblemButton, isLoggedIn, tenantId])\r\n\r\n}\r\n","import React from 'react'\r\n\r\nimport {createPlatformSpecific} from '@bpinc/ad-platform-specific-web-impl'\r\nimport {UIContextProvider} from '@bpinc/ad-ui-context'\r\nimport {AuthorizationModule} from '@bpinc/lib-authorization-module'\r\nimport {createProviderWrapper} from '@bpinc/lib-helpers'\r\nimport {Modals} from '@bpinc/lib-modals-ui'\r\n\r\nimport {HomePageQueryClientProvider} from '../components/HomePageQueryClientProvider'\r\nimport {App} from './App'\r\n\r\n\r\nconst HomePageProviders = createProviderWrapper([\r\n    UIContextProvider,\r\n])\r\n\r\nexport const FullScreenHomePageApp: React.FC = () => {\r\n    return (\r\n        <AuthorizationModule\r\n            platformSpecific={createPlatformSpecific('home-page')}\r\n            app=\"home-page\"\r\n            appRemoteName=\"homePage\"\r\n        >\r\n            {() => (\r\n                <HomePageProviders>\r\n                    <HomePageQueryClientProvider>\r\n                        <App />\r\n                        <Modals />\r\n                    </HomePageQueryClientProvider>\r\n                </HomePageProviders>\r\n            )}\r\n        </AuthorizationModule>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {HomePageBase} from './HomePageBase'\r\nimport {HomePageQueryClientProvider} from './HomePageQueryClientProvider'\r\n\r\n\r\nexport const HomePage: React.FC = React.memo(() => {\r\n    return (\r\n        <HomePageQueryClientProvider>\r\n            <HomePageBase />\r\n        </HomePageQueryClientProvider>\r\n    )\r\n})\r\n"],"names":["tcn","classnames","twMerge","cn","linkUrl","URL","searchParams","append","location","hostname","CURRENT_DOMAIN_AUTH_URL","toString","DOMAIN_AUTHORIZATION_MODAL_ID","linkClass","EXTENSION_ID","EXTENSION_ID_FF","PLUGIN_ID","ModalContent","isExtAvailable","install","INSTALLATION_PROCESS","useLocalizationState","t","useInstallationMethods","installChromeExtension","installFirefoxExtension","installBPClientPlugin","useEffect","chromeLink","document","getElementById","firefoxLink","pluginLink","addEventListener","removeEventListener","content","i18n","install_updateHeader","platformInfo","install_installHeader","install_installHeaderChrome","install_installHeaderFirefox","div","dangerouslySetInnerHTML","__html","browserName","serverOrigin","useSessionState","isChrome","isFirefox","isSafari","linkHref","URL_EXTENSION_INSTALLER_CHROME","URL_EXTENSION_INSTALLER_FIREFOX","URL_MAC_PLUGIN","span","bp_client_old_extension_version","br","bp_client_update_extension_part1","a","href","rel","target","bp_client_update_extension_text","bp_client_update_extension_part2","reloadPage","reload","PHONE_OUT_OF_SERVICE_ERROR_DELAY","useSystemNotifications","bpClientConnector","useModalsStateMethods","openModal","closeModal","onShowDomainAuthorizationDialog","onHideDomainAuthorizationDialog","showOfflineAlert","offlineErrorMessages","isOffline","useBpClientStateConnector","useEvent","id","title","bp_client_not_authorized_header","body","bp_client_not_authorized_message_part1","ERROR_MESSAGES","domainAuthentificationErrorAnchor","bp_client_not_authorized_message_part2","actions","SmButton","onClick","closeThisModal","WINDOW_POPUP_TITLES_AND_MESSAGES","window_buttonOk","dispenser","subscribe","unsubscribe","isExtensionAvailable","useBpClientState","onInstallationRequired","window_title_warning","ok","useInstallationRequiredPopup","useNotificationsState","showNotification","useOfflineStateMethods","setShowOfflineAlert","useOfflineStateDataShowOfflineAlert","useOfflineErrorMessages","useIsOffline","type","Notifications","closable","duration","onHide","onShowExtensionIsOldDialog","useOutdatedBrowserExtensionPopup","hideNotificationById","isClientOutdated","useAppConfigState","isLoggedIn","GLOBAL","updateNotification","message","reload_confirm_new_msg_part1","reload_confirm_action_button_text","reload_confirm_new_msg_part2","useOutdatedClientNotification","sessionStateConnector","useSessionStateConnector","isHelperAppInstanceCreated","phoneType","onUpdateCapabilities","caps","canDial","bpLogger","window_messages_virtual_phone_not_available","window_messages_phone_not_available","window_messages_helper_app_not_available","showDelay","onServerError","source","errorCode","phoneIsNotRegistered","onThreePCCServerGone","window_messages_3pcc_server_connectionLost","onThreePCCServerReady","usePhoneOutOfServiceNotification","sipServer","prevSipServerRef","usePreviousValueRef","current","useSipServerDisconnectedNotification","startTime","useRef","checkConnectionSpeed","Date","getTime","fetch","method","cache","catch","e","console","error","finally","slow_connection","interval","setInterval","clearInterval","useSlowNetworkNotification","isDomainAuthorized","domain_authentication_error_part1","domain_authentication_error_part2","useUnauthorizedDomainNotification","AuthorizedConnectorsConsumers","baseConnectors","authorizedConnectors","children","ForceLogout","forceLogoutInfo","useSessionStateMethods","closeForceLogout","useFormatting","formatFullName","assertDefined","loggedOutBy","firstName","lastName","loggedOutTime","formatDate","timestamp","SmSegment","padded","className","Modal","isOpen","size","aria-describedby","data-testid","window_title_information","p","incomingErrorMessageCodes","sessionWasOverwritten","forcedLogout","account_has_been_disabled","forceLogoutReason","getContent","primary","UnauthorizedUI","tabRole","useCurrentTabRole","authChecked","showLoginDialog","offerForceLogin","showAppLoader","showLoginPage","showForceLogout","showForceLogin","Loader","active","color","LoginPage","ForceLogin","AuthorizationUIRouter","React","AuthorizedProviders","BaseConnectorsConsumers","BaseConnectorsConsumer","TopLevelProviders","app","platformSpecific","BaseProviders","Tooltip","NotificationsStateProvider","AuthorizationModule","appRemoteName","AppStyleSelector","DEFAULT_CACHE_TIME","MS_IN_HOUR","queryClient","QueryClient","defaultOptions","queries","gcTime","HomePageQueryClientProvider","QueryClientProvider","client","ReactQueryDevtools","initialIsOpen","buttonPosition","MY_STATS_FIELD_MAP","MY_STATS_DETAILS_FIELDS","map","m","MY_TEAM_CONFIGURABLE_COLUMNS","SERVER_MY_TEAM_ITEM_FIELDS","MY_SERVICES_DETAILS_CONFIGURABLE_FIELDS","AGENT_WIDGET_TYPES","isAgentWidget","widget","includes","isHomePageAgentConfig","config","isDefault","makeLinkToHomePageApp","configId","userId","teamId","edit","url","set","String","isFlippingWidget","headerStyles","tv","base","tw","cardStyles","variants","activeBorder","true","isDragging","cardBodyStyles","cardWrapperStyles","cardControlsStyles","isBottom","forceShow","forceHide","borderContainerStyles","resizeHandleStyles","visible","position","left","right","top","bottom","topRight","bottomRight","bottomLeft","topLeft","CardEditHeader","header","getCardPosition","cellSize","x","width","y","height","useCardLayout","minCardSize","minWidth","calculateSize","minHeight","cellNumbers","getInitialDirection","initialPosition","dragManager","DragManager","direction","undefined","dropzoneElement","dropPosition","prevDropPosition","gridPosition","gridElement","dropzoneVisible","getDirection","this","setDirection","resetDirection","cardPosition","getDropPosition","getPrevDropPosition","setDropPosition","resetDropPosition","highlightDropzone","updateDropzonePosition","showDropzone","getDropzoneElement","style","transform","transition","hideDropzone","result","getGridElement","querySelector","HTMLElement","getGridPosition","updateGridPosition","getBoundingClientRect","getCellElementByPosiion","partial","getElementByPosition","isCell","element","dataset","card","isDesiredElement","elementsFromPoint","find","cell","topLeftDirections","topRightDirections","bottomLeftDirections","bottomRightDirections","getCellPosition","Number","isNaN","useEnoughRoomChecker","widgets","gridSize","newCard","currentWidgetId","newCardLeft","newCardRight","newCardTop","newCardBottom","widgetConfigs","i","length","existingCard","existingCardLeft","existingCardRight","existingCardTop","existingCardBottom","DIRECTION_CHANGE_THRESHOLD","useOnDrag","setDragging","hasEnoughRoom","event","dragData","deltaX","Math","abs","deltaY","detectDragging","prevDirection","verticalDirectionDetected","horizontalDirectionDetected","detectDirection","cardCoordinates","lastX","lastY","node","clientWidth","clientHeight","getCardCornerPositions","cellPosition","leftTopCell","cardSize","cardId","rightBottomCell","prevPosition","NaN","directionString","getDropCellPosition","draggingElement","dropzoneCell","cellNewPosition","getDropzoneCell","offsetLeft","offsetTop","handleDropzone","useOnDragStop","updateWidget","_","_dragData","newPosition","widgetWithNewPosition","newCardPosition","useOnResizeStart","closest","classList","add","styles","useOnResizeStop","rndRef","defaultPosition","evt","preserveDefaultPosition","updatePosition","setTimeout","remove","getCellCoordinates","flow","newWidth","newHeight","getNewPosition","cardWithNewPosition","CardEdit","props","controls","dragging","useBoolean","value","setTrue","setFalse","onDrag","onDragStop","onResizeStart","onResizeStop","positionStyle","useMemo","resizeHandlerComponents","isResizing","cardZIndex","zIndex","Rnd","ref","enableResizing","resizeHandleComponent","tabIndex","startResizing","dir","elementRef","delta","endResizePosition","endResizing","data-x","data-y","data-card","data-card-id","CardViewHeader","CardView","isSelectedCellsRequired","selectedCells","start","end","cellStyles","isFirstColumn","isFirstRow","isEdit","firstSelectionRow","firstSelectionColumn","lastSelectionRow","lastSelectionColumn","subCellStyles","cellHighlighterStyles","Cell","editMode","highlightedCellsRange","cellElem","highlightStatus","elementPosition","selected","firstRow","firstColumn","lastRow","lastColumn","Yselected","Xselected","calculateCellPage","data-cell","gridStyles","gridWrapper","dropZoneHighlightStyles","Grid","rows","columns","rowArray","Array","from","keys","columnArray","gridStyle","gridTemplateColumns","gridTemplateRows","data-grid","data-grid-dropzone","SelectedCellsManager","minSize","sortCells","min","max","setSelectedCells","cells","addSelectedCell","clearSelectedCells","getSelectedCells","getSortedSelectedCells","isValid","isEqual","CellManager","isValidCellElement","getPosition","getHTMLElement","HIGHLIGHTED_CELL_ATTRIBUTE","cellHighlighter","CellSelectionHighlighter","highlightedCells","Set","highlightCells","cellId","has","cellToHighlight","setAttribute","highlightCell","clearHighlightedCells","forEach","split","highlightedX","highlightedY","cellToUnhighlight","removeAttribute","clear","getHighlightedCells","cellSelection","initialSelected","useCellSelectHandler","onSelect","useState","selectedCellsRange","setSelectedCellsRange","handleMouseDown","cellElement","handleMouseMove","newEnd","sortedCells","handleMouseUp","cleanup","selectedCellsEnd","useCellSizeObserver","setCellSize","cellSelector","setCellElement","resizeObserver","useResizeObserver","borderBoxSize","blockSize","inlineSize","BpWallboardEdit","createEmptyWidget","subscriptionData","WidgetResolver","hideWidgetSettings","widgetResolverProps","widgetConfig","hasSettings","Card","BpWallboardView","BpWallboard","Object","assign","WidgetResolverView","WidgetResolverEdit","Edit","View","_path","_path2","_rect","_rect2","optionContainerStyles","previewElemStyles","_excluded","_extends","bind","arguments","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBreakTime","_ref","titleId","viewBox","fill","xmlns","d","stroke","rx","ForwardRef","forwardRef","_rect3","_rect4","_rect5","_rect6","_rect7","_rect8","_rect9","_rect10","_rect11","_rect12","_rect13","_rect14","_rect15","_rect16","_rect17","_rect18","SvgMyServices","SvgMyStats","_rect19","_rect20","_rect21","_rect22","_rect23","_rect24","SvgMyTeam","NewWidgetOption","handleSelect","useCallback","button","WidgetPreview","BreakTimePreview","MyTeamPreview","MyServicesPreview","MyStatsPreview","CreateWidgetModal","onClose","addWidget","rest","getDefaultWidgetsConfig","metricsNames","useMetricsNames","uuid","HOME_PAGE_AGENT_WIDGETS","my_break_time","my_stats","fields","name","general","my_services","maxItemsToShow","columnTitleEnabled","sort","my_team","userDummyNames","useGetDefaultWidgetsConfig","widgetsToSelect","options","text","selectedWidgetId","setSelectedWidgetId","HOME_SCREEN","add_widget","Button","variant","window_buttonCancel","selectedWidget","button_save","FlippingWidgetModal","allWidgets","onSave","restProps","isFlipping","initialSelectedWidgets","checkedWidgets","setCheckedWidgets","handleSave","availableWidgets","filter","availableToFlipWidgets","combine_widgets","select_flipping_widgets","currWidget","CheckboxWithLabel","onCheckedChange","checked","newCheckedWidgets","label","labelClassName","some","w","widget_will_be_removed","window_buttonClose","hiddenAreaAtom","atom","HidingArea","Root","store","s","createStore","Provider","Target","hidden","useAtomValue","AnimatePresence","initial","motion","opacity","animate","delay","exit","MetricView","dragElemRef","dragListeners","aria-label","IconDrag16","Checkbox","SortableMetricView","useSortable","animateLayoutChanges","defaultAnimateLayoutChanges","attributes","listeners","setNodeRef","setActivatorNodeRef","CSS","onKeyDown","preventDefault","MetricSelection","onChange","expanded","toSorted","b","aIndex","bIndex","o","sortedOptions","setSortedOptions","useAtom","isExpanded","setIsExpanded","showSelectedOnly","setShowSelectedOnly","search","setSearch","deferredSearch","useDeferredValue","activeId","setActiveId","visibleItems","toLowerCase","activeItem","allSelected","every","onSelectChange","data-expanded","SearchField","layoutClassName","placeholder","search_for_metrics","icon","IconExpand24","deselect_all","select_all","ToggleWithLabel","show_selected_only","DndContext","onDragStart","onDragEnd","over","activeIndex","findIndex","overIndex","newSortedOptions","arrayMove","onDragCancel","SortableContext","items","strategy","verticalListSortingStrategy","item","DragOverlay","homePageStateTrackerEvents","onInitialState","homePageStateControlEvents","getConfigs","asyncEvent","createConfig","duplicateConfig","deleteConfig","updateConfig","updateConfigOwnership","toggleConfigIsGlobal","subscribeForAgentStats","unsubscribeFromAgentStats","subscribeForServiceStats","unsubscribeFromServicesStats","subscribeForTeamStats","unsubscribeFromTeamStats","INITIAL_SUBSCRIPTION_FIELDS","team","includeLoggedOutUsers","user","service","ApiError","request","response","status","statusText","Error","CancelError","isCancelled","Symbol","toStringTag","CancelablePromise","executor","_isResolved","_isRejected","_isCancelled","_cancelHandlers","_promise","_resolve","_reject","Promise","resolve","reject","onCancel","cancelHandler","push","defineProperty","get","reason","then","onFulfilled","onRejected","onFinally","cancel","warn","OpenAPI","BASE","VERSION","WITH_CREDENTIALS","CREDENTIALS","TOKEN","USERNAME","PASSWORD","HEADERS","ENCODE_PATH","isDefined","isString","isStringWithValue","isBlob","stream","arrayBuffer","constructor","test","isFormData","FormData","getQueryString","params","qs","process","isArray","v","entries","k","encodeURIComponent","join","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","Accept","reduce","str","btoa","err","Buffer","base64","mediaType","Headers","sendRequest","formData","controller","AbortController","signal","abort","getResponseBody","contentType","startsWith","json","isJSON","responseBody","responseHeader","encoder","encodeURI","path","replace","substring","group","query","getUrl","JSON","stringify","getFormData","getRequestBody","getResponseHeader","errors","catchErrorCodes","HomePageServices","__request","requestBody","SupervisorWidgetsApiServices","getTeams","deleteSupervisorWidgetsSubscription","getAgenda","createSupervisorWidgetsSubscription","getSupervisorWidgetsSubscriptionData","getTenantConfiguration","getAgents","getServices","getTimeSeriesData","measurement","statistic","timeInterval","PendingSubscriptions","subscriptions","addSubscription","tabId","subscriptionId","hasSubscription","Boolean","removeSubscription","clean","SubscriptionManager","subscriptionFields","services","getUserSubscriptionIds","userIds","values","acc","getTeamSubscriptionIds","teamIds","saveServices","intializeTabFields","copy","getServicesByTeamId","getSubscriptionFields","addUserFields","removeUserFields","addServiceFields","removeServiceFields","addTeamFields","removeTeamFields","getUserFieldsById","getServiceFieldsByTeamId","getTeamFieldsById","currentTeam","convertUserDetailsToMyStatsDetails","userDetails","res","statField","serverField","unstringifyNumber","convertMyStatsFiledToServerField","field","filed","convertNyTeamColumnToServerField","column","convertMyServicesFiledToServerField","inCallsWaiting","inMaxWaitTime","serviceLevel","agentsReady","agentsLogged","serviceLevelPerDay","inCallsHandledPerDay","inCallsAbandonedInQueuePerDay","inEwt","inAverageSpeedOfAnswer","callsAverageHandlingTimePerDay","outCallsHandledPerDay","outCallsUnattendedPerDay","outCallsUnattendedRatioPerDay","StateFactory","controlEvents","trackerEvents","authorized","synchronized","getInitialState","configs","dependencies","MyServicesConfigModalContent","setValue","control","truthy","convertedName","useWatch","f","useController","InputField","titleField","NumberField","max_items_to_show","inputClassName","columns_headings","containerClassName","MyStatsConfigModalContent","MyTeamConfigModalContent","getMyTeamFieldName","columnName","team_name","acdState","acd_state","stateDuration","state_duration","acdNextState","acd_next_state","nextReason","next_reason","use_user_dummy_names","SettingsSelector","currentFlippingWidgetsIds","activeWidgetId","setActiveWidgetId","handleClick","nextActiveWidgetIndex","nextActiveWidgetId","ButtonIcon","tooltip","previous","IconArrowLeft24","next","IconArrowRight24","useSettingsFormData","getMyServicesInitialData","getMyStatsInitialData","useGetMyStatsInitialData","getMyTeamInitialData","useGetMyTeamInitialData","initialFormData","form","useForm","defaultValues","onComplete","handleSubmit","data","createResultConfig","configurableFields","originalWidget","stat","resultWidgets","SettingsModal","getValues","activeWidget","titleByType","MY_STATS","MY_TEAM","MY_SERVICES","BREAK_TIME_REMAINING","FLIPPING","contentClassName","useNewHomepageOptions","isGlobal","HOME_PAGE_SUPERVISOR_TEMPLATES","empty_template","all_agents_template","all_agents_agents","show_settings","subscription","req","statName","team_ids","limit","order","by","columtitle","agent_stats","busy","ready","after_call_work","not_ready","subteam","logged_in_only","contact_center_overview_template","contact_center_overview_queues","service_ids","contact_center_overview_longest_calls","contact_center_overview_longest_not_ready","contact_center_overview_longest_hold","contact_center_overview_all_agents","contact_center_overview_waiting_in_all_queues","optValue","maxThreshold","warningThreshold","alertThreshold","warning_sound","contact_center_overview_positive_disposition_counts","contact_center_overview_abandoned","contact_center_overview_queued","contact_center_overview_longest_acw","contact_center_overview_agent_state_summary","order_by","order_dir","filter_by","filter_value","filter_operation","email_wallboard_template","email_wallboard_new_email","email_wallboard_email_carried_over","email_wallboard_email_handled","email_wallboard_email_replied","email_wallboard_top_personal_queues","email_wallboard_top_agents_by_email_handled","email_wallboard_email_services","email_wallboard_email_dispositioned_wo_reply","email_wallboard_email_in_personal_queues","email_wallboard_bottom_agents_by_email_handled","email_wallboard_top_break_time","inbound_wallboard_template","inbound_wallboard_in_queue_max_wait","inbound_wallboard_in_ivr","inbound_wallboard_callbacks_in_queue","inbound_wallboard_abandoned","inbound_wallboard_service_queues","inbound_wallboard_busy_agents","inbound_wallboard_estimated_wait_time","inbound_wallboard_asa","inbound_wallboard_top_not_ready_agents","inbound_wallboard_top_after_call_work","inbound_wallboard_top_idle_time_agents","inbound_wallboard_longest_hold","outbound_campaigns_template","outbound_campaigns_occupancy","outbound_campaigns_outbound_calling_rate","outbound_campaigns_abandoned","outbound_campaigns_outb_in_q_now","outbound_campaigns_campaigns","outbound_campaigns_top_successful_agents","outbound_campaigns_top_agents_by_avg_call_duration","outbound_campaigns_agent_state_summary","outbound_campaigns_outbound_calls_on_agents","outbound_campaigns_records_completed_today","outbound_campaigns_top_break_time","template","index","NewHomepageModal","onCreated","processing","useHomePageStateMethods","showError","setShowError","selectedTemplateIndex","setSelectedTemplateIndex","isDisabled","handleSelectChange","handleCreateNewConfig","newConfig","closeNewWallboardModal","new_home_page_title","InlineAlert","create_error_title","create_error_content","SelectField","new_home_page_type","new_home_page_select_placeholder","disabled","state","create","HomePageUIContext","createContext","activeConfig","setActiveConfig","noop","openRemoveWidget","setActiveFlippingWidget","openFlippingWidgetsSettings","selectedUser","setSelectedUser","mode","setMode","isDirty","appLink","isLoading","setIsLoading","tabsManager","businessUserMode","displayName","HomePageUIContextProvider","useDirectoryStateMethods","getAgentTeams","privileges","isAgent","isSupervisor","isBusinessUser","hasEditRights","CUSTOMIZE_HOME_PAGE_VIEWS","PUSH_PULL_GLOBAL_HOME_PAGE_VIEWS","selfUserId","useSearchParams","setSearchParams","pageParams","window","history","allConfigs","useHomePageState","c","isUrl","disableBusinessUserMode","enableBusinessUserMode","selfTeamId","setModePublic","newMode","TabsManager","savedConfig","prev","getData","allSettled","activeConfigRef","useAsRef","storedConfig","useLayoutEffect","replaceState","fromEntries","useBrowserTabMetaInfo","viewName","home_tab","useDidUnmount","newWidgetConfig","produce","draft","updatedWidgetConfig","widgetIndex","saveFlippingWidgets","flippingWidgetIds","deleteWidget","indexToRemove","splice","simpleWidget","newWidget","convertFlippingToSimple","targetWidget","updateFlippingWidget","switchWidgets","newFlippingWidget","createFlippingWidget","openRemoveWidgetModal","onRemove","delete_widget_title","delete_widget_content","delete","action","removeWidget","targetFlippingWidget","removeWidgetIndex","openFlippingWidgetsModal","useModalComponentOpener","widgetId","newActiveWidgetId","contextValue","createUIStateSelectorHook","useHomePageUIState","useOpenWidgetSettings","openSettingsModal","controlButtonStyle","ControlButton","stopPropagation","echarts","BarChart","PieChart","ScatterChart","TitleComponent","TooltipComponent","GridComponent","DatasetComponent","TransformComponent","LegendComponent","PolarComponent","LabelLayout","UniversalTransition","CanvasRenderer","Chart","onInit","containerElem","setContainerElem","chartRef","onInitRef","createChart","chartOptions","init","setOption","updateChart","resizeEntry","handleResize","debounce","resizeEntryInner","resize","contentRect","dispose","BreakTimeChart","total","highlightedIndex","setHighlightedIndex","isExceeded","exceeded","remaining","getComputedStyle","breaktime_exceeded","itemStyle","getPropertyValue","breaktime_permitted","breaktime_reamaining","breaktime_used","emphasis","legend","orient","itemGap","itemWidth","itemHeight","breaktime_mins","round","MS_IN_SECOND","MS_IN_MINUTE","padding","textStyle","rich","fontSize","fontWeight","lineHeight","borderWidth","textBorderWidth","textBorderColor","series","radius","avoidLabelOverlap","minMargin","labelLine","showAbove","labelLayout","moveOverlap","borderColor","fontFamily","chat","setActiveData","activeName","dataNames","getOption","on","LiveStatTimer","liveTimer","useLiveStatTimer","formatDurationShort","columnHelper","createColumnHelper","TIME_FIELDS","PERCENT_FIELDS","useMyTeamColumns","agentStateOptions","selectAgentStateOption","getAgentStateTooltip","getUserPresenceTooltip","renderAgentStateCell","useAgentStateOptions","createAgentStateOptionSelector","nextState","activeInteraction","activeItemId","busyMediaType","isMediaType","isAcdState","presenceState","AgentStatusIcon","agentStatusOption","notReadyReason","isLoggedOut","isLogged","renderAgentCell","UserPresenceIcon","itemState","presenceStatus","acdSorter","useAgentStateTooltipGetter","useUserPresenceTooltipGetter","u1","u2","u1Tooltip","u2Tooltip","localeCompare","numeric","sensitivity","accessor","getValue","row","original","sortingFn","rowA","rowB","SHUFFLE_FIELDS","SHUFFLE_FIELD","random","SHUFFLE_ORDER","usersDummyNamesSort","aValue","bValue","sortValueA","sortValueB","useMyTeamUsers","maxItemToShow","users","myTeamUserDetails","filteredUsers","u","slice","messages","my_team_dummy_name","useActiveWidget","setActiveWidget","nextActiveIndex","currentActiveIndex","nextConfig","WIDGETS_CONFIG","totalBreakTime","currentBreakTime","agentTotalBreakTime","getSortOrder","columnKey","sorting","desc","tableData","myServicesDetails","setSorting","table","useReactTable","getRowId","getCoreRowModel","getSortedRowModel","onSortingChange","WithNoData","noData","Table","sticky","getHeaderGroups","headerGroup","getToggleSortingHandler","align","flexRender","columnDef","getContext","getRowModel","getVisibleCells","myStatsDetails","viewData","Widget","WidgetHeaderView","WidgetEditControls","openSettings","flip_widget","IconCombine","configure_widget","IconConfigure24","IconDelete24","WIDGETS_WITH_NO_SETTINGS","AgentWallboard","openCreateWidgetModal","useOpenCreateWidgetsModal","useUnsavedConfigsMethods","localSettings","useLocalSettings","getUnsavedConfig","storeUnsavedConfig","removeUnsavedConfig","unsavedConfigs","buttonsContainerStyles","selectFieldStyles","selectFieldFrameStyles","false","EditorHeader","isSaving","setIsSaving","unsavedConfig","setUnsavedConfig","activeConfigId","restore_unsaved_config_title","restore_unsaved_config_content","restore","useOpenRestoreUnsavedConfig","checkDirtyBeforeClose","returnValue","previewButtonLabel","header_close_preview_btn","header_preview_btn","changeHomePageName","saveHomePageConfig","theme","update_error_title","update_error_content","unknown","changePreviewMode","goBack","h2","header_save_btn","HOME_PAGE_USERS_SEARCH_ID","AgentsSelector","open","toggle","useAgentsOptions","mySubteamOnly","searchResult","findContacts","fetchLoggedUsers","useDirectoryState","isUsersLoading","setIsUsersLoading","allUsers","setAllUsers","myTeamUsers","getAllUsers","directoryData","teams","throttleSearchContact","throttle","fullName","me","option","toggleElem","my_subteam_only_label","labelPosition","toggleSubteam","onSearchChange","withSearch","contentHeader","loading","isUndefined","AgentsDropdown","setIsOpen","fieldClassName","onOpenChange","useMenuOptions","showMenuOptions","openNewHomepageModal","openRemoveHomepageModal","delete_homepage_title","delete_homepage_content","delete_error","useOpenRemoveHomepageModal","handleCreateNewWallboard","newHomePageLink","openOrFocus","handleEdit","editPage","handleDuplicate","copiedConfig","copiedConfigLink","menu_duplicate","duplicate_error","handleDelete","handleToggleIsGlobal","menu_pull_from_global","menu_push_to_global","pull_from_global_error","push_to_global_error","handleExport","downloadJsonFile","handleImport","parsedConfig","importedConfig","readFromJsonFile","menu_import","import_error","menu_new","menu_edit","menu_delete","menu_export","SupervisorHeader","menuOptions","GlobeIcon","MoreOptions","buttonProps","menu","Header","audioNotifyAtom","updatingWidgetDataAtom","AudioAlert","audioRef","notify","play","leading","setAudioNotify","useSetAtom","stop","audio","src","notificationWav","notificationMp3","getWidgetsSubscriptionData","createSelector","widgetSubscription","stats_totals","uniq","stats_totals_service_ids","stats_totals_dispositions","dispositions","agent_grids","tempAgent","cloneDeep","totalContactsIndex","removeRedundantData","my_subteam_only","logged_in_agents_only","addColumn","service_grids","tempService","indexCallsHandledPerDay","parseInt","createSubscriptionRequest","coltitle","queryKey","MAP_STATS_NAMES","statsSingle","getMetricsByApplicable","statsAgent","statsService","useStatsOptions","assertCorrectWidget","assertTrue","createDispositionsWidgetSubscription","getAgentGridSubscriptionDefaults","user_id","createSatisfactionWidgetSubscription","createBreakTimeWidgetSubscription","createMyStatsWidgetSubscription","ALL_STATES","AgentStatesSelect","allStatesSelected","allSatesOptions","agent_state_busy","agent_state_ready","agent_state_after_call_work","agent_state_not_ready","all_states","selectValue","newSelectedTeams","MultiSelectField","show_states","ALL_TEAMS","TeamsSelect","isTeamsLoading","allTeamsSelected","teamsOptions","all_teams","show_teams","useCreateDefaultColumns","AgentGridModal","formValuesParsed","replacingWidgetId","onSaved","formValues","commonModalProps","newColumns","col","existingOrder","agentStats","defaultColumns","HOME_PAGE_SUPERVISOR_WIDGETS","agent_grid","save","newOrder","ind","convertToBackend","pick","teamIdsField","agentStatesField","limit_my_subteam","limitSubteamField","limit_logged_in","limitLoggedInOnlyField","Option","Icon","useHandleCancelWidgetModal","openEmptyWidgetSettingsModal","EmptyWidgetSettingsModal","SelectUserModal","onSelected","currentWidgetConfig","handleOk","handleCancelWidgetModal","agent_select_title","agent_select_label","useBreakTimeWidget","openSelectUserModal","userName","HOME_PAGE_SUPERVISOR_WIDGETS_NAMES","break_time","useCreateTimeWidget","useDispositionsWidget","ImageStyleSelect","HOME_PAGE_WIDGET_IMAGE","style_cover","style_contain","getFileDataUrl","file","reader","FileReader","onload","readAsDataURL","SelectImage","imageName","handleUploadFiles","newImageUrl","newImageName","files","imageUrl","FieldLayout","image","FieldFrame","rightPrefixClassName","rightPrefix","click","IconUpload16","input","ImageSettingsModal","imageNameField","imageUrlField","styleField","ALL_SERVICES","ServicesSelect","useServicesDispositionsState","allServicesSelected","servicesOptions","all_services","newSelectedServices","show_services","ServiceGridModal","serviceIds","service_grid","role","serviceIdsField","TextSettingsModal","TextAreaField","minRows","textField","useMyStatsWidget","useSatisfactionWidget","satisfaction","STATS_CONFIG","agent_fcr","format","agent_nps","agent_average_idle_time","agent_average_preview_time","agent_occupancy","calls_average_handling_time_per_day","calls_dispositions_ratio_per_day","in_average_speed_of_answer","in_calls_abandoned_in_queue_ratio_per_day","in_calls_abandoned_percent_per_day","in_calls_duration_average_per_day","in_calls_duration_total_per_day","in_calls_handled_percent_per_day","in_calls_short_abandoned_in_queue_ratio_per_day","in_ewt","in_max_wait_time","out_calls_abandoned_in_ivr_ratio_per_day","out_calls_abandoned_in_queue_ratio_per_day","out_calls_abandoned_ratio_per_day","out_calls_answered_ratio_per_day","out_calls_duration_average_per_day","out_calls_duration_total_per_day","out_calls_in_ivr","out_calls_unattended_ratio_per_day","out_campaign_duration_forecast","records_attempted_ratio_per_day","records_completed_ratio","records_completed_ratio_per_day","records_dialable","alertInverted","records_skipped_ratio_per_day","service_level","service_level_target","service_level_per_day","active_item_direction","active_item_hold_duration","active_item_media_type","active_item_party_name","active_item_qm_monitor_mode","active_item_service_name","active_item_state","active_item_talk_duration","agent_preview_duration","agent_total_break_time","first_last_name","last_first_name","login_time","useGetStatsConfig","statData","useSingleStatsOptions","singleOptions","SingleOrGaugeSettingsModal","widgetType","getStatsConfig","convertValueToStatType","trim","getWidgetDefaultFormData","warningSound","defaultValue","valueFormat","reqData","convertStatToValue","typeField","HOME_PAGE_SINGLE_OR_GAUGE_WIDGET","name_gauge","name_single","RadioGroup","onValueChange","primary_statistic","valueOptions","clearable","onValueSearchChange","valueField","warning_threshold","warningThresholdField","alert_threshold","alertThresholdField","max_threshold","maxThresholdField","enable_warning_sound","warningSoundField","secondary_statistic","optValueOptions","onOptValueSearchChange","optValueField","gauge","single","useSingleOrGaugeWidget","openSingleOrGaugeSettingsModal","SummarySettingsModal","emptyValues","summary","select_teams","teamsField","useSummaryWidget","openSummarySettingsModal","useHandleWidgetSelect","openAgentGridModal","openServiceGridModal","openImageSettingsModal","openTextSettingsModal","createTimeWidget","createBreakTimeWidget","createSingleOrGaugeWidget","createDispositionsWidget","createMyStatsWidget","createSummaryWidget","createSatisfactionWidget","fv","assertFormValuesValidForImageWidgetSettingsModal","assertFormValuesValidForConfigAgentGrid","assertFormValuesValidForConfigServiceGrid","assertFormValuesValidForTextWidgetSettingsModal","optionType","exhaustiveCheck","SvgDatetime","SvgDispositions","SvgGauge","SvgGrid","_path3","SvgImage","SvgSatisfaction","SvgSingleStatistic","SvgStateSummary","SvgStats","SvgText","standardWidgets","SingleStatisticIcon","GridIcon","StateSummaryIcon","GaugeIcon","TextIcon","DatetimeIcon","ImageIcon","WidgetOptionsGroup","selectedType","h4","it","BreakTimeIcon","DispositionsIcon","StatsIcon","SatisfactionIcon","DefaultSelectedWidget","Options","setSelectedType","onWidgetSelected","data-id","select_widget","setUpdateWidgetAtom","updateDispositionsWidget","updateSingleOrGaugeWidget","updateBreakTimeWidget","updateMyStatsWidget","updateSatisfaction","updateSummaryWidget","formatStatValue","numberValue","presentFormatter","resultInMs","MS_IN_DAY","getMomentUTC","floor","durationFormatter","CENTER","GaugeChart","inverted","getFormattedValue","maxAmount","minValue","maxValue","polar","center","angleAxis","startAngle","endAngle","axisLine","show","axisTick","axisLabel","splitLine","radiusAxis","silent","coordinateSystem","symbolSize","formatter","distance","processGridData","targetDataGrid","dataGrids","dataGridsRaw","grid","reqId","currentData","stateCol","configuredColumns","currentValues","acdStates","totalContacts","v1","v2","alignLeft","statsConfig","tempId","widgetSubscriptionType","val","toHHMMSS","agent_state_logged_out","mapAcdState","obj","prop","MyStatChart","xAxis","gridIndex","yAxis","inverse","margin","overflow","xAxisIndex","yAxisIndex","barCategoryGap","groupId","myStatsDefaultData","inCalls","agentValue","teamValue","outCalls","successRatio","averageHandlingTime","useMyStatsOptions","myStatsData","team_stats","in_calls_handled_per_day","out_calls_handled_per_day","team_success_ratio_per_day","HOME_PAGE_MY_STATS_WIDGET","handled","teams_stats","average_handling_time","toMMSS","successful_interactions","RADIUS","SatisfactionChart","satisfactionOption","agent_csat","useSatisfactionOption","grids","targetCol","rawValue","Unknown","pre","subscriptionType","titleList","columnsList","elems","datetime","now","setNow","date","dayjs","time","svg","textAnchor","empty","audioAlert","statConfig","gaugeValue","backgroundImage","backgroundSize","news","valueStatConfig","parsedValue","valueFormatted","optValueSubscription","optValueFormatted","no_available","summaryData","summaryConfigId","states","stateKey","allEmpty","maxSurfaceAngle","breakTimeData","breakTimeSubscriptionConfig","dispositionsData","dispositionsSubscriptionConfig","stringifiedData","parsedData","parse","convertKVArray","count","barWidth","resolutionOptions","netPromoterScoreOptions","demeanorOptions","agenda","time_series","EditWidgetResolver","useCardStyles","ViewWidgetResolver","isAlertedSingle","SupervisorWallboard","useWidgetsSubscriptionQuery","useQueryClient","useQuery","queryFn","cancelQueries","resetQueries","staleTime","enabled","isRefetching","refetchInterval","retry","failureCount","invalidateQueries","resubscribed","useCreateEmptyWidget","GRID_SIZE","MIN_CARD_SIZE","HomePageContent","isEditMode","section","TabsHeader","activeTabId","tabs","onTabClose","tabOptions","controlsRef","hasMultipleConfigs","TabsList","tab","TabsTrigger","triggerClassName","isSelected","closeable","ButtonDropdown","withChevron","modal","optionContent","IconPlus24","full_screen","IconTabConfigure","HomePageTabs","useHomePageTabs","nonCallCasesUrls","openTabsIds","setOpenTabsIds","defaultId","setActiveTabId","useLocalStorageForState","allTabs","home_page_welcome","defaultConfig","globalConfigs","restConfigs","nonClosable","openTabs","currentTabs","onTabChange","previousTab","TabsRoot","TabsContent","Iframe","HomePageBase","App","tenantId","useUIState","isTabNavHighlighted","useAppConfigStateMethods","checkWhetherToRenderReportProblemButton","HomePageProviders","createProviderWrapper","UIContextProvider","FullScreenHomePageApp","createPlatformSpecific","Modals","HomePage"],"sourceRoot":""}