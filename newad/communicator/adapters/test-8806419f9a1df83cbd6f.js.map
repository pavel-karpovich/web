{"version":3,"file":"test-8806419f9a1df83cbd6f.js","mappings":"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","sources":["webpack://@bpinc/adapters/./src/integrations/test/index.ts"],"sourcesContent":["import type {InteractionAssociatedObject} from '@bpinc/adapters-public-api-types'\r\n\r\n\r\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\r\n/// <reference path=\"types/api.d.ts\" />\r\n\r\nconsole.log('## it works!!')\r\nconst integrationKey = 'test-adapter'\r\n\r\nconst messageClass = {\r\n    'o': 'outgoing',\r\n    'ir': 'incoming-result',\r\n    'i': 'incoming',\r\n    'or': 'outgoing-result',\r\n    'e': 'error',\r\n}\r\n\r\nconst logs = document.getElementById('log')!\r\nconst adcMountNode = document.getElementById('adc_mount_node')!\r\n\r\nconst clearLogButton = document.getElementById('clear_log')!\r\nclearLogButton.onclick = () => {\r\n    logs.innerText = ''\r\n}\r\n\r\nconst getLoginStateButton = document.getElementById('get_login_state_button')!\r\nconst loginButton = document.getElementById('login_button')!\r\nconst usernameInput = document.getElementById('username_input')! as HTMLInputElement\r\nconst passwordInput = document.getElementById('password_input')! as HTMLInputElement\r\nconst tenantInput = document.getElementById('tenant_input')! as HTMLInputElement\r\nconst logoutButton = document.getElementById('logout_button')!\r\n\r\nconst getPhoneDevicesListButton = document.getElementById('get_phone_devices_list_button')!\r\nconst getPhoneDeviceButton = document.getElementById('get_phone_device_button')!\r\nconst phoneDeviceTypeInput = document.getElementById('phone_device_type_input')! as HTMLInputElement\r\nconst phoneDeviceNumberInput = document.getElementById('phone_device_number_input')! as HTMLInputElement\r\nconst setPhoneDeviceButton = document.getElementById('set_phone_device_button')!\r\n\r\nconst getAgentStateButton = document.getElementById('get_agent_state_button')!\r\nconst setAgentStateButton = document.getElementById('set_agent_state_button')!\r\nconst agentStateInput = document.getElementById('agent_state_input')! as HTMLInputElement\r\nconst notReadyReasonInput = document.getElementById('not_ready_reason_input')! as HTMLInputElement\r\n\r\nconst startCallButton = document.getElementById('start_call_button')!\r\nconst phoneNumberInput = document.getElementById('phone_number_input')! as HTMLInputElement\r\nconst startChatButton = document.getElementById('start_chat_button')!\r\nconst chatChannelInput = document.getElementById('chat_channel_input')! as HTMLInputElement\r\nconst chatAddressInput = document.getElementById('chat_address_input')! as HTMLInputElement\r\nconst startEmailButton = document.getElementById('start_email_button')!\r\nconst emailAddressInput = document.getElementById('email_address_input')! as HTMLInputElement\r\n\r\nconst consultCallButton = document.getElementById('consult_call_button')!\r\nconst blindTransferButton = document.getElementById('blind_transfer_button')!\r\nconst transferButton = document.getElementById('transfer_button')!\r\nconst mainItemIdInput = document.getElementById('main_item_id_input')! as HTMLInputElement\r\nconst consultCallIdInput = document.getElementById('consult_call_id_input')! as HTMLInputElement\r\n\r\nconst interactionIdInput = document.getElementById('interaction_id_input')! as HTMLInputElement\r\nconst leaveInteractionButton = document.getElementById('leave_interaction_button')!\r\nconst completeInteractionButton = document.getElementById('complete_interaction_button')!\r\nconst leaveAndCompleteInteractionButton = document.getElementById('leave_and_complete_interaction_button')!\r\nconst switchActiveInteractionButton = document.getElementById('switch_active_interaction_button')!\r\n\r\nconst acceptInteractionButton = document.getElementById('accept_interaction_button')!\r\nconst rejectInteractionButton = document.getElementById('reject_interaction_button')!\r\nconst sendDtmfButton = document.getElementById('send_dtmf_button')!\r\nconst dtmfInput = document.getElementById('dtmf_input')! as HTMLInputElement\r\n\r\nconst inviteToCallConferenceButton = document.getElementById('add_to_call_conference_button')!\r\nconst removeFromCallConferenceButton = document.getElementById('remove_from_call_conference_button')!\r\nconst partyIdInput = document.getElementById('party_id_input')! as HTMLInputElement\r\nconst destroyCallConferenceButton = document.getElementById('destroy_call_conference_button')!\r\n\r\nconst getTeamsButton = document.getElementById('get_teams_button')!\r\nconst getTeamMembersButton = document.getElementById('get_team_members_button')!\r\nconst teamIdInput = document.getElementById('team_id_input')! as HTMLInputElement\r\nconst getServicesListButton = document.getElementById('get_services_list_button')!\r\nconst setServiceButton = document.getElementById('set_service_button')!\r\nconst serviceIdInput = document.getElementById('service_id_input')! as HTMLInputElement\r\n\r\nconst setRescheduleWindowButton = document.getElementById('set_reschedule_window_button')!\r\nconst fromTimeInput = document.getElementById('from_time_input')! as HTMLInputElement\r\nconst untilTimeInput = document.getElementById('until_time_input')! as HTMLInputElement\r\nconst timezoneCodeInput = document.getElementById('timezone_code_input')! as HTMLInputElement\r\n\r\nconst getDispositionsListButton = document.getElementById('get_dispositions_list_button')!\r\nconst setDispositionButton = document.getElementById('set_disposition_button')!\r\nconst dispositionIdInput = document.getElementById('disposition_id_input')! as HTMLInputElement\r\n\r\nconst addNoteButton = document.getElementById('add_note_button')!\r\nconst updateNoteButton = document.getElementById('update_note_button')!\r\nconst replaceNoteButton = document.getElementById('replace_note_button')!\r\nconst noteInput = document.getElementById('note_input')! as HTMLInputElement\r\n\r\nconst setCallHoldButton = document.getElementById('set_call_hold_button')!\r\nconst callHoldCheckbox = document.getElementById('call_hold_checkbox')! as HTMLInputElement\r\nconst setCallRecordingButton = document.getElementById('set_call_recording_button')!\r\nconst callRecordingCheckbox = document.getElementById('call_recording_checkbox')! as HTMLInputElement\r\nconst setCallMuteButton = document.getElementById('set_call_mute_button')!\r\nconst callMuteCheckbox = document.getElementById('call_mute_checkbox')! as HTMLInputElement\r\n\r\nconst setScreenRecordingMuteButton = document.getElementById('set_screen_recording_mute_button')!\r\nconst screenRecordingMuteCheckbox = document.getElementById('screen_recording_mute_checkbox')! as HTMLInputElement\r\nconst getScreenRecordingStateButton = document.getElementById('get_screen_recording_state_button')!\r\n\r\nconst setVariableButton = document.getElementById('set_variable_button')!\r\nconst variableNameInput = document.getElementById('variable_name_input')! as HTMLInputElement\r\nconst variableValueInput = document.getElementById('variable_value_input')! as HTMLInputElement\r\nconst getConfigButton = document.getElementById('get_config_button')!\r\nconst setWidgetMinimizedButton = document.getElementById('set_widget_minimized_button')!\r\nconst widgetMinimizedCheckbox = document.getElementById('widget_minimized_checkbox')! as HTMLInputElement\r\n\r\nconst addInteractionAssociatedObjectButton = document.getElementById('add_interaction_associated_object_button')!\r\nconst associatedObjectTextarea = document.getElementById('associated_object_textarea')! as HTMLTextAreaElement\r\n\r\nconst setInteractionActiveScreenButton = document.getElementById('set_interaction_active_screen_button')!\r\nconst activeScreenTextarea = document.getElementById('active_screen_textarea')! as HTMLTextAreaElement\r\n\r\nconst transferDataTextarea = document.getElementById('transfer_data_textarea')! as HTMLTextAreaElement\r\nconst searchKBResultTextarea = document.getElementById('search_kb_result_textarea')! as HTMLTextAreaElement\r\nconst kbArticleFullDataTextarea = document.getElementById('kb_article_full_data_textarea')! as HTMLTextAreaElement\r\n\r\n\r\nconst adApi = new window.brightpattern.AdApi({\r\n    integrationKey,\r\n    mountRoot: adcMountNode,\r\n    standalone: !!(new URLSearchParams(location.search)).get('standalone'),\r\n})\r\n\r\nconst setupHoverEffect = (hoverElement: Element, highlightElements: Element[]) => {\r\n    hoverElement.addEventListener('mouseenter', () => {\r\n        highlightElements.forEach(element => {\r\n            element.classList.add('highlighted')\r\n        })\r\n    })\r\n    hoverElement.addEventListener('mouseleave', () => {\r\n        highlightElements.forEach(element => {\r\n            element.classList.remove('highlighted')\r\n        })\r\n    })\r\n}\r\n\r\nconst log = (type: keyof typeof messageClass, message: string, content: string) => {\r\n    const msgDiv = document.createElement('div')\r\n    const typeContainerDiv = document.createElement('div')\r\n    const typeDiv = document.createElement('div')\r\n    const dataDiv = document.createElement('div')\r\n\r\n    msgDiv.classList.add('log-msg')\r\n    msgDiv.classList.add(messageClass[type])\r\n    typeDiv.textContent = message\r\n    dataDiv.textContent = content\r\n\r\n    typeContainerDiv.appendChild(typeDiv)\r\n    msgDiv.appendChild(typeContainerDiv)\r\n    msgDiv.appendChild(dataDiv)\r\n\r\n    const isScrolledToBottom = logs.scrollHeight - logs.clientHeight <= logs.scrollTop + 1\r\n    logs.appendChild(msgDiv)\r\n    if (isScrolledToBottom) {\r\n        logs.scrollTop = logs.scrollHeight - logs.clientHeight\r\n    }\r\n}\r\n\r\nadApi.injectMessageLogger((message, data) => {\r\n    if (message.startsWith('ON_')) {\r\n        if (message.endsWith('_RESPONSE')) {\r\n            log('or', message, data ? JSON.stringify(data) : '')\r\n        } else {\r\n            log('i', message, data ? JSON.stringify(data) : '')\r\n        }\r\n    } else {\r\n        if (message.endsWith('_RESPONSE')) {\r\n            log(data.status === 'success' ? 'ir' : 'e', message, JSON.stringify(data))\r\n        } else {\r\n            log('o', message, data ? JSON.stringify(data) : '')\r\n        }\r\n    }\r\n})\r\n\r\nsetupHoverEffect(getLoginStateButton, [])\r\ngetLoginStateButton.onclick = () => {\r\n    adApi.getLoginState()\r\n}\r\n\r\nsetupHoverEffect(loginButton, [usernameInput, passwordInput, tenantInput])\r\nloginButton.onclick = () => {\r\n    const username = usernameInput.value\r\n    const password = passwordInput.value\r\n    const tenant = tenantInput.value\r\n    adApi.login({username, password, tenant})\r\n}\r\n\r\nsetupHoverEffect(logoutButton, [])\r\nlogoutButton.onclick = () => {\r\n    adApi.logout()\r\n}\r\n\r\nsetupHoverEffect(getPhoneDevicesListButton, [])\r\ngetPhoneDevicesListButton.onclick = () => {\r\n    adApi.getPhoneDevicesList()\r\n}\r\n\r\nsetupHoverEffect(getPhoneDeviceButton, [])\r\ngetPhoneDeviceButton.onclick = () => {\r\n    adApi.getPhoneDevice()\r\n}\r\n\r\nsetupHoverEffect(setPhoneDeviceButton, [phoneDeviceTypeInput, phoneDeviceNumberInput])\r\nsetPhoneDeviceButton.onclick = () => {\r\n    adApi.setPhoneDevice({\r\n        type: phoneDeviceTypeInput.value as any,\r\n        phone: phoneDeviceNumberInput.value,\r\n    })\r\n}\r\n\r\nsetupHoverEffect(getAgentStateButton, [])\r\ngetAgentStateButton.onclick = () => {\r\n    adApi.getAgentState()\r\n}\r\n\r\nsetupHoverEffect(setAgentStateButton, [agentStateInput, notReadyReasonInput])\r\nsetAgentStateButton.onclick = () => {\r\n    const state = agentStateInput.value\r\n    const notReadyReason = notReadyReasonInput.value\r\n    adApi.setAgentState(state as any, notReadyReason)\r\n}\r\n\r\nsetupHoverEffect(startCallButton, [phoneNumberInput, associatedObjectTextarea])\r\nstartCallButton.onclick = () => {\r\n    const phone = phoneNumberInput.value\r\n    let associatedObject: InteractionAssociatedObject | undefined = undefined\r\n    const associatedObjectStr = associatedObjectTextarea.value\r\n    if (associatedObjectStr) {\r\n        try {\r\n            associatedObject = JSON.parse(associatedObjectStr)\r\n        } catch (e) {\r\n            alert('You have syntax error in the associated object structure. Cannot parse JSON.')\r\n            return\r\n        }\r\n    }\r\n    adApi.startCall(phone, associatedObject)\r\n}\r\n\r\nsetupHoverEffect(startChatButton, [chatChannelInput, chatAddressInput, associatedObjectTextarea])\r\nstartChatButton.onclick = () => {\r\n    const chatChannel = chatChannelInput.value\r\n    const chatAddress = chatAddressInput.value\r\n    let associatedObject: InteractionAssociatedObject | undefined = undefined\r\n    const associatedObjectStr = associatedObjectTextarea.value\r\n    if (associatedObjectStr) {\r\n        try {\r\n            associatedObject = JSON.parse(associatedObjectStr)\r\n        } catch (e) {\r\n            alert('You have syntax error in the associated object structure. Cannot parse JSON.')\r\n            return\r\n        }\r\n    }\r\n    adApi.startChat(chatChannel as any, chatAddress, associatedObject)\r\n}\r\n\r\nsetupHoverEffect(startEmailButton, [emailAddressInput, associatedObjectTextarea])\r\nstartEmailButton.onclick = () => {\r\n    const emailAddress = emailAddressInput.value\r\n    let associatedObject: InteractionAssociatedObject | undefined = undefined\r\n    const associatedObjectStr = associatedObjectTextarea.value\r\n    if (associatedObjectStr) {\r\n        try {\r\n            associatedObject = JSON.parse(associatedObjectStr)\r\n        } catch (e) {\r\n            alert('You have syntax error in the associated object structure. Cannot parse JSON.')\r\n            return\r\n        }\r\n    }\r\n    adApi.startEmail(emailAddress, associatedObject)\r\n}\r\n\r\nsetupHoverEffect(consultCallButton, [phoneNumberInput])\r\nconsultCallButton.onclick = () => {\r\n    const phoneNumber = phoneNumberInput.value\r\n    adApi.consultCall(phoneNumber)\r\n}\r\n\r\nsetupHoverEffect(blindTransferButton, [phoneNumberInput, interactionIdInput, transferDataTextarea])\r\nblindTransferButton.onclick = () => {\r\n    const phoneNumber = phoneNumberInput.value\r\n    const itemId = interactionIdInput.value\r\n    let transferData: any | null = null\r\n    try {\r\n        transferData = JSON.parse(transferDataTextarea.value)\r\n    } catch (e) {\r\n        alert('You have syntax error in the transfer data structure. Cannot parse JSON.')\r\n    }\r\n    adApi.blindTransfer(phoneNumber, transferData, itemId)\r\n}\r\n\r\nsetupHoverEffect(transferButton, [transferDataTextarea])\r\ntransferButton.onclick = () => {\r\n    let transferData: any | null = null\r\n    try {\r\n        transferData = JSON.parse(transferDataTextarea.value)\r\n    } catch (e) {\r\n        alert('You have syntax error in the transfer data structure. Cannot parse JSON.')\r\n    }\r\n    adApi.transfer(transferData)\r\n}\r\n\r\nsetupHoverEffect(leaveInteractionButton, [interactionIdInput])\r\nleaveInteractionButton.onclick = () => {\r\n    const itemId = interactionIdInput.value\r\n    adApi.leaveInteraction(itemId)\r\n}\r\n\r\nsetupHoverEffect(completeInteractionButton, [interactionIdInput])\r\ncompleteInteractionButton.onclick = () => {\r\n    const itemId = interactionIdInput.value\r\n    adApi.completeInteraction(itemId)\r\n}\r\n\r\nsetupHoverEffect(leaveAndCompleteInteractionButton, [dispositionIdInput, noteInput, interactionIdInput])\r\nleaveAndCompleteInteractionButton.onclick = () => {\r\n    const dispositionId = dispositionIdInput.value\r\n    const note = noteInput.value\r\n    const itemId = interactionIdInput.value\r\n    adApi.leaveAndCompleteInteraction(dispositionId, note, itemId)\r\n}\r\n\r\nsetupHoverEffect(switchActiveInteractionButton, [interactionIdInput])\r\nswitchActiveInteractionButton.onclick = () => {\r\n    const itemId = interactionIdInput.value\r\n    adApi.switchActiveInteraction(itemId)\r\n}\r\n\r\nsetupHoverEffect(acceptInteractionButton, [interactionIdInput])\r\nacceptInteractionButton.onclick = () => {\r\n    const itemId = interactionIdInput.value\r\n    adApi.acceptInteraction(itemId)\r\n}\r\n\r\nsetupHoverEffect(rejectInteractionButton, [interactionIdInput])\r\nrejectInteractionButton.onclick = () => {\r\n    const itemId = interactionIdInput.value\r\n    adApi.rejectInteraction(itemId)\r\n}\r\n\r\nsetupHoverEffect(sendDtmfButton, [dtmfInput, interactionIdInput])\r\nsendDtmfButton.onclick = () => {\r\n    const dtmf = dtmfInput.value\r\n    const itemId = interactionIdInput.value\r\n    adApi.sendDtmf(dtmf, itemId)\r\n}\r\n\r\nsetupHoverEffect(inviteToCallConferenceButton, [phoneNumberInput, transferDataTextarea, interactionIdInput])\r\ninviteToCallConferenceButton.onclick = () => {\r\n    const phoneNumber = phoneNumberInput.value\r\n    let transferData: any | null = null\r\n    try {\r\n        transferData = JSON.parse(transferDataTextarea.value)\r\n    } catch (e) {\r\n        alert('You have syntax error in the transfer data structure. Cannot parse JSON.')\r\n    }\r\n    const itemId = interactionIdInput.value\r\n    adApi.inviteToCallConference(phoneNumber, transferData, itemId)\r\n}\r\n\r\nsetupHoverEffect(removeFromCallConferenceButton, [partyIdInput, interactionIdInput])\r\nremoveFromCallConferenceButton.onclick = () => {\r\n    const partyId = partyIdInput.value\r\n    const itemId = interactionIdInput.value\r\n    adApi.removeFromCallConference(partyId, itemId)\r\n}\r\n\r\nsetupHoverEffect(destroyCallConferenceButton, [interactionIdInput])\r\ndestroyCallConferenceButton.onclick = () => {\r\n    const itemId = interactionIdInput.value\r\n    adApi.destroyCallConference(itemId)\r\n}\r\n\r\nsetupHoverEffect(getTeamsButton, [])\r\ngetTeamsButton.onclick = () => {\r\n    adApi.getTeams()\r\n}\r\n\r\nsetupHoverEffect(getTeamMembersButton, [teamIdInput])\r\ngetTeamMembersButton.onclick = () => {\r\n    const teamId = teamIdInput.value\r\n    adApi.getTeamMembers(teamId)\r\n}\r\n\r\nsetupHoverEffect(getServicesListButton, [])\r\ngetServicesListButton.onclick = () => {\r\n    adApi.getServicesList()\r\n}\r\n\r\nsetupHoverEffect(setServiceButton, [serviceIdInput])\r\nsetServiceButton.onclick = () => {\r\n    const serviceId = serviceIdInput.value\r\n    adApi.setService(serviceId)\r\n}\r\n\r\nsetupHoverEffect(getDispositionsListButton, [serviceIdInput, interactionIdInput])\r\ngetDispositionsListButton.onclick = () => {\r\n    const serviceId = serviceIdInput.value\r\n    const itemId = interactionIdInput.value\r\n    adApi.getDispositionsList({\r\n        service: serviceId,\r\n        interactionId: itemId,\r\n    })\r\n}\r\n\r\nsetupHoverEffect(setDispositionButton, [dispositionIdInput, interactionIdInput])\r\nsetDispositionButton.onclick = () => {\r\n    const dispositionId = dispositionIdInput.value\r\n    const itemId = interactionIdInput.value\r\n    adApi.setDisposition(dispositionId, itemId)\r\n}\r\n\r\nsetupHoverEffect(setRescheduleWindowButton, [phoneNumberInput, interactionIdInput, fromTimeInput, untilTimeInput, timezoneCodeInput])\r\nsetRescheduleWindowButton.onclick = () => {\r\n    const phoneNumber = phoneNumberInput.value\r\n    const itemId = interactionIdInput.value\r\n    const fromTime = fromTimeInput.value\r\n    const untilTime = untilTimeInput.value\r\n    const timezoneCode = timezoneCodeInput.value\r\n    adApi.setRescheduleWindow({numberToDial: phoneNumber, fromTime, untilTime, timezoneCode}, itemId)\r\n}\r\n\r\nsetupHoverEffect(addNoteButton, [noteInput, interactionIdInput])\r\naddNoteButton.onclick = () => {\r\n    const note = noteInput.value\r\n    const itemId = interactionIdInput.value\r\n    adApi.addNote(note, itemId)\r\n}\r\n\r\nsetupHoverEffect(updateNoteButton, [noteInput, interactionIdInput])\r\nupdateNoteButton.onclick = () => {\r\n    const note = noteInput.value\r\n    const itemId = interactionIdInput.value\r\n    adApi.updateNote(note, itemId)\r\n}\r\n\r\nsetupHoverEffect(replaceNoteButton, [noteInput, interactionIdInput])\r\nreplaceNoteButton.onclick = () => {\r\n    const note = noteInput.value\r\n    const itemId = interactionIdInput.value\r\n    adApi.replaceNote(note, itemId)\r\n}\r\n\r\nsetupHoverEffect(setCallHoldButton, [callHoldCheckbox, interactionIdInput])\r\nsetCallHoldButton.onclick = () => {\r\n    const holdCall = callHoldCheckbox.checked\r\n    const itemId = interactionIdInput.value\r\n    adApi.setCallHold(holdCall, itemId)\r\n}\r\n\r\nsetupHoverEffect(setCallRecordingButton, [callRecordingCheckbox, interactionIdInput])\r\nsetCallRecordingButton.onclick = () => {\r\n    const callRecording = callRecordingCheckbox.checked\r\n    const itemId = interactionIdInput.value\r\n    adApi.setCallRecording(callRecording, itemId)\r\n}\r\n\r\nsetupHoverEffect(setCallMuteButton, [callMuteCheckbox, interactionIdInput])\r\nsetCallMuteButton.onclick = () => {\r\n    const muteCall = callMuteCheckbox.checked\r\n    const itemId = interactionIdInput.value\r\n    adApi.setCallMute(muteCall, itemId)\r\n}\r\n\r\nsetupHoverEffect(setScreenRecordingMuteButton, [screenRecordingMuteCheckbox])\r\nsetScreenRecordingMuteButton.onclick = () => {\r\n    const muteScreenRecording = screenRecordingMuteCheckbox.checked\r\n    adApi.setScreenRecordingMute(muteScreenRecording)\r\n}\r\n\r\nsetupHoverEffect(getScreenRecordingStateButton, [])\r\ngetScreenRecordingStateButton.onclick = () => {\r\n    adApi.getScreenRecordingState()\r\n}\r\n\r\nsetupHoverEffect(setVariableButton, [variableNameInput, variableValueInput, interactionIdInput])\r\nsetVariableButton.onclick = () => {\r\n    const variableName = variableNameInput.value\r\n    const variableValue = variableValueInput.value\r\n    const itemId = interactionIdInput.value\r\n    adApi.setVariable(variableName, variableValue, itemId)\r\n}\r\n\r\nsetupHoverEffect(getConfigButton, [])\r\ngetConfigButton.onclick = () => {\r\n    adApi.getConfig()\r\n}\r\n\r\nsetupHoverEffect(setWidgetMinimizedButton, [widgetMinimizedCheckbox])\r\nsetWidgetMinimizedButton.onclick = () => {\r\n    const widgetMinimized = widgetMinimizedCheckbox.checked\r\n    adApi.setWidgetMinimized(widgetMinimized)\r\n}\r\n\r\nsetupHoverEffect(addInteractionAssociatedObjectButton, [associatedObjectTextarea, interactionIdInput])\r\naddInteractionAssociatedObjectButton.onclick = () => {\r\n    let associatedObject: InteractionAssociatedObject | null = null\r\n    try {\r\n        associatedObject = JSON.parse(associatedObjectTextarea.value)\r\n    } catch (e) {\r\n        alert('You have syntax error in the associated object structure. Cannot parse JSON.')\r\n    }\r\n    if (!associatedObject) {\r\n        return\r\n    }\r\n    const itemId = interactionIdInput.value\r\n    adApi.addInteractionAssociatedObject(associatedObject, itemId)\r\n}\r\n\r\nsetupHoverEffect(setInteractionActiveScreenButton, [activeScreenTextarea, interactionIdInput])\r\nsetInteractionActiveScreenButton.onclick = () => {\r\n    let activeScreenData: any | null = null\r\n    try {\r\n        activeScreenData = JSON.parse(activeScreenTextarea.value)\r\n    } catch (e) {\r\n        alert('You have syntax error in the active screen data structure. Cannot parse JSON.')\r\n    }\r\n    if (!activeScreenData) {\r\n        return\r\n    }\r\n    const itemId = interactionIdInput.value\r\n    adApi.setInteractionActiveScreen(activeScreenData, itemId)\r\n}\r\n\r\nadApi.on('ON_REQUEST_TRANSFER_DATA', () => {\r\n    let transferData: any | null = null\r\n    try {\r\n        transferData = JSON.parse(transferDataTextarea.value)\r\n    } catch (e) {\r\n        alert('You have syntax error in the transfer data structure. Cannot parse JSON.')\r\n    }\r\n    if (!transferData) {\r\n        return null\r\n    }\r\n    return transferData\r\n})\r\n\r\nadApi.on('ON_SEARCH_KNOWLEDGE_BASE', () => {\r\n    let searchKbResult: any | null = null\r\n    try {\r\n        searchKbResult = JSON.parse(searchKBResultTextarea.value)\r\n    } catch (e) {\r\n        alert('You have syntax error in the KB search results data structure. Cannot parse JSON.')\r\n    }\r\n    if (!searchKbResult) {\r\n        return null\r\n    }\r\n    return searchKbResult\r\n})\r\n\r\nadApi.on('ON_GET_KNOWLEDGE_BASE_ARTICLE', () => {\r\n    let kbArticleDullData: any | null = null\r\n    try {\r\n        kbArticleDullData = JSON.parse(kbArticleFullDataTextarea.value)\r\n    } catch (e) {\r\n        alert('You have syntax error in the KB Article data structure. Cannot parse JSON.')\r\n    }\r\n    if (!kbArticleDullData) {\r\n        return null\r\n    }\r\n    return kbArticleDullData\r\n})\r\n"],"names":["console","log","messageClass","logs","document","getElementById","adcMountNode","onclick","innerText","getLoginStateButton","loginButton","usernameInput","passwordInput","tenantInput","logoutButton","getPhoneDevicesListButton","getPhoneDeviceButton","phoneDeviceTypeInput","phoneDeviceNumberInput","setPhoneDeviceButton","getAgentStateButton","setAgentStateButton","agentStateInput","notReadyReasonInput","startCallButton","phoneNumberInput","startChatButton","chatChannelInput","chatAddressInput","startEmailButton","emailAddressInput","consultCallButton","blindTransferButton","transferButton","interactionIdInput","leaveInteractionButton","completeInteractionButton","leaveAndCompleteInteractionButton","switchActiveInteractionButton","acceptInteractionButton","rejectInteractionButton","sendDtmfButton","dtmfInput","inviteToCallConferenceButton","removeFromCallConferenceButton","partyIdInput","destroyCallConferenceButton","getTeamsButton","getTeamMembersButton","teamIdInput","getServicesListButton","setServiceButton","serviceIdInput","setRescheduleWindowButton","fromTimeInput","untilTimeInput","timezoneCodeInput","getDispositionsListButton","setDispositionButton","dispositionIdInput","addNoteButton","updateNoteButton","replaceNoteButton","noteInput","setCallHoldButton","callHoldCheckbox","setCallRecordingButton","callRecordingCheckbox","setCallMuteButton","callMuteCheckbox","setScreenRecordingMuteButton","screenRecordingMuteCheckbox","getScreenRecordingStateButton","setVariableButton","variableNameInput","variableValueInput","getConfigButton","setWidgetMinimizedButton","widgetMinimizedCheckbox","addInteractionAssociatedObjectButton","associatedObjectTextarea","setInteractionActiveScreenButton","activeScreenTextarea","transferDataTextarea","searchKBResultTextarea","kbArticleFullDataTextarea","adApi","window","brightpattern","AdApi","integrationKey","mountRoot","standalone","URLSearchParams","location","search","get","setupHoverEffect","hoverElement","highlightElements","addEventListener","forEach","element","classList","add","remove","type","message","content","msgDiv","createElement","typeContainerDiv","typeDiv","dataDiv","textContent","appendChild","isScrolledToBottom","scrollHeight","clientHeight","scrollTop","injectMessageLogger","data","startsWith","endsWith","JSON","stringify","status","getLoginState","username","value","password","tenant","login","logout","getPhoneDevicesList","getPhoneDevice","setPhoneDevice","phone","getAgentState","state","notReadyReason","setAgentState","associatedObject","undefined","associatedObjectStr","parse","e","alert","startCall","chatChannel","chatAddress","startChat","emailAddress","startEmail","phoneNumber","consultCall","itemId","transferData","blindTransfer","transfer","leaveInteraction","completeInteraction","dispositionId","note","leaveAndCompleteInteraction","switchActiveInteraction","acceptInteraction","rejectInteraction","dtmf","sendDtmf","inviteToCallConference","partyId","removeFromCallConference","destroyCallConference","getTeams","teamId","getTeamMembers","getServicesList","serviceId","setService","getDispositionsList","service","interactionId","setDisposition","fromTime","untilTime","timezoneCode","setRescheduleWindow","numberToDial","addNote","updateNote","replaceNote","holdCall","checked","setCallHold","callRecording","setCallRecording","muteCall","setCallMute","muteScreenRecording","setScreenRecordingMute","getScreenRecordingState","variableName","variableValue","setVariable","getConfig","widgetMinimized","setWidgetMinimized","addInteractionAssociatedObject","activeScreenData","setInteractionActiveScreen","on","searchKbResult","kbArticleDullData"],"sourceRoot":""}