!function(e){var t={};function n(o){if(t[o])return t[o].exports;var c=t[o]={i:o,l:!1,exports:{}};return e[o].call(c.exports,c,c.exports,n),c.l=!0,c.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var c in e)n.d(o,c,function(t){return e[t]}.bind(null,c));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="./",n(n.s=4)}({"./src/integrations/test/index.ts":
/*!****************************************!*\
  !*** ./src/integrations/test/index.ts ***!
  \****************************************/
/*! no static exports found */function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),console.log("## it works!!");var o={o:"outgoing",ir:"incoming-result",i:"incoming",or:"outgoing-result",e:"error"},c=document.getElementById("log"),a=document.getElementById("adc_mount_node");document.getElementById("clear_log").onclick=function(){c.innerText=""};var u=document.getElementById("get_login_state_button"),i=document.getElementById("login_button"),l=document.getElementById("username_input"),r=document.getElementById("password_input"),d=document.getElementById("tenant_input"),m=document.getElementById("logout_button"),s=document.getElementById("get_phone_devices_list_button"),_=document.getElementById("get_phone_device_button"),v=document.getElementById("phone_device_type_input"),g=document.getElementById("phone_device_number_input"),y=document.getElementById("set_phone_device_button"),f=document.getElementById("get_agent_state_button"),E=document.getElementById("set_agent_state_button"),p=document.getElementById("agent_state_input"),I=document.getElementById("not_ready_reason_input"),h=document.getElementById("start_call_button"),B=document.getElementById("phone_number_input"),b=document.getElementById("start_chat_button"),k=document.getElementById("chat_channel_input"),S=document.getElementById("chat_address_input"),O=document.getElementById("start_email_button"),N=document.getElementById("email_address_input"),C=document.getElementById("consult_call_button"),x=document.getElementById("blind_transfer_button"),J=document.getElementById("transfer_button"),j=(document.getElementById("main_item_id_input"),document.getElementById("consult_call_id_input"),document.getElementById("interaction_id_input")),T=document.getElementById("leave_interaction_button"),A=document.getElementById("complete_interaction_button"),w=document.getElementById("leave_and_complete_interaction_button"),L=document.getElementById("switch_active_interaction_button"),R=document.getElementById("accept_interaction_button"),P=document.getElementById("reject_interaction_button"),Y=document.getElementById("send_dtmf_button"),D=document.getElementById("dtmf_input"),M=document.getElementById("add_to_call_conference_button"),W=document.getElementById("remove_from_call_conference_button"),H=document.getElementById("party_id_input"),z=document.getElementById("destroy_call_conference_button"),K=document.getElementById("get_teams_button"),G=document.getElementById("get_team_members_button"),F=document.getElementById("team_id_input"),U=document.getElementById("get_services_list_button"),Q=document.getElementById("set_service_button"),V=document.getElementById("service_id_input"),q=document.getElementById("set_reschedule_window_button"),X=document.getElementById("from_time_input"),Z=document.getElementById("until_time_input"),$=document.getElementById("timezone_code_input"),ee=document.getElementById("get_dispositions_list_button"),te=document.getElementById("set_disposition_button"),ne=document.getElementById("disposition_id_input"),oe=document.getElementById("add_note_button"),ce=document.getElementById("update_note_button"),ae=document.getElementById("replace_note_button"),ue=document.getElementById("note_input"),ie=document.getElementById("set_call_hold_button"),le=document.getElementById("call_hold_checkbox"),re=document.getElementById("set_call_recording_button"),de=document.getElementById("call_recording_checkbox"),me=document.getElementById("set_call_mute_button"),se=document.getElementById("call_mute_checkbox"),_e=document.getElementById("set_screen_recording_mute_button"),ve=document.getElementById("screen_recording_mute_checkbox"),ge=document.getElementById("get_screen_recording_state_button"),ye=document.getElementById("set_variable_button"),fe=document.getElementById("variable_name_input"),Ee=document.getElementById("variable_value_input"),pe=document.getElementById("get_config_button"),Ie=document.getElementById("set_widget_minimized_button"),he=document.getElementById("widget_minimized_checkbox"),Be=document.getElementById("add_interaction_associated_object_button"),be=document.getElementById("associated_object_textarea"),ke=document.getElementById("set_interaction_active_screen_button"),Se=document.getElementById("active_screen_textarea"),Oe=document.getElementById("transfer_data_textarea"),Ne=document.getElementById("search_kb_result_textarea"),Ce=document.getElementById("kb_article_full_data_textarea"),xe=new window.brightpattern.AdApi({integrationKey:"test-adapter",mountRoot:a,standalone:!!new URLSearchParams(location.search).get("standalone")}),Je=function(e,t){e.addEventListener("mouseenter",(function(){t.forEach((function(e){e.classList.add("highlighted")}))})),e.addEventListener("mouseleave",(function(){t.forEach((function(e){e.classList.remove("highlighted")}))}))},je=function(e,t,n){var a=document.createElement("div"),u=document.createElement("div"),i=document.createElement("div"),l=document.createElement("div");a.classList.add("log-msg"),a.classList.add(o[e]),i.textContent=t,l.textContent=n,u.appendChild(i),a.appendChild(u),a.appendChild(l);var r=c.scrollHeight-c.clientHeight<=c.scrollTop+1;c.appendChild(a),r&&(c.scrollTop=c.scrollHeight-c.clientHeight)};xe.injectMessageLogger((function(e,t){e.startsWith("ON_")?e.endsWith("_RESPONSE")?je("or",e,t?JSON.stringify(t):""):je("i",e,t?JSON.stringify(t):""):e.endsWith("_RESPONSE")?je("success"===t.status?"ir":"e",e,JSON.stringify(t)):je("o",e,t?JSON.stringify(t):"")})),Je(u,[]),u.onclick=function(){xe.getLoginState()},Je(i,[l,r,d]),i.onclick=function(){var e=l.value,t=r.value,n=d.value;xe.login({username:e,password:t,tenant:n})},Je(m,[]),m.onclick=function(){xe.logout()},Je(s,[]),s.onclick=function(){xe.getPhoneDevicesList()},Je(_,[]),_.onclick=function(){xe.getPhoneDevice()},Je(y,[v,g]),y.onclick=function(){xe.setPhoneDevice({type:v.value,phone:g.value})},Je(f,[]),f.onclick=function(){xe.getAgentState()},Je(E,[p,I]),E.onclick=function(){var e=p.value,t=I.value;xe.setAgentState(e,t)},Je(h,[B,be]),h.onclick=function(){var e=B.value,t=void 0,n=be.value;if(n)try{t=JSON.parse(n)}catch(e){return void alert("You have syntax error in the associated object structure. Cannot parse JSON.")}xe.startCall(e,t)},Je(b,[k,S,be]),b.onclick=function(){var e=k.value,t=S.value,n=void 0,o=be.value;if(o)try{n=JSON.parse(o)}catch(e){return void alert("You have syntax error in the associated object structure. Cannot parse JSON.")}xe.startChat(e,t,n)},Je(O,[N,be]),O.onclick=function(){var e=N.value,t=void 0,n=be.value;if(n)try{t=JSON.parse(n)}catch(e){return void alert("You have syntax error in the associated object structure. Cannot parse JSON.")}xe.startEmail(e,t)},Je(C,[B]),C.onclick=function(){var e=B.value;xe.consultCall(e)},Je(x,[B,j,Oe]),x.onclick=function(){var e=B.value,t=j.value,n=null;try{n=JSON.parse(Oe.value)}catch(e){alert("You have syntax error in the transfer data structure. Cannot parse JSON.")}xe.blindTransfer(e,n,t)},Je(J,[Oe]),J.onclick=function(){var e=null;try{e=JSON.parse(Oe.value)}catch(e){alert("You have syntax error in the transfer data structure. Cannot parse JSON.")}xe.transfer(e)},Je(T,[j]),T.onclick=function(){var e=j.value;xe.leaveInteraction(e)},Je(A,[j]),A.onclick=function(){var e=j.value;xe.completeInteraction(e)},Je(w,[ne,ue,j]),w.onclick=function(){var e=ne.value,t=ue.value,n=j.value;xe.leaveAndCompleteInteraction(e,t,n)},Je(L,[j]),L.onclick=function(){var e=j.value;xe.switchActiveInteraction(e)},Je(R,[j]),R.onclick=function(){var e=j.value;xe.acceptInteraction(e)},Je(P,[j]),P.onclick=function(){var e=j.value;xe.rejectInteraction(e)},Je(Y,[D,j]),Y.onclick=function(){var e=D.value,t=j.value;xe.sendDtmf(e,t)},Je(M,[B,Oe,j]),M.onclick=function(){var e=B.value,t=null;try{t=JSON.parse(Oe.value)}catch(e){alert("You have syntax error in the transfer data structure. Cannot parse JSON.")}var n=j.value;xe.inviteToCallConference(e,t,n)},Je(W,[H,j]),W.onclick=function(){var e=H.value,t=j.value;xe.removeFromCallConference(e,t)},Je(z,[j]),z.onclick=function(){var e=j.value;xe.destroyCallConference(e)},Je(K,[]),K.onclick=function(){xe.getTeams()},Je(G,[F]),G.onclick=function(){var e=F.value;xe.getTeamMembers(e)},Je(U,[]),U.onclick=function(){xe.getServicesList()},Je(Q,[V]),Q.onclick=function(){var e=V.value;xe.setService(e)},Je(ee,[V,j]),ee.onclick=function(){var e=V.value,t=j.value;xe.getDispositionsList({service:e,interactionId:t})},Je(te,[ne,j]),te.onclick=function(){var e=ne.value,t=j.value;xe.setDisposition(e,t)},Je(q,[B,j,X,Z,$]),q.onclick=function(){var e=B.value,t=j.value,n=X.value,o=Z.value,c=$.value;xe.setRescheduleWindow({numberToDial:e,fromTime:n,untilTime:o,timezoneCode:c},t)},Je(oe,[ue,j]),oe.onclick=function(){var e=ue.value,t=j.value;xe.addNote(e,t)},Je(ce,[ue,j]),ce.onclick=function(){var e=ue.value,t=j.value;xe.updateNote(e,t)},Je(ae,[ue,j]),ae.onclick=function(){var e=ue.value,t=j.value;xe.replaceNote(e,t)},Je(ie,[le,j]),ie.onclick=function(){var e=le.checked,t=j.value;xe.setCallHold(e,t)},Je(re,[de,j]),re.onclick=function(){var e=de.checked,t=j.value;xe.setCallRecording(e,t)},Je(me,[se,j]),me.onclick=function(){var e=se.checked,t=j.value;xe.setCallMute(e,t)},Je(_e,[ve]),_e.onclick=function(){var e=ve.checked;xe.setScreenRecordingMute(e)},Je(ge,[]),ge.onclick=function(){xe.getScreenRecordingState()},Je(ye,[fe,Ee,j]),ye.onclick=function(){var e=fe.value,t=Ee.value,n=j.value;xe.setVariable(e,t,n)},Je(pe,[]),pe.onclick=function(){xe.getConfig()},Je(Ie,[he]),Ie.onclick=function(){var e=he.checked;xe.setWidgetMinimized(e)},Je(Be,[be,j]),Be.onclick=function(){var e=null;try{e=JSON.parse(be.value)}catch(e){alert("You have syntax error in the associated object structure. Cannot parse JSON.")}if(e){var t=j.value;xe.addInteractionAssociatedObject(e,t)}},Je(ke,[Se,j]),ke.onclick=function(){var e=null;try{e=JSON.parse(Se.value)}catch(e){alert("You have syntax error in the active screen data structure. Cannot parse JSON.")}if(e){var t=j.value;xe.setInteractionActiveScreen(e,t)}},xe.on("ON_REQUEST_TRANSFER_DATA",(function(){var e=null;try{e=JSON.parse(Oe.value)}catch(e){alert("You have syntax error in the transfer data structure. Cannot parse JSON.")}return e||null})),xe.on("ON_SEARCH_KNOWLEDGE_BASE",(function(){var e=null;try{e=JSON.parse(Ne.value)}catch(e){alert("You have syntax error in the KB search results data structure. Cannot parse JSON.")}return e||null})),xe.on("ON_GET_KNOWLEDGE_BASE_ARTICLE",(function(){var e=null;try{e=JSON.parse(Ce.value)}catch(e){alert("You have syntax error in the KB Article data structure. Cannot parse JSON.")}return e||null}))},4:
/*!**********************************************!*\
  !*** multi ./src/integrations/test/index.ts ***!
  \**********************************************/
/*! no static exports found */function(e,t,n){e.exports=n(/*! C:\Users\Dev\Documents\projects\Agent_old\packages\adapters\src\integrations\test\index.ts */"./src/integrations/test/index.ts")}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,